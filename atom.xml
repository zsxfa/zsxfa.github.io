<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <title></title>
  
  
  <link href="http://zsxfa.cn/atom.xml" rel="self"/>
  
  <link href="http://zsxfa.cn/"/>
  <updated>2022-06-09T13:45:47.278Z</updated>
  <id>http://zsxfa.cn/</id>
  
  <author>
    <name>小Feng</name>
    
  </author>
  
  <generator uri="https://hexo.io/">Hexo</generator>
  
  <entry>
    <title>Bomb Lab</title>
    <link href="http://zsxfa.cn/2022/06/09/Bomb-Lab/"/>
    <id>http://zsxfa.cn/2022/06/09/Bomb-Lab/</id>
    <published>2022-06-09T13:03:18.000Z</published>
    <updated>2022-06-09T13:45:47.278Z</updated>
    
    <content type="html"><![CDATA[<h1 id="二进制炸弹实验"><a href="#二进制炸弹实验" class="headerlink" title="二进制炸弹实验"></a>二进制炸弹实验</h1><p>最近看了计算机系统基础实验这门课程，做了Bomb Lab的实验，然后做做相应的总结。</p><span id="more"></span><h2 id="介绍"><a href="#介绍" class="headerlink" title="介绍"></a>介绍</h2><p>一个二进制炸弹是一个 Linux 可执行程序，包含了多个阶段（又称为层次、关卡）。在炸弹程序运行的每个阶段要求输入一个特定字符串，如果该输入字符串符合程序的要求，该阶段的炸弹就被拆除了，否则炸弹“爆炸——即打印输出“BOOM!!!”的提示。 </p><p><strong>每个炸弹阶段考察了程序与数据的机器级表示的不同方面，难度逐级递增：</strong> </p><ul><li>阶段 0：字符串比较</li><li>阶段 1：浮点数表示</li><li>阶段 2：循环</li><li>阶段 3：条件/分支</li><li>阶段 4：递归调用和栈</li><li>阶段 5：指针</li><li>阶段 6：链表/指针/结构</li><li>另外还有一个隐藏阶段作为阶段 7，只有在阶段 4 的拆解字符串后附加一特定字符串后，才能在实验最后进入隐藏阶段。</li></ul><p>实验的目标是拆除尽可能多的炸弹关卡——分析获得尽可能多的正确拆解字符串。 </p><h2 id="实验数据"><a href="#实验数据" class="headerlink" title="实验数据"></a>实验数据</h2><p><a href="http://cs.nju.edu.cn/sufeng/course/mooc/0809NJU064_bomblab.tar">http://cs.nju.edu.cn/sufeng/course/mooc/0809NJU064_bomblab.tar</a> </p><p>可在 Linux 实验环境中使用命令“tar xvf 0809NJU064_bomblab.tar”将其中包含的文件提取到当前目录中。该 tar 文件中包含如下实验所需文件： </p><ul><li>bomb：二进制炸弹可执行程序</li><li>bomb.c：包含 bomb 程序中 main 函数的 C 语言程序框架</li></ul><h2 id="实验工具"><a href="#实验工具" class="headerlink" title="实验工具"></a>实验工具</h2><p>完成二进制炸弹拆除任务，可使用 objdump 工具程序反汇编可执行炸弹程序，并使用gdb 工具程序单步跟踪每一阶段的机器指令，从中理解每一指令的行为和作用，进而推断拆除炸弹所需的目标字符串的内容组成。例如，可在每一阶段的起始指令前和引爆炸弹的函数调用指令前设置断点。 </p><h3 id="GDB"><a href="#GDB" class="headerlink" title="GDB"></a>GDB</h3><p>为从二进制炸弹可执行程序”bomb“中找出触发炸弹爆炸的条件，可使用 GDB 程序帮助对程序的分析。GDB 是 GNU 开源组织发布的一个强大的交互式程序调试工具。一般来说，GDB 可帮助完成以下几方面的调试工作（更详细描述可参看 GDB 文档和相关资料）： </p><ul><li>装载、启动被调试的程序</li><li>使被调试程序在指定的调试断点处中断执行，以方便查看程序变量、寄存器、栈内容等程序运行的现场数据</li><li>动态改变程序的执行环境，如修改变量的值</li></ul><h3 id="objdump"><a href="#objdump" class="headerlink" title="objdump"></a>objdump</h3><p>反汇编二进制炸弹程序，获得其中汇编指令供分析</p><ul><li><p><code>objdump -d bomb</code>       输出bomb程序的反汇编结果</p></li><li><p><code>objdump -d bomb &gt; bomb.s</code> 获得bomb程序的反汇编结果并保存于文本文件bomb.s中供分析</p><ul><li>–d 选项：对二进制程序中的机器指令代码进行反汇编。通过分析汇编源代码可以发现bomb 程序是如何运行的</li></ul></li><li><p><code>objdump -t bomb</code> 打印bomb程序的符号表，其中包含bomb中所有函数、全局变量的名称和存储地址</p><ul><li>–t 选项：打印指定二进制程序的符号表，其中包含了程序中的函数、全局变量的名称和存储地址</li></ul></li></ul><h3 id="strings"><a href="#strings" class="headerlink" title="strings"></a>strings</h3><p>该命令显示二进制程序中的所有可打印字符串 </p><h2 id="反汇编代码"><a href="#反汇编代码" class="headerlink" title="反汇编代码"></a>反汇编代码</h2><ol><li><p>在命令行执行以下命令，将汇编代码重定向到bomb.s文件中</p><p>.s结尾代表汇编代码，未进行预处理</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">objdump -d bomb &gt; bomb.s</span><br></pre></td></tr></table></figure></li><li><p>可以使用任何文本查看工具打开bomb.s文件，内容就是反汇编的结果</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">less bomb.s</span><br></pre></td></tr></table></figure></li><li><p>在bomb.s中搜索phase_0函数</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">/phase_0</span><br></pre></td></tr></table></figure><p>使用n(next)和p(pervious)查找上一个和下一个</p><p>使用q退出查看模式</p></li></ol><h3 id="反汇编代码的理解"><a href="#反汇编代码的理解" class="headerlink" title="反汇编代码的理解"></a>反汇编代码的理解</h3><p><img src="https://gcore.jsdelivr.net/gh/zsxfa/CDN/img/md/2022/06/05/10-52-50-20220605105249-132f74.png"></p><h3 id="过程栈帧及入口参数的位置"><a href="#过程栈帧及入口参数的位置" class="headerlink" title="过程栈帧及入口参数的位置"></a>过程栈帧及入口参数的位置</h3><p><img src="https://gcore.jsdelivr.net/gh/zsxfa/CDN/img/md/2022/06/05/10-59-13-20220605105912-fcaa45.png"></p><h1 id="阶段-0：字符串比较"><a href="#阶段-0：字符串比较" class="headerlink" title="阶段 0：字符串比较"></a>阶段 0：字符串比较</h1><h2 id="1-对二进制炸弹程序进行反汇编"><a href="#1-对二进制炸弹程序进行反汇编" class="headerlink" title="1.对二进制炸弹程序进行反汇编"></a>1.对二进制炸弹程序进行反汇编</h2><figure class="highlight mipsasm"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">objdump -d <span class="keyword">bomb </span>&gt; <span class="keyword">bomb.s</span></span><br></pre></td></tr></table></figure><h2 id="2-对函数的汇编指令代码进行分析"><a href="#2-对函数的汇编指令代码进行分析" class="headerlink" title="2.对函数的汇编指令代码进行分析"></a>2.对函数的汇编指令代码进行分析</h2><p><strong>定位到phase_0函数上</strong>，分析<code>test,je,call</code>代码发现</p><p>为避免执行<code>0x8049471</code>处对引爆炸弹函数的调用指令，<code>je</code>指令的测试条件应被满足，即<code>0x804946d</code>处<code>test</code>指令执行之前，寄存器EAX的值应为0,同时可以判断出<code>pushl</code>处是用户输入的字符串地址，<code>push</code>处是内部保存的字符串地址，所以需要满足<code>pushl</code>处输入的和<code>push</code>处的字符串相同。</p><p><img src="https://gcore.jsdelivr.net/gh/zsxfa/CDN/img/md/2022/06/05/11-49-21-20220605114920-87ced2.png"></p><p><strong>功能说明</strong>：如果输入的两个字符串参数的内容相同，strings_not_equal函数将返回0，则在示例汇编代码中，test指令测试时，将使得je指令跳转到程序的正常结束位置。</p><p>否则引爆炸弹</p><p><strong>分析strings_not_equal函数的控制逻辑</strong></p><p>分析汇编代码可知：该函数在输入的两个字符串参数的长度和内容均相同时将返回0，否则返回1，并且返回值保存于EAX寄存器中</p><figure class="highlight apache"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br></pre></td><td class="code"><pre><span class="line"><span class="attribute">08049c61</span> &lt;strings_not_equal&gt;:</span><br><span class="line"> <span class="attribute">8049c61</span>:       <span class="number">55</span>                      push   %ebp</span><br><span class="line"> <span class="attribute">8049c62</span>:       <span class="number">89</span> e5                   mov    %esp,%ebp</span><br><span class="line"> <span class="attribute">8049c64</span>:       <span class="number">53</span>                      push   %ebx</span><br><span class="line"> <span class="attribute">8049c65</span>:       <span class="number">83</span> ec <span class="number">10</span>                sub    $<span class="number">0</span>x10,%esp</span><br><span class="line"> <span class="attribute">8049c68</span>:       ff <span class="number">75</span> <span class="number">08</span>                pushl  <span class="number">0</span>x8(%ebp)</span><br><span class="line"> <span class="attribute">8049c6b</span>:       e8 c5 ff ff ff          call   <span class="number">8049</span>c35 &lt;string_length&gt;</span><br><span class="line"> <span class="attribute">8049c70</span>:       <span class="number">83</span> c4 <span class="number">04</span>                add    $<span class="number">0</span>x4,%esp</span><br><span class="line"> <span class="attribute">8049c73</span>:       <span class="number">89</span> c3                   mov    %eax,%ebx</span><br><span class="line"> <span class="attribute">8049c75</span>:       ff <span class="number">75</span> <span class="number">0</span>c                pushl  <span class="number">0</span>xc(%ebp)</span><br><span class="line"> <span class="attribute">8049c78</span>:       e8 b8 ff ff ff          call   <span class="number">8049</span>c35 &lt;string_length&gt;</span><br><span class="line"> <span class="attribute">8049c7d</span>:       <span class="number">83</span> c4 <span class="number">04</span>                add    $<span class="number">0</span>x4,%esp</span><br><span class="line"> <span class="attribute">8049c80</span>:       <span class="number">39</span> c3                   cmp    %eax,%ebx</span><br><span class="line"> <span class="attribute">8049c82</span>:       <span class="number">74</span> <span class="number">07</span>                   je     <span class="number">8049</span>c8b &lt;strings_not_equal+<span class="number">0</span>x2a&gt;</span><br><span class="line"> <span class="attribute">8049c84</span>:       b8 <span class="number">01</span> <span class="number">00</span> <span class="number">00</span> <span class="number">00</span>          mov    $<span class="number">0</span>x1,%eax</span><br><span class="line"> <span class="attribute">8049c89</span>:       eb <span class="number">3</span>c                   jmp    <span class="number">8049</span>cc7 &lt;strings_not_equal+<span class="number">0</span>x66&gt;</span><br><span class="line"> <span class="attribute">8049c8b</span>:       <span class="number">8</span>b <span class="number">45</span> <span class="number">08</span>                mov    <span class="number">0</span>x8(%ebp),%eax</span><br><span class="line"> <span class="attribute">8049c8e</span>:       <span class="number">89</span> <span class="number">45</span> f8                mov    %eax,-<span class="number">0</span>x8(%ebp)</span><br><span class="line"> <span class="attribute">8049c91</span>:       <span class="number">8</span>b <span class="number">45</span> <span class="number">0</span>c                mov    <span class="number">0</span>xc(%ebp),%eax</span><br><span class="line"> <span class="attribute">8049c94</span>:       <span class="number">89</span> <span class="number">45</span> f4                mov    %eax,-<span class="number">0</span>xc(%ebp)</span><br><span class="line"> <span class="attribute">8049c97</span>:       eb <span class="number">1</span>f                   jmp    <span class="number">8049</span>cb8 &lt;strings_not_equal+<span class="number">0</span>x57&gt;</span><br><span class="line"> <span class="attribute">8049c99</span>:       <span class="number">8</span>b <span class="number">45</span> f8                mov    -<span class="number">0</span>x8(%ebp),%eax</span><br><span class="line"> <span class="attribute">8049c9c</span>:       <span class="number">0</span>f b6 <span class="number">10</span>                movzbl (%eax),%edx</span><br><span class="line"> <span class="attribute">8049c9f</span>:       <span class="number">8</span>b <span class="number">45</span> f4                mov    -<span class="number">0</span>xc(%ebp),%eax</span><br><span class="line"> <span class="attribute">8049ca2</span>:       <span class="number">0</span>f b6 <span class="number">00</span>                movzbl (%eax),%eax</span><br><span class="line"> <span class="attribute">8049ca5</span>:       <span class="number">38</span> c2                   cmp    %al,%dl</span><br><span class="line"> <span class="attribute">8049ca7</span>:       <span class="number">74</span> <span class="number">07</span>                   je     <span class="number">8049</span>cb0 &lt;strings_not_equal+<span class="number">0</span>x4f&gt;</span><br><span class="line"> <span class="attribute">8049ca9</span>:       b8 <span class="number">01</span> <span class="number">00</span> <span class="number">00</span> <span class="number">00</span>          mov    $<span class="number">0</span>x1,%eax</span><br><span class="line"> <span class="attribute">8049cae</span>:       eb <span class="number">17</span>                   jmp    <span class="number">8049</span>cc7 &lt;strings_not_equal+<span class="number">0</span>x66&gt;</span><br><span class="line"> <span class="attribute">8049cb0</span>:       <span class="number">83</span> <span class="number">45</span> f8 <span class="number">01</span>             addl   $<span class="number">0</span>x1,-<span class="number">0</span>x8(%ebp)</span><br><span class="line"> <span class="attribute">8049cb4</span>:       <span class="number">83</span> <span class="number">45</span> f4 <span class="number">01</span>             addl   $<span class="number">0</span>x1,-<span class="number">0</span>xc(%ebp)</span><br><span class="line"> <span class="attribute">8049cb8</span>:       <span class="number">8</span>b <span class="number">45</span> f8                mov    -<span class="number">0</span>x8(%ebp),%eax</span><br><span class="line"> <span class="attribute">8049cbb</span>:       <span class="number">0</span>f b6 <span class="number">00</span>                movzbl (%eax),%eax</span><br><span class="line"> <span class="attribute">8049cbe</span>:       <span class="number">84</span> c0                   test   %al,%al</span><br><span class="line"> <span class="attribute">8049cc0</span>:       <span class="number">75</span> d7                   jne    <span class="number">8049</span>c99 &lt;strings_not_equal+<span class="number">0</span>x38&gt;</span><br><span class="line"> <span class="attribute">8049cc2</span>:       b8 <span class="number">00</span> <span class="number">00</span> <span class="number">00</span> <span class="number">00</span>          mov    $<span class="number">0</span>x0,%eax</span><br><span class="line"> <span class="attribute">8049cc7</span>:       <span class="number">8</span>b <span class="number">5</span>d fc                mov    -<span class="number">0</span>x4(%ebp),%ebx</span><br><span class="line"> <span class="attribute">8049cca</span>:       c9                      leave</span><br><span class="line"> <span class="attribute">8049ccb</span>:       c3                      ret</span><br></pre></td></tr></table></figure><h2 id="3-定位并获得内置字符串的值，并相应构造输入字符串"><a href="#3-定位并获得内置字符串的值，并相应构造输入字符串" class="headerlink" title="3.定位并获得内置字符串的值，并相应构造输入字符串"></a>3.定位并获得内置字符串的值，并相应构造输入字符串</h2><p>前面已推断出：和用户输入字符串相比较的程序内置字符串的存储地址为<code>0x804a1e0</code>，并且两个字符串的内容应相同，因此可使用gdb查看地址<code>0x804a1e0</code>中存储的内置字符串的内容：</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br></pre></td><td class="code"><pre><span class="line">ics@debian:~/test/bomlab$ gdb bomb</span><br><span class="line"><span class="meta prompt_">#</span><span class="language-bash">断点设置到phase_0函数中调用strings_not_equal函数的call指令的位置</span></span><br><span class="line">(gdb) b *0x8049465</span><br><span class="line">Breakpoint 1 at 0x8049465</span><br><span class="line">(gdb) r</span><br><span class="line">Starting program: /home/ics/test/bomlab/bomb</span><br><span class="line">Welcome to my fiendish little bomb. You have 7 phases with</span><br><span class="line">which to blow yourself up. Have a nice day!</span><br><span class="line">fdafada（这里先随意输入一些字符串）</span><br><span class="line"></span><br><span class="line">Breakpoint 1, 0x08049465 in phase_0 ()</span><br><span class="line"><span class="meta prompt_">#</span><span class="language-bash">查看50个字节的内容，每个字节内容作为字符输出</span></span><br><span class="line">(gdb)x/50c 0x804a1e0</span><br><span class="line">0x804a1e0:65 &#x27;A&#x27;32 &#x27; &#x27;116 &#x27;t&#x27;101 &#x27;e&#x27;120 &#x27;x&#x27;116 &#x27;t&#x27;32 &#x27; &#x27;108 &#x27;l&#x27;</span><br><span class="line">0x804a1e8:105 &#x27;i&#x27;110 &#x27;n&#x27;101 &#x27;e&#x27;32 &#x27; &#x27;105 &#x27;i&#x27;115 &#x27;s&#x27;32 &#x27; &#x27;97 &#x27;a&#x27;</span><br><span class="line">0x804a1f0:32 &#x27; &#x27;115 &#x27;s&#x27;101 &#x27;e&#x27;113 &#x27;q&#x27;117 &#x27;u&#x27;101 &#x27;e&#x27;110 &#x27;n&#x27;99 &#x27;c&#x27;</span><br><span class="line">0x804a1f8:101 &#x27;e&#x27;32 &#x27; &#x27;111 &#x27;o&#x27;102 &#x27;f&#x27;32 &#x27; &#x27;65 &#x27;A&#x27;83 &#x27;S&#x27;67 &#x27;C&#x27;</span><br><span class="line">0x804a200:73 &#x27;I&#x27;73 &#x27;I&#x27;32 &#x27; &#x27;99 &#x27;c&#x27;104 &#x27;h&#x27;97 &#x27;a&#x27;114 &#x27;r&#x27;97 &#x27;a&#x27;</span><br><span class="line">0x804a208:99 &#x27;c&#x27;116 &#x27;t&#x27;101 &#x27;e&#x27;114 &#x27;r&#x27;115 &#x27;s&#x27;46 &#x27;.&#x27;0 &#x27;\000&#x27;37 &#x27;%&#x27;</span><br><span class="line"><span class="meta prompt_">#</span><span class="language-bash">直接输出的方式</span></span><br><span class="line">(gdb)x/1s 0x804a1e0</span><br><span class="line">0x804a1e0:&quot;A text line is a sequence of ASCII characters.&quot;</span><br></pre></td></tr></table></figure><h3 id="4-测试"><a href="#4-测试" class="headerlink" title="4.测试"></a>4.测试</h3><p>随意输入的结果</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">ics@debian:~/test/bomlab$ ./bomb</span><br><span class="line">Welcome to my fiendish little bomb. You have 7 phases with</span><br><span class="line">which to blow yourself up. Have a nice day!</span><br><span class="line">asdfa</span><br><span class="line"></span><br><span class="line">BOOM!!!</span><br><span class="line">The bomb has blown up.</span><br></pre></td></tr></table></figure><p>输入获取到的字符串</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">ics@debian:~/test/bomlab$ ./bomb</span><br><span class="line">Welcome to my fiendish little bomb. You have 7 phases with</span><br><span class="line">which to blow yourself up. Have a nice day!</span><br><span class="line">A text line is a sequence of ASCII characters.</span><br><span class="line">Well done! You seem to have warmed up!</span><br></pre></td></tr></table></figure><h1 id="阶段-1：浮点数表示"><a href="#阶段-1：浮点数表示" class="headerlink" title="阶段 1：浮点数表示"></a>阶段 1：浮点数表示</h1><p><strong>阶段说明：该阶段要求输入对应某浮点（float或double）数值表示的一对整数（short或int）</strong></p><h2 id="IEEE-754标准"><a href="#IEEE-754标准" class="headerlink" title="IEEE 754标准"></a>IEEE 754标准</h2><p><img src="https://gcore.jsdelivr.net/gh/zsxfa/CDN/img/md/2022/06/05/15-35-02-20220605153501-024294.png"></p><h2 id="X87浮点指令-MMX和SSE指令"><a href="#X87浮点指令-MMX和SSE指令" class="headerlink" title="X87浮点指令(MMX和SSE指令)"></a>X87浮点指令(MMX和SSE指令)</h2><p><img src="https://gcore.jsdelivr.net/gh/zsxfa/CDN/img/md/2022/06/05/15-37-16-20220605153716-78b8b4.png"></p><h2 id="X87-FPU指令"><a href="#X87-FPU指令" class="headerlink" title="X87 FPU指令"></a>X87 FPU指令</h2><p><img src="https://gcore.jsdelivr.net/gh/zsxfa/CDN/img/md/2022/06/05/15-38-38-20220605153837-26637b.png"></p><p><img src="https://gcore.jsdelivr.net/gh/zsxfa/CDN/img/md/2022/06/05/15-39-04-20220605153903-32a9f2.png"></p><p>实验步骤：</p><h2 id="1-对本阶段函数的汇编指令代码进行分析"><a href="#1-对本阶段函数的汇编指令代码进行分析" class="headerlink" title="1.对本阶段函数的汇编指令代码进行分析"></a>1.对本阶段函数的汇编指令代码进行分析</h2><p>定位到<code>phase_1</code>函数上</p><p><img src="https://gcore.jsdelivr.net/gh/zsxfa/CDN/img/md/2022/06/05/16-07-32-20220605160731-86122e.png"></p><h2 id="2-找到浮点数常量的值，获得其IEEE-754表示"><a href="#2-找到浮点数常量的值，获得其IEEE-754表示" class="headerlink" title="2.找到浮点数常量的值，获得其IEEE-754表示"></a>2.找到浮点数常量的值，获得其IEEE-754表示</h2><figure class="highlight llvm"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="number">08049484</span> &lt;phase_<span class="number">1</span>&gt;:</span><br><span class="line"> <span class="number">8049484</span>:       <span class="number">55</span>                      push   <span class="variable">%ebp</span></span><br><span class="line"> <span class="number">8049485</span>:       <span class="number">89</span> e<span class="number">5</span>                   mov    <span class="variable">%esp</span><span class="punctuation">,</span><span class="variable">%ebp</span></span><br><span class="line"> <span class="number">8049487</span>:       <span class="number">83</span> ec <span class="number">28</span>                <span class="keyword">sub</span>    $<span class="number">0x28</span><span class="punctuation">,</span><span class="variable">%esp</span></span><br><span class="line"> <span class="number">804948</span>a:       <span class="keyword">c</span><span class="number">7</span> <span class="number">45</span> f<span class="number">4</span> a<span class="number">1</span> <span class="number">84</span> <span class="number">76</span> <span class="number">09</span>    movl   $<span class="number">0x97684a1</span><span class="punctuation">,</span><span class="number">-0</span>xc(<span class="variable">%ebp</span>)</span><br><span class="line"> <span class="number">8049491</span>:       db <span class="number">45</span> f<span class="number">4</span>                fildl  <span class="number">-0</span>xc(<span class="variable">%ebp</span>)</span><br><span class="line"> <span class="number">8049494</span>:       dd <span class="number">5</span>d e<span class="number">8</span>                fstpl  <span class="number">-0</span><span class="keyword">x</span><span class="number">18</span>(<span class="variable">%ebp</span>)</span><br><span class="line"> ...</span><br></pre></td></tr></table></figure><ul><li>从中可看出，整型值<code>0x97684a1</code>通过浮点栈被转为<strong>双精度</strong>浮点表示，并传送到本阶段函数栈帧中地址为**-0x18(%ebp)**处开始连续存放</li><li>从课程内容可知，该常量值的双精度（double）IEEE 754表示为（十六进制字节串）：41 A2 ED 09 42 0 0 0  </li></ul><h2 id="3-分析程序的输入要求和比较逻辑"><a href="#3-分析程序的输入要求和比较逻辑" class="headerlink" title="3.分析程序的输入要求和比较逻辑"></a>3.分析程序的输入要求和比较逻辑</h2><figure class="highlight apache"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="attribute">8049497</span>:       <span class="number">8</span>d <span class="number">45</span> e0                lea    -<span class="number">0</span>x20(%ebp),%eax</span><br><span class="line"> <span class="attribute">804949a</span>:       <span class="number">50</span>                      push   %eax</span><br><span class="line"> <span class="attribute">804949b</span>:       <span class="number">8</span>d <span class="number">45</span> e4                lea    -<span class="number">0</span>x1c(%ebp),%eax</span><br><span class="line"> <span class="attribute">804949e</span>:       <span class="number">50</span>                      push   %eax</span><br><span class="line"> <span class="attribute">804949f</span>:       <span class="number">68</span> <span class="number">0</span>f a2 <span class="number">04</span> <span class="number">08</span>          push   $<span class="number">0</span>x804a20f</span><br><span class="line"> <span class="attribute">80494a4</span>:       ff <span class="number">75</span> <span class="number">08</span>                pushl  <span class="number">0</span>x8(%ebp)</span><br><span class="line"> <span class="attribute">80494a7</span>:       e8 <span class="number">24</span> fc ff ff          call   <span class="number">80490</span>d0 &lt;__isoc99_sscanf@plt&gt;</span><br></pre></td></tr></table></figure><ul><li><p>输入拆解字符串的解析调用了sscanf函数，</p><p>其原型如下：</p><ul><li>int sscanf ( const char * s, const char * format, …);</li><li>返回从第一个输入字符串中成功扫描，读入的数据项的个数</li></ul></li><li><p>输入格式字符串起始地址位于<code>0x804a20f</code>，可使用gdb查看存放于该处的值</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">(gdb) x/1s 0x804a20f</span><br><span class="line">0x804a20f:&quot;%d %d&quot;</span><br></pre></td></tr></table></figure></li><li><p>可见，输入的应是空格分隔的两个整数</p><ul><li>（参考sscanf调用时参数压栈顺序）分别存储于-0x1c(%ebp)(第二个压栈的参数)、-0x20(%ebp)(第一个压栈的参数)</li></ul></li></ul><p><img src="https://gcore.jsdelivr.net/gh/zsxfa/CDN/img/md/2022/06/05/16-47-55-20220605164755-9db933.png"></p><ul><li><p>变量及其存储地址</p><ol><li>-0x18(%ebp)：浮点数</li><li>-0x1c(%ebp) ：第1个输入整数</li><li>-0x20(%ebp) ：第2个输入整数</li></ol></li><li><p><code>0x80494c0-c1</code>处比较了第1个输入整数与浮点数起始存储地址处（小端表示中是其低32位）整数是否相等</p></li><li><p><code>80494cc-d9</code>处比较了第2个输入整数与浮点数高4个字节存储地址处（小端表示中是其高32位）整数是否相等</p></li><li><p>因此，输入字符串中应包含分别对应该浮点数表示低32位的整数和高32位的整数</p></li></ul><h2 id="4-基于上述结果，构造输入字符串"><a href="#4-基于上述结果，构造输入字符串" class="headerlink" title="4.基于上述结果，构造输入字符串"></a>4.基于上述结果，构造输入字符串</h2><p>整型值<code>0x97684a1</code>对应的双精度浮点数的IEEE 754表示为（十六进制字节串，从高位到低位）：</p><p>41 A2 ED 09 42 00 00 00  </p><ul><li><p>低32位（从高位到低位）并转为十进制有符号整数：</p><p>42 00 00 00 = 1107296256</p></li><li><p>高32位（从高位到低位）并转为十进制有符号整数：</p><p>41 A2 ED 09 = 1101196553</p></li><li><p>因此拆解字节串应为“1107296256 1101196553”</p></li></ul><p><strong>IDA反汇编的结果是</strong></p><p><img src="https://gcore.jsdelivr.net/gh/zsxfa/CDN/img/md/2022/06/08/22-30-37-20220608223037-cd3847.png"></p><h1 id="阶段-2：循环"><a href="#阶段-2：循环" class="headerlink" title="阶段 2：循环"></a>阶段 2：循环</h1><blockquote><p>输入满足程序所期望的顺序和取值的一个数字序列</p></blockquote><p><img src="https://gcore.jsdelivr.net/gh/zsxfa/CDN/img/md/2022/06/05/23-49-50-20220605234949-b99942.png"></p><p>分析结果如上</p><p>发现<code>push   $0x9</code>表示数组中有9个数</p><p>通过<code>cmp    $0x86,%eax</code>判断出第一个数是134</p><p>从<code>0x804951c</code>开始进入循环，<code>0x8049555</code>处进行比较，其中eax是期望的结果，edx是我们输入的结果</p><p><strong>通过断点调试</strong></p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">(gdb) b *0x8049555</span><br><span class="line">(gdb) r</span><br><span class="line">(gdb) i r</span><br><span class="line">eax            0x85                133</span><br><span class="line">ecx            0x86                134</span><br><span class="line">edx            0x85                133</span><br><span class="line">ebx            0x1                 1</span><br></pre></td></tr></table></figure><p>可以通过逐步调试得到结果，也可以发现汇编指令的计算方式满足下面形式</p><blockquote><p>系统生成的eax中的结果满足：Array[i - 1] - 2 * i + 1</p></blockquote><p>最终结果可以通过<a href="https://c.runoob.com/compile/10/">这个网站</a>在线编程计算最终结果。</p><blockquote><p>134 133 130 125 118 109 98 85 70</p></blockquote><p><strong>IDA反汇编的结果是</strong></p><p><img src="https://gcore.jsdelivr.net/gh/zsxfa/CDN/img/md/2022/06/08/22-29-41-20220608222941-3af148.png"></p><h1 id="阶段-3：条件-分支"><a href="#阶段-3：条件-分支" class="headerlink" title="阶段 3：条件/分支"></a>阶段 3：条件/分支</h1><p><img src="https://gcore.jsdelivr.net/gh/zsxfa/CDN/img/md/2022/06/06/12-27-59-%7DK_%7BW%7BC-7HRI3%606%60KS%609DP9-cf53b5.png"></p><p>发现<code>push  $0x804a20f</code>指令，我们可以查看其中的内容</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">(gdb) b phase_3</span><br><span class="line">(gdb) r</span><br><span class="line">...</span><br><span class="line">(gdb) si</span><br><span class="line">0x0804959a in phase_3 ()</span><br><span class="line">(gdb) x/1s 0x804a20f</span><br><span class="line">0x804a20f:&quot;%d %d&quot;</span><br></pre></td></tr></table></figure><p>发现是两个参数，所以可以确定输入的是两个数</p><p>演示就先输入1 2然后进行调试，当执行到<code>sub  $0xfe,%eax</code>处时，发现<code>eax</code>的值需要做减操作，而<code>0xfe</code>的值是254，<code>eax</code>的值是1，所以sub之后<code>eax</code>值为-253，往下进行，是<code>cmp</code>指令，判断9和<code>eax</code>的大小，<code>ja</code>指令表示无符号大于就跳转，<code>jb</code>表示小于就跳转，所以，如果<code>eax &gt; 9 </code>,就会执行ja跳转到804962d，发生爆炸。<code>jg</code>表示有符号大于</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">80495c0:       sub    $0xfe,%eax   //eax = eax - 0xfe(254) = -253</span><br><span class="line">80495c5:       cmp    $0x9,%eax    //9 &gt; eax 爆炸 ja是大于</span><br><span class="line">80495c8:       ja     804962d &lt;phase_3+0xb4&gt; //爆炸</span><br></pre></td></tr></table></figure><p>所以为了继续执行，需要满足<code>eax &lt;= 9</code>,这里先拿9来测试，所以得出在<code>sub</code>之前的<code>eax = 263</code>，<strong>也就是输入的第一个参数的值</strong>，接着继续执行，到达下面这行，也就是说第一个参数满足条件的情况下会<code>eax</code>赋一个地址值，接着执行</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">80495ca:    mov    0x804a218(,%eax,4),%eax //eax = 134521368</span><br></pre></td></tr></table></figure><p>执行下面的<code>jmp</code>指令之后跳转到<code>0x08049624</code>处，这里对<code>-0xc(%ebp)</code>进行了赋值，<code>3e5 = 997</code></p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">8049624:    movl   $0x3e5,-0xc(%ebp)//ebp = 3e5 = 997</span><br><span class="line">804962b:    jmp    8049639 &lt;phase_3+0xc0&gt;</span><br></pre></td></tr></table></figure><p>接着<code>jmp</code>跳转到<code>0x8049639</code>处，这里首先<code>mov</code>指令将我们输入的第二个数赋给了<code>eax</code>，<code>cmp</code>指令对<code>%eax和-0xc(%ebp)</code>的值进行比较，<code>je表示Jump if Equals</code>所以如果这两个值相等就满足条件，所以<code>eax</code>的值就应该是997</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">8049639:    mov    -0x18(%ebp),%eax</span><br><span class="line">804963c:cmp    %eax,-0xc(%ebp)</span><br><span class="line">804963f:    je     804964d &lt;phase_3+0xd4&gt;</span><br></pre></td></tr></table></figure><p><strong>IDA反汇编的结果是</strong></p><p><img src="https://gcore.jsdelivr.net/gh/zsxfa/CDN/img/md/2022/06/08/R5$71RI@[LTY9T]~8Y1_27Q.png"></p><h1 id="阶段-4：递归调用和栈"><a href="#阶段-4：递归调用和栈" class="headerlink" title="阶段 4：递归调用和栈"></a>阶段 4：递归调用和栈</h1><p><strong>没有理解！！！</strong></p><p>首先定位到下面这行，发现这里有一个地址，可以看看值是什么</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">80496f9:      push   $0x804a20f</span><br></pre></td></tr></table></figure><p>发现内容是两个整形的值，这就表示需要输入两个值</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">(gdb) b *0x80496f9</span><br><span class="line">(gdb) r res.txt</span><br><span class="line">(gdb) x/1s 0x804a20f</span><br><span class="line">0x804a20f:&quot;%d %d&quot;</span><br></pre></td></tr></table></figure><p>接着往下，输入参数之后就会去调用<code>func4</code>，<code>func4</code>就是一个递归函数，看了半天也没搞命名<code>func4</code>的逻辑，只好用IDA来进行反汇编，可以看到phase_4的反汇编结果</p><p><img src="https://gcore.jsdelivr.net/gh/zsxfa/CDN/img/md/2022/06/08/11-03-18-20220608110317-c08ab5.png"></p><p>这里的v5的含义就是我们输入参数的个数，需要判断它是否输入的是两个数，然后是三个递归条件，这里就需要明白v2，v3，v4的含义了，接着看看func4的反汇编结果</p><p><img src="https://gcore.jsdelivr.net/gh/zsxfa/CDN/img/md/2022/06/08/11-05-56-20220608110556-2d71e2.png"></p><p>然后再看phase_4的前面的这两行</p><figure class="highlight mel"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="number">80496</span>d9:   mov    $0x804a240,%ebx</span><br><span class="line"><span class="number">80496</span>de:   mov    $0x24,%edx <span class="comment">//edx = 0x24(36)</span></span><br></pre></td></tr></table></figure><p>这两行的意思是说，先开辟了一段空间，然后放一个数组进去，长度是0x24也就是36.</p><p>然后执行到下面这一行发现,<code>ecx</code>的值是从36一直递减到0的</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">80496e9:  rep movsl %ds:(%esi),%es:(%edi)</span><br></pre></td></tr></table></figure><p>再往后会发现有两个比较，0和34，同时还有判断是否不等于456</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">8049784:      cmp    $0x1c8,%eax//eax != 456 ?</span><br><span class="line">8049789:      jne    8049797 &lt;phase_4+0xd0&gt;//不等于则跳转</span><br></pre></td></tr></table></figure><p>这个先搁置吧，在网上也没找到和我这个一样的， 其他很多都是有比较的指令，感觉比我碰到的这个都要简单些。</p><h1 id="阶段-5：指针"><a href="#阶段-5：指针" class="headerlink" title="阶段 5：指针"></a>阶段 5：指针</h1><p><img src="https://gcore.jsdelivr.net/gh/zsxfa/CDN/img/md/2022/06/09/10-58-16--C6MVT-%7B-%606-BL%60A36IPDUN-444e1c.png"></p><p>首先发现push指令处有一个地址</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">80497f3:   push   $0x804a20f</span><br></pre></td></tr></table></figure><p>查看这个位置的内容,发现需要输入的是两个数</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">(gdb) x/1s 0x804a20f</span><br><span class="line">0x804a20f:&quot;%d %d&quot;</span><br></pre></td></tr></table></figure><p>再往下看，发现这是一个循环结构</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line">8049831:     addl   $0x1,-0xc(%ebp) //</span><br><span class="line">8049835:     mov    -0x18(%ebp),%eax</span><br><span class="line">8049838:     mov    0x804c200(,%eax,4),%eax //eax = eax*4+0x804c200</span><br><span class="line">804983f:     mov    %eax,-0x18(%ebp)</span><br><span class="line">8049842:     mov    -0x18(%ebp),%eax</span><br><span class="line">8049845:     add    %eax,-0x10(%ebp)</span><br><span class="line">8049848:     mov    -0x18(%ebp),%eax</span><br><span class="line">804984b:     cmp    $0xf,%eax</span><br><span class="line">804984e:     jne    8049831 &lt;phase_5+0x4c&gt;</span><br></pre></td></tr></table></figure><p>看了半天没理清楚😶，还是使用IDA进行反编译看看结果吧</p><p><img src="https://gcore.jsdelivr.net/gh/zsxfa/CDN/img/md/2022/06/09/10-34-25-20220609103424-40c87a.png"></p><p>这样就清楚了，可以发现，这个循环的条件是<code>v3 != 15</code>,然后后面还有一个数组的赋值操作<code>v3 = array_2751[v3]</code>,这里的数组长度是16，但是我们还是不知道这个数组里面的值是多少，但是可以看出来这个循环中v3的结果是根据数组的值进行变化的，所以我就想到会不会是这种情况，索引0处值为1，索引1处值为2…这种形式，当然，可以输入结果进行测试，因为条件是v3不等于15，而v3就是我们输入的第一个值，v2暂时可以随意输入，所以输入0 1进行测试</p><p>到达这个循环里，下面这一句就对应了++v6的操作</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">8049831:  addl   $0x1,-0xc(%ebp) //</span><br></pre></td></tr></table></figure><p>然后下面这几句的就是对v3赋值的过程</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">8049835:   mov    -0x18(%ebp),%eax</span><br><span class="line">8049838:   mov    0x804c200(,%eax,4),%eax //eax = eax*4+0x804c200</span><br><span class="line">804983f:   mov    %eax,-0x18(%ebp)</span><br><span class="line">8049842:   mov    -0x18(%ebp),%eax</span><br></pre></td></tr></table></figure><p>结束后发现<code>eax</code>的值变成了10，那意思就是说数组中的索引0处的内容就是10，如果要进行下一次循环的话，就该读取索引10处的内容了，然后就是这样一个逻辑，就可以推出后面的值了，当<code>v3==15</code>的时候就会跳出循环</p><p>接着会去判断<code>v6==6</code>和<code>v5==v2</code>，从循环处可以发现v6每一次进入循环都会有自增的操作，而v5也是在每一次的循环过程中去进行加操作的，所以拿到v5的值就相当于知道了v2的值了，下面有两个cmp的操作，就是在进行比较</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">8049850:    cmpl   $0x6,-0xc(%ebp) //-0xc(%ebp) == 6 ?</span><br><span class="line">8049854:    jne    804985e &lt;phase_5+0x79&gt;</span><br><span class="line">8049856:    mov    -0x1c(%ebp),%eax</span><br><span class="line">8049859:    cmp    %eax,-0x10(%ebp)</span><br><span class="line">804985c:   je     804986a &lt;phase_5+0x85&gt;</span><br><span class="line">804985e:    call   8049ec9 &lt;explode_bomb&gt;</span><br></pre></td></tr></table></figure><p>可以在执行完<code>8049859: cmp %eax,-0x10(%ebp)</code>之后查看一下<code>-0x10(%ebp)</code>中的值,这里拿到的<code>0x00000030</code>换算成十进制就是48，所以第二个参数就是48</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">(gdb) x $ebp-16</span><br><span class="line">0xbffff5a8:0x00000030</span><br></pre></td></tr></table></figure><p>当然，我这种方式是运气好一开始就使用0作为第一个参数来测试的，如果使用的其他值就需要一步一步推出来其他的值，因为其中有一个数组，那就可以输入小于15的值来确定每一个位置的值是多少，我这里得到了数组中所有的值</p><figure class="highlight tap"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">索引 01  <span class="number"> 2 </span> <span class="number"> 3 </span><span class="number"> 4 </span> <span class="number"> 5 </span> <span class="number"> 6 </span> <span class="number"> 7 </span><span class="number"> 8 </span><span class="number"> 9 </span> <span class="number"> 10 </span><span class="number"> 11 </span> <span class="number"> 12 </span><span class="number"> 13 </span>14    </span><br><span class="line">值10<span class="number"> 2 </span><span class="number"> 14 </span> <span class="number"> 7 </span><span class="number"> 8 </span><span class="number"> 12 </span><span class="number"> 15 </span><span class="number"> 11 </span><span class="number"> 0 </span><span class="number"> 4 </span> <span class="number"> 1 </span> <span class="number"> 13 </span> <span class="number"> 3 </span> <span class="number"> 9 </span> 6</span><br></pre></td></tr></table></figure><p>然后就可以得到所有的循环结果,但是因为最终跳出循环的结果是v3=15，所以满足条件的就只有第一个也就是0 48</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line">0: 10  1   2   14  6   15 sum=48</span><br><span class="line">1: 2   14  6   15  x</span><br><span class="line">2: 14  6   15  x</span><br><span class="line">3: 7   11  13  9   4   8  </span><br><span class="line">4: 8   0   10  1   2   14 </span><br><span class="line">5: 12  3   7   11  13  9  </span><br><span class="line">6: 15 x</span><br><span class="line">7: 11  13  9   4   8   0  </span><br><span class="line">8: 0   10  1   2   14  6  </span><br><span class="line">9: 4   8   0   10  1   2  </span><br><span class="line">10:1   2   14  6   15 x</span><br><span class="line">11:13  9   4   8   0   10 </span><br><span class="line">12:3   7   11  13  9   4  </span><br><span class="line">13:9   4   8   0   10  1  </span><br><span class="line">14:6   15 x</span><br></pre></td></tr></table></figure><h1 id="阶段-6：链表-指针-结构"><a href="#阶段-6：链表-指针-结构" class="headerlink" title="阶段 6：链表/指针/结构"></a>阶段 6：链表/指针/结构</h1><p>这个部分有一大堆的代码，很长…</p><p><img src="https://gcore.jsdelivr.net/gh/zsxfa/CDN/img/md/2022/06/09/20-11-21-20220609201120-0245ff.png"></p><p>要求应该是输入多个数，因为在里面调用了另外一个函数<code>read_n_numbers</code>，这里会读取输入的数，使用IDA进行反汇编之后就能知道函数的内容了，里面调用了strtok函数，就是对字符串进行分解</p><p><img src="https://gcore.jsdelivr.net/gh/zsxfa/CDN/img/md/2022/06/09/16-11-48-20220609161148-a534a5.png"></p><p>下面看看第一个循环</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br></pre></td><td class="code"><pre><span class="line">80498a0:       c7 45 f0 00 00 00 00    movl   $0x0,-0x10(%ebp)</span><br><span class="line">80498a7:       eb 60                   jmp    8049909 &lt;phase_6+0x98&gt;</span><br><span class="line">80498a9:       8b 45 f0                mov    -0x10(%ebp),%eax</span><br><span class="line">80498ac:       8b 44 85 cc             mov    -0x34(%ebp,%eax,4),%eax</span><br><span class="line">80498b0:       85 c0                   test   %eax,%eax</span><br><span class="line">80498b2:       7e 0c                   jle    80498c0 &lt;phase_6+0x4f&gt;</span><br><span class="line">80498b4:       8b 45 f0                mov    -0x10(%ebp),%eax</span><br><span class="line">80498b7:       8b 44 85 cc             mov    -0x34(%ebp,%eax,4),%eax</span><br><span class="line">80498bb:       83 f8 07                cmp    $0x7,%eax</span><br><span class="line">80498be:       7e 0f                   jle    80498cf &lt;phase_6+0x5e&gt;</span><br><span class="line">80498c0:       e8 04 06 00 00          call   8049ec9 &lt;explode_bomb&gt;</span><br><span class="line">80498c5:       b8 00 00 00 00          mov    $0x0,%eax</span><br><span class="line">80498ca:       e9 08 01 00 00          jmp    80499d7 &lt;phase_6+0x166&gt;</span><br><span class="line">80498cf:       8b 45 f0                mov    -0x10(%ebp),%eax</span><br><span class="line">80498d2:       83 c0 01                add    $0x1,%eax</span><br><span class="line">80498d5:       89 45 ec                mov    %eax,-0x14(%ebp)</span><br><span class="line">80498d8:       eb 25                   jmp    80498ff &lt;phase_6+0x8e&gt;</span><br><span class="line">----------------</span><br><span class="line">80498da:       8b 45 f0                mov    -0x10(%ebp),%eax</span><br><span class="line">80498dd:       8b 54 85 cc             mov    -0x34(%ebp,%eax,4),%edx</span><br><span class="line">80498e1:       8b 45 ec                mov    -0x14(%ebp),%eax</span><br><span class="line">80498e4:       8b 44 85 cc             mov    -0x34(%ebp,%eax,4),%eax</span><br><span class="line">80498e8:       39 c2                   cmp    %eax,%edx</span><br><span class="line">80498ea:       75 0f                   jne    80498fb &lt;phase_6+0x8a&gt;</span><br><span class="line">80498ec:       e8 d8 05 00 00          call   8049ec9 &lt;explode_bomb&gt;</span><br><span class="line">80498f1:       b8 00 00 00 00          mov    $0x0,%eax</span><br><span class="line">80498f6:       e9 dc 00 00 00          jmp    80499d7 &lt;phase_6+0x166&gt;</span><br><span class="line">80498fb:       83 45 ec 01             addl   $0x1,-0x14(%ebp)</span><br><span class="line">80498ff:       83 7d ec 06             cmpl   $0x6,-0x14(%ebp)</span><br><span class="line">8049903:       7e d5                   jle    80498da &lt;phase_6+0x69&gt;</span><br><span class="line">------------------</span><br><span class="line">8049905:       83 45 f0 01             addl   $0x1,-0x10(%ebp)</span><br><span class="line">8049909:       83 7d f0 06             cmpl   $0x6,-0x10(%ebp)</span><br><span class="line">804990d:       7e 9a                   jle    80498a9 &lt;phase_6+0x38&gt;</span><br></pre></td></tr></table></figure><p>这些就是第一个循环的逻辑，根据逻辑变成c语言代码就是,可以发现其作用是判断输入的数是否大于0小于等于7，同时各个值不相等。</p><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"><span class="type">int</span> n_numbers[<span class="number">7</span>] = &#123; <span class="comment">/* 我们输入的7个数 */</span> &#125;;</span><br><span class="line"><span class="keyword">for</span> (<span class="type">int</span> i = <span class="number">0</span>; i &lt;= <span class="number">6</span>; ++i)</span><br><span class="line">&#123;</span><br><span class="line">  <span class="keyword">if</span> (six_numbers[i] &lt;= <span class="number">0</span> || six_numbers[i] &gt; <span class="number">7</span>)</span><br><span class="line">    explode_bomb();</span><br><span class="line">  <span class="keyword">for</span> (<span class="type">int</span> j = i + <span class="number">1</span>; j &lt;= <span class="number">6</span>; ++j)</span><br><span class="line">    <span class="keyword">if</span> (six_numbers[i] == six_numbers[j])</span><br><span class="line">      explode_bomb();</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>下面又是循环结构，不过有点复杂，懒得一行一行去分析了，直接到最后一个循环结构，发现前面这段代码</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">8049989:     mov    -0xc(%ebp),%eax</span><br><span class="line">804998c:     movl   $0x0,0x8(%eax) //v7[2]=0x8(%eax)=0 </span><br><span class="line">8049993:     mov    -0x18(%ebp),%eax //v7=%eax=0x804c130</span><br><span class="line">8049996:     mov    %eax,-0xc(%ebp)</span><br></pre></td></tr></table></figure><p>这段代码通过IDA编译后发现是下面两句，应该是为了后面的循环中作为判断条件的</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">v7[2] = 0;</span><br><span class="line">v7 = v4;</span><br></pre></td></tr></table></figure><p>接着看循环体内部，发现有一个<code>cmp</code>指令,下面的<code>jle</code>的作用是小于或等于，这里比较的内容其实就是上面两句中的参数。</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">80499a2:    mov    -0xc(%ebp),%eax</span><br><span class="line">80499a5:    mov    (%eax),%edx</span><br><span class="line">80499a7:    mov    -0xc(%ebp),%eax</span><br><span class="line">80499aa:    mov    0x8(%eax),%eax</span><br><span class="line">80499ad:    mov    (%eax),%eax </span><br><span class="line">80499af:    cmp    %eax,%edx //比较</span><br><span class="line">80499b1:    jle    80499bf &lt;phase_6+0x14e&gt;</span><br><span class="line">80499b3:    call   8049ec9 &lt;explode_bomb&gt;</span><br></pre></td></tr></table></figure><p>这里就使用GDB进行调试，查看参数的内容是什么，将断点设置到<code>0x8049993</code>处，查看其中的内容如下：</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">(gdb) x/4w $eax</span><br><span class="line">0x804c130 &lt;node1&gt;:0x000000090x000000010x000000000x000003e9</span><br></pre></td></tr></table></figure><p>发现有个node1的标识，其实这就是一个链表，同样可以推断出其他node的信息</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">0x804c130 &lt;node1&gt;:0x000000090x000000010x0804c1240x000003e9</span><br><span class="line">0x804c124 &lt;node2&gt;:0x000000030x000000020x0804c1180x00000009</span><br><span class="line">0x804c118 &lt;node3&gt;:0x000000060x000000030x0804c10c0x00000003</span><br><span class="line">0x804c10c &lt;node4&gt;:0x000000070x000000040x0804c1000x00000006</span><br><span class="line">0x804c100 &lt;node5&gt;:0x000000000x000000050x0804c0f40x00000007</span><br><span class="line">0x804c0f4 &lt;node6&gt;:0x000000020x000000060x0804c0e80x00000000</span><br><span class="line">0x804c0e8 &lt;node7&gt;:0x000000050x000000070x000000000x00000002</span><br></pre></td></tr></table></figure><p><code>0x804c130</code>结构体中的指针为<code>0x0804c124</code>，这个指针指向node2，同样node2中的指针指向node3 …最后一个node7中的指针指向地址0。</p><p><strong>所以这个结构体为：</strong></p><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="class"><span class="keyword">struct</span> <span class="title">node</span>&#123;</span></span><br><span class="line">    <span class="type">int</span> val;<span class="comment">//这个暂不知道是什么数据 </span></span><br><span class="line">    <span class="type">int</span> id;<span class="comment">//id是编号 </span></span><br><span class="line">    node *next;<span class="comment">//next是指向的node的地址</span></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>再回到<code>cmp</code>指令，相当于排序的功能了，按照node上数值大小从小到大进行排列，也就是对<code>9(node1) 3(node2) 6(node3) 7(node4) 0(node5) 2(node6) 5(node7)</code>进行排序，结果是<code>node5&lt;node6&lt;node2&lt;node7&lt;node3&lt;node4&lt;node1</code></p><p>所以输入的结果就是<code>5 6 2 7 3 4 1</code></p>]]></content>
    
    
    <summary type="html">&lt;h1 id=&quot;二进制炸弹实验&quot;&gt;&lt;a href=&quot;#二进制炸弹实验&quot; class=&quot;headerlink&quot; title=&quot;二进制炸弹实验&quot;&gt;&lt;/a&gt;二进制炸弹实验&lt;/h1&gt;&lt;p&gt;最近看了计算机系统基础实验这门课程，做了Bomb Lab的实验，然后做做相应的总结。&lt;/p&gt;</summary>
    
    
    
    <category term="interesting" scheme="http://zsxfa.cn/categories/interesting/"/>
    
    
    <category term="Bomb—Lab 汇编" scheme="http://zsxfa.cn/tags/Bomb%E2%80%94Lab-%E6%B1%87%E7%BC%96/"/>
    
  </entry>
  
  <entry>
    <title>kx上网</title>
    <link href="http://zsxfa.cn/2022/05/14/kx%E4%B8%8A%E7%BD%91/"/>
    <id>http://zsxfa.cn/2022/05/14/kx%E4%B8%8A%E7%BD%91/</id>
    <published>2022-05-14T01:02:13.000Z</published>
    <updated>2022-05-14T01:08:08.466Z</updated>
    
    <content type="html"><![CDATA[<p>科学上网扫盲…</p><span id="more"></span><p><img src="https://cdn.jsdelivr.net/gh/zsxfa/CDN/img/md/2022/05/04/1651669409.png" alt="desc"></p><h1 id="VPN实现方式及弊端"><a href="#VPN实现方式及弊端" class="headerlink" title="VPN实现方式及弊端"></a>VPN实现方式及弊端</h1><p><img src="https://cdn.jsdelivr.net/gh/zsxfa/CDN/img/md/2022/05/04/1651654741.png" alt="desc"></p><ul><li>VPN通讯端口被封锁 政企用户需要申报审核</li><li>提供VPN服务的服务器IP地址批量被封</li></ul><p><strong>供应商：</strong> ExpressVPN、AstrillVPN</p><h1 id="SS-SSR-V2Ray-Trojan"><a href="#SS-SSR-V2Ray-Trojan" class="headerlink" title="SS/SSR/V2Ray/Trojan"></a>SS/SSR/V2Ray/Trojan</h1><p>是在本地服务器加密流量，发送至远程服务器再进行转发</p><p><img src="https://cdn.jsdelivr.net/gh/zsxfa/CDN/img/md/2022/05/04/1651655025.png" alt="desc"></p><h1 id="网关模式"><a href="#网关模式" class="headerlink" title="网关模式"></a>网关模式</h1><p>windows下的Clash，Mac下的Surge</p><p>在本地局域网中部署一台运行了Surge或者是Clash的电脑当做网关，可以接管局域网里面，其他所有的网络设备的所有流量。</p><p>网关模式 &gt; 软路由 &gt; 刷了第三方固件的路由器</p><h1 id="线路"><a href="#线路" class="headerlink" title="线路"></a>线路</h1><h2 id="CN2-Chiantelecom-Next-Carrier-Network"><a href="#CN2-Chiantelecom-Next-Carrier-Network" class="headerlink" title="CN2 - Chiantelecom  Next Carrier Network"></a><strong>CN2</strong> - Chiantelecom  Next Carrier Network</h2><p>意思是中国电信下一代承载网络，相比现在用的老一代的163骨干网络，更加通畅，搭载了比较先进的QoS技术，主要面向政企大客户，分为两种类型，CN2GT和CN2GIA</p><p><strong>QoS</strong> - Quality of Service</p><ul><li>QoS能识别网络中流量的需求，需要延迟低的服务优先通行，比如说对带宽没有特别大需求，但是需要低延时的游戏通讯数据，以及需要大带宽，但是延迟没有特别需求的流媒体数据都可以同时得到满足</li></ul><p><strong>CN2GT</strong> - Global Transit</p><p><strong>CN2GIA</strong> - Global Internet Access</p><h2 id="BGP-Border-Gateway-Protocol"><a href="#BGP-Border-Gateway-Protocol" class="headerlink" title="BGP - Border Gateway Protocol"></a>BGP - Border Gateway Protocol</h2><p>边界网关协议，BGP机房一般也叫多线机房，可以自动识别你的线路是电信，移动还是联通并且自动使用最适合你连接服务器的线路，而且在你当前网络不通的时候，会自动切换到其他的线路来连接服务器</p><h1 id="GCP-Google-Cloud-Platform"><a href="#GCP-Google-Cloud-Platform" class="headerlink" title="GCP - Google Cloud Platform"></a>GCP - Google Cloud Platform</h1><p>贵</p><h1 id="AWS-Amazon-Web-Service"><a href="#AWS-Amazon-Web-Service" class="headerlink" title="AWS - Amazon Web Service"></a>AWS - Amazon Web Service</h1><p>流量少</p><h1 id="Azure"><a href="#Azure" class="headerlink" title="Azure"></a>Azure</h1><p>申请麻烦</p><h1 id="PCCW"><a href="#PCCW" class="headerlink" title="PCCW"></a>PCCW</h1><p>香港电讯盈科提供的线路，到大陆的线路走的是PCCW自己的直连</p><h1 id="IPLC-International-Private-Leased-Circuit"><a href="#IPLC-International-Private-Leased-Circuit" class="headerlink" title="IPLC - International Private Leased Circuit"></a>IPLC - International Private Leased Circuit</h1><p>国际私有租用线路，通过物理层连接，只是内网</p><h1 id="IEPL-International-Ethernet-Private-Line"><a href="#IEPL-International-Ethernet-Private-Line" class="headerlink" title="IEPL - International Ethernet Private Line"></a>IEPL - International Ethernet Private Line</h1><p>通过数据链路层，只是内网</p><h1 id="扫盲"><a href="#扫盲" class="headerlink" title="扫盲"></a>扫盲</h1><p><strong>全局模式表示只经过软件的流量，有些软件不会经过代理软件（UWP应用不遵守系统代理规则）</strong></p><p><strong>加速游戏可以搜索TUN/TAP工具，强制接管指定程序的网络流量走虚拟网卡，通过SS代理转发流量，比如SSTAP这类软件…</strong></p><p>软路由：可以理解为一台小型计算机，可以在上面装操作系统</p>]]></content>
    
    
    <summary type="html">&lt;p&gt;科学上网扫盲…&lt;/p&gt;</summary>
    
    
    
    <category term="网络" scheme="http://zsxfa.cn/categories/%E7%BD%91%E7%BB%9C/"/>
    
    
    <category term="扫盲 基本概念" scheme="http://zsxfa.cn/tags/%E6%89%AB%E7%9B%B2-%E5%9F%BA%E6%9C%AC%E6%A6%82%E5%BF%B5/"/>
    
  </entry>
  
  <entry>
    <title>gulimall-高级</title>
    <link href="http://zsxfa.cn/2022/05/14/gulimall-%E9%AB%98%E7%BA%A7/"/>
    <id>http://zsxfa.cn/2022/05/14/gulimall-%E9%AB%98%E7%BA%A7/</id>
    <published>2022-05-14T00:40:33.000Z</published>
    <updated>2022-05-14T00:59:04.648Z</updated>
    
    <content type="html"><![CDATA[<p>对于谷粒商城的高级篇笔记总结…</p><span id="more"></span><h1 id="ELASTICSEARCH"><a href="#ELASTICSEARCH" class="headerlink" title="ELASTICSEARCH"></a>ELASTICSEARCH</h1><h2 id="简介"><a href="#简介" class="headerlink" title="简介"></a>简介</h2><p><a href="https://www.elastic.co/cn/what-is/elasticsearch">https://www.elastic.co/cn/what-is/elasticsearch</a><br>全文搜索属于最常见的需求，开源的 Elasticsearch 是目前全文搜索引擎的首选。<br>它可以快速地储存、搜索和分析海量数据。维基百科、Stack Overflow、Github 都采用它</p><p>Elastic 的底层是开源库 Lucene。但是，你没法直接用 Lucene，必须自己写代码去调用它的接口。Elastic 是 Lucene 的封装，提供了 REST API 的操作接口，开箱即用。<br>REST API：天然的跨平台。<br>官方文档：<a href="https://www.elastic.co/guide/en/elasticsearch/reference/current/index.html">https://www.elastic.co/guide/en/elasticsearch/reference/current/index.html</a><br>官方中文：<a href="https://www.elastic.co/guide/cn/elasticsearch/guide/current/foreword_id.html">https://www.elastic.co/guide/cn/elasticsearch/guide/current/foreword_id.html</a></p><p>社区中文：<br><a href="https://es.xiaoleilu.com/index.html">https://es.xiaoleilu.com/index.html</a><br><a href="http://doc.codingdict.com/elasticsearch/0/">http://doc.codingdict.com/elasticsearch/0/</a></p><h2 id="基本概念"><a href="#基本概念" class="headerlink" title="基本概念"></a>基本概念</h2><p><strong>1、Index（索引）</strong></p><p>动词，相当于 MySQL 中的 insert；</p><p>名词，相当于 MySQL 中的 Database</p><p><strong>2、Type（类型）</strong><br>在 Index（索引）中，可以定义一个或多个类型。<br>类似于 MySQL 中的 Table；每一种类型的数据放在一起；</p><p><strong>3、Document（文档）</strong><br>保存在某个索引（Index）下，某种类型（Type）的一个数据（Document），文档是 JSON 格式的，Document 就像是 MySQL 中的某个 Table 里面的内容；</p><p><img src="https://cdn.jsdelivr.net/gh/zsxfa/CDN/img/md/2022/03/30/1648601662.png" alt="desc"></p><h2 id="ElasticSearch7-去掉type概念"><a href="#ElasticSearch7-去掉type概念" class="headerlink" title="ElasticSearch7-去掉type概念"></a>ElasticSearch7-去掉type概念</h2><ul><li>关系型数据库中两个数据表示是独立的，即使他们里面有相同名称的列也不影响使用，但ES中不是这样的。elasticsearch是基于Lucene开发的搜索引擎，而ES中不同type下名称相同的filed最终在Lucene中的处理方式是一样的。<ul><li>两个不同type下的两个user_name，在ES同一个索引下其实被认为是同一个filed，你必须在两个不同的type中定义相同的filed映射。否则，不同type中的相同字段名称就会在处理中出现冲突的情况，导致Lucene处理效率下降。</li><li>去掉type就是为了提高ES处理数据的效率。</li></ul></li><li>Elasticsearch 7.x<ul><li>URL中的type参数为可选。比如，索引一个文档不再要求提供文档类型</li></ul></li><li>Elasticsearch 8.x<ul><li>不再支持URL中的type参数。</li></ul></li></ul><p>解决：将索引从多类型迁移到单类型，每种类型文档一个独立索引</p><h2 id="倒排索引"><a href="#倒排索引" class="headerlink" title="倒排索引"></a>倒排索引</h2><p><img src="https://cdn.jsdelivr.net/gh/zsxfa/CDN/img/md/2022/03/30/1648602178.png" alt="desc"></p><h2 id="1、安装elastic-search"><a href="#1、安装elastic-search" class="headerlink" title="1、安装elastic search"></a>1、安装elastic search</h2><p> dokcer中安装elastic search</p><p>（1）下载ealastic search(存储和检索数据)和kibana(可视化检索数据)</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">docker pull elasticsearch:7.6.2</span><br><span class="line">docker pull kibana:7.6.2</span><br></pre></td></tr></table></figure><p>（2）配置</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">mkdir -p /mydata/elasticsearch/config</span><br><span class="line">mkdir -p /mydata/elasticsearch/data</span><br><span class="line">echo &quot;http.host: 0.0.0.0&quot; &gt;&gt; /mydata/elasticsearch/config/elasticsearch.yml</span><br><span class="line">chmod -R 777 /mydata/elasticsearch/</span><br></pre></td></tr></table></figure><p>（3）启动Elastic search</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">docker run --name elasticsearch -p 9200:9200 -p 9300:9300 \</span><br><span class="line">-e  &quot;discovery.type=single-node&quot; \</span><br><span class="line">-e ES_JAVA_OPTS=&quot;-Xms64m -Xmx512m&quot; \</span><br><span class="line">-v /mydata/elasticsearch/config/elasticsearch.yml:/usr/share/elasticsearch/config/elasticsearch.yml \</span><br><span class="line">-v /mydata/elasticsearch/data:/usr/share/elasticsearch/data \</span><br><span class="line">-v  /mydata/elasticsearch/plugins:/usr/share/elasticsearch/plugins \</span><br><span class="line">-d elasticsearch:7.6.2 </span><br></pre></td></tr></table></figure><blockquote><p>–name:设置容器名称</p><p>-p:9200是发送http请求，rustAPI，9300是ES在分布式集群状态下节点间的通信端口</p><p>-e:运行模式，ES_JAVA_OPTS不指定会将内存全部占用</p><p>-v:进行挂载，将容器中的配置文件和外部的虚拟机配置文件进行关联</p></blockquote><p>设置开机启动elasticsearch</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">docker update elasticsearch --restart=always</span><br></pre></td></tr></table></figure><p>（4）启动kibana：</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">docker run --name kibana -e ELASTICSEARCH_HOSTS=http://192.168.56.10:9200 -p 5601:5601 -d kibana:7.6.2</span><br></pre></td></tr></table></figure><p>设置开机启动kibana</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">docker update kibana  --restart=always</span><br></pre></td></tr></table></figure><p>（5）测试</p><p>查看elasticsearch版本信息： <a href="http://192.168.56.10:9200/">http://192.168.56.10:9200</a></p><figure class="highlight json"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><span class="line"><span class="punctuation">&#123;</span></span><br><span class="line">    <span class="attr">&quot;name&quot;</span><span class="punctuation">:</span> <span class="string">&quot;1e3900cda632&quot;</span><span class="punctuation">,</span></span><br><span class="line">    <span class="attr">&quot;cluster_name&quot;</span><span class="punctuation">:</span> <span class="string">&quot;elasticsearch&quot;</span><span class="punctuation">,</span></span><br><span class="line">    <span class="attr">&quot;cluster_uuid&quot;</span><span class="punctuation">:</span> <span class="string">&quot;zAxedSGQSgC86bmYA72C9Q&quot;</span><span class="punctuation">,</span></span><br><span class="line">    <span class="attr">&quot;version&quot;</span><span class="punctuation">:</span> <span class="punctuation">&#123;</span></span><br><span class="line">        <span class="attr">&quot;number&quot;</span><span class="punctuation">:</span> <span class="string">&quot;7.6.2&quot;</span><span class="punctuation">,</span></span><br><span class="line">        <span class="attr">&quot;build_flavor&quot;</span><span class="punctuation">:</span> <span class="string">&quot;default&quot;</span><span class="punctuation">,</span></span><br><span class="line">        <span class="attr">&quot;build_type&quot;</span><span class="punctuation">:</span> <span class="string">&quot;docker&quot;</span><span class="punctuation">,</span></span><br><span class="line">        <span class="attr">&quot;build_hash&quot;</span><span class="punctuation">:</span> <span class="string">&quot;ef48eb35cf30adf4db14086e8aabd07ef6fb113f&quot;</span><span class="punctuation">,</span></span><br><span class="line">        <span class="attr">&quot;build_date&quot;</span><span class="punctuation">:</span> <span class="string">&quot;2020-03-26T06:34:37.794943Z&quot;</span><span class="punctuation">,</span></span><br><span class="line">        <span class="attr">&quot;build_snapshot&quot;</span><span class="punctuation">:</span> <span class="keyword">false</span><span class="punctuation">,</span></span><br><span class="line">        <span class="attr">&quot;lucene_version&quot;</span><span class="punctuation">:</span> <span class="string">&quot;8.4.0&quot;</span><span class="punctuation">,</span></span><br><span class="line">        <span class="attr">&quot;minimum_wire_compatibility_version&quot;</span><span class="punctuation">:</span> <span class="string">&quot;6.8.0&quot;</span><span class="punctuation">,</span></span><br><span class="line">        <span class="attr">&quot;minimum_index_compatibility_version&quot;</span><span class="punctuation">:</span> <span class="string">&quot;6.0.0-beta1&quot;</span></span><br><span class="line">    <span class="punctuation">&#125;</span><span class="punctuation">,</span></span><br><span class="line">    <span class="attr">&quot;tagline&quot;</span><span class="punctuation">:</span> <span class="string">&quot;You Know, for Search&quot;</span></span><br><span class="line"><span class="punctuation">&#125;</span></span><br></pre></td></tr></table></figure><p>显示elasticsearch 节点信息http://#:9200/_cat/nodes ，</p><figure class="highlight json"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="number">127.0</span><span class="number">.0</span><span class="number">.1</span> <span class="number">13</span> <span class="number">92</span> <span class="number">7</span> <span class="number">0.06</span> <span class="number">0.21</span> <span class="number">0.20</span> dilm * <span class="number">1e3900</span>cda632</span><br></pre></td></tr></table></figure><p>访问Kibana：<a href="http://192.168.56.10:5601/app/kibana#/home">http://192.168.56.10:5601/app/kibana#/home</a></p><p><img src="https://cdn.jsdelivr.net/gh/zsxfa/CDN/img/md/2022/03/30/1648604589.png" alt="desc"></p><h2 id="2、初步检索"><a href="#2、初步检索" class="headerlink" title="2、初步检索"></a>2、初步检索</h2><h3 id="1）-CAT"><a href="#1）-CAT" class="headerlink" title="1）_CAT"></a>1）_CAT</h3><p>（1）GET/_cat/nodes：查看所有节点</p><p> 如：<a href="http://192.168.56.10:9200/_cat/nodes">http://192.168.56.10:9200/_cat/nodes</a> :</p><figure class="highlight apache"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="attribute">127</span>.<span class="number">0</span>.<span class="number">0</span>.<span class="number">1</span> <span class="number">15</span> <span class="number">91</span> <span class="number">3</span> <span class="number">0</span>.<span class="number">13</span> <span class="number">0</span>.<span class="number">38</span> <span class="number">0</span>.<span class="number">31</span> dilm * <span class="number">1</span>e3900cda632</span><br></pre></td></tr></table></figure><p>注：*表示集群中的主节点</p><p>（2）GET/_cat/health：查看es健康状况</p><p>如： <a href="http://192.168.56.10:9200/_cat/health">http://192.168.56.10:9200/_cat/health</a> </p><figure class="highlight apache"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="attribute">1648604850</span> <span class="number">01</span>:<span class="number">47</span>:<span class="number">30</span> elasticsearch green <span class="number">1</span> <span class="number">1</span> <span class="number">3</span> <span class="number">3</span> <span class="number">0</span> <span class="number">0</span> <span class="number">0</span> <span class="number">0</span> - <span class="number">100</span>.<span class="number">0</span>%</span><br></pre></td></tr></table></figure><p>注：green表示健康值正常</p><p>（3）GET/_cat/master：查看主节点</p><p>如： <a href="http://192.168.56.10:9200/_cat/master">http://192.168.56.10:9200/_cat/master</a> </p><figure class="highlight apache"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="attribute">Urxz2dOfSgCRyzGzs</span>-<span class="number">7</span>l6Q <span class="number">127.0.0.1</span> <span class="number">127.0.0.1</span> <span class="number">1</span>e3900cda632</span><br></pre></td></tr></table></figure><p>（4）GET/_cat/indicies：查看所有索引 ，等价于mysql数据库的show databases;</p><p>如： <a href="http://192.168.56.10:9200/_cat/indices">http://192.168.56.10:9200/_cat/indices</a> </p><figure class="highlight json"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">green open .kibana_task_manager_1   X9B74aaIS9KHLlPUrYLVWA <span class="number">1</span> <span class="number">0</span> <span class="number">2</span> <span class="number">0</span> <span class="number">34.2</span>kb <span class="number">34.2</span>kb</span><br><span class="line">green open .apm-agent-configuration ZXdJradmQcG-fbLFmRydKw <span class="number">1</span> <span class="number">0</span> <span class="number">0</span> <span class="number">0</span>   <span class="number">283</span>b   <span class="number">283</span>b</span><br><span class="line">green open .kibana_1                <span class="number">9</span>uZjKicuSPqv5qUSMWes3Q <span class="number">1</span> <span class="number">0</span> <span class="number">7</span> <span class="number">0</span> <span class="number">34.5</span>kb <span class="number">34.5</span>kb</span><br></pre></td></tr></table></figure><h3 id="2）索引一个文档"><a href="#2）索引一个文档" class="headerlink" title="2）索引一个文档"></a>2）索引一个文档</h3><p>保存一个数据，保存在哪个索引的哪个类型下(相当于保存在那个数据库的那张表上)，指定用那个唯一标识<br>PUT customer/external/1;在customer索引下的external类型下保存1号数据为</p><figure class="highlight awk"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">PUT customer<span class="regexp">/external/</span><span class="number">1</span></span><br></pre></td></tr></table></figure><figure class="highlight json"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="punctuation">&#123;</span></span><br><span class="line"> <span class="attr">&quot;name&quot;</span><span class="punctuation">:</span><span class="string">&quot;John Doe&quot;</span></span><br><span class="line"><span class="punctuation">&#125;</span></span><br></pre></td></tr></table></figure><p>PUT和POST都可以<br><strong>POST新增。</strong>如果不指定id，会自动生成id。指定id就会修改这个数据，并新增版本号；<br><strong>PUT可以新增也可以修改。PUT必须指定id</strong>；由于PUT需要指定id，我们一般用来做修改操作，不指定id会报错。</p><p>下面是在postman中的测试数据：<br><img src="https://cdn.jsdelivr.net/gh/zsxfa/CDN/img/md/2022/03/30/1648605954.png" alt="desc"></p><p>创建数据成功后，显示201 created表示插入记录成功。</p><figure class="highlight json"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line"><span class="punctuation">&#123;</span></span><br><span class="line">    <span class="attr">&quot;_index&quot;</span><span class="punctuation">:</span> <span class="string">&quot;customer&quot;</span><span class="punctuation">,</span></span><br><span class="line">    <span class="attr">&quot;_type&quot;</span><span class="punctuation">:</span> <span class="string">&quot;external&quot;</span><span class="punctuation">,</span></span><br><span class="line">    <span class="attr">&quot;_id&quot;</span><span class="punctuation">:</span> <span class="string">&quot;1&quot;</span><span class="punctuation">,</span></span><br><span class="line">    <span class="attr">&quot;_version&quot;</span><span class="punctuation">:</span> <span class="number">1</span><span class="punctuation">,</span></span><br><span class="line">    <span class="attr">&quot;result&quot;</span><span class="punctuation">:</span> <span class="string">&quot;created&quot;</span><span class="punctuation">,</span></span><br><span class="line">    <span class="attr">&quot;_shards&quot;</span><span class="punctuation">:</span> <span class="punctuation">&#123;</span></span><br><span class="line">        <span class="attr">&quot;total&quot;</span><span class="punctuation">:</span> <span class="number">2</span><span class="punctuation">,</span></span><br><span class="line">        <span class="attr">&quot;successful&quot;</span><span class="punctuation">:</span> <span class="number">1</span><span class="punctuation">,</span></span><br><span class="line">        <span class="attr">&quot;failed&quot;</span><span class="punctuation">:</span> <span class="number">0</span></span><br><span class="line">    <span class="punctuation">&#125;</span><span class="punctuation">,</span></span><br><span class="line">    <span class="attr">&quot;_seq_no&quot;</span><span class="punctuation">:</span> <span class="number">0</span><span class="punctuation">,</span></span><br><span class="line">    <span class="attr">&quot;_primary_term&quot;</span><span class="punctuation">:</span> <span class="number">1</span></span><br><span class="line"><span class="punctuation">&#125;</span></span><br></pre></td></tr></table></figure><p>这些返回的JSON串的含义；这些带有下划线开头的，称为元数据，反映了当前的基本信息。</p><p>“_index”: “customer” 表明该数据在哪个数据库下；</p><p>“_type”: “external”     表明该数据在哪个类型下；</p><p>“_id”: “1”                    表明被保存数据的id；</p><p> “_version”: 1,            被保存数据的版本</p><p>“result”: “created”      这里是创建了一条数据，如果重新put一条数据，则该状态会变为updated，并且版本号也会发生变化。</p><p><img src="https://cdn.jsdelivr.net/gh/zsxfa/CDN/img/md/2022/03/30/1648606206.png" alt="desc"></p><p>下面选用POST方式：</p><p>添加数据的时候，不指定ID，会自动的生成id，并且类型是新增：</p><p><img src="https://cdn.jsdelivr.net/gh/zsxfa/CDN/img/md/2022/03/30/1648606640.png" alt="desc"></p><p>再次使用POST插入数据，仍然是新增的：</p><p><img src="https://cdn.jsdelivr.net/gh/zsxfa/CDN/img/md/2022/03/30/1648606678.png" alt="desc"></p><p>添加数据的时候，指定ID，会使用该id，并且类型是新增：</p><p><img src="https://cdn.jsdelivr.net/gh/zsxfa/CDN/img/md/2022/03/30/1648606741.png" alt="desc"></p><p>再次使用POST插入数据，类型为updated</p><p><img src="https://cdn.jsdelivr.net/gh/zsxfa/CDN/img/md/2022/03/30/1648606780.png" alt="desc"></p><h3 id="3）查看文档"><a href="#3）查看文档" class="headerlink" title="3）查看文档"></a>3）查看文档</h3><p>GET /customer/external/1</p><p> <a href="http://192.168.56.10:9200/customer/external/1">http://192.168.56.10:9200/customer/external/1</a> </p><figure class="highlight json"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line"><span class="punctuation">&#123;</span></span><br><span class="line">    <span class="attr">&quot;_index&quot;</span><span class="punctuation">:</span> <span class="string">&quot;customer&quot;</span><span class="punctuation">,</span><span class="comment">//在哪个索引下</span></span><br><span class="line">    <span class="attr">&quot;_type&quot;</span><span class="punctuation">:</span> <span class="string">&quot;external&quot;</span><span class="punctuation">,</span><span class="comment">//在哪个类型</span></span><br><span class="line">    <span class="attr">&quot;_id&quot;</span><span class="punctuation">:</span> <span class="string">&quot;1&quot;</span><span class="punctuation">,</span><span class="comment">//记录id</span></span><br><span class="line">    <span class="attr">&quot;_version&quot;</span><span class="punctuation">:</span> <span class="number">2</span><span class="punctuation">,</span><span class="comment">//版本号</span></span><br><span class="line">    <span class="attr">&quot;_seq_no&quot;</span><span class="punctuation">:</span> <span class="number">1</span><span class="punctuation">,</span><span class="comment">//并发控制字段，每次更新都会+1，用来做乐观锁</span></span><br><span class="line">    <span class="attr">&quot;_primary_term&quot;</span><span class="punctuation">:</span> <span class="number">1</span><span class="punctuation">,</span><span class="comment">//同上，主分片重新分配，如重启，就会变化</span></span><br><span class="line">    <span class="attr">&quot;found&quot;</span><span class="punctuation">:</span> <span class="keyword">true</span><span class="punctuation">,</span></span><br><span class="line">    <span class="attr">&quot;_source&quot;</span><span class="punctuation">:</span> <span class="punctuation">&#123;</span></span><br><span class="line">        <span class="attr">&quot;name&quot;</span><span class="punctuation">:</span> <span class="string">&quot;John Doe&quot;</span></span><br><span class="line">    <span class="punctuation">&#125;</span></span><br><span class="line"><span class="punctuation">&#125;</span></span><br></pre></td></tr></table></figure><p>通过“if_seq_no=1&amp;if_primary_term=1 ”，当序列号匹配的时候，才进行修改，否则不修改。</p><p>实例：将id=1的数据更新为name=1，然后再次更新为name=2，起始_seq_no=1，_primary_term=1</p><p>（1）将name更新为1</p><p><a href="http://192.168.56.10:9200/customer/external/1?if_seq_no=1&amp;if_primary_term=1">http://192.168.56.10:9200/customer/external/1?if_seq_no=1&amp;if_primary_term=1</a></p><p><img src="https://cdn.jsdelivr.net/gh/zsxfa/CDN/img/md/2022/03/30/1648608552.png" alt="desc"></p><p>（2）将name更新为2，更新过程中使用seq_no=1</p><p>http://#:9200/customer/external/1?if_seq_no=1&amp;if_primary_term=1 </p><p><img src="https://cdn.jsdelivr.net/gh/zsxfa/CDN/img/md/2022/03/30/1648608751.png" alt="desc"></p><p>出现更新错误。</p><p>（3）查询新的数据</p><p> <a href="http://192.168.56.10:9200/customer/external/1">http://192.168.56.10:9200/customer/external/1</a></p><p><img src="https://cdn.jsdelivr.net/gh/zsxfa/CDN/img/md/2022/03/30/1648608800.png" alt="desc"></p><p>能够看到_seq_no变为7。（ps.中间有多次更新操作，这里就从seq_no为7来接着操作）</p><p>（4）再次更新，更新成功</p><p> <a href="http://192.168.56.10:9200/customer/external/1?if_seq_no=7&amp;if_primary_term=1">http://192.168.56.10:9200/customer/external/1?if_seq_no=7&amp;if_primary_term=1</a></p><p><img src="https://cdn.jsdelivr.net/gh/zsxfa/CDN/img/md/2022/03/30/1648608854.png" alt="desc"></p><h3 id="4）更新文档"><a href="#4）更新文档" class="headerlink" title="4）更新文档"></a>4）更新文档</h3><p>（1）POST更新文档，带有_update</p><figure class="highlight json"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">POST customer/external/<span class="number">1</span>/_update</span><br><span class="line"><span class="punctuation">&#123;</span></span><br><span class="line"><span class="attr">&quot;doc&quot;</span><span class="punctuation">:</span><span class="punctuation">&#123;</span></span><br><span class="line"><span class="attr">&quot;name&quot;</span><span class="punctuation">:</span> <span class="string">&quot;John Doew&quot;</span></span><br><span class="line"><span class="punctuation">&#125;</span></span><br><span class="line"><span class="punctuation">&#125;</span></span><br></pre></td></tr></table></figure><p> <a href="http://192.168.56.10:9200/customer/external/1/_update">http://192.168.56.10:9200/customer/external/1/_update</a></p><p><img src="https://cdn.jsdelivr.net/gh/zsxfa/CDN/img/md/2022/03/30/1648609965.png" alt="desc"></p><p>如果再次执行更新，则不执行任何操作，序列号也不发生变化</p><p><img src="https://cdn.jsdelivr.net/gh/zsxfa/CDN/img/md/2022/03/30/1648610035.png" alt="desc"></p><p>POST更新方式，会对比原来的数据，和原来的相同，则不执行任何操作（version和_seq_no）都不变。</p><p> （2）POST更新文档，不带_update</p><figure class="highlight json"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">POST customer/external/<span class="number">1</span> </span><br><span class="line"><span class="punctuation">&#123;</span></span><br><span class="line"><span class="attr">&quot;name&quot;</span><span class="punctuation">:</span> <span class="string">&quot;John Doew2&quot;</span> </span><br><span class="line"><span class="punctuation">&#125;</span></span><br></pre></td></tr></table></figure><p><img src="https://cdn.jsdelivr.net/gh/zsxfa/CDN/img/md/2022/03/30/1648610447.png" alt="desc"></p><p>在更新过程中，<strong>重复执行更新操作，数据也能够更新成功</strong>，不会和原来的数据进行对比。</p><p>（3）PUT更新文档，无_update</p><figure class="highlight json"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">PUT customer/external/<span class="number">1</span> </span><br><span class="line"><span class="punctuation">&#123;</span></span><br><span class="line"><span class="attr">&quot;name&quot;</span><span class="punctuation">:</span> <span class="string">&quot;John Doew3&quot;</span> </span><br><span class="line"><span class="punctuation">&#125;</span></span><br></pre></td></tr></table></figure><p><img src="https://cdn.jsdelivr.net/gh/zsxfa/CDN/img/md/2022/03/30/1648610587.png" alt="desc"></p><p>在更新过程中，<strong>重复执行更新操作，数据也能够更新成功</strong>，不会和原来的数据进行对比。</p><ul><li><p><strong>不同：</strong></p><ul><li><p>POST 操作带_update会对比源文档数据，如果相同不会有什么操作，文档 version 不增加,不带 _update的话，不会对比源文档数据，会直接进行保存并增加 version 版本</p></li><li><p>PUT 操作总会将数据重新保存并增加 version 版本；</p></li></ul><p><strong>对于大并发更新，不带 update；</strong><br><strong>对于大并发查询偶尔更新，带 update；对比更新，重新计算分配规则。</strong></p></li><li><p><strong>更新同时增加属性 （PUT 和 POST 不带_update 也可以）</strong></p><figure class="highlight json"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">POST customer/external/<span class="number">1</span>/_update </span><br><span class="line"><span class="punctuation">&#123;</span></span><br><span class="line"><span class="attr">&quot;doc&quot;</span><span class="punctuation">:</span> <span class="punctuation">&#123;</span> <span class="attr">&quot;name&quot;</span><span class="punctuation">:</span> <span class="string">&quot;Jane Doe&quot;</span><span class="punctuation">,</span> <span class="attr">&quot;age&quot;</span><span class="punctuation">:</span> <span class="number">20</span> <span class="punctuation">&#125;</span></span><br><span class="line"><span class="punctuation">&#125;</span></span><br></pre></td></tr></table></figure></li></ul><h3 id="5）删除文档或索引"><a href="#5）删除文档或索引" class="headerlink" title="5）删除文档或索引"></a>5）删除文档或索引</h3><figure class="highlight json"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">DELETE customer/external/<span class="number">1</span></span><br><span class="line">DELETE customer</span><br></pre></td></tr></table></figure><p>注：elasticsearch并没有提供删除类型的操作，只提供了删除索引和文档的操作。</p><p>实例：删除id=1的数据，删除后继续查询</p><p><img src="https://cdn.jsdelivr.net/gh/zsxfa/CDN/img/md/2022/03/30/1648611681.png" alt="desc"></p><p>实例：删除整个costomer索引数据</p><p>删除前，所有的索引</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">green  open .kibana_task_manager_1   X9B74aaIS9KHLlPUrYLVWA 1 0 2 0 34.2kb 34.2kb</span><br><span class="line">green  open .apm-agent-configuration ZXdJradmQcG-fbLFmRydKw 1 0 0 0   283b   283b</span><br><span class="line">green  open .kibana_1                9uZjKicuSPqv5qUSMWes3Q 1 0 7 0 34.5kb 34.5kb</span><br><span class="line">yellow open customer                 S09RAZu5R0yfA8WgHhX3tA 1 1 4 6  9.1kb  9.1kb</span><br></pre></td></tr></table></figure><p>删除“ customer ”索引</p><p><img src="https://cdn.jsdelivr.net/gh/zsxfa/CDN/img/md/2022/03/30/1648611825.png" alt="desc"></p><p>删除后，所有的索引</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">green open .kibana_task_manager_1   X9B74aaIS9KHLlPUrYLVWA 1 0 2 0 34.2kb 34.2kb</span><br><span class="line">green open .apm-agent-configuration ZXdJradmQcG-fbLFmRydKw 1 0 0 0   283b   283b</span><br><span class="line">green open .kibana_1                9uZjKicuSPqv5qUSMWes3Q 1 0 7 0 34.5kb 34.5kb</span><br></pre></td></tr></table></figure><h3 id="6）eleasticsearch的批量操作——bulk"><a href="#6）eleasticsearch的批量操作——bulk" class="headerlink" title="6）eleasticsearch的批量操作——bulk"></a>6）eleasticsearch的批量操作——bulk</h3><p>语法格式：</p><figure class="highlight json"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="punctuation">&#123;</span>action<span class="punctuation">:</span><span class="punctuation">&#123;</span>metadata<span class="punctuation">&#125;</span><span class="punctuation">&#125;</span>\n</span><br><span class="line"><span class="punctuation">&#123;</span>request body  <span class="punctuation">&#125;</span>\n</span><br><span class="line"></span><br><span class="line"><span class="punctuation">&#123;</span>action<span class="punctuation">:</span><span class="punctuation">&#123;</span>metadata<span class="punctuation">&#125;</span><span class="punctuation">&#125;</span>\n</span><br><span class="line"><span class="punctuation">&#123;</span>request body  <span class="punctuation">&#125;</span>\n</span><br></pre></td></tr></table></figure><p>这里的批量操作，当发生某一条执行发生失败时，其他的数据仍然能够接着执行，也就是说彼此之间是独立的。</p><p>bulk api以此按顺序执行所有的action（动作）。如果一个单个的动作因任何原因失败，它将继续处理它后面剩余的动作。当bulk api返回时，它将提供每个动作的状态（与发送的顺序相同），所以您可以检查是否一个指定的动作是否失败了。</p><p><strong>postman不支持下面的数据格式，所以以下将在Kibana中进行测试</strong></p><p>实例1: 执行多条数据</p><figure class="highlight json"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">POST customer/external/_bulk</span><br><span class="line"><span class="punctuation">&#123;</span><span class="attr">&quot;index&quot;</span><span class="punctuation">:</span><span class="punctuation">&#123;</span><span class="attr">&quot;_id&quot;</span><span class="punctuation">:</span><span class="string">&quot;1&quot;</span><span class="punctuation">&#125;</span><span class="punctuation">&#125;</span></span><br><span class="line"><span class="punctuation">&#123;</span><span class="attr">&quot;name&quot;</span><span class="punctuation">:</span><span class="string">&quot;John Doe&quot;</span><span class="punctuation">&#125;</span></span><br><span class="line"><span class="punctuation">&#123;</span><span class="attr">&quot;index&quot;</span><span class="punctuation">:</span><span class="punctuation">&#123;</span><span class="attr">&quot;_id&quot;</span><span class="punctuation">:</span><span class="string">&quot;2&quot;</span><span class="punctuation">&#125;</span><span class="punctuation">&#125;</span></span><br><span class="line"><span class="punctuation">&#123;</span><span class="attr">&quot;name&quot;</span><span class="punctuation">:</span><span class="string">&quot;John Doe&quot;</span><span class="punctuation">&#125;</span></span><br></pre></td></tr></table></figure><p>执行结果</p><p><img src="https://cdn.jsdelivr.net/gh/zsxfa/CDN/img/md/2022/03/30/1648612774.png" alt="desc"></p><p>实例2：对于整个索引执行批量操作</p><figure class="highlight json"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">POST /_bulk</span><br><span class="line"><span class="punctuation">&#123;</span><span class="attr">&quot;delete&quot;</span><span class="punctuation">:</span><span class="punctuation">&#123;</span><span class="attr">&quot;_index&quot;</span><span class="punctuation">:</span><span class="string">&quot;website&quot;</span><span class="punctuation">,</span><span class="attr">&quot;_type&quot;</span><span class="punctuation">:</span><span class="string">&quot;blog&quot;</span><span class="punctuation">,</span><span class="attr">&quot;_id&quot;</span><span class="punctuation">:</span><span class="string">&quot;123&quot;</span><span class="punctuation">&#125;</span><span class="punctuation">&#125;</span></span><br><span class="line"><span class="punctuation">&#123;</span><span class="attr">&quot;create&quot;</span><span class="punctuation">:</span><span class="punctuation">&#123;</span><span class="attr">&quot;_index&quot;</span><span class="punctuation">:</span><span class="string">&quot;website&quot;</span><span class="punctuation">,</span><span class="attr">&quot;_type&quot;</span><span class="punctuation">:</span><span class="string">&quot;blog&quot;</span><span class="punctuation">,</span><span class="attr">&quot;_id&quot;</span><span class="punctuation">:</span><span class="string">&quot;123&quot;</span><span class="punctuation">&#125;</span><span class="punctuation">&#125;</span></span><br><span class="line"><span class="punctuation">&#123;</span><span class="attr">&quot;title&quot;</span><span class="punctuation">:</span><span class="string">&quot;my first blog post&quot;</span><span class="punctuation">&#125;</span></span><br><span class="line"><span class="punctuation">&#123;</span><span class="attr">&quot;index&quot;</span><span class="punctuation">:</span><span class="punctuation">&#123;</span><span class="attr">&quot;_index&quot;</span><span class="punctuation">:</span><span class="string">&quot;website&quot;</span><span class="punctuation">,</span><span class="attr">&quot;_type&quot;</span><span class="punctuation">:</span><span class="string">&quot;blog&quot;</span><span class="punctuation">&#125;</span><span class="punctuation">&#125;</span></span><br><span class="line"><span class="punctuation">&#123;</span><span class="attr">&quot;title&quot;</span><span class="punctuation">:</span><span class="string">&quot;my second blog post&quot;</span><span class="punctuation">&#125;</span></span><br><span class="line"><span class="punctuation">&#123;</span><span class="attr">&quot;update&quot;</span><span class="punctuation">:</span><span class="punctuation">&#123;</span><span class="attr">&quot;_index&quot;</span><span class="punctuation">:</span><span class="string">&quot;website&quot;</span><span class="punctuation">,</span><span class="attr">&quot;_type&quot;</span><span class="punctuation">:</span><span class="string">&quot;blog&quot;</span><span class="punctuation">,</span><span class="attr">&quot;_id&quot;</span><span class="punctuation">:</span><span class="string">&quot;123&quot;</span><span class="punctuation">&#125;</span><span class="punctuation">&#125;</span></span><br><span class="line"><span class="punctuation">&#123;</span><span class="attr">&quot;doc&quot;</span><span class="punctuation">:</span><span class="punctuation">&#123;</span><span class="attr">&quot;title&quot;</span><span class="punctuation">:</span><span class="string">&quot;my updated blog post&quot;</span><span class="punctuation">&#125;</span><span class="punctuation">&#125;</span></span><br></pre></td></tr></table></figure><p>运行结果：</p><figure class="highlight json"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br></pre></td><td class="code"><pre><span class="line">#! Deprecation<span class="punctuation">:</span> <span class="punctuation">[</span>types removal<span class="punctuation">]</span> Specifying types in bulk requests is deprecated.</span><br><span class="line"><span class="punctuation">&#123;</span></span><br><span class="line">  <span class="attr">&quot;took&quot;</span> <span class="punctuation">:</span> <span class="number">344</span><span class="punctuation">,</span></span><br><span class="line">  <span class="attr">&quot;errors&quot;</span> <span class="punctuation">:</span> <span class="keyword">false</span><span class="punctuation">,</span></span><br><span class="line">  <span class="attr">&quot;items&quot;</span> <span class="punctuation">:</span> <span class="punctuation">[</span></span><br><span class="line">    <span class="punctuation">&#123;</span></span><br><span class="line">      <span class="attr">&quot;delete&quot;</span> <span class="punctuation">:</span> <span class="punctuation">&#123;</span></span><br><span class="line">        <span class="attr">&quot;_index&quot;</span> <span class="punctuation">:</span> <span class="string">&quot;website&quot;</span><span class="punctuation">,</span></span><br><span class="line">        <span class="attr">&quot;_type&quot;</span> <span class="punctuation">:</span> <span class="string">&quot;blog&quot;</span><span class="punctuation">,</span></span><br><span class="line">        <span class="attr">&quot;_id&quot;</span> <span class="punctuation">:</span> <span class="string">&quot;123&quot;</span><span class="punctuation">,</span></span><br><span class="line">        <span class="attr">&quot;_version&quot;</span> <span class="punctuation">:</span> <span class="number">1</span><span class="punctuation">,</span></span><br><span class="line">        <span class="attr">&quot;result&quot;</span> <span class="punctuation">:</span> <span class="string">&quot;not_found&quot;</span><span class="punctuation">,</span></span><br><span class="line">        <span class="attr">&quot;_shards&quot;</span> <span class="punctuation">:</span> <span class="punctuation">&#123;</span></span><br><span class="line">          <span class="attr">&quot;total&quot;</span> <span class="punctuation">:</span> <span class="number">2</span><span class="punctuation">,</span></span><br><span class="line">          <span class="attr">&quot;successful&quot;</span> <span class="punctuation">:</span> <span class="number">1</span><span class="punctuation">,</span></span><br><span class="line">          <span class="attr">&quot;failed&quot;</span> <span class="punctuation">:</span> <span class="number">0</span></span><br><span class="line">        <span class="punctuation">&#125;</span><span class="punctuation">,</span></span><br><span class="line">        <span class="attr">&quot;_seq_no&quot;</span> <span class="punctuation">:</span> <span class="number">0</span><span class="punctuation">,</span></span><br><span class="line">        <span class="attr">&quot;_primary_term&quot;</span> <span class="punctuation">:</span> <span class="number">1</span><span class="punctuation">,</span></span><br><span class="line">        <span class="attr">&quot;status&quot;</span> <span class="punctuation">:</span> <span class="number">404</span></span><br><span class="line">      <span class="punctuation">&#125;</span></span><br><span class="line">    <span class="punctuation">&#125;</span><span class="punctuation">,</span></span><br><span class="line">    <span class="punctuation">&#123;</span></span><br><span class="line">      <span class="attr">&quot;create&quot;</span> <span class="punctuation">:</span> <span class="punctuation">&#123;</span></span><br><span class="line">        <span class="attr">&quot;_index&quot;</span> <span class="punctuation">:</span> <span class="string">&quot;website&quot;</span><span class="punctuation">,</span></span><br><span class="line">        <span class="attr">&quot;_type&quot;</span> <span class="punctuation">:</span> <span class="string">&quot;blog&quot;</span><span class="punctuation">,</span></span><br><span class="line">        <span class="attr">&quot;_id&quot;</span> <span class="punctuation">:</span> <span class="string">&quot;123&quot;</span><span class="punctuation">,</span></span><br><span class="line">        <span class="attr">&quot;_version&quot;</span> <span class="punctuation">:</span> <span class="number">2</span><span class="punctuation">,</span></span><br><span class="line">        <span class="attr">&quot;result&quot;</span> <span class="punctuation">:</span> <span class="string">&quot;created&quot;</span><span class="punctuation">,</span></span><br><span class="line">        <span class="attr">&quot;_shards&quot;</span> <span class="punctuation">:</span> <span class="punctuation">&#123;</span></span><br><span class="line">          <span class="attr">&quot;total&quot;</span> <span class="punctuation">:</span> <span class="number">2</span><span class="punctuation">,</span></span><br><span class="line">          <span class="attr">&quot;successful&quot;</span> <span class="punctuation">:</span> <span class="number">1</span><span class="punctuation">,</span></span><br><span class="line">          <span class="attr">&quot;failed&quot;</span> <span class="punctuation">:</span> <span class="number">0</span></span><br><span class="line">        <span class="punctuation">&#125;</span><span class="punctuation">,</span></span><br><span class="line">        <span class="attr">&quot;_seq_no&quot;</span> <span class="punctuation">:</span> <span class="number">1</span><span class="punctuation">,</span></span><br><span class="line">        <span class="attr">&quot;_primary_term&quot;</span> <span class="punctuation">:</span> <span class="number">1</span><span class="punctuation">,</span></span><br><span class="line">        <span class="attr">&quot;status&quot;</span> <span class="punctuation">:</span> <span class="number">201</span></span><br><span class="line">      <span class="punctuation">&#125;</span></span><br><span class="line">    <span class="punctuation">&#125;</span><span class="punctuation">,</span></span><br><span class="line">    <span class="punctuation">&#123;</span></span><br><span class="line">      <span class="attr">&quot;index&quot;</span> <span class="punctuation">:</span> <span class="punctuation">&#123;</span></span><br><span class="line">        <span class="attr">&quot;_index&quot;</span> <span class="punctuation">:</span> <span class="string">&quot;website&quot;</span><span class="punctuation">,</span></span><br><span class="line">        <span class="attr">&quot;_type&quot;</span> <span class="punctuation">:</span> <span class="string">&quot;blog&quot;</span><span class="punctuation">,</span></span><br><span class="line">        <span class="attr">&quot;_id&quot;</span> <span class="punctuation">:</span> <span class="string">&quot;BMv_2H8BWhzCIFNne3Q7&quot;</span><span class="punctuation">,</span></span><br><span class="line">        <span class="attr">&quot;_version&quot;</span> <span class="punctuation">:</span> <span class="number">1</span><span class="punctuation">,</span></span><br><span class="line">        <span class="attr">&quot;result&quot;</span> <span class="punctuation">:</span> <span class="string">&quot;created&quot;</span><span class="punctuation">,</span></span><br><span class="line">        <span class="attr">&quot;_shards&quot;</span> <span class="punctuation">:</span> <span class="punctuation">&#123;</span></span><br><span class="line">          <span class="attr">&quot;total&quot;</span> <span class="punctuation">:</span> <span class="number">2</span><span class="punctuation">,</span></span><br><span class="line">          <span class="attr">&quot;successful&quot;</span> <span class="punctuation">:</span> <span class="number">1</span><span class="punctuation">,</span></span><br><span class="line">          <span class="attr">&quot;failed&quot;</span> <span class="punctuation">:</span> <span class="number">0</span></span><br><span class="line">        <span class="punctuation">&#125;</span><span class="punctuation">,</span></span><br><span class="line">        <span class="attr">&quot;_seq_no&quot;</span> <span class="punctuation">:</span> <span class="number">2</span><span class="punctuation">,</span></span><br><span class="line">        <span class="attr">&quot;_primary_term&quot;</span> <span class="punctuation">:</span> <span class="number">1</span><span class="punctuation">,</span></span><br><span class="line">        <span class="attr">&quot;status&quot;</span> <span class="punctuation">:</span> <span class="number">201</span></span><br><span class="line">      <span class="punctuation">&#125;</span></span><br><span class="line">    <span class="punctuation">&#125;</span><span class="punctuation">,</span></span><br><span class="line">    <span class="punctuation">&#123;</span></span><br><span class="line">      <span class="attr">&quot;update&quot;</span> <span class="punctuation">:</span> <span class="punctuation">&#123;</span></span><br><span class="line">        <span class="attr">&quot;_index&quot;</span> <span class="punctuation">:</span> <span class="string">&quot;website&quot;</span><span class="punctuation">,</span></span><br><span class="line">        <span class="attr">&quot;_type&quot;</span> <span class="punctuation">:</span> <span class="string">&quot;blog&quot;</span><span class="punctuation">,</span></span><br><span class="line">        <span class="attr">&quot;_id&quot;</span> <span class="punctuation">:</span> <span class="string">&quot;123&quot;</span><span class="punctuation">,</span></span><br><span class="line">        <span class="attr">&quot;_version&quot;</span> <span class="punctuation">:</span> <span class="number">3</span><span class="punctuation">,</span></span><br><span class="line">        <span class="attr">&quot;result&quot;</span> <span class="punctuation">:</span> <span class="string">&quot;updated&quot;</span><span class="punctuation">,</span></span><br><span class="line">        <span class="attr">&quot;_shards&quot;</span> <span class="punctuation">:</span> <span class="punctuation">&#123;</span></span><br><span class="line">          <span class="attr">&quot;total&quot;</span> <span class="punctuation">:</span> <span class="number">2</span><span class="punctuation">,</span></span><br><span class="line">          <span class="attr">&quot;successful&quot;</span> <span class="punctuation">:</span> <span class="number">1</span><span class="punctuation">,</span></span><br><span class="line">          <span class="attr">&quot;failed&quot;</span> <span class="punctuation">:</span> <span class="number">0</span></span><br><span class="line">        <span class="punctuation">&#125;</span><span class="punctuation">,</span></span><br><span class="line">        <span class="attr">&quot;_seq_no&quot;</span> <span class="punctuation">:</span> <span class="number">3</span><span class="punctuation">,</span></span><br><span class="line">        <span class="attr">&quot;_primary_term&quot;</span> <span class="punctuation">:</span> <span class="number">1</span><span class="punctuation">,</span></span><br><span class="line">        <span class="attr">&quot;status&quot;</span> <span class="punctuation">:</span> <span class="number">200</span></span><br><span class="line">      <span class="punctuation">&#125;</span></span><br><span class="line">    <span class="punctuation">&#125;</span></span><br><span class="line">  <span class="punctuation">]</span></span><br><span class="line"><span class="punctuation">&#125;</span></span><br></pre></td></tr></table></figure><h3 id="7）样本测试数据"><a href="#7）样本测试数据" class="headerlink" title="7）样本测试数据"></a>7）样本测试数据</h3><p>准备了一份顾客银行账户信息的虚构的JSON文档样本。每个文档都有下列的schema（模式）。</p><figure class="highlight json"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line"><span class="punctuation">&#123;</span></span><br><span class="line"><span class="attr">&quot;account_number&quot;</span><span class="punctuation">:</span> <span class="number">1</span><span class="punctuation">,</span></span><br><span class="line"><span class="attr">&quot;balance&quot;</span><span class="punctuation">:</span> <span class="number">39225</span><span class="punctuation">,</span></span><br><span class="line"><span class="attr">&quot;firstname&quot;</span><span class="punctuation">:</span> <span class="string">&quot;Amber&quot;</span><span class="punctuation">,</span></span><br><span class="line"><span class="attr">&quot;lastname&quot;</span><span class="punctuation">:</span> <span class="string">&quot;Duke&quot;</span><span class="punctuation">,</span></span><br><span class="line"><span class="attr">&quot;age&quot;</span><span class="punctuation">:</span> <span class="number">32</span><span class="punctuation">,</span></span><br><span class="line"><span class="attr">&quot;gender&quot;</span><span class="punctuation">:</span> <span class="string">&quot;M&quot;</span><span class="punctuation">,</span></span><br><span class="line"><span class="attr">&quot;address&quot;</span><span class="punctuation">:</span> <span class="string">&quot;880 Holmes Lane&quot;</span><span class="punctuation">,</span></span><br><span class="line"><span class="attr">&quot;employer&quot;</span><span class="punctuation">:</span> <span class="string">&quot;Pyrami&quot;</span><span class="punctuation">,</span></span><br><span class="line"><span class="attr">&quot;email&quot;</span><span class="punctuation">:</span> <span class="string">&quot;amberduke@pyrami.com&quot;</span><span class="punctuation">,</span></span><br><span class="line"><span class="attr">&quot;city&quot;</span><span class="punctuation">:</span> <span class="string">&quot;Brogan&quot;</span><span class="punctuation">,</span></span><br><span class="line"><span class="attr">&quot;state&quot;</span><span class="punctuation">:</span> <span class="string">&quot;IL&quot;</span></span><br><span class="line"><span class="punctuation">&#125;</span></span><br></pre></td></tr></table></figure><p> <a href="https://github.com/zsxfa/gulimall/blob/main/es%E7%9A%84%E6%B5%8B%E8%AF%95%E6%95%B0%E6%8D%AE.json">https://github.com/zsxfa/gulimall/blob/main/es%E7%9A%84%E6%B5%8B%E8%AF%95%E6%95%B0%E6%8D%AE.json</a> ，导入测试数据，</p><p>POST bank/account/_bulk</p><h2 id="3、检索"><a href="#3、检索" class="headerlink" title="3、检索"></a>3、检索</h2><h3 id="1）search-Api"><a href="#1）search-Api" class="headerlink" title="1）search Api"></a>1）search Api</h3><p>ES支持两种基本方式检索；</p><ul><li>通过REST request uri 发送搜索参数 （uri +检索参数）；</li><li>通过REST request body 来发送它们（uri+请求体）；</li></ul><p>信息检索</p><ul><li><p>一切检索从_search 开始</p><p><strong>GET bank/_search：</strong>检索 bank 下所有信息，包括 type 和 docs</p><p><strong>GET bank/_search?q=*&amp;sort=account_number:asc：</strong>请求参数方式检索</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">GET bank/_search?q=*&amp;sort=account_number:asc</span><br></pre></td></tr></table></figure><p>返回结果：</p><figure class="highlight json"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br></pre></td><td class="code"><pre><span class="line"><span class="punctuation">&#123;</span></span><br><span class="line">  <span class="attr">&quot;took&quot;</span> <span class="punctuation">:</span> <span class="number">38</span><span class="punctuation">,</span></span><br><span class="line">  <span class="attr">&quot;timed_out&quot;</span> <span class="punctuation">:</span> <span class="keyword">false</span><span class="punctuation">,</span></span><br><span class="line">  <span class="attr">&quot;_shards&quot;</span> <span class="punctuation">:</span> <span class="punctuation">&#123;</span></span><br><span class="line">    <span class="attr">&quot;total&quot;</span> <span class="punctuation">:</span> <span class="number">1</span><span class="punctuation">,</span></span><br><span class="line">    <span class="attr">&quot;successful&quot;</span> <span class="punctuation">:</span> <span class="number">1</span><span class="punctuation">,</span></span><br><span class="line">    <span class="attr">&quot;skipped&quot;</span> <span class="punctuation">:</span> <span class="number">0</span><span class="punctuation">,</span></span><br><span class="line">    <span class="attr">&quot;failed&quot;</span> <span class="punctuation">:</span> <span class="number">0</span></span><br><span class="line">  <span class="punctuation">&#125;</span><span class="punctuation">,</span></span><br><span class="line">  <span class="attr">&quot;hits&quot;</span> <span class="punctuation">:</span> <span class="punctuation">&#123;</span></span><br><span class="line">    <span class="attr">&quot;total&quot;</span> <span class="punctuation">:</span> <span class="punctuation">&#123;</span></span><br><span class="line">      <span class="attr">&quot;value&quot;</span> <span class="punctuation">:</span> <span class="number">1000</span><span class="punctuation">,</span></span><br><span class="line">      <span class="attr">&quot;relation&quot;</span> <span class="punctuation">:</span> <span class="string">&quot;eq&quot;</span></span><br><span class="line">    <span class="punctuation">&#125;</span><span class="punctuation">,</span></span><br><span class="line">    <span class="attr">&quot;max_score&quot;</span> <span class="punctuation">:</span> <span class="keyword">null</span><span class="punctuation">,</span></span><br><span class="line">    <span class="attr">&quot;hits&quot;</span> <span class="punctuation">:</span> <span class="punctuation">[</span></span><br><span class="line">      <span class="punctuation">&#123;</span></span><br><span class="line">        <span class="attr">&quot;_index&quot;</span> <span class="punctuation">:</span> <span class="string">&quot;bank&quot;</span><span class="punctuation">,</span></span><br><span class="line">        <span class="attr">&quot;_type&quot;</span> <span class="punctuation">:</span> <span class="string">&quot;account&quot;</span><span class="punctuation">,</span></span><br><span class="line">        <span class="attr">&quot;_id&quot;</span> <span class="punctuation">:</span> <span class="string">&quot;0&quot;</span><span class="punctuation">,</span></span><br><span class="line">        <span class="attr">&quot;_score&quot;</span> <span class="punctuation">:</span> <span class="keyword">null</span><span class="punctuation">,</span></span><br><span class="line">        <span class="attr">&quot;_source&quot;</span> <span class="punctuation">:</span> <span class="punctuation">&#123;</span></span><br><span class="line">          <span class="attr">&quot;account_number&quot;</span> <span class="punctuation">:</span> <span class="number">0</span><span class="punctuation">,</span></span><br><span class="line">          <span class="attr">&quot;balance&quot;</span> <span class="punctuation">:</span> <span class="number">16623</span><span class="punctuation">,</span></span><br><span class="line">          <span class="attr">&quot;firstname&quot;</span> <span class="punctuation">:</span> <span class="string">&quot;Bradshaw&quot;</span><span class="punctuation">,</span></span><br><span class="line">          <span class="attr">&quot;lastname&quot;</span> <span class="punctuation">:</span> <span class="string">&quot;Mckenzie&quot;</span><span class="punctuation">,</span></span><br><span class="line">          <span class="attr">&quot;age&quot;</span> <span class="punctuation">:</span> <span class="number">29</span><span class="punctuation">,</span></span><br><span class="line">          <span class="attr">&quot;gender&quot;</span> <span class="punctuation">:</span> <span class="string">&quot;F&quot;</span><span class="punctuation">,</span></span><br><span class="line">          <span class="attr">&quot;address&quot;</span> <span class="punctuation">:</span> <span class="string">&quot;244 Columbus Place&quot;</span><span class="punctuation">,</span></span><br><span class="line">          <span class="attr">&quot;employer&quot;</span> <span class="punctuation">:</span> <span class="string">&quot;Euron&quot;</span><span class="punctuation">,</span></span><br><span class="line">          <span class="attr">&quot;email&quot;</span> <span class="punctuation">:</span> <span class="string">&quot;bradshawmckenzie@euron.com&quot;</span><span class="punctuation">,</span></span><br><span class="line">          <span class="attr">&quot;city&quot;</span> <span class="punctuation">:</span> <span class="string">&quot;Hobucken&quot;</span><span class="punctuation">,</span></span><br><span class="line">          <span class="attr">&quot;state&quot;</span> <span class="punctuation">:</span> <span class="string">&quot;CO&quot;</span></span><br><span class="line">        <span class="punctuation">&#125;</span><span class="punctuation">,</span></span><br><span class="line">        <span class="attr">&quot;sort&quot;</span> <span class="punctuation">:</span> <span class="punctuation">[</span></span><br><span class="line">          <span class="number">0</span></span><br><span class="line">        <span class="punctuation">]</span></span><br><span class="line">      <span class="punctuation">&#125;</span><span class="punctuation">,</span></span><br><span class="line">      。。。。。。</span><br><span class="line">    <span class="punctuation">]</span></span><br><span class="line">  <span class="punctuation">&#125;</span></span><br><span class="line"><span class="punctuation">&#125;</span></span><br></pre></td></tr></table></figure><p><strong>响应结果解释：</strong></p><table><thead><tr><th>took</th><th>Elasticsearch 执行搜索的时间（毫秒）</th></tr></thead><tbody><tr><td>time_out</td><td>告诉我们搜索是否超时</td></tr><tr><td>_shards</td><td>告诉我们多少个分片被搜索了，以及统计了成功/失败的搜索分片hits - 搜索结果</td></tr><tr><td>hits.total</td><td>搜索结果</td></tr><tr><td>hits.hits</td><td>实际的搜索结果数组（默认为前 10 的文档）</td></tr><tr><td>sort</td><td>结果的排序 key（键）（没有则按 score 排序）</td></tr><tr><td>score 和 max_score</td><td>相关性得分和最高得分（全文检索用）</td></tr></tbody></table></li><li><p>uri+请求体进行检索</p></li></ul><figure class="highlight json"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">GET /bank/_search</span><br><span class="line"><span class="punctuation">&#123;</span></span><br><span class="line">  <span class="attr">&quot;query&quot;</span><span class="punctuation">:</span> <span class="punctuation">&#123;</span> <span class="attr">&quot;match_all&quot;</span><span class="punctuation">:</span> <span class="punctuation">&#123;</span><span class="punctuation">&#125;</span> <span class="punctuation">&#125;</span><span class="punctuation">,</span></span><br><span class="line">  <span class="attr">&quot;sort&quot;</span><span class="punctuation">:</span> <span class="punctuation">[</span></span><br><span class="line">    <span class="punctuation">&#123;</span> <span class="attr">&quot;account_number&quot;</span><span class="punctuation">:</span> <span class="string">&quot;asc&quot;</span> <span class="punctuation">&#125;</span><span class="punctuation">,</span></span><br><span class="line">    <span class="punctuation">&#123;</span><span class="attr">&quot;balance&quot;</span><span class="punctuation">:</span><span class="string">&quot;desc&quot;</span><span class="punctuation">&#125;</span></span><br><span class="line">  <span class="punctuation">]</span></span><br><span class="line"><span class="punctuation">&#125;</span></span><br></pre></td></tr></table></figure><p>HTTP客户端工具（POSTMAN），get请求不能够携带请求体，我们变为 post 也是一样的我们POST 一个JSON 风格的查询请求体到_search API。<br>需要了解，一旦搜索的结果被返回，Elasticsearch 就完成了这次请求，并且不会维护任何服务端的资源或者结果的cursor（游标）</p><p>（1）只有6条数据，这是因为存在分页查询；</p><p>使用<code>from</code>和<code>size</code>可以指定查询</p><figure class="highlight http"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line">GET /bank/_search</span><br><span class="line">&#123;</span><br><span class="line">  &quot;query&quot;: &#123; &quot;match_all&quot;: &#123;&#125; &#125;,</span><br><span class="line">  &quot;sort&quot;: [</span><br><span class="line">    &#123; &quot;account_number&quot;: &quot;asc&quot; &#125;,</span><br><span class="line">    &#123;&quot;balance&quot;:&quot;desc&quot;&#125;</span><br><span class="line">  ],</span><br><span class="line">  &quot;from&quot;: 20,</span><br><span class="line">  &quot;size&quot;: 10</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>（2）详细的字段信息，参照： <a href="https://www.elastic.co/guide/en/elasticsearch/reference/current/getting-started-search.html">https://www.elastic.co/guide/en/elasticsearch/reference/current/getting-started-search.html</a> </p><blockquote><p>The response also provides the following information about the search request:</p><ul><li><code>took</code> – how long it took Elasticsearch to run the query, in milliseconds</li><li><code>timed_out</code> – whether or not the search request timed out</li><li><code>_shards</code> – how many shards were searched and a breakdown of how many shards succeeded, failed, or were skipped.</li><li><code>max_score</code> – the score of the most relevant document found</li><li><code>hits.total.value</code> - how many matching documents were found</li><li><code>hits.sort</code> - the document’s sort position (when not sorting by relevance score)</li><li><code>hits._score</code> - the document’s relevance score (not applicable when using <code>match_all</code>)</li></ul></blockquote><h3 id="2）Query-DSL"><a href="#2）Query-DSL" class="headerlink" title="2）Query DSL"></a>2）Query DSL</h3><h4 id="（1）基本语法格式"><a href="#（1）基本语法格式" class="headerlink" title="（1）基本语法格式"></a>（1）基本语法格式</h4><p>Elasticsearch提供了一个可以执行查询的Json风格的DSL。这个被称为Query DSL，该查询语言非常全面。</p><p>一个查询语句的典型结构</p><figure class="highlight json"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">QUERY_NAME<span class="punctuation">:</span><span class="punctuation">&#123;</span></span><br><span class="line">   ARGUMENT<span class="punctuation">:</span>VALUE<span class="punctuation">,</span></span><br><span class="line">   ARGUMENT<span class="punctuation">:</span>VALUE<span class="punctuation">,</span>...</span><br><span class="line"><span class="punctuation">&#125;</span></span><br></pre></td></tr></table></figure><p>如果针对于某个字段，那么它的结构如下：</p><figure class="highlight json"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="punctuation">&#123;</span></span><br><span class="line">  QUERY_NAME<span class="punctuation">:</span><span class="punctuation">&#123;</span></span><br><span class="line">     FIELD_NAME<span class="punctuation">:</span><span class="punctuation">&#123;</span></span><br><span class="line">       ARGUMENT<span class="punctuation">:</span>VALUE<span class="punctuation">,</span></span><br><span class="line">       ARGUMENT<span class="punctuation">:</span>VALUE<span class="punctuation">,</span>...</span><br><span class="line">      <span class="punctuation">&#125;</span>   </span><br><span class="line">   <span class="punctuation">&#125;</span></span><br><span class="line"><span class="punctuation">&#125;</span></span><br></pre></td></tr></table></figure><figure class="highlight json"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line">GET bank/_search</span><br><span class="line"><span class="punctuation">&#123;</span></span><br><span class="line">  <span class="attr">&quot;query&quot;</span><span class="punctuation">:</span> <span class="punctuation">&#123;</span></span><br><span class="line">    <span class="attr">&quot;match_all&quot;</span><span class="punctuation">:</span> <span class="punctuation">&#123;</span><span class="punctuation">&#125;</span></span><br><span class="line">  <span class="punctuation">&#125;</span><span class="punctuation">,</span></span><br><span class="line">  <span class="attr">&quot;from&quot;</span><span class="punctuation">:</span> <span class="number">0</span><span class="punctuation">,</span></span><br><span class="line">  <span class="attr">&quot;size&quot;</span><span class="punctuation">:</span> <span class="number">5</span><span class="punctuation">,</span></span><br><span class="line">  <span class="attr">&quot;sort&quot;</span><span class="punctuation">:</span> <span class="punctuation">[</span></span><br><span class="line">    <span class="punctuation">&#123;</span></span><br><span class="line">      <span class="attr">&quot;account_number&quot;</span><span class="punctuation">:</span> <span class="punctuation">&#123;</span></span><br><span class="line">        <span class="attr">&quot;order&quot;</span><span class="punctuation">:</span> <span class="string">&quot;desc&quot;</span></span><br><span class="line">      <span class="punctuation">&#125;</span></span><br><span class="line">    <span class="punctuation">&#125;</span></span><br><span class="line">  <span class="punctuation">]</span></span><br><span class="line"><span class="punctuation">&#125;</span></span><br></pre></td></tr></table></figure><p>query定义如何查询；</p><ul><li>match_all查询类型【代表查询所有的所有】，es中可以在query中组合非常多的查询类型完成复杂查询；</li><li>除了query参数之外，我们可也传递其他的参数以改变查询结果，如sort，size；</li><li>from+size限定，完成分页功能；</li><li>sort排序，多字段排序，会在前序字段相等时后续字段内部排序，否则以前序为准；</li></ul><h4 id="（2）返回部分字段"><a href="#（2）返回部分字段" class="headerlink" title="（2）返回部分字段"></a>（2）返回部分字段</h4><figure class="highlight json"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><span class="line">GET bank/_search</span><br><span class="line"><span class="punctuation">&#123;</span></span><br><span class="line">  <span class="attr">&quot;query&quot;</span><span class="punctuation">:</span> <span class="punctuation">&#123;</span></span><br><span class="line">    <span class="attr">&quot;match_all&quot;</span><span class="punctuation">:</span> <span class="punctuation">&#123;</span><span class="punctuation">&#125;</span></span><br><span class="line">  <span class="punctuation">&#125;</span><span class="punctuation">,</span></span><br><span class="line">  <span class="attr">&quot;from&quot;</span><span class="punctuation">:</span> <span class="number">0</span><span class="punctuation">,</span></span><br><span class="line">  <span class="attr">&quot;size&quot;</span><span class="punctuation">:</span> <span class="number">5</span><span class="punctuation">,</span></span><br><span class="line">  <span class="attr">&quot;sort&quot;</span><span class="punctuation">:</span> <span class="punctuation">[</span></span><br><span class="line">    <span class="punctuation">&#123;</span></span><br><span class="line">      <span class="attr">&quot;account_number&quot;</span><span class="punctuation">:</span> <span class="punctuation">&#123;</span></span><br><span class="line">        <span class="attr">&quot;order&quot;</span><span class="punctuation">:</span> <span class="string">&quot;desc&quot;</span></span><br><span class="line">      <span class="punctuation">&#125;</span></span><br><span class="line">    <span class="punctuation">&#125;</span></span><br><span class="line">  <span class="punctuation">]</span><span class="punctuation">,</span></span><br><span class="line">  <span class="attr">&quot;_source&quot;</span><span class="punctuation">:</span> <span class="punctuation">[</span><span class="string">&quot;balance&quot;</span><span class="punctuation">,</span><span class="string">&quot;firstname&quot;</span><span class="punctuation">]</span></span><br><span class="line"><span class="punctuation">&#125;</span></span><br></pre></td></tr></table></figure><p>查询结果：</p><figure class="highlight json"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br></pre></td><td class="code"><pre><span class="line"><span class="punctuation">&#123;</span></span><br><span class="line">  <span class="attr">&quot;took&quot;</span> <span class="punctuation">:</span> <span class="number">6</span><span class="punctuation">,</span></span><br><span class="line">  <span class="attr">&quot;timed_out&quot;</span> <span class="punctuation">:</span> <span class="keyword">false</span><span class="punctuation">,</span></span><br><span class="line">  <span class="attr">&quot;_shards&quot;</span> <span class="punctuation">:</span> <span class="punctuation">&#123;</span></span><br><span class="line">    <span class="attr">&quot;total&quot;</span> <span class="punctuation">:</span> <span class="number">1</span><span class="punctuation">,</span></span><br><span class="line">    <span class="attr">&quot;successful&quot;</span> <span class="punctuation">:</span> <span class="number">1</span><span class="punctuation">,</span></span><br><span class="line">    <span class="attr">&quot;skipped&quot;</span> <span class="punctuation">:</span> <span class="number">0</span><span class="punctuation">,</span></span><br><span class="line">    <span class="attr">&quot;failed&quot;</span> <span class="punctuation">:</span> <span class="number">0</span></span><br><span class="line">  <span class="punctuation">&#125;</span><span class="punctuation">,</span></span><br><span class="line">  <span class="attr">&quot;hits&quot;</span> <span class="punctuation">:</span> <span class="punctuation">&#123;</span></span><br><span class="line">    <span class="attr">&quot;total&quot;</span> <span class="punctuation">:</span> <span class="punctuation">&#123;</span></span><br><span class="line">      <span class="attr">&quot;value&quot;</span> <span class="punctuation">:</span> <span class="number">1000</span><span class="punctuation">,</span></span><br><span class="line">      <span class="attr">&quot;relation&quot;</span> <span class="punctuation">:</span> <span class="string">&quot;eq&quot;</span></span><br><span class="line">    <span class="punctuation">&#125;</span><span class="punctuation">,</span></span><br><span class="line">    <span class="attr">&quot;max_score&quot;</span> <span class="punctuation">:</span> <span class="keyword">null</span><span class="punctuation">,</span></span><br><span class="line">    <span class="attr">&quot;hits&quot;</span> <span class="punctuation">:</span> <span class="punctuation">[</span></span><br><span class="line">      <span class="punctuation">&#123;</span></span><br><span class="line">        <span class="attr">&quot;_index&quot;</span> <span class="punctuation">:</span> <span class="string">&quot;bank&quot;</span><span class="punctuation">,</span></span><br><span class="line">        <span class="attr">&quot;_type&quot;</span> <span class="punctuation">:</span> <span class="string">&quot;account&quot;</span><span class="punctuation">,</span></span><br><span class="line">        <span class="attr">&quot;_id&quot;</span> <span class="punctuation">:</span> <span class="string">&quot;999&quot;</span><span class="punctuation">,</span></span><br><span class="line">        <span class="attr">&quot;_score&quot;</span> <span class="punctuation">:</span> <span class="keyword">null</span><span class="punctuation">,</span></span><br><span class="line">        <span class="attr">&quot;_source&quot;</span> <span class="punctuation">:</span> <span class="punctuation">&#123;</span></span><br><span class="line">          <span class="attr">&quot;firstname&quot;</span> <span class="punctuation">:</span> <span class="string">&quot;Dorothy&quot;</span><span class="punctuation">,</span></span><br><span class="line">          <span class="attr">&quot;balance&quot;</span> <span class="punctuation">:</span> <span class="number">6087</span></span><br><span class="line">        <span class="punctuation">&#125;</span><span class="punctuation">,</span></span><br><span class="line">        <span class="attr">&quot;sort&quot;</span> <span class="punctuation">:</span> <span class="punctuation">[</span></span><br><span class="line">          <span class="number">999</span></span><br><span class="line">        <span class="punctuation">]</span></span><br><span class="line">      <span class="punctuation">&#125;</span><span class="punctuation">,</span></span><br><span class="line">      <span class="punctuation">&#123;</span></span><br><span class="line">        <span class="attr">&quot;_index&quot;</span> <span class="punctuation">:</span> <span class="string">&quot;bank&quot;</span><span class="punctuation">,</span></span><br><span class="line">        <span class="attr">&quot;_type&quot;</span> <span class="punctuation">:</span> <span class="string">&quot;account&quot;</span><span class="punctuation">,</span></span><br><span class="line">        <span class="attr">&quot;_id&quot;</span> <span class="punctuation">:</span> <span class="string">&quot;998&quot;</span><span class="punctuation">,</span></span><br><span class="line">        <span class="attr">&quot;_score&quot;</span> <span class="punctuation">:</span> <span class="keyword">null</span><span class="punctuation">,</span></span><br><span class="line">        <span class="attr">&quot;_source&quot;</span> <span class="punctuation">:</span> <span class="punctuation">&#123;</span></span><br><span class="line">          <span class="attr">&quot;firstname&quot;</span> <span class="punctuation">:</span> <span class="string">&quot;Letha&quot;</span><span class="punctuation">,</span></span><br><span class="line">          <span class="attr">&quot;balance&quot;</span> <span class="punctuation">:</span> <span class="number">16869</span></span><br><span class="line">        <span class="punctuation">&#125;</span><span class="punctuation">,</span></span><br><span class="line">        <span class="attr">&quot;sort&quot;</span> <span class="punctuation">:</span> <span class="punctuation">[</span></span><br><span class="line">          <span class="number">998</span></span><br><span class="line">        <span class="punctuation">]</span></span><br><span class="line">      <span class="punctuation">&#125;</span><span class="punctuation">,</span></span><br><span class="line">      <span class="punctuation">&#123;</span></span><br><span class="line">        <span class="attr">&quot;_index&quot;</span> <span class="punctuation">:</span> <span class="string">&quot;bank&quot;</span><span class="punctuation">,</span></span><br><span class="line">        <span class="attr">&quot;_type&quot;</span> <span class="punctuation">:</span> <span class="string">&quot;account&quot;</span><span class="punctuation">,</span></span><br><span class="line">        <span class="attr">&quot;_id&quot;</span> <span class="punctuation">:</span> <span class="string">&quot;997&quot;</span><span class="punctuation">,</span></span><br><span class="line">        <span class="attr">&quot;_score&quot;</span> <span class="punctuation">:</span> <span class="keyword">null</span><span class="punctuation">,</span></span><br><span class="line">        <span class="attr">&quot;_source&quot;</span> <span class="punctuation">:</span> <span class="punctuation">&#123;</span></span><br><span class="line">          <span class="attr">&quot;firstname&quot;</span> <span class="punctuation">:</span> <span class="string">&quot;Combs&quot;</span><span class="punctuation">,</span></span><br><span class="line">          <span class="attr">&quot;balance&quot;</span> <span class="punctuation">:</span> <span class="number">25311</span></span><br><span class="line">        <span class="punctuation">&#125;</span><span class="punctuation">,</span></span><br><span class="line">        <span class="attr">&quot;sort&quot;</span> <span class="punctuation">:</span> <span class="punctuation">[</span></span><br><span class="line">          <span class="number">997</span></span><br><span class="line">        <span class="punctuation">]</span></span><br><span class="line">      <span class="punctuation">&#125;</span><span class="punctuation">,</span></span><br><span class="line">      <span class="punctuation">&#123;</span></span><br><span class="line">        <span class="attr">&quot;_index&quot;</span> <span class="punctuation">:</span> <span class="string">&quot;bank&quot;</span><span class="punctuation">,</span></span><br><span class="line">        <span class="attr">&quot;_type&quot;</span> <span class="punctuation">:</span> <span class="string">&quot;account&quot;</span><span class="punctuation">,</span></span><br><span class="line">        <span class="attr">&quot;_id&quot;</span> <span class="punctuation">:</span> <span class="string">&quot;996&quot;</span><span class="punctuation">,</span></span><br><span class="line">        <span class="attr">&quot;_score&quot;</span> <span class="punctuation">:</span> <span class="keyword">null</span><span class="punctuation">,</span></span><br><span class="line">        <span class="attr">&quot;_source&quot;</span> <span class="punctuation">:</span> <span class="punctuation">&#123;</span></span><br><span class="line">          <span class="attr">&quot;firstname&quot;</span> <span class="punctuation">:</span> <span class="string">&quot;Andrews&quot;</span><span class="punctuation">,</span></span><br><span class="line">          <span class="attr">&quot;balance&quot;</span> <span class="punctuation">:</span> <span class="number">17541</span></span><br><span class="line">        <span class="punctuation">&#125;</span><span class="punctuation">,</span></span><br><span class="line">        <span class="attr">&quot;sort&quot;</span> <span class="punctuation">:</span> <span class="punctuation">[</span></span><br><span class="line">          <span class="number">996</span></span><br><span class="line">        <span class="punctuation">]</span></span><br><span class="line">      <span class="punctuation">&#125;</span><span class="punctuation">,</span></span><br><span class="line">      <span class="punctuation">&#123;</span></span><br><span class="line">        <span class="attr">&quot;_index&quot;</span> <span class="punctuation">:</span> <span class="string">&quot;bank&quot;</span><span class="punctuation">,</span></span><br><span class="line">        <span class="attr">&quot;_type&quot;</span> <span class="punctuation">:</span> <span class="string">&quot;account&quot;</span><span class="punctuation">,</span></span><br><span class="line">        <span class="attr">&quot;_id&quot;</span> <span class="punctuation">:</span> <span class="string">&quot;995&quot;</span><span class="punctuation">,</span></span><br><span class="line">        <span class="attr">&quot;_score&quot;</span> <span class="punctuation">:</span> <span class="keyword">null</span><span class="punctuation">,</span></span><br><span class="line">        <span class="attr">&quot;_source&quot;</span> <span class="punctuation">:</span> <span class="punctuation">&#123;</span></span><br><span class="line">          <span class="attr">&quot;firstname&quot;</span> <span class="punctuation">:</span> <span class="string">&quot;Phelps&quot;</span><span class="punctuation">,</span></span><br><span class="line">          <span class="attr">&quot;balance&quot;</span> <span class="punctuation">:</span> <span class="number">21153</span></span><br><span class="line">        <span class="punctuation">&#125;</span><span class="punctuation">,</span></span><br><span class="line">        <span class="attr">&quot;sort&quot;</span> <span class="punctuation">:</span> <span class="punctuation">[</span></span><br><span class="line">          <span class="number">995</span></span><br><span class="line">        <span class="punctuation">]</span></span><br><span class="line">      <span class="punctuation">&#125;</span></span><br><span class="line">    <span class="punctuation">]</span></span><br><span class="line">  <span class="punctuation">&#125;</span></span><br><span class="line"><span class="punctuation">&#125;</span></span><br></pre></td></tr></table></figure><h4 id="（3）match匹配查询"><a href="#（3）match匹配查询" class="headerlink" title="（3）match匹配查询"></a>（3）match匹配查询</h4><ul><li>基本类型（非字符串），精确控制</li></ul><figure class="highlight json"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">GET bank/_search</span><br><span class="line"><span class="punctuation">&#123;</span></span><br><span class="line">  <span class="attr">&quot;query&quot;</span><span class="punctuation">:</span> <span class="punctuation">&#123;</span></span><br><span class="line">    <span class="attr">&quot;match&quot;</span><span class="punctuation">:</span> <span class="punctuation">&#123;</span></span><br><span class="line">      <span class="attr">&quot;account_number&quot;</span><span class="punctuation">:</span> <span class="string">&quot;20&quot;</span></span><br><span class="line">    <span class="punctuation">&#125;</span></span><br><span class="line">  <span class="punctuation">&#125;</span></span><br><span class="line"><span class="punctuation">&#125;</span></span><br></pre></td></tr></table></figure><p>match返回account_number=20的数据。上面匹配的20也可以不带引号</p><p>查询结果：</p><figure class="highlight json"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br></pre></td><td class="code"><pre><span class="line"><span class="punctuation">&#123;</span></span><br><span class="line">  <span class="attr">&quot;took&quot;</span> <span class="punctuation">:</span> <span class="number">6</span><span class="punctuation">,</span></span><br><span class="line">  <span class="attr">&quot;timed_out&quot;</span> <span class="punctuation">:</span> <span class="keyword">false</span><span class="punctuation">,</span></span><br><span class="line">  <span class="attr">&quot;_shards&quot;</span> <span class="punctuation">:</span> <span class="punctuation">&#123;</span></span><br><span class="line">    <span class="attr">&quot;total&quot;</span> <span class="punctuation">:</span> <span class="number">1</span><span class="punctuation">,</span></span><br><span class="line">    <span class="attr">&quot;successful&quot;</span> <span class="punctuation">:</span> <span class="number">1</span><span class="punctuation">,</span></span><br><span class="line">    <span class="attr">&quot;skipped&quot;</span> <span class="punctuation">:</span> <span class="number">0</span><span class="punctuation">,</span></span><br><span class="line">    <span class="attr">&quot;failed&quot;</span> <span class="punctuation">:</span> <span class="number">0</span></span><br><span class="line">  <span class="punctuation">&#125;</span><span class="punctuation">,</span></span><br><span class="line">  <span class="attr">&quot;hits&quot;</span> <span class="punctuation">:</span> <span class="punctuation">&#123;</span></span><br><span class="line">    <span class="attr">&quot;total&quot;</span> <span class="punctuation">:</span> <span class="punctuation">&#123;</span></span><br><span class="line">      <span class="attr">&quot;value&quot;</span> <span class="punctuation">:</span> <span class="number">1</span><span class="punctuation">,</span></span><br><span class="line">      <span class="attr">&quot;relation&quot;</span> <span class="punctuation">:</span> <span class="string">&quot;eq&quot;</span></span><br><span class="line">    <span class="punctuation">&#125;</span><span class="punctuation">,</span></span><br><span class="line">    <span class="attr">&quot;max_score&quot;</span> <span class="punctuation">:</span> <span class="number">1.0</span><span class="punctuation">,</span></span><br><span class="line">    <span class="attr">&quot;hits&quot;</span> <span class="punctuation">:</span> <span class="punctuation">[</span></span><br><span class="line">      <span class="punctuation">&#123;</span></span><br><span class="line">        <span class="attr">&quot;_index&quot;</span> <span class="punctuation">:</span> <span class="string">&quot;bank&quot;</span><span class="punctuation">,</span></span><br><span class="line">        <span class="attr">&quot;_type&quot;</span> <span class="punctuation">:</span> <span class="string">&quot;account&quot;</span><span class="punctuation">,</span></span><br><span class="line">        <span class="attr">&quot;_id&quot;</span> <span class="punctuation">:</span> <span class="string">&quot;20&quot;</span><span class="punctuation">,</span></span><br><span class="line">        <span class="attr">&quot;_score&quot;</span> <span class="punctuation">:</span> <span class="number">1.0</span><span class="punctuation">,</span></span><br><span class="line">        <span class="attr">&quot;_source&quot;</span> <span class="punctuation">:</span> <span class="punctuation">&#123;</span></span><br><span class="line">          <span class="attr">&quot;account_number&quot;</span> <span class="punctuation">:</span> <span class="number">20</span><span class="punctuation">,</span></span><br><span class="line">          <span class="attr">&quot;balance&quot;</span> <span class="punctuation">:</span> <span class="number">16418</span><span class="punctuation">,</span></span><br><span class="line">          <span class="attr">&quot;firstname&quot;</span> <span class="punctuation">:</span> <span class="string">&quot;Elinor&quot;</span><span class="punctuation">,</span></span><br><span class="line">          <span class="attr">&quot;lastname&quot;</span> <span class="punctuation">:</span> <span class="string">&quot;Ratliff&quot;</span><span class="punctuation">,</span></span><br><span class="line">          <span class="attr">&quot;age&quot;</span> <span class="punctuation">:</span> <span class="number">36</span><span class="punctuation">,</span></span><br><span class="line">          <span class="attr">&quot;gender&quot;</span> <span class="punctuation">:</span> <span class="string">&quot;M&quot;</span><span class="punctuation">,</span></span><br><span class="line">          <span class="attr">&quot;address&quot;</span> <span class="punctuation">:</span> <span class="string">&quot;282 Kings Place&quot;</span><span class="punctuation">,</span></span><br><span class="line">          <span class="attr">&quot;employer&quot;</span> <span class="punctuation">:</span> <span class="string">&quot;Scentric&quot;</span><span class="punctuation">,</span></span><br><span class="line">          <span class="attr">&quot;email&quot;</span> <span class="punctuation">:</span> <span class="string">&quot;elinorratliff@scentric.com&quot;</span><span class="punctuation">,</span></span><br><span class="line">          <span class="attr">&quot;city&quot;</span> <span class="punctuation">:</span> <span class="string">&quot;Ribera&quot;</span><span class="punctuation">,</span></span><br><span class="line">          <span class="attr">&quot;state&quot;</span> <span class="punctuation">:</span> <span class="string">&quot;WA&quot;</span></span><br><span class="line">        <span class="punctuation">&#125;</span></span><br><span class="line">      <span class="punctuation">&#125;</span></span><br><span class="line">    <span class="punctuation">]</span></span><br><span class="line">  <span class="punctuation">&#125;</span></span><br><span class="line"><span class="punctuation">&#125;</span></span><br></pre></td></tr></table></figure><ul><li>字符串，全文检索</li></ul><figure class="highlight json"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">GET bank/_search</span><br><span class="line"><span class="punctuation">&#123;</span></span><br><span class="line">  <span class="attr">&quot;query&quot;</span><span class="punctuation">:</span> <span class="punctuation">&#123;</span></span><br><span class="line">    <span class="attr">&quot;match&quot;</span><span class="punctuation">:</span> <span class="punctuation">&#123;</span></span><br><span class="line">      <span class="attr">&quot;address&quot;</span><span class="punctuation">:</span> <span class="string">&quot;kings&quot;</span></span><br><span class="line">    <span class="punctuation">&#125;</span></span><br><span class="line">  <span class="punctuation">&#125;</span></span><br><span class="line"><span class="punctuation">&#125;</span></span><br></pre></td></tr></table></figure><p><strong>全文检索，最终会按照评分进行排序，会对检索条件进行分词匹配。</strong></p><p>查询结果：</p><figure class="highlight json"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br></pre></td><td class="code"><pre><span class="line"><span class="punctuation">&#123;</span></span><br><span class="line">  <span class="attr">&quot;took&quot;</span> <span class="punctuation">:</span> <span class="number">3</span><span class="punctuation">,</span></span><br><span class="line">  <span class="attr">&quot;timed_out&quot;</span> <span class="punctuation">:</span> <span class="keyword">false</span><span class="punctuation">,</span></span><br><span class="line">  <span class="attr">&quot;_shards&quot;</span> <span class="punctuation">:</span> <span class="punctuation">&#123;</span></span><br><span class="line">    <span class="attr">&quot;total&quot;</span> <span class="punctuation">:</span> <span class="number">1</span><span class="punctuation">,</span></span><br><span class="line">    <span class="attr">&quot;successful&quot;</span> <span class="punctuation">:</span> <span class="number">1</span><span class="punctuation">,</span></span><br><span class="line">    <span class="attr">&quot;skipped&quot;</span> <span class="punctuation">:</span> <span class="number">0</span><span class="punctuation">,</span></span><br><span class="line">    <span class="attr">&quot;failed&quot;</span> <span class="punctuation">:</span> <span class="number">0</span></span><br><span class="line">  <span class="punctuation">&#125;</span><span class="punctuation">,</span></span><br><span class="line">  <span class="attr">&quot;hits&quot;</span> <span class="punctuation">:</span> <span class="punctuation">&#123;</span></span><br><span class="line">    <span class="attr">&quot;total&quot;</span> <span class="punctuation">:</span> <span class="punctuation">&#123;</span></span><br><span class="line">      <span class="attr">&quot;value&quot;</span> <span class="punctuation">:</span> <span class="number">2</span><span class="punctuation">,</span></span><br><span class="line">      <span class="attr">&quot;relation&quot;</span> <span class="punctuation">:</span> <span class="string">&quot;eq&quot;</span></span><br><span class="line">    <span class="punctuation">&#125;</span><span class="punctuation">,</span></span><br><span class="line">    <span class="attr">&quot;max_score&quot;</span> <span class="punctuation">:</span> <span class="number">5.990829</span><span class="punctuation">,</span></span><br><span class="line">    <span class="attr">&quot;hits&quot;</span> <span class="punctuation">:</span> <span class="punctuation">[</span></span><br><span class="line">      <span class="punctuation">&#123;</span></span><br><span class="line">        <span class="attr">&quot;_index&quot;</span> <span class="punctuation">:</span> <span class="string">&quot;bank&quot;</span><span class="punctuation">,</span></span><br><span class="line">        <span class="attr">&quot;_type&quot;</span> <span class="punctuation">:</span> <span class="string">&quot;account&quot;</span><span class="punctuation">,</span></span><br><span class="line">        <span class="attr">&quot;_id&quot;</span> <span class="punctuation">:</span> <span class="string">&quot;20&quot;</span><span class="punctuation">,</span></span><br><span class="line">        <span class="attr">&quot;_score&quot;</span> <span class="punctuation">:</span> <span class="number">5.990829</span><span class="punctuation">,</span></span><br><span class="line">        <span class="attr">&quot;_source&quot;</span> <span class="punctuation">:</span> <span class="punctuation">&#123;</span></span><br><span class="line">          <span class="attr">&quot;account_number&quot;</span> <span class="punctuation">:</span> <span class="number">20</span><span class="punctuation">,</span></span><br><span class="line">          <span class="attr">&quot;balance&quot;</span> <span class="punctuation">:</span> <span class="number">16418</span><span class="punctuation">,</span></span><br><span class="line">          <span class="attr">&quot;firstname&quot;</span> <span class="punctuation">:</span> <span class="string">&quot;Elinor&quot;</span><span class="punctuation">,</span></span><br><span class="line">          <span class="attr">&quot;lastname&quot;</span> <span class="punctuation">:</span> <span class="string">&quot;Ratliff&quot;</span><span class="punctuation">,</span></span><br><span class="line">          <span class="attr">&quot;age&quot;</span> <span class="punctuation">:</span> <span class="number">36</span><span class="punctuation">,</span></span><br><span class="line">          <span class="attr">&quot;gender&quot;</span> <span class="punctuation">:</span> <span class="string">&quot;M&quot;</span><span class="punctuation">,</span></span><br><span class="line">          <span class="attr">&quot;address&quot;</span> <span class="punctuation">:</span> <span class="string">&quot;282 Kings Place&quot;</span><span class="punctuation">,</span></span><br><span class="line">          <span class="attr">&quot;employer&quot;</span> <span class="punctuation">:</span> <span class="string">&quot;Scentric&quot;</span><span class="punctuation">,</span></span><br><span class="line">          <span class="attr">&quot;email&quot;</span> <span class="punctuation">:</span> <span class="string">&quot;elinorratliff@scentric.com&quot;</span><span class="punctuation">,</span></span><br><span class="line">          <span class="attr">&quot;city&quot;</span> <span class="punctuation">:</span> <span class="string">&quot;Ribera&quot;</span><span class="punctuation">,</span></span><br><span class="line">          <span class="attr">&quot;state&quot;</span> <span class="punctuation">:</span> <span class="string">&quot;WA&quot;</span></span><br><span class="line">        <span class="punctuation">&#125;</span></span><br><span class="line">      <span class="punctuation">&#125;</span><span class="punctuation">,</span></span><br><span class="line">      <span class="punctuation">&#123;</span></span><br><span class="line">        <span class="attr">&quot;_index&quot;</span> <span class="punctuation">:</span> <span class="string">&quot;bank&quot;</span><span class="punctuation">,</span></span><br><span class="line">        <span class="attr">&quot;_type&quot;</span> <span class="punctuation">:</span> <span class="string">&quot;account&quot;</span><span class="punctuation">,</span></span><br><span class="line">        <span class="attr">&quot;_id&quot;</span> <span class="punctuation">:</span> <span class="string">&quot;722&quot;</span><span class="punctuation">,</span></span><br><span class="line">        <span class="attr">&quot;_score&quot;</span> <span class="punctuation">:</span> <span class="number">5.990829</span><span class="punctuation">,</span></span><br><span class="line">        <span class="attr">&quot;_source&quot;</span> <span class="punctuation">:</span> <span class="punctuation">&#123;</span></span><br><span class="line">          <span class="attr">&quot;account_number&quot;</span> <span class="punctuation">:</span> <span class="number">722</span><span class="punctuation">,</span></span><br><span class="line">          <span class="attr">&quot;balance&quot;</span> <span class="punctuation">:</span> <span class="number">27256</span><span class="punctuation">,</span></span><br><span class="line">          <span class="attr">&quot;firstname&quot;</span> <span class="punctuation">:</span> <span class="string">&quot;Roberts&quot;</span><span class="punctuation">,</span></span><br><span class="line">          <span class="attr">&quot;lastname&quot;</span> <span class="punctuation">:</span> <span class="string">&quot;Beasley&quot;</span><span class="punctuation">,</span></span><br><span class="line">          <span class="attr">&quot;age&quot;</span> <span class="punctuation">:</span> <span class="number">34</span><span class="punctuation">,</span></span><br><span class="line">          <span class="attr">&quot;gender&quot;</span> <span class="punctuation">:</span> <span class="string">&quot;F&quot;</span><span class="punctuation">,</span></span><br><span class="line">          <span class="attr">&quot;address&quot;</span> <span class="punctuation">:</span> <span class="string">&quot;305 Kings Hwy&quot;</span><span class="punctuation">,</span></span><br><span class="line">          <span class="attr">&quot;employer&quot;</span> <span class="punctuation">:</span> <span class="string">&quot;Quintity&quot;</span><span class="punctuation">,</span></span><br><span class="line">          <span class="attr">&quot;email&quot;</span> <span class="punctuation">:</span> <span class="string">&quot;robertsbeasley@quintity.com&quot;</span><span class="punctuation">,</span></span><br><span class="line">          <span class="attr">&quot;city&quot;</span> <span class="punctuation">:</span> <span class="string">&quot;Hayden&quot;</span><span class="punctuation">,</span></span><br><span class="line">          <span class="attr">&quot;state&quot;</span> <span class="punctuation">:</span> <span class="string">&quot;PA&quot;</span></span><br><span class="line">        <span class="punctuation">&#125;</span></span><br><span class="line">      <span class="punctuation">&#125;</span></span><br><span class="line">    <span class="punctuation">]</span></span><br><span class="line">  <span class="punctuation">&#125;</span></span><br><span class="line"><span class="punctuation">&#125;</span></span><br></pre></td></tr></table></figure><h4 id="（4）-match-phrase-短句匹配"><a href="#（4）-match-phrase-短句匹配" class="headerlink" title="（4） match_phrase [短句匹配]"></a>（4） match_phrase [短句匹配]</h4><p>将需要匹配的值当成一整个单词（不分词）进行检索</p><figure class="highlight json"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">GET bank/_search</span><br><span class="line"><span class="punctuation">&#123;</span></span><br><span class="line">  <span class="attr">&quot;query&quot;</span><span class="punctuation">:</span> <span class="punctuation">&#123;</span></span><br><span class="line">    <span class="attr">&quot;match_phrase&quot;</span><span class="punctuation">:</span> <span class="punctuation">&#123;</span></span><br><span class="line">      <span class="attr">&quot;address&quot;</span><span class="punctuation">:</span> <span class="string">&quot;mill road&quot;</span></span><br><span class="line">    <span class="punctuation">&#125;</span></span><br><span class="line">  <span class="punctuation">&#125;</span></span><br><span class="line"><span class="punctuation">&#125;</span></span><br></pre></td></tr></table></figure><p>查处address中包含mill_road的所有记录，并给出相关性得分</p><p>查看结果：</p><figure class="highlight json"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br></pre></td><td class="code"><pre><span class="line"><span class="punctuation">&#123;</span></span><br><span class="line">  <span class="attr">&quot;took&quot;</span> <span class="punctuation">:</span> <span class="number">0</span><span class="punctuation">,</span></span><br><span class="line">  <span class="attr">&quot;timed_out&quot;</span> <span class="punctuation">:</span> <span class="keyword">false</span><span class="punctuation">,</span></span><br><span class="line">  <span class="attr">&quot;_shards&quot;</span> <span class="punctuation">:</span> <span class="punctuation">&#123;</span></span><br><span class="line">    <span class="attr">&quot;total&quot;</span> <span class="punctuation">:</span> <span class="number">1</span><span class="punctuation">,</span></span><br><span class="line">    <span class="attr">&quot;successful&quot;</span> <span class="punctuation">:</span> <span class="number">1</span><span class="punctuation">,</span></span><br><span class="line">    <span class="attr">&quot;skipped&quot;</span> <span class="punctuation">:</span> <span class="number">0</span><span class="punctuation">,</span></span><br><span class="line">    <span class="attr">&quot;failed&quot;</span> <span class="punctuation">:</span> <span class="number">0</span></span><br><span class="line">  <span class="punctuation">&#125;</span><span class="punctuation">,</span></span><br><span class="line">  <span class="attr">&quot;hits&quot;</span> <span class="punctuation">:</span> <span class="punctuation">&#123;</span></span><br><span class="line">    <span class="attr">&quot;total&quot;</span> <span class="punctuation">:</span> <span class="punctuation">&#123;</span></span><br><span class="line">      <span class="attr">&quot;value&quot;</span> <span class="punctuation">:</span> <span class="number">1</span><span class="punctuation">,</span></span><br><span class="line">      <span class="attr">&quot;relation&quot;</span> <span class="punctuation">:</span> <span class="string">&quot;eq&quot;</span></span><br><span class="line">    <span class="punctuation">&#125;</span><span class="punctuation">,</span></span><br><span class="line">    <span class="attr">&quot;max_score&quot;</span> <span class="punctuation">:</span> <span class="number">8.926605</span><span class="punctuation">,</span></span><br><span class="line">    <span class="attr">&quot;hits&quot;</span> <span class="punctuation">:</span> <span class="punctuation">[</span></span><br><span class="line">      <span class="punctuation">&#123;</span></span><br><span class="line">        <span class="attr">&quot;_index&quot;</span> <span class="punctuation">:</span> <span class="string">&quot;bank&quot;</span><span class="punctuation">,</span></span><br><span class="line">        <span class="attr">&quot;_type&quot;</span> <span class="punctuation">:</span> <span class="string">&quot;account&quot;</span><span class="punctuation">,</span></span><br><span class="line">        <span class="attr">&quot;_id&quot;</span> <span class="punctuation">:</span> <span class="string">&quot;970&quot;</span><span class="punctuation">,</span></span><br><span class="line">        <span class="attr">&quot;_score&quot;</span> <span class="punctuation">:</span> <span class="number">8.926605</span><span class="punctuation">,</span></span><br><span class="line">        <span class="attr">&quot;_source&quot;</span> <span class="punctuation">:</span> <span class="punctuation">&#123;</span></span><br><span class="line">          <span class="attr">&quot;account_number&quot;</span> <span class="punctuation">:</span> <span class="number">970</span><span class="punctuation">,</span></span><br><span class="line">          <span class="attr">&quot;balance&quot;</span> <span class="punctuation">:</span> <span class="number">19648</span><span class="punctuation">,</span></span><br><span class="line">          <span class="attr">&quot;firstname&quot;</span> <span class="punctuation">:</span> <span class="string">&quot;Forbes&quot;</span><span class="punctuation">,</span></span><br><span class="line">          <span class="attr">&quot;lastname&quot;</span> <span class="punctuation">:</span> <span class="string">&quot;Wallace&quot;</span><span class="punctuation">,</span></span><br><span class="line">          <span class="attr">&quot;age&quot;</span> <span class="punctuation">:</span> <span class="number">28</span><span class="punctuation">,</span></span><br><span class="line">          <span class="attr">&quot;gender&quot;</span> <span class="punctuation">:</span> <span class="string">&quot;M&quot;</span><span class="punctuation">,</span></span><br><span class="line">          <span class="attr">&quot;address&quot;</span> <span class="punctuation">:</span> <span class="string">&quot;990 Mill Road&quot;</span><span class="punctuation">,</span></span><br><span class="line">          <span class="attr">&quot;employer&quot;</span> <span class="punctuation">:</span> <span class="string">&quot;Pheast&quot;</span><span class="punctuation">,</span></span><br><span class="line">          <span class="attr">&quot;email&quot;</span> <span class="punctuation">:</span> <span class="string">&quot;forbeswallace@pheast.com&quot;</span><span class="punctuation">,</span></span><br><span class="line">          <span class="attr">&quot;city&quot;</span> <span class="punctuation">:</span> <span class="string">&quot;Lopezo&quot;</span><span class="punctuation">,</span></span><br><span class="line">          <span class="attr">&quot;state&quot;</span> <span class="punctuation">:</span> <span class="string">&quot;AK&quot;</span></span><br><span class="line">        <span class="punctuation">&#125;</span></span><br><span class="line">      <span class="punctuation">&#125;</span></span><br><span class="line">    <span class="punctuation">]</span></span><br><span class="line">  <span class="punctuation">&#125;</span></span><br><span class="line"><span class="punctuation">&#125;</span></span><br></pre></td></tr></table></figure><p>match_phrase和Match的区别，观察如下实例：</p><figure class="highlight json"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">GET bank/_search</span><br><span class="line"><span class="punctuation">&#123;</span></span><br><span class="line">  <span class="attr">&quot;query&quot;</span><span class="punctuation">:</span> <span class="punctuation">&#123;</span></span><br><span class="line">    <span class="attr">&quot;match_phrase&quot;</span><span class="punctuation">:</span> <span class="punctuation">&#123;</span></span><br><span class="line">      <span class="attr">&quot;address&quot;</span><span class="punctuation">:</span> <span class="string">&quot;990 Mill&quot;</span></span><br><span class="line">    <span class="punctuation">&#125;</span></span><br><span class="line">  <span class="punctuation">&#125;</span></span><br><span class="line"><span class="punctuation">&#125;</span></span><br></pre></td></tr></table></figure><p>查询结果：</p><figure class="highlight json"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br></pre></td><td class="code"><pre><span class="line"><span class="punctuation">&#123;</span></span><br><span class="line">  <span class="attr">&quot;took&quot;</span> <span class="punctuation">:</span> <span class="number">0</span><span class="punctuation">,</span></span><br><span class="line">  <span class="attr">&quot;timed_out&quot;</span> <span class="punctuation">:</span> <span class="keyword">false</span><span class="punctuation">,</span></span><br><span class="line">  <span class="attr">&quot;_shards&quot;</span> <span class="punctuation">:</span> <span class="punctuation">&#123;</span></span><br><span class="line">    <span class="attr">&quot;total&quot;</span> <span class="punctuation">:</span> <span class="number">1</span><span class="punctuation">,</span></span><br><span class="line">    <span class="attr">&quot;successful&quot;</span> <span class="punctuation">:</span> <span class="number">1</span><span class="punctuation">,</span></span><br><span class="line">    <span class="attr">&quot;skipped&quot;</span> <span class="punctuation">:</span> <span class="number">0</span><span class="punctuation">,</span></span><br><span class="line">    <span class="attr">&quot;failed&quot;</span> <span class="punctuation">:</span> <span class="number">0</span></span><br><span class="line">  <span class="punctuation">&#125;</span><span class="punctuation">,</span></span><br><span class="line">  <span class="attr">&quot;hits&quot;</span> <span class="punctuation">:</span> <span class="punctuation">&#123;</span></span><br><span class="line">    <span class="attr">&quot;total&quot;</span> <span class="punctuation">:</span> <span class="punctuation">&#123;</span></span><br><span class="line">      <span class="attr">&quot;value&quot;</span> <span class="punctuation">:</span> <span class="number">1</span><span class="punctuation">,</span></span><br><span class="line">      <span class="attr">&quot;relation&quot;</span> <span class="punctuation">:</span> <span class="string">&quot;eq&quot;</span></span><br><span class="line">    <span class="punctuation">&#125;</span><span class="punctuation">,</span></span><br><span class="line">    <span class="attr">&quot;max_score&quot;</span> <span class="punctuation">:</span> <span class="number">10.806405</span><span class="punctuation">,</span></span><br><span class="line">    <span class="attr">&quot;hits&quot;</span> <span class="punctuation">:</span> <span class="punctuation">[</span></span><br><span class="line">      <span class="punctuation">&#123;</span></span><br><span class="line">        <span class="attr">&quot;_index&quot;</span> <span class="punctuation">:</span> <span class="string">&quot;bank&quot;</span><span class="punctuation">,</span></span><br><span class="line">        <span class="attr">&quot;_type&quot;</span> <span class="punctuation">:</span> <span class="string">&quot;account&quot;</span><span class="punctuation">,</span></span><br><span class="line">        <span class="attr">&quot;_id&quot;</span> <span class="punctuation">:</span> <span class="string">&quot;970&quot;</span><span class="punctuation">,</span></span><br><span class="line">        <span class="attr">&quot;_score&quot;</span> <span class="punctuation">:</span> <span class="number">10.806405</span><span class="punctuation">,</span></span><br><span class="line">        <span class="attr">&quot;_source&quot;</span> <span class="punctuation">:</span> <span class="punctuation">&#123;</span></span><br><span class="line">          <span class="attr">&quot;account_number&quot;</span> <span class="punctuation">:</span> <span class="number">970</span><span class="punctuation">,</span></span><br><span class="line">          <span class="attr">&quot;balance&quot;</span> <span class="punctuation">:</span> <span class="number">19648</span><span class="punctuation">,</span></span><br><span class="line">          <span class="attr">&quot;firstname&quot;</span> <span class="punctuation">:</span> <span class="string">&quot;Forbes&quot;</span><span class="punctuation">,</span></span><br><span class="line">          <span class="attr">&quot;lastname&quot;</span> <span class="punctuation">:</span> <span class="string">&quot;Wallace&quot;</span><span class="punctuation">,</span></span><br><span class="line">          <span class="attr">&quot;age&quot;</span> <span class="punctuation">:</span> <span class="number">28</span><span class="punctuation">,</span></span><br><span class="line">          <span class="attr">&quot;gender&quot;</span> <span class="punctuation">:</span> <span class="string">&quot;M&quot;</span><span class="punctuation">,</span></span><br><span class="line">          <span class="attr">&quot;address&quot;</span> <span class="punctuation">:</span> <span class="string">&quot;990 Mill Road&quot;</span><span class="punctuation">,</span></span><br><span class="line">          <span class="attr">&quot;employer&quot;</span> <span class="punctuation">:</span> <span class="string">&quot;Pheast&quot;</span><span class="punctuation">,</span></span><br><span class="line">          <span class="attr">&quot;email&quot;</span> <span class="punctuation">:</span> <span class="string">&quot;forbeswallace@pheast.com&quot;</span><span class="punctuation">,</span></span><br><span class="line">          <span class="attr">&quot;city&quot;</span> <span class="punctuation">:</span> <span class="string">&quot;Lopezo&quot;</span><span class="punctuation">,</span></span><br><span class="line">          <span class="attr">&quot;state&quot;</span> <span class="punctuation">:</span> <span class="string">&quot;AK&quot;</span></span><br><span class="line">        <span class="punctuation">&#125;</span></span><br><span class="line">      <span class="punctuation">&#125;</span></span><br><span class="line">    <span class="punctuation">]</span></span><br><span class="line">  <span class="punctuation">&#125;</span></span><br><span class="line"><span class="punctuation">&#125;</span></span><br></pre></td></tr></table></figure><p>使用match的keyword</p><figure class="highlight json"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">GET bank/_search</span><br><span class="line"><span class="punctuation">&#123;</span></span><br><span class="line">  <span class="attr">&quot;query&quot;</span><span class="punctuation">:</span> <span class="punctuation">&#123;</span></span><br><span class="line">    <span class="attr">&quot;match&quot;</span><span class="punctuation">:</span> <span class="punctuation">&#123;</span></span><br><span class="line">      <span class="attr">&quot;address.keyword&quot;</span><span class="punctuation">:</span> <span class="string">&quot;990 Mill&quot;</span></span><br><span class="line">    <span class="punctuation">&#125;</span></span><br><span class="line">  <span class="punctuation">&#125;</span></span><br><span class="line"><span class="punctuation">&#125;</span></span><br></pre></td></tr></table></figure><p>查询结果，一条也未匹配到</p><figure class="highlight json"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br></pre></td><td class="code"><pre><span class="line"><span class="punctuation">&#123;</span></span><br><span class="line">  <span class="attr">&quot;took&quot;</span> <span class="punctuation">:</span> <span class="number">0</span><span class="punctuation">,</span></span><br><span class="line">  <span class="attr">&quot;timed_out&quot;</span> <span class="punctuation">:</span> <span class="keyword">false</span><span class="punctuation">,</span></span><br><span class="line">  <span class="attr">&quot;_shards&quot;</span> <span class="punctuation">:</span> <span class="punctuation">&#123;</span></span><br><span class="line">    <span class="attr">&quot;total&quot;</span> <span class="punctuation">:</span> <span class="number">1</span><span class="punctuation">,</span></span><br><span class="line">    <span class="attr">&quot;successful&quot;</span> <span class="punctuation">:</span> <span class="number">1</span><span class="punctuation">,</span></span><br><span class="line">    <span class="attr">&quot;skipped&quot;</span> <span class="punctuation">:</span> <span class="number">0</span><span class="punctuation">,</span></span><br><span class="line">    <span class="attr">&quot;failed&quot;</span> <span class="punctuation">:</span> <span class="number">0</span></span><br><span class="line">  <span class="punctuation">&#125;</span><span class="punctuation">,</span></span><br><span class="line">  <span class="attr">&quot;hits&quot;</span> <span class="punctuation">:</span> <span class="punctuation">&#123;</span></span><br><span class="line">    <span class="attr">&quot;total&quot;</span> <span class="punctuation">:</span> <span class="punctuation">&#123;</span></span><br><span class="line">      <span class="attr">&quot;value&quot;</span> <span class="punctuation">:</span> <span class="number">0</span><span class="punctuation">,</span></span><br><span class="line">      <span class="attr">&quot;relation&quot;</span> <span class="punctuation">:</span> <span class="string">&quot;eq&quot;</span></span><br><span class="line">    <span class="punctuation">&#125;</span><span class="punctuation">,</span></span><br><span class="line">    <span class="attr">&quot;max_score&quot;</span> <span class="punctuation">:</span> <span class="keyword">null</span><span class="punctuation">,</span></span><br><span class="line">    <span class="attr">&quot;hits&quot;</span> <span class="punctuation">:</span> <span class="punctuation">[</span> <span class="punctuation">]</span></span><br><span class="line">  <span class="punctuation">&#125;</span></span><br><span class="line"><span class="punctuation">&#125;</span></span><br></pre></td></tr></table></figure><p>修改匹配条件为“990 Mill Road”</p><figure class="highlight json"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">GET bank/_search</span><br><span class="line"><span class="punctuation">&#123;</span></span><br><span class="line">  <span class="attr">&quot;query&quot;</span><span class="punctuation">:</span> <span class="punctuation">&#123;</span></span><br><span class="line">    <span class="attr">&quot;match&quot;</span><span class="punctuation">:</span> <span class="punctuation">&#123;</span></span><br><span class="line">      <span class="attr">&quot;address.keyword&quot;</span><span class="punctuation">:</span> <span class="string">&quot;990 Mill Road&quot;</span></span><br><span class="line">    <span class="punctuation">&#125;</span></span><br><span class="line">  <span class="punctuation">&#125;</span></span><br><span class="line"><span class="punctuation">&#125;</span></span><br></pre></td></tr></table></figure><p>查询出一条数据</p><figure class="highlight json"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br></pre></td><td class="code"><pre><span class="line"><span class="punctuation">&#123;</span></span><br><span class="line">  <span class="attr">&quot;took&quot;</span> <span class="punctuation">:</span> <span class="number">1</span><span class="punctuation">,</span></span><br><span class="line">  <span class="attr">&quot;timed_out&quot;</span> <span class="punctuation">:</span> <span class="keyword">false</span><span class="punctuation">,</span></span><br><span class="line">  <span class="attr">&quot;_shards&quot;</span> <span class="punctuation">:</span> <span class="punctuation">&#123;</span></span><br><span class="line">    <span class="attr">&quot;total&quot;</span> <span class="punctuation">:</span> <span class="number">1</span><span class="punctuation">,</span></span><br><span class="line">    <span class="attr">&quot;successful&quot;</span> <span class="punctuation">:</span> <span class="number">1</span><span class="punctuation">,</span></span><br><span class="line">    <span class="attr">&quot;skipped&quot;</span> <span class="punctuation">:</span> <span class="number">0</span><span class="punctuation">,</span></span><br><span class="line">    <span class="attr">&quot;failed&quot;</span> <span class="punctuation">:</span> <span class="number">0</span></span><br><span class="line">  <span class="punctuation">&#125;</span><span class="punctuation">,</span></span><br><span class="line">  <span class="attr">&quot;hits&quot;</span> <span class="punctuation">:</span> <span class="punctuation">&#123;</span></span><br><span class="line">    <span class="attr">&quot;total&quot;</span> <span class="punctuation">:</span> <span class="punctuation">&#123;</span></span><br><span class="line">      <span class="attr">&quot;value&quot;</span> <span class="punctuation">:</span> <span class="number">1</span><span class="punctuation">,</span></span><br><span class="line">      <span class="attr">&quot;relation&quot;</span> <span class="punctuation">:</span> <span class="string">&quot;eq&quot;</span></span><br><span class="line">    <span class="punctuation">&#125;</span><span class="punctuation">,</span></span><br><span class="line">    <span class="attr">&quot;max_score&quot;</span> <span class="punctuation">:</span> <span class="number">6.5032897</span><span class="punctuation">,</span></span><br><span class="line">    <span class="attr">&quot;hits&quot;</span> <span class="punctuation">:</span> <span class="punctuation">[</span></span><br><span class="line">      <span class="punctuation">&#123;</span></span><br><span class="line">        <span class="attr">&quot;_index&quot;</span> <span class="punctuation">:</span> <span class="string">&quot;bank&quot;</span><span class="punctuation">,</span></span><br><span class="line">        <span class="attr">&quot;_type&quot;</span> <span class="punctuation">:</span> <span class="string">&quot;account&quot;</span><span class="punctuation">,</span></span><br><span class="line">        <span class="attr">&quot;_id&quot;</span> <span class="punctuation">:</span> <span class="string">&quot;970&quot;</span><span class="punctuation">,</span></span><br><span class="line">        <span class="attr">&quot;_score&quot;</span> <span class="punctuation">:</span> <span class="number">6.5032897</span><span class="punctuation">,</span></span><br><span class="line">        <span class="attr">&quot;_source&quot;</span> <span class="punctuation">:</span> <span class="punctuation">&#123;</span></span><br><span class="line">          <span class="attr">&quot;account_number&quot;</span> <span class="punctuation">:</span> <span class="number">970</span><span class="punctuation">,</span></span><br><span class="line">          <span class="attr">&quot;balance&quot;</span> <span class="punctuation">:</span> <span class="number">19648</span><span class="punctuation">,</span></span><br><span class="line">          <span class="attr">&quot;firstname&quot;</span> <span class="punctuation">:</span> <span class="string">&quot;Forbes&quot;</span><span class="punctuation">,</span></span><br><span class="line">          <span class="attr">&quot;lastname&quot;</span> <span class="punctuation">:</span> <span class="string">&quot;Wallace&quot;</span><span class="punctuation">,</span></span><br><span class="line">          <span class="attr">&quot;age&quot;</span> <span class="punctuation">:</span> <span class="number">28</span><span class="punctuation">,</span></span><br><span class="line">          <span class="attr">&quot;gender&quot;</span> <span class="punctuation">:</span> <span class="string">&quot;M&quot;</span><span class="punctuation">,</span></span><br><span class="line">          <span class="attr">&quot;address&quot;</span> <span class="punctuation">:</span> <span class="string">&quot;990 Mill Road&quot;</span><span class="punctuation">,</span></span><br><span class="line">          <span class="attr">&quot;employer&quot;</span> <span class="punctuation">:</span> <span class="string">&quot;Pheast&quot;</span><span class="punctuation">,</span></span><br><span class="line">          <span class="attr">&quot;email&quot;</span> <span class="punctuation">:</span> <span class="string">&quot;forbeswallace@pheast.com&quot;</span><span class="punctuation">,</span></span><br><span class="line">          <span class="attr">&quot;city&quot;</span> <span class="punctuation">:</span> <span class="string">&quot;Lopezo&quot;</span><span class="punctuation">,</span></span><br><span class="line">          <span class="attr">&quot;state&quot;</span> <span class="punctuation">:</span> <span class="string">&quot;AK&quot;</span></span><br><span class="line">        <span class="punctuation">&#125;</span></span><br><span class="line">      <span class="punctuation">&#125;</span></span><br><span class="line">    <span class="punctuation">]</span></span><br><span class="line">  <span class="punctuation">&#125;</span></span><br><span class="line"><span class="punctuation">&#125;</span></span><br></pre></td></tr></table></figure><p>文本字段的匹配，使用<strong>keyword</strong>，匹配的条件就是要显示字段的全部值，要进行精确匹配的。</p><p>match_phrase是做短语匹配，只要文本中包含匹配条件，就能匹配到。</p><h4 id="（5）multi-math【多字段匹配】"><a href="#（5）multi-math【多字段匹配】" class="headerlink" title="（5）multi_math【多字段匹配】"></a>（5）multi_math【多字段匹配】</h4><figure class="highlight json"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line">GET bank/_search</span><br><span class="line"><span class="punctuation">&#123;</span></span><br><span class="line">  <span class="attr">&quot;query&quot;</span><span class="punctuation">:</span> <span class="punctuation">&#123;</span></span><br><span class="line">    <span class="attr">&quot;multi_match&quot;</span><span class="punctuation">:</span> <span class="punctuation">&#123;</span></span><br><span class="line">      <span class="attr">&quot;query&quot;</span><span class="punctuation">:</span> <span class="string">&quot;mill&quot;</span><span class="punctuation">,</span></span><br><span class="line">      <span class="attr">&quot;fields&quot;</span><span class="punctuation">:</span> <span class="punctuation">[</span></span><br><span class="line">        <span class="string">&quot;state&quot;</span><span class="punctuation">,</span></span><br><span class="line">        <span class="string">&quot;address&quot;</span></span><br><span class="line">      <span class="punctuation">]</span></span><br><span class="line">    <span class="punctuation">&#125;</span></span><br><span class="line">  <span class="punctuation">&#125;</span></span><br><span class="line"><span class="punctuation">&#125;</span></span><br></pre></td></tr></table></figure><p>state或者address中包含mill，并且在查询过程中，会对于查询条件进行分词。</p><p>查询结果：</p><figure class="highlight json"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br></pre></td><td class="code"><pre><span class="line"><span class="punctuation">&#123;</span></span><br><span class="line">  <span class="attr">&quot;took&quot;</span> <span class="punctuation">:</span> <span class="number">2</span><span class="punctuation">,</span></span><br><span class="line">  <span class="attr">&quot;timed_out&quot;</span> <span class="punctuation">:</span> <span class="keyword">false</span><span class="punctuation">,</span></span><br><span class="line">  <span class="attr">&quot;_shards&quot;</span> <span class="punctuation">:</span> <span class="punctuation">&#123;</span></span><br><span class="line">    <span class="attr">&quot;total&quot;</span> <span class="punctuation">:</span> <span class="number">1</span><span class="punctuation">,</span></span><br><span class="line">    <span class="attr">&quot;successful&quot;</span> <span class="punctuation">:</span> <span class="number">1</span><span class="punctuation">,</span></span><br><span class="line">    <span class="attr">&quot;skipped&quot;</span> <span class="punctuation">:</span> <span class="number">0</span><span class="punctuation">,</span></span><br><span class="line">    <span class="attr">&quot;failed&quot;</span> <span class="punctuation">:</span> <span class="number">0</span></span><br><span class="line">  <span class="punctuation">&#125;</span><span class="punctuation">,</span></span><br><span class="line">  <span class="attr">&quot;hits&quot;</span> <span class="punctuation">:</span> <span class="punctuation">&#123;</span></span><br><span class="line">    <span class="attr">&quot;total&quot;</span> <span class="punctuation">:</span> <span class="punctuation">&#123;</span></span><br><span class="line">      <span class="attr">&quot;value&quot;</span> <span class="punctuation">:</span> <span class="number">4</span><span class="punctuation">,</span></span><br><span class="line">      <span class="attr">&quot;relation&quot;</span> <span class="punctuation">:</span> <span class="string">&quot;eq&quot;</span></span><br><span class="line">    <span class="punctuation">&#125;</span><span class="punctuation">,</span></span><br><span class="line">    <span class="attr">&quot;max_score&quot;</span> <span class="punctuation">:</span> <span class="number">5.4032025</span><span class="punctuation">,</span></span><br><span class="line">    <span class="attr">&quot;hits&quot;</span> <span class="punctuation">:</span> <span class="punctuation">[</span></span><br><span class="line">      <span class="punctuation">&#123;</span></span><br><span class="line">        <span class="attr">&quot;_index&quot;</span> <span class="punctuation">:</span> <span class="string">&quot;bank&quot;</span><span class="punctuation">,</span></span><br><span class="line">        <span class="attr">&quot;_type&quot;</span> <span class="punctuation">:</span> <span class="string">&quot;account&quot;</span><span class="punctuation">,</span></span><br><span class="line">        <span class="attr">&quot;_id&quot;</span> <span class="punctuation">:</span> <span class="string">&quot;970&quot;</span><span class="punctuation">,</span></span><br><span class="line">        <span class="attr">&quot;_score&quot;</span> <span class="punctuation">:</span> <span class="number">5.4032025</span><span class="punctuation">,</span></span><br><span class="line">        <span class="attr">&quot;_source&quot;</span> <span class="punctuation">:</span> <span class="punctuation">&#123;</span></span><br><span class="line">          <span class="attr">&quot;account_number&quot;</span> <span class="punctuation">:</span> <span class="number">970</span><span class="punctuation">,</span></span><br><span class="line">          <span class="attr">&quot;balance&quot;</span> <span class="punctuation">:</span> <span class="number">19648</span><span class="punctuation">,</span></span><br><span class="line">          <span class="attr">&quot;firstname&quot;</span> <span class="punctuation">:</span> <span class="string">&quot;Forbes&quot;</span><span class="punctuation">,</span></span><br><span class="line">          <span class="attr">&quot;lastname&quot;</span> <span class="punctuation">:</span> <span class="string">&quot;Wallace&quot;</span><span class="punctuation">,</span></span><br><span class="line">          <span class="attr">&quot;age&quot;</span> <span class="punctuation">:</span> <span class="number">28</span><span class="punctuation">,</span></span><br><span class="line">          <span class="attr">&quot;gender&quot;</span> <span class="punctuation">:</span> <span class="string">&quot;M&quot;</span><span class="punctuation">,</span></span><br><span class="line">          <span class="attr">&quot;address&quot;</span> <span class="punctuation">:</span> <span class="string">&quot;990 Mill Road&quot;</span><span class="punctuation">,</span></span><br><span class="line">          <span class="attr">&quot;employer&quot;</span> <span class="punctuation">:</span> <span class="string">&quot;Pheast&quot;</span><span class="punctuation">,</span></span><br><span class="line">          <span class="attr">&quot;email&quot;</span> <span class="punctuation">:</span> <span class="string">&quot;forbeswallace@pheast.com&quot;</span><span class="punctuation">,</span></span><br><span class="line">          <span class="attr">&quot;city&quot;</span> <span class="punctuation">:</span> <span class="string">&quot;Lopezo&quot;</span><span class="punctuation">,</span></span><br><span class="line">          <span class="attr">&quot;state&quot;</span> <span class="punctuation">:</span> <span class="string">&quot;AK&quot;</span></span><br><span class="line">        <span class="punctuation">&#125;</span></span><br><span class="line">      <span class="punctuation">&#125;</span><span class="punctuation">,</span></span><br><span class="line">      <span class="punctuation">&#123;</span></span><br><span class="line">        <span class="attr">&quot;_index&quot;</span> <span class="punctuation">:</span> <span class="string">&quot;bank&quot;</span><span class="punctuation">,</span></span><br><span class="line">        <span class="attr">&quot;_type&quot;</span> <span class="punctuation">:</span> <span class="string">&quot;account&quot;</span><span class="punctuation">,</span></span><br><span class="line">        <span class="attr">&quot;_id&quot;</span> <span class="punctuation">:</span> <span class="string">&quot;136&quot;</span><span class="punctuation">,</span></span><br><span class="line">        <span class="attr">&quot;_score&quot;</span> <span class="punctuation">:</span> <span class="number">5.4032025</span><span class="punctuation">,</span></span><br><span class="line">        <span class="attr">&quot;_source&quot;</span> <span class="punctuation">:</span> <span class="punctuation">&#123;</span></span><br><span class="line">          <span class="attr">&quot;account_number&quot;</span> <span class="punctuation">:</span> <span class="number">136</span><span class="punctuation">,</span></span><br><span class="line">          <span class="attr">&quot;balance&quot;</span> <span class="punctuation">:</span> <span class="number">45801</span><span class="punctuation">,</span></span><br><span class="line">          <span class="attr">&quot;firstname&quot;</span> <span class="punctuation">:</span> <span class="string">&quot;Winnie&quot;</span><span class="punctuation">,</span></span><br><span class="line">          <span class="attr">&quot;lastname&quot;</span> <span class="punctuation">:</span> <span class="string">&quot;Holland&quot;</span><span class="punctuation">,</span></span><br><span class="line">          <span class="attr">&quot;age&quot;</span> <span class="punctuation">:</span> <span class="number">38</span><span class="punctuation">,</span></span><br><span class="line">          <span class="attr">&quot;gender&quot;</span> <span class="punctuation">:</span> <span class="string">&quot;M&quot;</span><span class="punctuation">,</span></span><br><span class="line">          <span class="attr">&quot;address&quot;</span> <span class="punctuation">:</span> <span class="string">&quot;198 Mill Lane&quot;</span><span class="punctuation">,</span></span><br><span class="line">          <span class="attr">&quot;employer&quot;</span> <span class="punctuation">:</span> <span class="string">&quot;Neteria&quot;</span><span class="punctuation">,</span></span><br><span class="line">          <span class="attr">&quot;email&quot;</span> <span class="punctuation">:</span> <span class="string">&quot;winnieholland@neteria.com&quot;</span><span class="punctuation">,</span></span><br><span class="line">          <span class="attr">&quot;city&quot;</span> <span class="punctuation">:</span> <span class="string">&quot;Urie&quot;</span><span class="punctuation">,</span></span><br><span class="line">          <span class="attr">&quot;state&quot;</span> <span class="punctuation">:</span> <span class="string">&quot;IL&quot;</span></span><br><span class="line">        <span class="punctuation">&#125;</span></span><br><span class="line">      <span class="punctuation">&#125;</span><span class="punctuation">,</span></span><br><span class="line">      <span class="punctuation">&#123;</span></span><br><span class="line">        <span class="attr">&quot;_index&quot;</span> <span class="punctuation">:</span> <span class="string">&quot;bank&quot;</span><span class="punctuation">,</span></span><br><span class="line">        <span class="attr">&quot;_type&quot;</span> <span class="punctuation">:</span> <span class="string">&quot;account&quot;</span><span class="punctuation">,</span></span><br><span class="line">        <span class="attr">&quot;_id&quot;</span> <span class="punctuation">:</span> <span class="string">&quot;345&quot;</span><span class="punctuation">,</span></span><br><span class="line">        <span class="attr">&quot;_score&quot;</span> <span class="punctuation">:</span> <span class="number">5.4032025</span><span class="punctuation">,</span></span><br><span class="line">        <span class="attr">&quot;_source&quot;</span> <span class="punctuation">:</span> <span class="punctuation">&#123;</span></span><br><span class="line">          <span class="attr">&quot;account_number&quot;</span> <span class="punctuation">:</span> <span class="number">345</span><span class="punctuation">,</span></span><br><span class="line">          <span class="attr">&quot;balance&quot;</span> <span class="punctuation">:</span> <span class="number">9812</span><span class="punctuation">,</span></span><br><span class="line">          <span class="attr">&quot;firstname&quot;</span> <span class="punctuation">:</span> <span class="string">&quot;Parker&quot;</span><span class="punctuation">,</span></span><br><span class="line">          <span class="attr">&quot;lastname&quot;</span> <span class="punctuation">:</span> <span class="string">&quot;Hines&quot;</span><span class="punctuation">,</span></span><br><span class="line">          <span class="attr">&quot;age&quot;</span> <span class="punctuation">:</span> <span class="number">38</span><span class="punctuation">,</span></span><br><span class="line">          <span class="attr">&quot;gender&quot;</span> <span class="punctuation">:</span> <span class="string">&quot;M&quot;</span><span class="punctuation">,</span></span><br><span class="line">          <span class="attr">&quot;address&quot;</span> <span class="punctuation">:</span> <span class="string">&quot;715 Mill Avenue&quot;</span><span class="punctuation">,</span></span><br><span class="line">          <span class="attr">&quot;employer&quot;</span> <span class="punctuation">:</span> <span class="string">&quot;Baluba&quot;</span><span class="punctuation">,</span></span><br><span class="line">          <span class="attr">&quot;email&quot;</span> <span class="punctuation">:</span> <span class="string">&quot;parkerhines@baluba.com&quot;</span><span class="punctuation">,</span></span><br><span class="line">          <span class="attr">&quot;city&quot;</span> <span class="punctuation">:</span> <span class="string">&quot;Blackgum&quot;</span><span class="punctuation">,</span></span><br><span class="line">          <span class="attr">&quot;state&quot;</span> <span class="punctuation">:</span> <span class="string">&quot;KY&quot;</span></span><br><span class="line">        <span class="punctuation">&#125;</span></span><br><span class="line">      <span class="punctuation">&#125;</span><span class="punctuation">,</span></span><br><span class="line">      <span class="punctuation">&#123;</span></span><br><span class="line">        <span class="attr">&quot;_index&quot;</span> <span class="punctuation">:</span> <span class="string">&quot;bank&quot;</span><span class="punctuation">,</span></span><br><span class="line">        <span class="attr">&quot;_type&quot;</span> <span class="punctuation">:</span> <span class="string">&quot;account&quot;</span><span class="punctuation">,</span></span><br><span class="line">        <span class="attr">&quot;_id&quot;</span> <span class="punctuation">:</span> <span class="string">&quot;472&quot;</span><span class="punctuation">,</span></span><br><span class="line">        <span class="attr">&quot;_score&quot;</span> <span class="punctuation">:</span> <span class="number">5.4032025</span><span class="punctuation">,</span></span><br><span class="line">        <span class="attr">&quot;_source&quot;</span> <span class="punctuation">:</span> <span class="punctuation">&#123;</span></span><br><span class="line">          <span class="attr">&quot;account_number&quot;</span> <span class="punctuation">:</span> <span class="number">472</span><span class="punctuation">,</span></span><br><span class="line">          <span class="attr">&quot;balance&quot;</span> <span class="punctuation">:</span> <span class="number">25571</span><span class="punctuation">,</span></span><br><span class="line">          <span class="attr">&quot;firstname&quot;</span> <span class="punctuation">:</span> <span class="string">&quot;Lee&quot;</span><span class="punctuation">,</span></span><br><span class="line">          <span class="attr">&quot;lastname&quot;</span> <span class="punctuation">:</span> <span class="string">&quot;Long&quot;</span><span class="punctuation">,</span></span><br><span class="line">          <span class="attr">&quot;age&quot;</span> <span class="punctuation">:</span> <span class="number">32</span><span class="punctuation">,</span></span><br><span class="line">          <span class="attr">&quot;gender&quot;</span> <span class="punctuation">:</span> <span class="string">&quot;F&quot;</span><span class="punctuation">,</span></span><br><span class="line">          <span class="attr">&quot;address&quot;</span> <span class="punctuation">:</span> <span class="string">&quot;288 Mill Street&quot;</span><span class="punctuation">,</span></span><br><span class="line">          <span class="attr">&quot;employer&quot;</span> <span class="punctuation">:</span> <span class="string">&quot;Comverges&quot;</span><span class="punctuation">,</span></span><br><span class="line">          <span class="attr">&quot;email&quot;</span> <span class="punctuation">:</span> <span class="string">&quot;leelong@comverges.com&quot;</span><span class="punctuation">,</span></span><br><span class="line">          <span class="attr">&quot;city&quot;</span> <span class="punctuation">:</span> <span class="string">&quot;Movico&quot;</span><span class="punctuation">,</span></span><br><span class="line">          <span class="attr">&quot;state&quot;</span> <span class="punctuation">:</span> <span class="string">&quot;MT&quot;</span></span><br><span class="line">        <span class="punctuation">&#125;</span></span><br><span class="line">      <span class="punctuation">&#125;</span></span><br><span class="line">    <span class="punctuation">]</span></span><br><span class="line">  <span class="punctuation">&#125;</span></span><br><span class="line"><span class="punctuation">&#125;</span></span><br></pre></td></tr></table></figure><h4 id="（6）bool用来做复合查询"><a href="#（6）bool用来做复合查询" class="headerlink" title="（6）bool用来做复合查询"></a>（6）bool用来做复合查询</h4><p>复合语句可以合并，任何其他查询语句，包括符合语句。这也就意味着，复合语句之间<br>可以互相嵌套，可以表达非常复杂的逻辑。</p><p>must：必须达到must所列举的所有条件</p><figure class="highlight json"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line">GET bank/_search</span><br><span class="line"><span class="punctuation">&#123;</span></span><br><span class="line">   <span class="attr">&quot;query&quot;</span><span class="punctuation">:</span><span class="punctuation">&#123;</span></span><br><span class="line">        <span class="attr">&quot;bool&quot;</span><span class="punctuation">:</span><span class="punctuation">&#123;</span></span><br><span class="line">             <span class="attr">&quot;must&quot;</span><span class="punctuation">:</span><span class="punctuation">[</span></span><br><span class="line">              <span class="punctuation">&#123;</span><span class="attr">&quot;match&quot;</span><span class="punctuation">:</span><span class="punctuation">&#123;</span><span class="attr">&quot;address&quot;</span><span class="punctuation">:</span><span class="string">&quot;mill&quot;</span><span class="punctuation">&#125;</span><span class="punctuation">&#125;</span><span class="punctuation">,</span></span><br><span class="line">              <span class="punctuation">&#123;</span><span class="attr">&quot;match&quot;</span><span class="punctuation">:</span><span class="punctuation">&#123;</span><span class="attr">&quot;gender&quot;</span><span class="punctuation">:</span><span class="string">&quot;M&quot;</span><span class="punctuation">&#125;</span><span class="punctuation">&#125;</span></span><br><span class="line">             <span class="punctuation">]</span></span><br><span class="line">         <span class="punctuation">&#125;</span></span><br><span class="line">    <span class="punctuation">&#125;</span></span><br><span class="line"><span class="punctuation">&#125;</span></span><br></pre></td></tr></table></figure><p>must_not，必须不匹配must_not所列举的所有条件。</p><p>should，应该满足should所列举的条件。</p><p><strong>实例：查询gender=m，并且address=mill的数据</strong></p><figure class="highlight json"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br></pre></td><td class="code"><pre><span class="line">GET bank/_search</span><br><span class="line"><span class="punctuation">&#123;</span></span><br><span class="line">  <span class="attr">&quot;query&quot;</span><span class="punctuation">:</span> <span class="punctuation">&#123;</span></span><br><span class="line">    <span class="attr">&quot;bool&quot;</span><span class="punctuation">:</span> <span class="punctuation">&#123;</span></span><br><span class="line">      <span class="attr">&quot;must&quot;</span><span class="punctuation">:</span> <span class="punctuation">[</span></span><br><span class="line">        <span class="punctuation">&#123;</span></span><br><span class="line">          <span class="attr">&quot;match&quot;</span><span class="punctuation">:</span> <span class="punctuation">&#123;</span></span><br><span class="line">            <span class="attr">&quot;gender&quot;</span><span class="punctuation">:</span> <span class="string">&quot;M&quot;</span></span><br><span class="line">          <span class="punctuation">&#125;</span></span><br><span class="line">        <span class="punctuation">&#125;</span><span class="punctuation">,</span></span><br><span class="line">        <span class="punctuation">&#123;</span></span><br><span class="line">          <span class="attr">&quot;match&quot;</span><span class="punctuation">:</span> <span class="punctuation">&#123;</span></span><br><span class="line">            <span class="attr">&quot;address&quot;</span><span class="punctuation">:</span> <span class="string">&quot;mill&quot;</span></span><br><span class="line">          <span class="punctuation">&#125;</span></span><br><span class="line">        <span class="punctuation">&#125;</span></span><br><span class="line">      <span class="punctuation">]</span></span><br><span class="line">    <span class="punctuation">&#125;</span></span><br><span class="line">  <span class="punctuation">&#125;</span></span><br><span class="line"><span class="punctuation">&#125;</span></span><br></pre></td></tr></table></figure><p>查询结果：</p><figure class="highlight json"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br></pre></td><td class="code"><pre><span class="line"><span class="punctuation">&#123;</span></span><br><span class="line">  <span class="attr">&quot;took&quot;</span> <span class="punctuation">:</span> <span class="number">1</span><span class="punctuation">,</span></span><br><span class="line">  <span class="attr">&quot;timed_out&quot;</span> <span class="punctuation">:</span> <span class="keyword">false</span><span class="punctuation">,</span></span><br><span class="line">  <span class="attr">&quot;_shards&quot;</span> <span class="punctuation">:</span> <span class="punctuation">&#123;</span></span><br><span class="line">    <span class="attr">&quot;total&quot;</span> <span class="punctuation">:</span> <span class="number">1</span><span class="punctuation">,</span></span><br><span class="line">    <span class="attr">&quot;successful&quot;</span> <span class="punctuation">:</span> <span class="number">1</span><span class="punctuation">,</span></span><br><span class="line">    <span class="attr">&quot;skipped&quot;</span> <span class="punctuation">:</span> <span class="number">0</span><span class="punctuation">,</span></span><br><span class="line">    <span class="attr">&quot;failed&quot;</span> <span class="punctuation">:</span> <span class="number">0</span></span><br><span class="line">  <span class="punctuation">&#125;</span><span class="punctuation">,</span></span><br><span class="line">  <span class="attr">&quot;hits&quot;</span> <span class="punctuation">:</span> <span class="punctuation">&#123;</span></span><br><span class="line">    <span class="attr">&quot;total&quot;</span> <span class="punctuation">:</span> <span class="punctuation">&#123;</span></span><br><span class="line">      <span class="attr">&quot;value&quot;</span> <span class="punctuation">:</span> <span class="number">3</span><span class="punctuation">,</span></span><br><span class="line">      <span class="attr">&quot;relation&quot;</span> <span class="punctuation">:</span> <span class="string">&quot;eq&quot;</span></span><br><span class="line">    <span class="punctuation">&#125;</span><span class="punctuation">,</span></span><br><span class="line">    <span class="attr">&quot;max_score&quot;</span> <span class="punctuation">:</span> <span class="number">6.0824604</span><span class="punctuation">,</span></span><br><span class="line">    <span class="attr">&quot;hits&quot;</span> <span class="punctuation">:</span> <span class="punctuation">[</span></span><br><span class="line">      <span class="punctuation">&#123;</span></span><br><span class="line">        <span class="attr">&quot;_index&quot;</span> <span class="punctuation">:</span> <span class="string">&quot;bank&quot;</span><span class="punctuation">,</span></span><br><span class="line">        <span class="attr">&quot;_type&quot;</span> <span class="punctuation">:</span> <span class="string">&quot;account&quot;</span><span class="punctuation">,</span></span><br><span class="line">        <span class="attr">&quot;_id&quot;</span> <span class="punctuation">:</span> <span class="string">&quot;970&quot;</span><span class="punctuation">,</span></span><br><span class="line">        <span class="attr">&quot;_score&quot;</span> <span class="punctuation">:</span> <span class="number">6.0824604</span><span class="punctuation">,</span></span><br><span class="line">        <span class="attr">&quot;_source&quot;</span> <span class="punctuation">:</span> <span class="punctuation">&#123;</span></span><br><span class="line">          <span class="attr">&quot;account_number&quot;</span> <span class="punctuation">:</span> <span class="number">970</span><span class="punctuation">,</span></span><br><span class="line">          <span class="attr">&quot;balance&quot;</span> <span class="punctuation">:</span> <span class="number">19648</span><span class="punctuation">,</span></span><br><span class="line">          <span class="attr">&quot;firstname&quot;</span> <span class="punctuation">:</span> <span class="string">&quot;Forbes&quot;</span><span class="punctuation">,</span></span><br><span class="line">          <span class="attr">&quot;lastname&quot;</span> <span class="punctuation">:</span> <span class="string">&quot;Wallace&quot;</span><span class="punctuation">,</span></span><br><span class="line">          <span class="attr">&quot;age&quot;</span> <span class="punctuation">:</span> <span class="number">28</span><span class="punctuation">,</span></span><br><span class="line">          <span class="attr">&quot;gender&quot;</span> <span class="punctuation">:</span> <span class="string">&quot;M&quot;</span><span class="punctuation">,</span></span><br><span class="line">          <span class="attr">&quot;address&quot;</span> <span class="punctuation">:</span> <span class="string">&quot;990 Mill Road&quot;</span><span class="punctuation">,</span></span><br><span class="line">          <span class="attr">&quot;employer&quot;</span> <span class="punctuation">:</span> <span class="string">&quot;Pheast&quot;</span><span class="punctuation">,</span></span><br><span class="line">          <span class="attr">&quot;email&quot;</span> <span class="punctuation">:</span> <span class="string">&quot;forbeswallace@pheast.com&quot;</span><span class="punctuation">,</span></span><br><span class="line">          <span class="attr">&quot;city&quot;</span> <span class="punctuation">:</span> <span class="string">&quot;Lopezo&quot;</span><span class="punctuation">,</span></span><br><span class="line">          <span class="attr">&quot;state&quot;</span> <span class="punctuation">:</span> <span class="string">&quot;AK&quot;</span></span><br><span class="line">        <span class="punctuation">&#125;</span></span><br><span class="line">      <span class="punctuation">&#125;</span><span class="punctuation">,</span></span><br><span class="line">      <span class="punctuation">&#123;</span></span><br><span class="line">        <span class="attr">&quot;_index&quot;</span> <span class="punctuation">:</span> <span class="string">&quot;bank&quot;</span><span class="punctuation">,</span></span><br><span class="line">        <span class="attr">&quot;_type&quot;</span> <span class="punctuation">:</span> <span class="string">&quot;account&quot;</span><span class="punctuation">,</span></span><br><span class="line">        <span class="attr">&quot;_id&quot;</span> <span class="punctuation">:</span> <span class="string">&quot;136&quot;</span><span class="punctuation">,</span></span><br><span class="line">        <span class="attr">&quot;_score&quot;</span> <span class="punctuation">:</span> <span class="number">6.0824604</span><span class="punctuation">,</span></span><br><span class="line">        <span class="attr">&quot;_source&quot;</span> <span class="punctuation">:</span> <span class="punctuation">&#123;</span></span><br><span class="line">          <span class="attr">&quot;account_number&quot;</span> <span class="punctuation">:</span> <span class="number">136</span><span class="punctuation">,</span></span><br><span class="line">          <span class="attr">&quot;balance&quot;</span> <span class="punctuation">:</span> <span class="number">45801</span><span class="punctuation">,</span></span><br><span class="line">          <span class="attr">&quot;firstname&quot;</span> <span class="punctuation">:</span> <span class="string">&quot;Winnie&quot;</span><span class="punctuation">,</span></span><br><span class="line">          <span class="attr">&quot;lastname&quot;</span> <span class="punctuation">:</span> <span class="string">&quot;Holland&quot;</span><span class="punctuation">,</span></span><br><span class="line">          <span class="attr">&quot;age&quot;</span> <span class="punctuation">:</span> <span class="number">38</span><span class="punctuation">,</span></span><br><span class="line">          <span class="attr">&quot;gender&quot;</span> <span class="punctuation">:</span> <span class="string">&quot;M&quot;</span><span class="punctuation">,</span></span><br><span class="line">          <span class="attr">&quot;address&quot;</span> <span class="punctuation">:</span> <span class="string">&quot;198 Mill Lane&quot;</span><span class="punctuation">,</span></span><br><span class="line">          <span class="attr">&quot;employer&quot;</span> <span class="punctuation">:</span> <span class="string">&quot;Neteria&quot;</span><span class="punctuation">,</span></span><br><span class="line">          <span class="attr">&quot;email&quot;</span> <span class="punctuation">:</span> <span class="string">&quot;winnieholland@neteria.com&quot;</span><span class="punctuation">,</span></span><br><span class="line">          <span class="attr">&quot;city&quot;</span> <span class="punctuation">:</span> <span class="string">&quot;Urie&quot;</span><span class="punctuation">,</span></span><br><span class="line">          <span class="attr">&quot;state&quot;</span> <span class="punctuation">:</span> <span class="string">&quot;IL&quot;</span></span><br><span class="line">        <span class="punctuation">&#125;</span></span><br><span class="line">      <span class="punctuation">&#125;</span><span class="punctuation">,</span></span><br><span class="line">      <span class="punctuation">&#123;</span></span><br><span class="line">        <span class="attr">&quot;_index&quot;</span> <span class="punctuation">:</span> <span class="string">&quot;bank&quot;</span><span class="punctuation">,</span></span><br><span class="line">        <span class="attr">&quot;_type&quot;</span> <span class="punctuation">:</span> <span class="string">&quot;account&quot;</span><span class="punctuation">,</span></span><br><span class="line">        <span class="attr">&quot;_id&quot;</span> <span class="punctuation">:</span> <span class="string">&quot;345&quot;</span><span class="punctuation">,</span></span><br><span class="line">        <span class="attr">&quot;_score&quot;</span> <span class="punctuation">:</span> <span class="number">6.0824604</span><span class="punctuation">,</span></span><br><span class="line">        <span class="attr">&quot;_source&quot;</span> <span class="punctuation">:</span> <span class="punctuation">&#123;</span></span><br><span class="line">          <span class="attr">&quot;account_number&quot;</span> <span class="punctuation">:</span> <span class="number">345</span><span class="punctuation">,</span></span><br><span class="line">          <span class="attr">&quot;balance&quot;</span> <span class="punctuation">:</span> <span class="number">9812</span><span class="punctuation">,</span></span><br><span class="line">          <span class="attr">&quot;firstname&quot;</span> <span class="punctuation">:</span> <span class="string">&quot;Parker&quot;</span><span class="punctuation">,</span></span><br><span class="line">          <span class="attr">&quot;lastname&quot;</span> <span class="punctuation">:</span> <span class="string">&quot;Hines&quot;</span><span class="punctuation">,</span></span><br><span class="line">          <span class="attr">&quot;age&quot;</span> <span class="punctuation">:</span> <span class="number">38</span><span class="punctuation">,</span></span><br><span class="line">          <span class="attr">&quot;gender&quot;</span> <span class="punctuation">:</span> <span class="string">&quot;M&quot;</span><span class="punctuation">,</span></span><br><span class="line">          <span class="attr">&quot;address&quot;</span> <span class="punctuation">:</span> <span class="string">&quot;715 Mill Avenue&quot;</span><span class="punctuation">,</span></span><br><span class="line">          <span class="attr">&quot;employer&quot;</span> <span class="punctuation">:</span> <span class="string">&quot;Baluba&quot;</span><span class="punctuation">,</span></span><br><span class="line">          <span class="attr">&quot;email&quot;</span> <span class="punctuation">:</span> <span class="string">&quot;parkerhines@baluba.com&quot;</span><span class="punctuation">,</span></span><br><span class="line">          <span class="attr">&quot;city&quot;</span> <span class="punctuation">:</span> <span class="string">&quot;Blackgum&quot;</span><span class="punctuation">,</span></span><br><span class="line">          <span class="attr">&quot;state&quot;</span> <span class="punctuation">:</span> <span class="string">&quot;KY&quot;</span></span><br><span class="line">        <span class="punctuation">&#125;</span></span><br><span class="line">      <span class="punctuation">&#125;</span></span><br><span class="line">    <span class="punctuation">]</span></span><br><span class="line">  <span class="punctuation">&#125;</span></span><br><span class="line"><span class="punctuation">&#125;</span></span><br></pre></td></tr></table></figure><p><strong>must_not：必须不是指定的情况</strong></p><p>实例：查询gender=m，并且address=mill的数据，但是age不等于38的</p><figure class="highlight json"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br></pre></td><td class="code"><pre><span class="line">GET bank/_search</span><br><span class="line"><span class="punctuation">&#123;</span></span><br><span class="line"> <span class="attr">&quot;query&quot;</span><span class="punctuation">:</span><span class="punctuation">&#123;</span></span><br><span class="line">    <span class="attr">&quot;bool&quot;</span><span class="punctuation">:</span><span class="punctuation">&#123;</span></span><br><span class="line">      <span class="attr">&quot;must&quot;</span><span class="punctuation">:</span><span class="punctuation">[</span></span><br><span class="line">        <span class="punctuation">&#123;</span><span class="attr">&quot;match&quot;</span><span class="punctuation">:</span><span class="punctuation">&#123;</span><span class="attr">&quot;address&quot;</span><span class="punctuation">:</span><span class="string">&quot;mill&quot;</span><span class="punctuation">&#125;</span><span class="punctuation">&#125;</span><span class="punctuation">,</span></span><br><span class="line">        <span class="punctuation">&#123;</span><span class="attr">&quot;match&quot;</span><span class="punctuation">:</span><span class="punctuation">&#123;</span><span class="attr">&quot;gender&quot;</span><span class="punctuation">:</span><span class="string">&quot;M&quot;</span><span class="punctuation">&#125;</span><span class="punctuation">&#125;</span></span><br><span class="line">     <span class="punctuation">]</span><span class="punctuation">,</span></span><br><span class="line">      <span class="attr">&quot;must_not&quot;</span><span class="punctuation">:</span> <span class="punctuation">[</span></span><br><span class="line">        <span class="punctuation">&#123;</span></span><br><span class="line">          <span class="attr">&quot;match&quot;</span><span class="punctuation">:</span> <span class="punctuation">&#123;</span></span><br><span class="line">          <span class="attr">&quot;age&quot;</span><span class="punctuation">:</span> <span class="string">&quot;38&quot;</span></span><br><span class="line">          <span class="punctuation">&#125;</span></span><br><span class="line">        <span class="punctuation">&#125;</span></span><br><span class="line">      <span class="punctuation">]</span></span><br><span class="line">    <span class="punctuation">&#125;</span></span><br><span class="line">  <span class="punctuation">&#125;</span></span><br><span class="line"><span class="punctuation">&#125;</span></span><br></pre></td></tr></table></figure><p>查询结果：</p><figure class="highlight json"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br></pre></td><td class="code"><pre><span class="line"><span class="punctuation">&#123;</span></span><br><span class="line">  <span class="attr">&quot;took&quot;</span> <span class="punctuation">:</span> <span class="number">1</span><span class="punctuation">,</span></span><br><span class="line">  <span class="attr">&quot;timed_out&quot;</span> <span class="punctuation">:</span> <span class="keyword">false</span><span class="punctuation">,</span></span><br><span class="line">  <span class="attr">&quot;_shards&quot;</span> <span class="punctuation">:</span> <span class="punctuation">&#123;</span></span><br><span class="line">    <span class="attr">&quot;total&quot;</span> <span class="punctuation">:</span> <span class="number">1</span><span class="punctuation">,</span></span><br><span class="line">    <span class="attr">&quot;successful&quot;</span> <span class="punctuation">:</span> <span class="number">1</span><span class="punctuation">,</span></span><br><span class="line">    <span class="attr">&quot;skipped&quot;</span> <span class="punctuation">:</span> <span class="number">0</span><span class="punctuation">,</span></span><br><span class="line">    <span class="attr">&quot;failed&quot;</span> <span class="punctuation">:</span> <span class="number">0</span></span><br><span class="line">  <span class="punctuation">&#125;</span><span class="punctuation">,</span></span><br><span class="line">  <span class="attr">&quot;hits&quot;</span> <span class="punctuation">:</span> <span class="punctuation">&#123;</span></span><br><span class="line">    <span class="attr">&quot;total&quot;</span> <span class="punctuation">:</span> <span class="punctuation">&#123;</span></span><br><span class="line">      <span class="attr">&quot;value&quot;</span> <span class="punctuation">:</span> <span class="number">1</span><span class="punctuation">,</span></span><br><span class="line">      <span class="attr">&quot;relation&quot;</span> <span class="punctuation">:</span> <span class="string">&quot;eq&quot;</span></span><br><span class="line">    <span class="punctuation">&#125;</span><span class="punctuation">,</span></span><br><span class="line">    <span class="attr">&quot;max_score&quot;</span> <span class="punctuation">:</span> <span class="number">6.0824604</span><span class="punctuation">,</span></span><br><span class="line">    <span class="attr">&quot;hits&quot;</span> <span class="punctuation">:</span> <span class="punctuation">[</span></span><br><span class="line">      <span class="punctuation">&#123;</span></span><br><span class="line">        <span class="attr">&quot;_index&quot;</span> <span class="punctuation">:</span> <span class="string">&quot;bank&quot;</span><span class="punctuation">,</span></span><br><span class="line">        <span class="attr">&quot;_type&quot;</span> <span class="punctuation">:</span> <span class="string">&quot;account&quot;</span><span class="punctuation">,</span></span><br><span class="line">        <span class="attr">&quot;_id&quot;</span> <span class="punctuation">:</span> <span class="string">&quot;970&quot;</span><span class="punctuation">,</span></span><br><span class="line">        <span class="attr">&quot;_score&quot;</span> <span class="punctuation">:</span> <span class="number">6.0824604</span><span class="punctuation">,</span></span><br><span class="line">        <span class="attr">&quot;_source&quot;</span> <span class="punctuation">:</span> <span class="punctuation">&#123;</span></span><br><span class="line">          <span class="attr">&quot;account_number&quot;</span> <span class="punctuation">:</span> <span class="number">970</span><span class="punctuation">,</span></span><br><span class="line">          <span class="attr">&quot;balance&quot;</span> <span class="punctuation">:</span> <span class="number">19648</span><span class="punctuation">,</span></span><br><span class="line">          <span class="attr">&quot;firstname&quot;</span> <span class="punctuation">:</span> <span class="string">&quot;Forbes&quot;</span><span class="punctuation">,</span></span><br><span class="line">          <span class="attr">&quot;lastname&quot;</span> <span class="punctuation">:</span> <span class="string">&quot;Wallace&quot;</span><span class="punctuation">,</span></span><br><span class="line">          <span class="attr">&quot;age&quot;</span> <span class="punctuation">:</span> <span class="number">28</span><span class="punctuation">,</span></span><br><span class="line">          <span class="attr">&quot;gender&quot;</span> <span class="punctuation">:</span> <span class="string">&quot;M&quot;</span><span class="punctuation">,</span></span><br><span class="line">          <span class="attr">&quot;address&quot;</span> <span class="punctuation">:</span> <span class="string">&quot;990 Mill Road&quot;</span><span class="punctuation">,</span></span><br><span class="line">          <span class="attr">&quot;employer&quot;</span> <span class="punctuation">:</span> <span class="string">&quot;Pheast&quot;</span><span class="punctuation">,</span></span><br><span class="line">          <span class="attr">&quot;email&quot;</span> <span class="punctuation">:</span> <span class="string">&quot;forbeswallace@pheast.com&quot;</span><span class="punctuation">,</span></span><br><span class="line">          <span class="attr">&quot;city&quot;</span> <span class="punctuation">:</span> <span class="string">&quot;Lopezo&quot;</span><span class="punctuation">,</span></span><br><span class="line">          <span class="attr">&quot;state&quot;</span> <span class="punctuation">:</span> <span class="string">&quot;AK&quot;</span></span><br><span class="line">        <span class="punctuation">&#125;</span></span><br><span class="line">      <span class="punctuation">&#125;</span></span><br><span class="line">    <span class="punctuation">]</span></span><br><span class="line">  <span class="punctuation">&#125;</span></span><br><span class="line"><span class="punctuation">&#125;</span></span><br></pre></td></tr></table></figure><p><strong>should：应该达到should列举的条件，如果到达会增加相关文档的评分，并不会改变查询的结果。如果query中只有should且只有一种匹配规则，那么should的条件就会被作为默认匹配条件二区改变查询结果。</strong></p><p>实例：匹配lastName应该等于Wallace的数据</p><figure class="highlight json"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br></pre></td><td class="code"><pre><span class="line">GET bank/_search</span><br><span class="line"><span class="punctuation">&#123;</span></span><br><span class="line"> <span class="attr">&quot;query&quot;</span><span class="punctuation">:</span><span class="punctuation">&#123;</span></span><br><span class="line">    <span class="attr">&quot;bool&quot;</span><span class="punctuation">:</span><span class="punctuation">&#123;</span></span><br><span class="line">      <span class="attr">&quot;must&quot;</span><span class="punctuation">:</span><span class="punctuation">[</span></span><br><span class="line">        <span class="punctuation">&#123;</span><span class="attr">&quot;match&quot;</span><span class="punctuation">:</span><span class="punctuation">&#123;</span><span class="attr">&quot;address&quot;</span><span class="punctuation">:</span><span class="string">&quot;mill&quot;</span><span class="punctuation">&#125;</span><span class="punctuation">&#125;</span><span class="punctuation">,</span></span><br><span class="line">        <span class="punctuation">&#123;</span><span class="attr">&quot;match&quot;</span><span class="punctuation">:</span><span class="punctuation">&#123;</span><span class="attr">&quot;gender&quot;</span><span class="punctuation">:</span><span class="string">&quot;M&quot;</span><span class="punctuation">&#125;</span><span class="punctuation">&#125;</span></span><br><span class="line">     <span class="punctuation">]</span><span class="punctuation">,</span></span><br><span class="line">      <span class="attr">&quot;must_not&quot;</span><span class="punctuation">:</span> <span class="punctuation">[</span></span><br><span class="line">        <span class="punctuation">&#123;</span></span><br><span class="line">          <span class="attr">&quot;match&quot;</span><span class="punctuation">:</span> <span class="punctuation">&#123;</span></span><br><span class="line">          <span class="attr">&quot;age&quot;</span><span class="punctuation">:</span> <span class="string">&quot;18&quot;</span></span><br><span class="line">          <span class="punctuation">&#125;</span></span><br><span class="line">        <span class="punctuation">&#125;</span></span><br><span class="line">      <span class="punctuation">]</span><span class="punctuation">,</span></span><br><span class="line">      <span class="attr">&quot;should&quot;</span><span class="punctuation">:</span> <span class="punctuation">[</span></span><br><span class="line">        <span class="punctuation">&#123;</span></span><br><span class="line">          <span class="attr">&quot;match&quot;</span><span class="punctuation">:</span> <span class="punctuation">&#123;</span></span><br><span class="line">            <span class="attr">&quot;lastname&quot;</span><span class="punctuation">:</span> <span class="string">&quot;Wallace&quot;</span></span><br><span class="line">          <span class="punctuation">&#125;</span></span><br><span class="line">        <span class="punctuation">&#125;</span></span><br><span class="line">      <span class="punctuation">]</span></span><br><span class="line">    <span class="punctuation">&#125;</span></span><br><span class="line">  <span class="punctuation">&#125;</span></span><br><span class="line"><span class="punctuation">&#125;</span></span><br></pre></td></tr></table></figure><p>查询结果：</p><figure class="highlight json"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br></pre></td><td class="code"><pre><span class="line"><span class="punctuation">&#123;</span></span><br><span class="line">  <span class="attr">&quot;took&quot;</span> <span class="punctuation">:</span> <span class="number">1</span><span class="punctuation">,</span></span><br><span class="line">  <span class="attr">&quot;timed_out&quot;</span> <span class="punctuation">:</span> <span class="keyword">false</span><span class="punctuation">,</span></span><br><span class="line">  <span class="attr">&quot;_shards&quot;</span> <span class="punctuation">:</span> <span class="punctuation">&#123;</span></span><br><span class="line">    <span class="attr">&quot;total&quot;</span> <span class="punctuation">:</span> <span class="number">1</span><span class="punctuation">,</span></span><br><span class="line">    <span class="attr">&quot;successful&quot;</span> <span class="punctuation">:</span> <span class="number">1</span><span class="punctuation">,</span></span><br><span class="line">    <span class="attr">&quot;skipped&quot;</span> <span class="punctuation">:</span> <span class="number">0</span><span class="punctuation">,</span></span><br><span class="line">    <span class="attr">&quot;failed&quot;</span> <span class="punctuation">:</span> <span class="number">0</span></span><br><span class="line">  <span class="punctuation">&#125;</span><span class="punctuation">,</span></span><br><span class="line">  <span class="attr">&quot;hits&quot;</span> <span class="punctuation">:</span> <span class="punctuation">&#123;</span></span><br><span class="line">    <span class="attr">&quot;total&quot;</span> <span class="punctuation">:</span> <span class="punctuation">&#123;</span></span><br><span class="line">      <span class="attr">&quot;value&quot;</span> <span class="punctuation">:</span> <span class="number">3</span><span class="punctuation">,</span></span><br><span class="line">      <span class="attr">&quot;relation&quot;</span> <span class="punctuation">:</span> <span class="string">&quot;eq&quot;</span></span><br><span class="line">    <span class="punctuation">&#125;</span><span class="punctuation">,</span></span><br><span class="line">    <span class="attr">&quot;max_score&quot;</span> <span class="punctuation">:</span> <span class="number">12.585751</span><span class="punctuation">,</span></span><br><span class="line">    <span class="attr">&quot;hits&quot;</span> <span class="punctuation">:</span> <span class="punctuation">[</span></span><br><span class="line">      <span class="punctuation">&#123;</span></span><br><span class="line">        <span class="attr">&quot;_index&quot;</span> <span class="punctuation">:</span> <span class="string">&quot;bank&quot;</span><span class="punctuation">,</span></span><br><span class="line">        <span class="attr">&quot;_type&quot;</span> <span class="punctuation">:</span> <span class="string">&quot;account&quot;</span><span class="punctuation">,</span></span><br><span class="line">        <span class="attr">&quot;_id&quot;</span> <span class="punctuation">:</span> <span class="string">&quot;970&quot;</span><span class="punctuation">,</span></span><br><span class="line">        <span class="attr">&quot;_score&quot;</span> <span class="punctuation">:</span> <span class="number">12.585751</span><span class="punctuation">,</span></span><br><span class="line">        <span class="attr">&quot;_source&quot;</span> <span class="punctuation">:</span> <span class="punctuation">&#123;</span></span><br><span class="line">          <span class="attr">&quot;account_number&quot;</span> <span class="punctuation">:</span> <span class="number">970</span><span class="punctuation">,</span></span><br><span class="line">          <span class="attr">&quot;balance&quot;</span> <span class="punctuation">:</span> <span class="number">19648</span><span class="punctuation">,</span></span><br><span class="line">          <span class="attr">&quot;firstname&quot;</span> <span class="punctuation">:</span> <span class="string">&quot;Forbes&quot;</span><span class="punctuation">,</span></span><br><span class="line">          <span class="attr">&quot;lastname&quot;</span> <span class="punctuation">:</span> <span class="string">&quot;Wallace&quot;</span><span class="punctuation">,</span></span><br><span class="line">          <span class="attr">&quot;age&quot;</span> <span class="punctuation">:</span> <span class="number">28</span><span class="punctuation">,</span></span><br><span class="line">          <span class="attr">&quot;gender&quot;</span> <span class="punctuation">:</span> <span class="string">&quot;M&quot;</span><span class="punctuation">,</span></span><br><span class="line">          <span class="attr">&quot;address&quot;</span> <span class="punctuation">:</span> <span class="string">&quot;990 Mill Road&quot;</span><span class="punctuation">,</span></span><br><span class="line">          <span class="attr">&quot;employer&quot;</span> <span class="punctuation">:</span> <span class="string">&quot;Pheast&quot;</span><span class="punctuation">,</span></span><br><span class="line">          <span class="attr">&quot;email&quot;</span> <span class="punctuation">:</span> <span class="string">&quot;forbeswallace@pheast.com&quot;</span><span class="punctuation">,</span></span><br><span class="line">          <span class="attr">&quot;city&quot;</span> <span class="punctuation">:</span> <span class="string">&quot;Lopezo&quot;</span><span class="punctuation">,</span></span><br><span class="line">          <span class="attr">&quot;state&quot;</span> <span class="punctuation">:</span> <span class="string">&quot;AK&quot;</span></span><br><span class="line">        <span class="punctuation">&#125;</span></span><br><span class="line">      <span class="punctuation">&#125;</span><span class="punctuation">,</span></span><br><span class="line">      <span class="punctuation">&#123;</span></span><br><span class="line">        <span class="attr">&quot;_index&quot;</span> <span class="punctuation">:</span> <span class="string">&quot;bank&quot;</span><span class="punctuation">,</span></span><br><span class="line">        <span class="attr">&quot;_type&quot;</span> <span class="punctuation">:</span> <span class="string">&quot;account&quot;</span><span class="punctuation">,</span></span><br><span class="line">        <span class="attr">&quot;_id&quot;</span> <span class="punctuation">:</span> <span class="string">&quot;136&quot;</span><span class="punctuation">,</span></span><br><span class="line">        <span class="attr">&quot;_score&quot;</span> <span class="punctuation">:</span> <span class="number">6.0824604</span><span class="punctuation">,</span></span><br><span class="line">        <span class="attr">&quot;_source&quot;</span> <span class="punctuation">:</span> <span class="punctuation">&#123;</span></span><br><span class="line">          <span class="attr">&quot;account_number&quot;</span> <span class="punctuation">:</span> <span class="number">136</span><span class="punctuation">,</span></span><br><span class="line">          <span class="attr">&quot;balance&quot;</span> <span class="punctuation">:</span> <span class="number">45801</span><span class="punctuation">,</span></span><br><span class="line">          <span class="attr">&quot;firstname&quot;</span> <span class="punctuation">:</span> <span class="string">&quot;Winnie&quot;</span><span class="punctuation">,</span></span><br><span class="line">          <span class="attr">&quot;lastname&quot;</span> <span class="punctuation">:</span> <span class="string">&quot;Holland&quot;</span><span class="punctuation">,</span></span><br><span class="line">          <span class="attr">&quot;age&quot;</span> <span class="punctuation">:</span> <span class="number">38</span><span class="punctuation">,</span></span><br><span class="line">          <span class="attr">&quot;gender&quot;</span> <span class="punctuation">:</span> <span class="string">&quot;M&quot;</span><span class="punctuation">,</span></span><br><span class="line">          <span class="attr">&quot;address&quot;</span> <span class="punctuation">:</span> <span class="string">&quot;198 Mill Lane&quot;</span><span class="punctuation">,</span></span><br><span class="line">          <span class="attr">&quot;employer&quot;</span> <span class="punctuation">:</span> <span class="string">&quot;Neteria&quot;</span><span class="punctuation">,</span></span><br><span class="line">          <span class="attr">&quot;email&quot;</span> <span class="punctuation">:</span> <span class="string">&quot;winnieholland@neteria.com&quot;</span><span class="punctuation">,</span></span><br><span class="line">          <span class="attr">&quot;city&quot;</span> <span class="punctuation">:</span> <span class="string">&quot;Urie&quot;</span><span class="punctuation">,</span></span><br><span class="line">          <span class="attr">&quot;state&quot;</span> <span class="punctuation">:</span> <span class="string">&quot;IL&quot;</span></span><br><span class="line">        <span class="punctuation">&#125;</span></span><br><span class="line">      <span class="punctuation">&#125;</span><span class="punctuation">,</span></span><br><span class="line">      <span class="punctuation">&#123;</span></span><br><span class="line">        <span class="attr">&quot;_index&quot;</span> <span class="punctuation">:</span> <span class="string">&quot;bank&quot;</span><span class="punctuation">,</span></span><br><span class="line">        <span class="attr">&quot;_type&quot;</span> <span class="punctuation">:</span> <span class="string">&quot;account&quot;</span><span class="punctuation">,</span></span><br><span class="line">        <span class="attr">&quot;_id&quot;</span> <span class="punctuation">:</span> <span class="string">&quot;345&quot;</span><span class="punctuation">,</span></span><br><span class="line">        <span class="attr">&quot;_score&quot;</span> <span class="punctuation">:</span> <span class="number">6.0824604</span><span class="punctuation">,</span></span><br><span class="line">        <span class="attr">&quot;_source&quot;</span> <span class="punctuation">:</span> <span class="punctuation">&#123;</span></span><br><span class="line">          <span class="attr">&quot;account_number&quot;</span> <span class="punctuation">:</span> <span class="number">345</span><span class="punctuation">,</span></span><br><span class="line">          <span class="attr">&quot;balance&quot;</span> <span class="punctuation">:</span> <span class="number">9812</span><span class="punctuation">,</span></span><br><span class="line">          <span class="attr">&quot;firstname&quot;</span> <span class="punctuation">:</span> <span class="string">&quot;Parker&quot;</span><span class="punctuation">,</span></span><br><span class="line">          <span class="attr">&quot;lastname&quot;</span> <span class="punctuation">:</span> <span class="string">&quot;Hines&quot;</span><span class="punctuation">,</span></span><br><span class="line">          <span class="attr">&quot;age&quot;</span> <span class="punctuation">:</span> <span class="number">38</span><span class="punctuation">,</span></span><br><span class="line">          <span class="attr">&quot;gender&quot;</span> <span class="punctuation">:</span> <span class="string">&quot;M&quot;</span><span class="punctuation">,</span></span><br><span class="line">          <span class="attr">&quot;address&quot;</span> <span class="punctuation">:</span> <span class="string">&quot;715 Mill Avenue&quot;</span><span class="punctuation">,</span></span><br><span class="line">          <span class="attr">&quot;employer&quot;</span> <span class="punctuation">:</span> <span class="string">&quot;Baluba&quot;</span><span class="punctuation">,</span></span><br><span class="line">          <span class="attr">&quot;email&quot;</span> <span class="punctuation">:</span> <span class="string">&quot;parkerhines@baluba.com&quot;</span><span class="punctuation">,</span></span><br><span class="line">          <span class="attr">&quot;city&quot;</span> <span class="punctuation">:</span> <span class="string">&quot;Blackgum&quot;</span><span class="punctuation">,</span></span><br><span class="line">          <span class="attr">&quot;state&quot;</span> <span class="punctuation">:</span> <span class="string">&quot;KY&quot;</span></span><br><span class="line">        <span class="punctuation">&#125;</span></span><br><span class="line">      <span class="punctuation">&#125;</span></span><br><span class="line">    <span class="punctuation">]</span></span><br><span class="line">  <span class="punctuation">&#125;</span></span><br><span class="line"><span class="punctuation">&#125;</span></span><br></pre></td></tr></table></figure><p>能够看到相关度越高，得分也越高。</p><h4 id="（7）Filter【结果过滤】"><a href="#（7）Filter【结果过滤】" class="headerlink" title="（7）Filter【结果过滤】"></a>（7）Filter【结果过滤】</h4><p>并不是所有的查询都需要产生分数，特别是哪些仅用于filtering过滤的文档。为了不计算分数，elasticsearch会自动检查场景并且优化查询的执行。</p><figure class="highlight json"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br></pre></td><td class="code"><pre><span class="line">GET bank/_search</span><br><span class="line"><span class="punctuation">&#123;</span></span><br><span class="line">  <span class="attr">&quot;query&quot;</span><span class="punctuation">:</span> <span class="punctuation">&#123;</span></span><br><span class="line">    <span class="attr">&quot;bool&quot;</span><span class="punctuation">:</span> <span class="punctuation">&#123;</span></span><br><span class="line">      <span class="attr">&quot;must&quot;</span><span class="punctuation">:</span> <span class="punctuation">[</span></span><br><span class="line">        <span class="punctuation">&#123;</span></span><br><span class="line">          <span class="attr">&quot;match&quot;</span><span class="punctuation">:</span> <span class="punctuation">&#123;</span></span><br><span class="line">            <span class="attr">&quot;address&quot;</span><span class="punctuation">:</span> <span class="string">&quot;mill&quot;</span></span><br><span class="line">          <span class="punctuation">&#125;</span></span><br><span class="line">        <span class="punctuation">&#125;</span></span><br><span class="line">      <span class="punctuation">]</span><span class="punctuation">,</span></span><br><span class="line">      <span class="attr">&quot;filter&quot;</span><span class="punctuation">:</span> <span class="punctuation">&#123;</span></span><br><span class="line">        <span class="attr">&quot;range&quot;</span><span class="punctuation">:</span> <span class="punctuation">&#123;</span></span><br><span class="line">          <span class="attr">&quot;balance&quot;</span><span class="punctuation">:</span> <span class="punctuation">&#123;</span></span><br><span class="line">            <span class="attr">&quot;gte&quot;</span><span class="punctuation">:</span> <span class="string">&quot;10000&quot;</span><span class="punctuation">,</span></span><br><span class="line">            <span class="attr">&quot;lte&quot;</span><span class="punctuation">:</span> <span class="string">&quot;20000&quot;</span></span><br><span class="line">          <span class="punctuation">&#125;</span></span><br><span class="line">        <span class="punctuation">&#125;</span></span><br><span class="line">      <span class="punctuation">&#125;</span></span><br><span class="line">    <span class="punctuation">&#125;</span></span><br><span class="line">  <span class="punctuation">&#125;</span></span><br><span class="line"><span class="punctuation">&#125;</span></span><br></pre></td></tr></table></figure><p>这里先是查询所有匹配address=mill的文档，然后再根据10000&lt;=balance&lt;=20000进行过滤查询结果</p><p>查询结果：</p><figure class="highlight json"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br></pre></td><td class="code"><pre><span class="line"><span class="punctuation">&#123;</span></span><br><span class="line">  <span class="attr">&quot;took&quot;</span> <span class="punctuation">:</span> <span class="number">1</span><span class="punctuation">,</span></span><br><span class="line">  <span class="attr">&quot;timed_out&quot;</span> <span class="punctuation">:</span> <span class="keyword">false</span><span class="punctuation">,</span></span><br><span class="line">  <span class="attr">&quot;_shards&quot;</span> <span class="punctuation">:</span> <span class="punctuation">&#123;</span></span><br><span class="line">    <span class="attr">&quot;total&quot;</span> <span class="punctuation">:</span> <span class="number">1</span><span class="punctuation">,</span></span><br><span class="line">    <span class="attr">&quot;successful&quot;</span> <span class="punctuation">:</span> <span class="number">1</span><span class="punctuation">,</span></span><br><span class="line">    <span class="attr">&quot;skipped&quot;</span> <span class="punctuation">:</span> <span class="number">0</span><span class="punctuation">,</span></span><br><span class="line">    <span class="attr">&quot;failed&quot;</span> <span class="punctuation">:</span> <span class="number">0</span></span><br><span class="line">  <span class="punctuation">&#125;</span><span class="punctuation">,</span></span><br><span class="line">  <span class="attr">&quot;hits&quot;</span> <span class="punctuation">:</span> <span class="punctuation">&#123;</span></span><br><span class="line">    <span class="attr">&quot;total&quot;</span> <span class="punctuation">:</span> <span class="punctuation">&#123;</span></span><br><span class="line">      <span class="attr">&quot;value&quot;</span> <span class="punctuation">:</span> <span class="number">1</span><span class="punctuation">,</span></span><br><span class="line">      <span class="attr">&quot;relation&quot;</span> <span class="punctuation">:</span> <span class="string">&quot;eq&quot;</span></span><br><span class="line">    <span class="punctuation">&#125;</span><span class="punctuation">,</span></span><br><span class="line">    <span class="attr">&quot;max_score&quot;</span> <span class="punctuation">:</span> <span class="number">5.4032025</span><span class="punctuation">,</span></span><br><span class="line">    <span class="attr">&quot;hits&quot;</span> <span class="punctuation">:</span> <span class="punctuation">[</span></span><br><span class="line">      <span class="punctuation">&#123;</span></span><br><span class="line">        <span class="attr">&quot;_index&quot;</span> <span class="punctuation">:</span> <span class="string">&quot;bank&quot;</span><span class="punctuation">,</span></span><br><span class="line">        <span class="attr">&quot;_type&quot;</span> <span class="punctuation">:</span> <span class="string">&quot;account&quot;</span><span class="punctuation">,</span></span><br><span class="line">        <span class="attr">&quot;_id&quot;</span> <span class="punctuation">:</span> <span class="string">&quot;970&quot;</span><span class="punctuation">,</span></span><br><span class="line">        <span class="attr">&quot;_score&quot;</span> <span class="punctuation">:</span> <span class="number">5.4032025</span><span class="punctuation">,</span></span><br><span class="line">        <span class="attr">&quot;_source&quot;</span> <span class="punctuation">:</span> <span class="punctuation">&#123;</span></span><br><span class="line">          <span class="attr">&quot;account_number&quot;</span> <span class="punctuation">:</span> <span class="number">970</span><span class="punctuation">,</span></span><br><span class="line">          <span class="attr">&quot;balance&quot;</span> <span class="punctuation">:</span> <span class="number">19648</span><span class="punctuation">,</span></span><br><span class="line">          <span class="attr">&quot;firstname&quot;</span> <span class="punctuation">:</span> <span class="string">&quot;Forbes&quot;</span><span class="punctuation">,</span></span><br><span class="line">          <span class="attr">&quot;lastname&quot;</span> <span class="punctuation">:</span> <span class="string">&quot;Wallace&quot;</span><span class="punctuation">,</span></span><br><span class="line">          <span class="attr">&quot;age&quot;</span> <span class="punctuation">:</span> <span class="number">28</span><span class="punctuation">,</span></span><br><span class="line">          <span class="attr">&quot;gender&quot;</span> <span class="punctuation">:</span> <span class="string">&quot;M&quot;</span><span class="punctuation">,</span></span><br><span class="line">          <span class="attr">&quot;address&quot;</span> <span class="punctuation">:</span> <span class="string">&quot;990 Mill Road&quot;</span><span class="punctuation">,</span></span><br><span class="line">          <span class="attr">&quot;employer&quot;</span> <span class="punctuation">:</span> <span class="string">&quot;Pheast&quot;</span><span class="punctuation">,</span></span><br><span class="line">          <span class="attr">&quot;email&quot;</span> <span class="punctuation">:</span> <span class="string">&quot;forbeswallace@pheast.com&quot;</span><span class="punctuation">,</span></span><br><span class="line">          <span class="attr">&quot;city&quot;</span> <span class="punctuation">:</span> <span class="string">&quot;Lopezo&quot;</span><span class="punctuation">,</span></span><br><span class="line">          <span class="attr">&quot;state&quot;</span> <span class="punctuation">:</span> <span class="string">&quot;AK&quot;</span></span><br><span class="line">        <span class="punctuation">&#125;</span></span><br><span class="line">      <span class="punctuation">&#125;</span></span><br><span class="line">    <span class="punctuation">]</span></span><br><span class="line">  <span class="punctuation">&#125;</span></span><br><span class="line"><span class="punctuation">&#125;</span></span><br></pre></td></tr></table></figure><p>Each <code>must</code>, <code>should</code>, and <code>must_not</code> element in a Boolean query is referred to as a query clause. How well a document meets the criteria in each <code>must</code> or <code>should</code> clause contributes to the document’s <em>relevance score</em>. The higher the score, the better the document matches your search criteria. By default, Elasticsearch returns documents ranked by these relevance scores.</p><p> 在boolean查询中，<code>must</code>, <code>should</code> 和<code>must_not</code> 元素都被称为查询子句 。 文档是否符合每个“must”或“should”子句中的标准，决定了文档的“相关性得分”。  得分越高，文档越符合您的搜索条件。  默认情况下，Elasticsearch返回根据这些相关性得分排序的文档。 </p><p>The criteria in a <code>must_not</code> clause is treated as a <em>filter</em>. It affects whether or not the document is included in the results, but does not contribute to how documents are scored. You can also explicitly specify arbitrary filters to include or exclude documents based on structured data.</p><p><code>“must_not”子句中的条件被视为“过滤器”。</code> 它影响文档是否包含在结果中，  但不影响文档的评分方式。  还可以显式地指定任意过滤器来包含或排除基于结构化数据的文档。 </p><p>filter在使用过程中，并不会计算相关性得分：</p><figure class="highlight json"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line">GET bank/_search</span><br><span class="line"><span class="punctuation">&#123;</span></span><br><span class="line">  <span class="attr">&quot;query&quot;</span><span class="punctuation">:</span> <span class="punctuation">&#123;</span></span><br><span class="line">    <span class="attr">&quot;bool&quot;</span><span class="punctuation">:</span> <span class="punctuation">&#123;</span></span><br><span class="line">      <span class="attr">&quot;filter&quot;</span><span class="punctuation">:</span> <span class="punctuation">&#123;</span></span><br><span class="line">        <span class="attr">&quot;range&quot;</span><span class="punctuation">:</span> <span class="punctuation">&#123;</span></span><br><span class="line">          <span class="attr">&quot;balance&quot;</span><span class="punctuation">:</span> <span class="punctuation">&#123;</span></span><br><span class="line">            <span class="attr">&quot;gte&quot;</span><span class="punctuation">:</span> <span class="string">&quot;10000&quot;</span><span class="punctuation">,</span></span><br><span class="line">            <span class="attr">&quot;lte&quot;</span><span class="punctuation">:</span> <span class="string">&quot;20000&quot;</span></span><br><span class="line">          <span class="punctuation">&#125;</span></span><br><span class="line">        <span class="punctuation">&#125;</span></span><br><span class="line">      <span class="punctuation">&#125;</span></span><br><span class="line">    <span class="punctuation">&#125;</span></span><br><span class="line">  <span class="punctuation">&#125;</span></span><br><span class="line"><span class="punctuation">&#125;</span></span><br></pre></td></tr></table></figure><p>查询结果：</p><figure class="highlight json"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br></pre></td><td class="code"><pre><span class="line"><span class="punctuation">&#123;</span></span><br><span class="line">  <span class="attr">&quot;took&quot;</span> <span class="punctuation">:</span> <span class="number">1</span><span class="punctuation">,</span></span><br><span class="line">  <span class="attr">&quot;timed_out&quot;</span> <span class="punctuation">:</span> <span class="keyword">false</span><span class="punctuation">,</span></span><br><span class="line">  <span class="attr">&quot;_shards&quot;</span> <span class="punctuation">:</span> <span class="punctuation">&#123;</span></span><br><span class="line">    <span class="attr">&quot;total&quot;</span> <span class="punctuation">:</span> <span class="number">1</span><span class="punctuation">,</span></span><br><span class="line">    <span class="attr">&quot;successful&quot;</span> <span class="punctuation">:</span> <span class="number">1</span><span class="punctuation">,</span></span><br><span class="line">    <span class="attr">&quot;skipped&quot;</span> <span class="punctuation">:</span> <span class="number">0</span><span class="punctuation">,</span></span><br><span class="line">    <span class="attr">&quot;failed&quot;</span> <span class="punctuation">:</span> <span class="number">0</span></span><br><span class="line">  <span class="punctuation">&#125;</span><span class="punctuation">,</span></span><br><span class="line">  <span class="attr">&quot;hits&quot;</span> <span class="punctuation">:</span> <span class="punctuation">&#123;</span></span><br><span class="line">    <span class="attr">&quot;total&quot;</span> <span class="punctuation">:</span> <span class="punctuation">&#123;</span></span><br><span class="line">      <span class="attr">&quot;value&quot;</span> <span class="punctuation">:</span> <span class="number">213</span><span class="punctuation">,</span></span><br><span class="line">      <span class="attr">&quot;relation&quot;</span> <span class="punctuation">:</span> <span class="string">&quot;eq&quot;</span></span><br><span class="line">    <span class="punctuation">&#125;</span><span class="punctuation">,</span></span><br><span class="line">    <span class="attr">&quot;max_score&quot;</span> <span class="punctuation">:</span> <span class="number">0.0</span><span class="punctuation">,</span></span><br><span class="line">    <span class="attr">&quot;hits&quot;</span> <span class="punctuation">:</span> <span class="punctuation">[</span></span><br><span class="line">      <span class="punctuation">&#123;</span></span><br><span class="line">        <span class="attr">&quot;_index&quot;</span> <span class="punctuation">:</span> <span class="string">&quot;bank&quot;</span><span class="punctuation">,</span></span><br><span class="line">        <span class="attr">&quot;_type&quot;</span> <span class="punctuation">:</span> <span class="string">&quot;account&quot;</span><span class="punctuation">,</span></span><br><span class="line">        <span class="attr">&quot;_id&quot;</span> <span class="punctuation">:</span> <span class="string">&quot;20&quot;</span><span class="punctuation">,</span></span><br><span class="line">        <span class="attr">&quot;_score&quot;</span> <span class="punctuation">:</span> <span class="number">0.0</span><span class="punctuation">,</span></span><br><span class="line">        <span class="attr">&quot;_source&quot;</span> <span class="punctuation">:</span> <span class="punctuation">&#123;</span></span><br><span class="line">          <span class="attr">&quot;account_number&quot;</span> <span class="punctuation">:</span> <span class="number">20</span><span class="punctuation">,</span></span><br><span class="line">          <span class="attr">&quot;balance&quot;</span> <span class="punctuation">:</span> <span class="number">16418</span><span class="punctuation">,</span></span><br><span class="line">          <span class="attr">&quot;firstname&quot;</span> <span class="punctuation">:</span> <span class="string">&quot;Elinor&quot;</span><span class="punctuation">,</span></span><br><span class="line">          <span class="attr">&quot;lastname&quot;</span> <span class="punctuation">:</span> <span class="string">&quot;Ratliff&quot;</span><span class="punctuation">,</span></span><br><span class="line">          <span class="attr">&quot;age&quot;</span> <span class="punctuation">:</span> <span class="number">36</span><span class="punctuation">,</span></span><br><span class="line">          <span class="attr">&quot;gender&quot;</span> <span class="punctuation">:</span> <span class="string">&quot;M&quot;</span><span class="punctuation">,</span></span><br><span class="line">          <span class="attr">&quot;address&quot;</span> <span class="punctuation">:</span> <span class="string">&quot;282 Kings Place&quot;</span><span class="punctuation">,</span></span><br><span class="line">          <span class="attr">&quot;employer&quot;</span> <span class="punctuation">:</span> <span class="string">&quot;Scentric&quot;</span><span class="punctuation">,</span></span><br><span class="line">          <span class="attr">&quot;email&quot;</span> <span class="punctuation">:</span> <span class="string">&quot;elinorratliff@scentric.com&quot;</span><span class="punctuation">,</span></span><br><span class="line">          <span class="attr">&quot;city&quot;</span> <span class="punctuation">:</span> <span class="string">&quot;Ribera&quot;</span><span class="punctuation">,</span></span><br><span class="line">          <span class="attr">&quot;state&quot;</span> <span class="punctuation">:</span> <span class="string">&quot;WA&quot;</span></span><br><span class="line">        <span class="punctuation">&#125;</span></span><br><span class="line">      <span class="punctuation">&#125;</span><span class="punctuation">,</span></span><br><span class="line">      <span class="punctuation">&#123;</span></span><br><span class="line">        <span class="attr">&quot;_index&quot;</span> <span class="punctuation">:</span> <span class="string">&quot;bank&quot;</span><span class="punctuation">,</span></span><br><span class="line">        <span class="attr">&quot;_type&quot;</span> <span class="punctuation">:</span> <span class="string">&quot;account&quot;</span><span class="punctuation">,</span></span><br><span class="line">        <span class="attr">&quot;_id&quot;</span> <span class="punctuation">:</span> <span class="string">&quot;37&quot;</span><span class="punctuation">,</span></span><br><span class="line">        <span class="attr">&quot;_score&quot;</span> <span class="punctuation">:</span> <span class="number">0.0</span><span class="punctuation">,</span></span><br><span class="line">        <span class="attr">&quot;_source&quot;</span> <span class="punctuation">:</span> <span class="punctuation">&#123;</span></span><br><span class="line">          <span class="attr">&quot;account_number&quot;</span> <span class="punctuation">:</span> <span class="number">37</span><span class="punctuation">,</span></span><br><span class="line">          <span class="attr">&quot;balance&quot;</span> <span class="punctuation">:</span> <span class="number">18612</span><span class="punctuation">,</span></span><br><span class="line">          <span class="attr">&quot;firstname&quot;</span> <span class="punctuation">:</span> <span class="string">&quot;Mcgee&quot;</span><span class="punctuation">,</span></span><br><span class="line">          <span class="attr">&quot;lastname&quot;</span> <span class="punctuation">:</span> <span class="string">&quot;Mooney&quot;</span><span class="punctuation">,</span></span><br><span class="line">          <span class="attr">&quot;age&quot;</span> <span class="punctuation">:</span> <span class="number">39</span><span class="punctuation">,</span></span><br><span class="line">          <span class="attr">&quot;gender&quot;</span> <span class="punctuation">:</span> <span class="string">&quot;M&quot;</span><span class="punctuation">,</span></span><br><span class="line">          <span class="attr">&quot;address&quot;</span> <span class="punctuation">:</span> <span class="string">&quot;826 Fillmore Place&quot;</span><span class="punctuation">,</span></span><br><span class="line">          <span class="attr">&quot;employer&quot;</span> <span class="punctuation">:</span> <span class="string">&quot;Reversus&quot;</span><span class="punctuation">,</span></span><br><span class="line">          <span class="attr">&quot;email&quot;</span> <span class="punctuation">:</span> <span class="string">&quot;mcgeemooney@reversus.com&quot;</span><span class="punctuation">,</span></span><br><span class="line">          <span class="attr">&quot;city&quot;</span> <span class="punctuation">:</span> <span class="string">&quot;Tooleville&quot;</span><span class="punctuation">,</span></span><br><span class="line">          <span class="attr">&quot;state&quot;</span> <span class="punctuation">:</span> <span class="string">&quot;OK&quot;</span></span><br><span class="line">        <span class="punctuation">&#125;</span></span><br><span class="line">      <span class="punctuation">&#125;</span><span class="punctuation">,</span></span><br><span class="line">      ......</span><br></pre></td></tr></table></figure><p><strong>能看到所有文档的 “_score” : 0.0。</strong></p><h4 id="（8）term"><a href="#（8）term" class="headerlink" title="（8）term"></a>（8）term</h4><p>和match一样。匹配某个属性的值。全文检索字段用match，其他非text字段匹配用term。</p><blockquote><p>Avoid using the <code>term</code> query for <a href="https://www.elastic.co/guide/en/elasticsearch/reference/7.6/text.html"><code>text</code></a> fields.</p><p>避免对文本字段使用“term”查询</p><p>By default, Elasticsearch changes the values of <code>text</code> fields as part of <a href="">analysis</a>. This can make finding exact matches for <code>text</code> field values difficult.</p><p>默认情况下，Elasticsearch作为<a href="">analysis</a>的一部分更改’ text ‘字段的值。这使得为“text”字段值寻找精确匹配变得困难。 </p><p>To search <code>text</code> field values, use the match.</p><p>要搜索“text”字段值，请使用匹配。</p><p><a href="https://www.elastic.co/guide/en/elasticsearch/reference/7.6/query-dsl-term-query.html">https://www.elastic.co/guide/en/elasticsearch/reference/7.6/query-dsl-term-query.html</a> </p></blockquote><p>使用term匹配查询</p><figure class="highlight json"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">GET bank/_search</span><br><span class="line"><span class="punctuation">&#123;</span></span><br><span class="line">  <span class="attr">&quot;query&quot;</span><span class="punctuation">:</span> <span class="punctuation">&#123;</span></span><br><span class="line">    <span class="attr">&quot;term&quot;</span><span class="punctuation">:</span> <span class="punctuation">&#123;</span></span><br><span class="line">      <span class="attr">&quot;address&quot;</span><span class="punctuation">:</span> <span class="string">&quot;mill Road&quot;</span></span><br><span class="line">    <span class="punctuation">&#125;</span></span><br><span class="line">  <span class="punctuation">&#125;</span></span><br><span class="line"><span class="punctuation">&#125;</span></span><br></pre></td></tr></table></figure><p>查询结果：</p><figure class="highlight json"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br></pre></td><td class="code"><pre><span class="line"><span class="punctuation">&#123;</span></span><br><span class="line">  <span class="attr">&quot;took&quot;</span> <span class="punctuation">:</span> <span class="number">0</span><span class="punctuation">,</span></span><br><span class="line">  <span class="attr">&quot;timed_out&quot;</span> <span class="punctuation">:</span> <span class="keyword">false</span><span class="punctuation">,</span></span><br><span class="line">  <span class="attr">&quot;_shards&quot;</span> <span class="punctuation">:</span> <span class="punctuation">&#123;</span></span><br><span class="line">    <span class="attr">&quot;total&quot;</span> <span class="punctuation">:</span> <span class="number">1</span><span class="punctuation">,</span></span><br><span class="line">    <span class="attr">&quot;successful&quot;</span> <span class="punctuation">:</span> <span class="number">1</span><span class="punctuation">,</span></span><br><span class="line">    <span class="attr">&quot;skipped&quot;</span> <span class="punctuation">:</span> <span class="number">0</span><span class="punctuation">,</span></span><br><span class="line">    <span class="attr">&quot;failed&quot;</span> <span class="punctuation">:</span> <span class="number">0</span></span><br><span class="line">  <span class="punctuation">&#125;</span><span class="punctuation">,</span></span><br><span class="line">  <span class="attr">&quot;hits&quot;</span> <span class="punctuation">:</span> <span class="punctuation">&#123;</span></span><br><span class="line">    <span class="attr">&quot;total&quot;</span> <span class="punctuation">:</span> <span class="punctuation">&#123;</span></span><br><span class="line">      <span class="attr">&quot;value&quot;</span> <span class="punctuation">:</span> <span class="number">0</span><span class="punctuation">,</span></span><br><span class="line">      <span class="attr">&quot;relation&quot;</span> <span class="punctuation">:</span> <span class="string">&quot;eq&quot;</span></span><br><span class="line">    <span class="punctuation">&#125;</span><span class="punctuation">,</span></span><br><span class="line">    <span class="attr">&quot;max_score&quot;</span> <span class="punctuation">:</span> <span class="keyword">null</span><span class="punctuation">,</span></span><br><span class="line">    <span class="attr">&quot;hits&quot;</span> <span class="punctuation">:</span> <span class="punctuation">[</span> <span class="punctuation">]</span></span><br><span class="line">  <span class="punctuation">&#125;</span></span><br><span class="line"><span class="punctuation">&#125;</span></span><br><span class="line"></span><br></pre></td></tr></table></figure><p>一条也没有匹配到</p><p>而更换为match匹配时，能够匹配到32个文档</p><p><img src="https://cdn.jsdelivr.net/gh/zsxfa/CDN/img/md/2022/03/30/1648633368.png" alt="desc"></p><p>也就是说，<strong>全文检索字段用match，其他非text字段匹配用term</strong>。</p><h4 id="（9）Aggregation（执行聚合）"><a href="#（9）Aggregation（执行聚合）" class="headerlink" title="（9）Aggregation（执行聚合）"></a>（9）Aggregation（执行聚合）</h4><p>聚合提供了从数据中分组和提取数据的能力。最简单的聚合方法大致等于SQL Group by和SQL聚合函数。在elasticsearch中，执行搜索返回this（命中结果），并且同时返回聚合结果，把以响应中的所有hits（命中结果）分隔开的能力。这是非常强大且有效的，你可以执行查询和多个聚合，并且在一次使用中得到各自的（任何一个的）返回结果，使用一次简洁和简化的API啦避免网络往返。</p><p>“size”:0</p><p>size:0不显示搜索数据<br>aggs：执行聚合。聚合语法如下：</p><figure class="highlight json"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="attr">&quot;aggs&quot;</span><span class="punctuation">:</span><span class="punctuation">&#123;</span></span><br><span class="line">    <span class="attr">&quot;aggs_name这次聚合的名字，方便展示在结果集中&quot;</span><span class="punctuation">:</span><span class="punctuation">&#123;</span></span><br><span class="line">        <span class="attr">&quot;AGG_TYPE聚合的类型(avg,term,terms)&quot;</span><span class="punctuation">:</span><span class="punctuation">&#123;</span><span class="punctuation">&#125;</span></span><br><span class="line">     <span class="punctuation">&#125;</span></span><br><span class="line"><span class="punctuation">&#125;</span>，</span><br></pre></td></tr></table></figure><p><strong>搜索address中包含mill的所有人的年龄分布以及平均年龄，但不显示这些人的详情</strong></p><figure class="highlight json"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br></pre></td><td class="code"><pre><span class="line">GET bank/_search</span><br><span class="line"><span class="punctuation">&#123;</span></span><br><span class="line">  <span class="attr">&quot;query&quot;</span><span class="punctuation">:</span> <span class="punctuation">&#123;</span></span><br><span class="line">    <span class="attr">&quot;match&quot;</span><span class="punctuation">:</span> <span class="punctuation">&#123;</span></span><br><span class="line">      <span class="attr">&quot;address&quot;</span><span class="punctuation">:</span> <span class="string">&quot;Mill&quot;</span></span><br><span class="line">    <span class="punctuation">&#125;</span></span><br><span class="line">  <span class="punctuation">&#125;</span><span class="punctuation">,</span></span><br><span class="line">  <span class="attr">&quot;aggs&quot;</span><span class="punctuation">:</span> <span class="punctuation">&#123;</span></span><br><span class="line">    <span class="attr">&quot;ageAgg&quot;</span><span class="punctuation">:</span> <span class="punctuation">&#123;</span></span><br><span class="line">      <span class="attr">&quot;terms&quot;</span><span class="punctuation">:</span> <span class="punctuation">&#123;</span></span><br><span class="line">        <span class="attr">&quot;field&quot;</span><span class="punctuation">:</span> <span class="string">&quot;age&quot;</span><span class="punctuation">,</span></span><br><span class="line">        <span class="attr">&quot;size&quot;</span><span class="punctuation">:</span> <span class="number">10</span> #假设年龄有<span class="number">100</span>种可能，只取出<span class="number">10</span>个</span><br><span class="line">      <span class="punctuation">&#125;</span></span><br><span class="line">    <span class="punctuation">&#125;</span><span class="punctuation">,</span></span><br><span class="line">    <span class="attr">&quot;ageAvg&quot;</span><span class="punctuation">:</span> <span class="punctuation">&#123;</span></span><br><span class="line">      <span class="attr">&quot;avg&quot;</span><span class="punctuation">:</span> <span class="punctuation">&#123;</span></span><br><span class="line">        <span class="attr">&quot;field&quot;</span><span class="punctuation">:</span> <span class="string">&quot;age&quot;</span></span><br><span class="line">      <span class="punctuation">&#125;</span></span><br><span class="line">    <span class="punctuation">&#125;</span><span class="punctuation">,</span></span><br><span class="line">    <span class="attr">&quot;balanceAvg&quot;</span><span class="punctuation">:</span> <span class="punctuation">&#123;</span></span><br><span class="line">      <span class="attr">&quot;avg&quot;</span><span class="punctuation">:</span> <span class="punctuation">&#123;</span></span><br><span class="line">        <span class="attr">&quot;field&quot;</span><span class="punctuation">:</span> <span class="string">&quot;balance&quot;</span></span><br><span class="line">      <span class="punctuation">&#125;</span></span><br><span class="line">    <span class="punctuation">&#125;</span></span><br><span class="line">  <span class="punctuation">&#125;</span><span class="punctuation">,</span></span><br><span class="line">  <span class="attr">&quot;size&quot;</span><span class="punctuation">:</span> <span class="number">0</span></span><br><span class="line"><span class="punctuation">&#125;</span></span><br></pre></td></tr></table></figure><p>查询结果：</p><figure class="highlight json"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br></pre></td><td class="code"><pre><span class="line"><span class="punctuation">&#123;</span></span><br><span class="line">  <span class="attr">&quot;took&quot;</span> <span class="punctuation">:</span> <span class="number">1</span><span class="punctuation">,</span></span><br><span class="line">  <span class="attr">&quot;timed_out&quot;</span> <span class="punctuation">:</span> <span class="keyword">false</span><span class="punctuation">,</span></span><br><span class="line">  <span class="attr">&quot;_shards&quot;</span> <span class="punctuation">:</span> <span class="punctuation">&#123;</span></span><br><span class="line">    <span class="attr">&quot;total&quot;</span> <span class="punctuation">:</span> <span class="number">1</span><span class="punctuation">,</span></span><br><span class="line">    <span class="attr">&quot;successful&quot;</span> <span class="punctuation">:</span> <span class="number">1</span><span class="punctuation">,</span></span><br><span class="line">    <span class="attr">&quot;skipped&quot;</span> <span class="punctuation">:</span> <span class="number">0</span><span class="punctuation">,</span></span><br><span class="line">    <span class="attr">&quot;failed&quot;</span> <span class="punctuation">:</span> <span class="number">0</span></span><br><span class="line">  <span class="punctuation">&#125;</span><span class="punctuation">,</span></span><br><span class="line">  <span class="attr">&quot;hits&quot;</span> <span class="punctuation">:</span> <span class="punctuation">&#123;</span></span><br><span class="line">    <span class="attr">&quot;total&quot;</span> <span class="punctuation">:</span> <span class="punctuation">&#123;</span></span><br><span class="line">      <span class="attr">&quot;value&quot;</span> <span class="punctuation">:</span> <span class="number">4</span><span class="punctuation">,</span></span><br><span class="line">      <span class="attr">&quot;relation&quot;</span> <span class="punctuation">:</span> <span class="string">&quot;eq&quot;</span></span><br><span class="line">    <span class="punctuation">&#125;</span><span class="punctuation">,</span></span><br><span class="line">    <span class="attr">&quot;max_score&quot;</span> <span class="punctuation">:</span> <span class="keyword">null</span><span class="punctuation">,</span></span><br><span class="line">    <span class="attr">&quot;hits&quot;</span> <span class="punctuation">:</span> <span class="punctuation">[</span> <span class="punctuation">]</span></span><br><span class="line">  <span class="punctuation">&#125;</span><span class="punctuation">,</span></span><br><span class="line">  <span class="attr">&quot;aggregations&quot;</span> <span class="punctuation">:</span> <span class="punctuation">&#123;</span></span><br><span class="line">    <span class="attr">&quot;ageAgg&quot;</span> <span class="punctuation">:</span> <span class="punctuation">&#123;</span></span><br><span class="line">      <span class="attr">&quot;doc_count_error_upper_bound&quot;</span> <span class="punctuation">:</span> <span class="number">0</span><span class="punctuation">,</span></span><br><span class="line">      <span class="attr">&quot;sum_other_doc_count&quot;</span> <span class="punctuation">:</span> <span class="number">0</span><span class="punctuation">,</span></span><br><span class="line">      <span class="attr">&quot;buckets&quot;</span> <span class="punctuation">:</span> <span class="punctuation">[</span></span><br><span class="line">        <span class="punctuation">&#123;</span></span><br><span class="line">          <span class="attr">&quot;key&quot;</span> <span class="punctuation">:</span> <span class="number">38</span><span class="punctuation">,</span></span><br><span class="line">          <span class="attr">&quot;doc_count&quot;</span> <span class="punctuation">:</span> <span class="number">2</span></span><br><span class="line">        <span class="punctuation">&#125;</span><span class="punctuation">,</span></span><br><span class="line">        <span class="punctuation">&#123;</span></span><br><span class="line">          <span class="attr">&quot;key&quot;</span> <span class="punctuation">:</span> <span class="number">28</span><span class="punctuation">,</span></span><br><span class="line">          <span class="attr">&quot;doc_count&quot;</span> <span class="punctuation">:</span> <span class="number">1</span></span><br><span class="line">        <span class="punctuation">&#125;</span><span class="punctuation">,</span></span><br><span class="line">        <span class="punctuation">&#123;</span></span><br><span class="line">          <span class="attr">&quot;key&quot;</span> <span class="punctuation">:</span> <span class="number">32</span><span class="punctuation">,</span></span><br><span class="line">          <span class="attr">&quot;doc_count&quot;</span> <span class="punctuation">:</span> <span class="number">1</span></span><br><span class="line">        <span class="punctuation">&#125;</span></span><br><span class="line">      <span class="punctuation">]</span></span><br><span class="line">    <span class="punctuation">&#125;</span><span class="punctuation">,</span></span><br><span class="line">    <span class="attr">&quot;ageAvg&quot;</span> <span class="punctuation">:</span> <span class="punctuation">&#123;</span></span><br><span class="line">      <span class="attr">&quot;value&quot;</span> <span class="punctuation">:</span> <span class="number">34.0</span></span><br><span class="line">    <span class="punctuation">&#125;</span><span class="punctuation">,</span></span><br><span class="line">    <span class="attr">&quot;balanceAvg&quot;</span> <span class="punctuation">:</span> <span class="punctuation">&#123;</span></span><br><span class="line">      <span class="attr">&quot;value&quot;</span> <span class="punctuation">:</span> <span class="number">25208.0</span></span><br><span class="line">    <span class="punctuation">&#125;</span></span><br><span class="line">  <span class="punctuation">&#125;</span></span><br><span class="line"><span class="punctuation">&#125;</span></span><br></pre></td></tr></table></figure><p>复杂：<br>按照年龄聚合，并且求这些年龄段的这些人的平均薪资</p><figure class="highlight json"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br></pre></td><td class="code"><pre><span class="line">GET bank/_search</span><br><span class="line"><span class="punctuation">&#123;</span></span><br><span class="line">  <span class="attr">&quot;query&quot;</span><span class="punctuation">:</span> <span class="punctuation">&#123;</span></span><br><span class="line">    <span class="attr">&quot;match_all&quot;</span><span class="punctuation">:</span> <span class="punctuation">&#123;</span><span class="punctuation">&#125;</span></span><br><span class="line">  <span class="punctuation">&#125;</span><span class="punctuation">,</span></span><br><span class="line">  <span class="attr">&quot;aggs&quot;</span><span class="punctuation">:</span> <span class="punctuation">&#123;</span></span><br><span class="line">    <span class="attr">&quot;ageAgg&quot;</span><span class="punctuation">:</span> <span class="punctuation">&#123;</span></span><br><span class="line">      <span class="attr">&quot;terms&quot;</span><span class="punctuation">:</span> <span class="punctuation">&#123;</span></span><br><span class="line">        <span class="attr">&quot;field&quot;</span><span class="punctuation">:</span> <span class="string">&quot;age&quot;</span><span class="punctuation">,</span></span><br><span class="line">        <span class="attr">&quot;size&quot;</span><span class="punctuation">:</span> <span class="number">100</span></span><br><span class="line">      <span class="punctuation">&#125;</span><span class="punctuation">,</span></span><br><span class="line">      <span class="attr">&quot;aggs&quot;</span><span class="punctuation">:</span> <span class="punctuation">&#123;</span></span><br><span class="line">        <span class="attr">&quot;ageAvg&quot;</span><span class="punctuation">:</span> <span class="punctuation">&#123;</span></span><br><span class="line">          <span class="attr">&quot;avg&quot;</span><span class="punctuation">:</span> <span class="punctuation">&#123;</span></span><br><span class="line">            <span class="attr">&quot;field&quot;</span><span class="punctuation">:</span> <span class="string">&quot;balance&quot;</span></span><br><span class="line">          <span class="punctuation">&#125;</span></span><br><span class="line">        <span class="punctuation">&#125;</span></span><br><span class="line">      <span class="punctuation">&#125;</span></span><br><span class="line">    <span class="punctuation">&#125;</span></span><br><span class="line">  <span class="punctuation">&#125;</span><span class="punctuation">,</span></span><br><span class="line">  <span class="attr">&quot;size&quot;</span><span class="punctuation">:</span> <span class="number">0</span></span><br><span class="line"><span class="punctuation">&#125;</span></span><br></pre></td></tr></table></figure><p>输出结果：</p><figure class="highlight json"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br><span class="line">116</span><br><span class="line">117</span><br><span class="line">118</span><br><span class="line">119</span><br><span class="line">120</span><br><span class="line">121</span><br><span class="line">122</span><br><span class="line">123</span><br><span class="line">124</span><br><span class="line">125</span><br><span class="line">126</span><br><span class="line">127</span><br><span class="line">128</span><br><span class="line">129</span><br><span class="line">130</span><br><span class="line">131</span><br><span class="line">132</span><br><span class="line">133</span><br><span class="line">134</span><br><span class="line">135</span><br><span class="line">136</span><br><span class="line">137</span><br><span class="line">138</span><br><span class="line">139</span><br><span class="line">140</span><br><span class="line">141</span><br><span class="line">142</span><br><span class="line">143</span><br><span class="line">144</span><br><span class="line">145</span><br><span class="line">146</span><br><span class="line">147</span><br><span class="line">148</span><br><span class="line">149</span><br><span class="line">150</span><br><span class="line">151</span><br><span class="line">152</span><br><span class="line">153</span><br><span class="line">154</span><br><span class="line">155</span><br><span class="line">156</span><br><span class="line">157</span><br><span class="line">158</span><br><span class="line">159</span><br><span class="line">160</span><br><span class="line">161</span><br><span class="line">162</span><br><span class="line">163</span><br><span class="line">164</span><br><span class="line">165</span><br><span class="line">166</span><br><span class="line">167</span><br><span class="line">168</span><br><span class="line">169</span><br><span class="line">170</span><br><span class="line">171</span><br><span class="line">172</span><br><span class="line">173</span><br></pre></td><td class="code"><pre><span class="line"><span class="punctuation">&#123;</span></span><br><span class="line">  <span class="attr">&quot;took&quot;</span> <span class="punctuation">:</span> <span class="number">1</span><span class="punctuation">,</span></span><br><span class="line">  <span class="attr">&quot;timed_out&quot;</span> <span class="punctuation">:</span> <span class="keyword">false</span><span class="punctuation">,</span></span><br><span class="line">  <span class="attr">&quot;_shards&quot;</span> <span class="punctuation">:</span> <span class="punctuation">&#123;</span></span><br><span class="line">    <span class="attr">&quot;total&quot;</span> <span class="punctuation">:</span> <span class="number">1</span><span class="punctuation">,</span></span><br><span class="line">    <span class="attr">&quot;successful&quot;</span> <span class="punctuation">:</span> <span class="number">1</span><span class="punctuation">,</span></span><br><span class="line">    <span class="attr">&quot;skipped&quot;</span> <span class="punctuation">:</span> <span class="number">0</span><span class="punctuation">,</span></span><br><span class="line">    <span class="attr">&quot;failed&quot;</span> <span class="punctuation">:</span> <span class="number">0</span></span><br><span class="line">  <span class="punctuation">&#125;</span><span class="punctuation">,</span></span><br><span class="line">  <span class="attr">&quot;hits&quot;</span> <span class="punctuation">:</span> <span class="punctuation">&#123;</span></span><br><span class="line">    <span class="attr">&quot;total&quot;</span> <span class="punctuation">:</span> <span class="punctuation">&#123;</span></span><br><span class="line">      <span class="attr">&quot;value&quot;</span> <span class="punctuation">:</span> <span class="number">1000</span><span class="punctuation">,</span></span><br><span class="line">      <span class="attr">&quot;relation&quot;</span> <span class="punctuation">:</span> <span class="string">&quot;eq&quot;</span></span><br><span class="line">    <span class="punctuation">&#125;</span><span class="punctuation">,</span></span><br><span class="line">    <span class="attr">&quot;max_score&quot;</span> <span class="punctuation">:</span> <span class="keyword">null</span><span class="punctuation">,</span></span><br><span class="line">    <span class="attr">&quot;hits&quot;</span> <span class="punctuation">:</span> <span class="punctuation">[</span> <span class="punctuation">]</span></span><br><span class="line">  <span class="punctuation">&#125;</span><span class="punctuation">,</span></span><br><span class="line">  <span class="attr">&quot;aggregations&quot;</span> <span class="punctuation">:</span> <span class="punctuation">&#123;</span></span><br><span class="line">    <span class="attr">&quot;ageAgg&quot;</span> <span class="punctuation">:</span> <span class="punctuation">&#123;</span></span><br><span class="line">      <span class="attr">&quot;doc_count_error_upper_bound&quot;</span> <span class="punctuation">:</span> <span class="number">0</span><span class="punctuation">,</span></span><br><span class="line">      <span class="attr">&quot;sum_other_doc_count&quot;</span> <span class="punctuation">:</span> <span class="number">0</span><span class="punctuation">,</span></span><br><span class="line">      <span class="attr">&quot;buckets&quot;</span> <span class="punctuation">:</span> <span class="punctuation">[</span></span><br><span class="line">        <span class="punctuation">&#123;</span></span><br><span class="line">          <span class="attr">&quot;key&quot;</span> <span class="punctuation">:</span> <span class="number">31</span><span class="punctuation">,</span></span><br><span class="line">          <span class="attr">&quot;doc_count&quot;</span> <span class="punctuation">:</span> <span class="number">61</span><span class="punctuation">,</span></span><br><span class="line">          <span class="attr">&quot;ageAvg&quot;</span> <span class="punctuation">:</span> <span class="punctuation">&#123;</span></span><br><span class="line">            <span class="attr">&quot;value&quot;</span> <span class="punctuation">:</span> <span class="number">28312.918032786885</span></span><br><span class="line">          <span class="punctuation">&#125;</span></span><br><span class="line">        <span class="punctuation">&#125;</span><span class="punctuation">,</span></span><br><span class="line">        <span class="punctuation">&#123;</span></span><br><span class="line">          <span class="attr">&quot;key&quot;</span> <span class="punctuation">:</span> <span class="number">39</span><span class="punctuation">,</span></span><br><span class="line">          <span class="attr">&quot;doc_count&quot;</span> <span class="punctuation">:</span> <span class="number">60</span><span class="punctuation">,</span></span><br><span class="line">          <span class="attr">&quot;ageAvg&quot;</span> <span class="punctuation">:</span> <span class="punctuation">&#123;</span></span><br><span class="line">            <span class="attr">&quot;value&quot;</span> <span class="punctuation">:</span> <span class="number">25269.583333333332</span></span><br><span class="line">          <span class="punctuation">&#125;</span></span><br><span class="line">        <span class="punctuation">&#125;</span><span class="punctuation">,</span></span><br><span class="line">        <span class="punctuation">&#123;</span></span><br><span class="line">          <span class="attr">&quot;key&quot;</span> <span class="punctuation">:</span> <span class="number">26</span><span class="punctuation">,</span></span><br><span class="line">          <span class="attr">&quot;doc_count&quot;</span> <span class="punctuation">:</span> <span class="number">59</span><span class="punctuation">,</span></span><br><span class="line">          <span class="attr">&quot;ageAvg&quot;</span> <span class="punctuation">:</span> <span class="punctuation">&#123;</span></span><br><span class="line">            <span class="attr">&quot;value&quot;</span> <span class="punctuation">:</span> <span class="number">23194.813559322032</span></span><br><span class="line">          <span class="punctuation">&#125;</span></span><br><span class="line">        <span class="punctuation">&#125;</span><span class="punctuation">,</span></span><br><span class="line">        <span class="punctuation">&#123;</span></span><br><span class="line">          <span class="attr">&quot;key&quot;</span> <span class="punctuation">:</span> <span class="number">32</span><span class="punctuation">,</span></span><br><span class="line">          <span class="attr">&quot;doc_count&quot;</span> <span class="punctuation">:</span> <span class="number">52</span><span class="punctuation">,</span></span><br><span class="line">          <span class="attr">&quot;ageAvg&quot;</span> <span class="punctuation">:</span> <span class="punctuation">&#123;</span></span><br><span class="line">            <span class="attr">&quot;value&quot;</span> <span class="punctuation">:</span> <span class="number">23951.346153846152</span></span><br><span class="line">          <span class="punctuation">&#125;</span></span><br><span class="line">        <span class="punctuation">&#125;</span><span class="punctuation">,</span></span><br><span class="line">        <span class="punctuation">&#123;</span></span><br><span class="line">          <span class="attr">&quot;key&quot;</span> <span class="punctuation">:</span> <span class="number">35</span><span class="punctuation">,</span></span><br><span class="line">          <span class="attr">&quot;doc_count&quot;</span> <span class="punctuation">:</span> <span class="number">52</span><span class="punctuation">,</span></span><br><span class="line">          <span class="attr">&quot;ageAvg&quot;</span> <span class="punctuation">:</span> <span class="punctuation">&#123;</span></span><br><span class="line">            <span class="attr">&quot;value&quot;</span> <span class="punctuation">:</span> <span class="number">22136.69230769231</span></span><br><span class="line">          <span class="punctuation">&#125;</span></span><br><span class="line">        <span class="punctuation">&#125;</span><span class="punctuation">,</span></span><br><span class="line">        <span class="punctuation">&#123;</span></span><br><span class="line">          <span class="attr">&quot;key&quot;</span> <span class="punctuation">:</span> <span class="number">36</span><span class="punctuation">,</span></span><br><span class="line">          <span class="attr">&quot;doc_count&quot;</span> <span class="punctuation">:</span> <span class="number">52</span><span class="punctuation">,</span></span><br><span class="line">          <span class="attr">&quot;ageAvg&quot;</span> <span class="punctuation">:</span> <span class="punctuation">&#123;</span></span><br><span class="line">            <span class="attr">&quot;value&quot;</span> <span class="punctuation">:</span> <span class="number">22174.71153846154</span></span><br><span class="line">          <span class="punctuation">&#125;</span></span><br><span class="line">        <span class="punctuation">&#125;</span><span class="punctuation">,</span></span><br><span class="line">        <span class="punctuation">&#123;</span></span><br><span class="line">          <span class="attr">&quot;key&quot;</span> <span class="punctuation">:</span> <span class="number">22</span><span class="punctuation">,</span></span><br><span class="line">          <span class="attr">&quot;doc_count&quot;</span> <span class="punctuation">:</span> <span class="number">51</span><span class="punctuation">,</span></span><br><span class="line">          <span class="attr">&quot;ageAvg&quot;</span> <span class="punctuation">:</span> <span class="punctuation">&#123;</span></span><br><span class="line">            <span class="attr">&quot;value&quot;</span> <span class="punctuation">:</span> <span class="number">24731.07843137255</span></span><br><span class="line">          <span class="punctuation">&#125;</span></span><br><span class="line">        <span class="punctuation">&#125;</span><span class="punctuation">,</span></span><br><span class="line">        <span class="punctuation">&#123;</span></span><br><span class="line">          <span class="attr">&quot;key&quot;</span> <span class="punctuation">:</span> <span class="number">28</span><span class="punctuation">,</span></span><br><span class="line">          <span class="attr">&quot;doc_count&quot;</span> <span class="punctuation">:</span> <span class="number">51</span><span class="punctuation">,</span></span><br><span class="line">          <span class="attr">&quot;ageAvg&quot;</span> <span class="punctuation">:</span> <span class="punctuation">&#123;</span></span><br><span class="line">            <span class="attr">&quot;value&quot;</span> <span class="punctuation">:</span> <span class="number">28273.882352941175</span></span><br><span class="line">          <span class="punctuation">&#125;</span></span><br><span class="line">        <span class="punctuation">&#125;</span><span class="punctuation">,</span></span><br><span class="line">        <span class="punctuation">&#123;</span></span><br><span class="line">          <span class="attr">&quot;key&quot;</span> <span class="punctuation">:</span> <span class="number">33</span><span class="punctuation">,</span></span><br><span class="line">          <span class="attr">&quot;doc_count&quot;</span> <span class="punctuation">:</span> <span class="number">50</span><span class="punctuation">,</span></span><br><span class="line">          <span class="attr">&quot;ageAvg&quot;</span> <span class="punctuation">:</span> <span class="punctuation">&#123;</span></span><br><span class="line">            <span class="attr">&quot;value&quot;</span> <span class="punctuation">:</span> <span class="number">25093.94</span></span><br><span class="line">          <span class="punctuation">&#125;</span></span><br><span class="line">        <span class="punctuation">&#125;</span><span class="punctuation">,</span></span><br><span class="line">        <span class="punctuation">&#123;</span></span><br><span class="line">          <span class="attr">&quot;key&quot;</span> <span class="punctuation">:</span> <span class="number">34</span><span class="punctuation">,</span></span><br><span class="line">          <span class="attr">&quot;doc_count&quot;</span> <span class="punctuation">:</span> <span class="number">49</span><span class="punctuation">,</span></span><br><span class="line">          <span class="attr">&quot;ageAvg&quot;</span> <span class="punctuation">:</span> <span class="punctuation">&#123;</span></span><br><span class="line">            <span class="attr">&quot;value&quot;</span> <span class="punctuation">:</span> <span class="number">26809.95918367347</span></span><br><span class="line">          <span class="punctuation">&#125;</span></span><br><span class="line">        <span class="punctuation">&#125;</span><span class="punctuation">,</span></span><br><span class="line">        <span class="punctuation">&#123;</span></span><br><span class="line">          <span class="attr">&quot;key&quot;</span> <span class="punctuation">:</span> <span class="number">30</span><span class="punctuation">,</span></span><br><span class="line">          <span class="attr">&quot;doc_count&quot;</span> <span class="punctuation">:</span> <span class="number">47</span><span class="punctuation">,</span></span><br><span class="line">          <span class="attr">&quot;ageAvg&quot;</span> <span class="punctuation">:</span> <span class="punctuation">&#123;</span></span><br><span class="line">            <span class="attr">&quot;value&quot;</span> <span class="punctuation">:</span> <span class="number">22841.106382978724</span></span><br><span class="line">          <span class="punctuation">&#125;</span></span><br><span class="line">        <span class="punctuation">&#125;</span><span class="punctuation">,</span></span><br><span class="line">        <span class="punctuation">&#123;</span></span><br><span class="line">          <span class="attr">&quot;key&quot;</span> <span class="punctuation">:</span> <span class="number">21</span><span class="punctuation">,</span></span><br><span class="line">          <span class="attr">&quot;doc_count&quot;</span> <span class="punctuation">:</span> <span class="number">46</span><span class="punctuation">,</span></span><br><span class="line">          <span class="attr">&quot;ageAvg&quot;</span> <span class="punctuation">:</span> <span class="punctuation">&#123;</span></span><br><span class="line">            <span class="attr">&quot;value&quot;</span> <span class="punctuation">:</span> <span class="number">26981.434782608696</span></span><br><span class="line">          <span class="punctuation">&#125;</span></span><br><span class="line">        <span class="punctuation">&#125;</span><span class="punctuation">,</span></span><br><span class="line">        <span class="punctuation">&#123;</span></span><br><span class="line">          <span class="attr">&quot;key&quot;</span> <span class="punctuation">:</span> <span class="number">40</span><span class="punctuation">,</span></span><br><span class="line">          <span class="attr">&quot;doc_count&quot;</span> <span class="punctuation">:</span> <span class="number">45</span><span class="punctuation">,</span></span><br><span class="line">          <span class="attr">&quot;ageAvg&quot;</span> <span class="punctuation">:</span> <span class="punctuation">&#123;</span></span><br><span class="line">            <span class="attr">&quot;value&quot;</span> <span class="punctuation">:</span> <span class="number">27183.17777777778</span></span><br><span class="line">          <span class="punctuation">&#125;</span></span><br><span class="line">        <span class="punctuation">&#125;</span><span class="punctuation">,</span></span><br><span class="line">        <span class="punctuation">&#123;</span></span><br><span class="line">          <span class="attr">&quot;key&quot;</span> <span class="punctuation">:</span> <span class="number">20</span><span class="punctuation">,</span></span><br><span class="line">          <span class="attr">&quot;doc_count&quot;</span> <span class="punctuation">:</span> <span class="number">44</span><span class="punctuation">,</span></span><br><span class="line">          <span class="attr">&quot;ageAvg&quot;</span> <span class="punctuation">:</span> <span class="punctuation">&#123;</span></span><br><span class="line">            <span class="attr">&quot;value&quot;</span> <span class="punctuation">:</span> <span class="number">27741.227272727272</span></span><br><span class="line">          <span class="punctuation">&#125;</span></span><br><span class="line">        <span class="punctuation">&#125;</span><span class="punctuation">,</span></span><br><span class="line">        <span class="punctuation">&#123;</span></span><br><span class="line">          <span class="attr">&quot;key&quot;</span> <span class="punctuation">:</span> <span class="number">23</span><span class="punctuation">,</span></span><br><span class="line">          <span class="attr">&quot;doc_count&quot;</span> <span class="punctuation">:</span> <span class="number">42</span><span class="punctuation">,</span></span><br><span class="line">          <span class="attr">&quot;ageAvg&quot;</span> <span class="punctuation">:</span> <span class="punctuation">&#123;</span></span><br><span class="line">            <span class="attr">&quot;value&quot;</span> <span class="punctuation">:</span> <span class="number">27314.214285714286</span></span><br><span class="line">          <span class="punctuation">&#125;</span></span><br><span class="line">        <span class="punctuation">&#125;</span><span class="punctuation">,</span></span><br><span class="line">        <span class="punctuation">&#123;</span></span><br><span class="line">          <span class="attr">&quot;key&quot;</span> <span class="punctuation">:</span> <span class="number">24</span><span class="punctuation">,</span></span><br><span class="line">          <span class="attr">&quot;doc_count&quot;</span> <span class="punctuation">:</span> <span class="number">42</span><span class="punctuation">,</span></span><br><span class="line">          <span class="attr">&quot;ageAvg&quot;</span> <span class="punctuation">:</span> <span class="punctuation">&#123;</span></span><br><span class="line">            <span class="attr">&quot;value&quot;</span> <span class="punctuation">:</span> <span class="number">28519.04761904762</span></span><br><span class="line">          <span class="punctuation">&#125;</span></span><br><span class="line">        <span class="punctuation">&#125;</span><span class="punctuation">,</span></span><br><span class="line">        <span class="punctuation">&#123;</span></span><br><span class="line">          <span class="attr">&quot;key&quot;</span> <span class="punctuation">:</span> <span class="number">25</span><span class="punctuation">,</span></span><br><span class="line">          <span class="attr">&quot;doc_count&quot;</span> <span class="punctuation">:</span> <span class="number">42</span><span class="punctuation">,</span></span><br><span class="line">          <span class="attr">&quot;ageAvg&quot;</span> <span class="punctuation">:</span> <span class="punctuation">&#123;</span></span><br><span class="line">            <span class="attr">&quot;value&quot;</span> <span class="punctuation">:</span> <span class="number">27445.214285714286</span></span><br><span class="line">          <span class="punctuation">&#125;</span></span><br><span class="line">        <span class="punctuation">&#125;</span><span class="punctuation">,</span></span><br><span class="line">        <span class="punctuation">&#123;</span></span><br><span class="line">          <span class="attr">&quot;key&quot;</span> <span class="punctuation">:</span> <span class="number">37</span><span class="punctuation">,</span></span><br><span class="line">          <span class="attr">&quot;doc_count&quot;</span> <span class="punctuation">:</span> <span class="number">42</span><span class="punctuation">,</span></span><br><span class="line">          <span class="attr">&quot;ageAvg&quot;</span> <span class="punctuation">:</span> <span class="punctuation">&#123;</span></span><br><span class="line">            <span class="attr">&quot;value&quot;</span> <span class="punctuation">:</span> <span class="number">27022.261904761905</span></span><br><span class="line">          <span class="punctuation">&#125;</span></span><br><span class="line">        <span class="punctuation">&#125;</span><span class="punctuation">,</span></span><br><span class="line">        <span class="punctuation">&#123;</span></span><br><span class="line">          <span class="attr">&quot;key&quot;</span> <span class="punctuation">:</span> <span class="number">27</span><span class="punctuation">,</span></span><br><span class="line">          <span class="attr">&quot;doc_count&quot;</span> <span class="punctuation">:</span> <span class="number">39</span><span class="punctuation">,</span></span><br><span class="line">          <span class="attr">&quot;ageAvg&quot;</span> <span class="punctuation">:</span> <span class="punctuation">&#123;</span></span><br><span class="line">            <span class="attr">&quot;value&quot;</span> <span class="punctuation">:</span> <span class="number">21471.871794871793</span></span><br><span class="line">          <span class="punctuation">&#125;</span></span><br><span class="line">        <span class="punctuation">&#125;</span><span class="punctuation">,</span></span><br><span class="line">        <span class="punctuation">&#123;</span></span><br><span class="line">          <span class="attr">&quot;key&quot;</span> <span class="punctuation">:</span> <span class="number">38</span><span class="punctuation">,</span></span><br><span class="line">          <span class="attr">&quot;doc_count&quot;</span> <span class="punctuation">:</span> <span class="number">39</span><span class="punctuation">,</span></span><br><span class="line">          <span class="attr">&quot;ageAvg&quot;</span> <span class="punctuation">:</span> <span class="punctuation">&#123;</span></span><br><span class="line">            <span class="attr">&quot;value&quot;</span> <span class="punctuation">:</span> <span class="number">26187.17948717949</span></span><br><span class="line">          <span class="punctuation">&#125;</span></span><br><span class="line">        <span class="punctuation">&#125;</span><span class="punctuation">,</span></span><br><span class="line">        <span class="punctuation">&#123;</span></span><br><span class="line">          <span class="attr">&quot;key&quot;</span> <span class="punctuation">:</span> <span class="number">29</span><span class="punctuation">,</span></span><br><span class="line">          <span class="attr">&quot;doc_count&quot;</span> <span class="punctuation">:</span> <span class="number">35</span><span class="punctuation">,</span></span><br><span class="line">          <span class="attr">&quot;ageAvg&quot;</span> <span class="punctuation">:</span> <span class="punctuation">&#123;</span></span><br><span class="line">            <span class="attr">&quot;value&quot;</span> <span class="punctuation">:</span> <span class="number">29483.14285714286</span></span><br><span class="line">          <span class="punctuation">&#125;</span></span><br><span class="line">        <span class="punctuation">&#125;</span></span><br><span class="line">      <span class="punctuation">]</span></span><br><span class="line">    <span class="punctuation">&#125;</span></span><br><span class="line">  <span class="punctuation">&#125;</span></span><br><span class="line"><span class="punctuation">&#125;</span></span><br></pre></td></tr></table></figure><p>查出所有年龄分布，并且这些年龄段中M的平均薪资和F的平均薪资以及这个年龄段的总体平均薪资</p><figure class="highlight json"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br></pre></td><td class="code"><pre><span class="line">GET bank/_search</span><br><span class="line"><span class="punctuation">&#123;</span></span><br><span class="line">  <span class="attr">&quot;query&quot;</span><span class="punctuation">:</span> <span class="punctuation">&#123;</span></span><br><span class="line">    <span class="attr">&quot;match_all&quot;</span><span class="punctuation">:</span> <span class="punctuation">&#123;</span><span class="punctuation">&#125;</span></span><br><span class="line">  <span class="punctuation">&#125;</span><span class="punctuation">,</span></span><br><span class="line">  <span class="attr">&quot;aggs&quot;</span><span class="punctuation">:</span> <span class="punctuation">&#123;</span></span><br><span class="line">    <span class="attr">&quot;ageAgg&quot;</span><span class="punctuation">:</span> <span class="punctuation">&#123;</span></span><br><span class="line">      <span class="attr">&quot;terms&quot;</span><span class="punctuation">:</span> <span class="punctuation">&#123;</span></span><br><span class="line">        <span class="attr">&quot;field&quot;</span><span class="punctuation">:</span> <span class="string">&quot;age&quot;</span><span class="punctuation">,</span></span><br><span class="line">        <span class="attr">&quot;size&quot;</span><span class="punctuation">:</span> <span class="number">100</span></span><br><span class="line">      <span class="punctuation">&#125;</span><span class="punctuation">,</span></span><br><span class="line">      <span class="attr">&quot;aggs&quot;</span><span class="punctuation">:</span> <span class="punctuation">&#123;</span></span><br><span class="line">        <span class="attr">&quot;genderAgg&quot;</span><span class="punctuation">:</span> <span class="punctuation">&#123;</span></span><br><span class="line">          <span class="attr">&quot;terms&quot;</span><span class="punctuation">:</span> <span class="punctuation">&#123;</span></span><br><span class="line">            <span class="attr">&quot;field&quot;</span><span class="punctuation">:</span> <span class="string">&quot;gender.keyword&quot;</span></span><br><span class="line">          <span class="punctuation">&#125;</span><span class="punctuation">,</span></span><br><span class="line">          <span class="attr">&quot;aggs&quot;</span><span class="punctuation">:</span> <span class="punctuation">&#123;</span></span><br><span class="line">            <span class="attr">&quot;balanceAvg&quot;</span><span class="punctuation">:</span> <span class="punctuation">&#123;</span></span><br><span class="line">              <span class="attr">&quot;avg&quot;</span><span class="punctuation">:</span> <span class="punctuation">&#123;</span></span><br><span class="line">                <span class="attr">&quot;field&quot;</span><span class="punctuation">:</span> <span class="string">&quot;balance&quot;</span></span><br><span class="line">              <span class="punctuation">&#125;</span></span><br><span class="line">            <span class="punctuation">&#125;</span></span><br><span class="line">          <span class="punctuation">&#125;</span></span><br><span class="line">        <span class="punctuation">&#125;</span><span class="punctuation">,</span></span><br><span class="line">        <span class="attr">&quot;ageBalanceAvg&quot;</span><span class="punctuation">:</span> <span class="punctuation">&#123;</span></span><br><span class="line">          <span class="attr">&quot;avg&quot;</span><span class="punctuation">:</span> <span class="punctuation">&#123;</span></span><br><span class="line">            <span class="attr">&quot;field&quot;</span><span class="punctuation">:</span> <span class="string">&quot;balance&quot;</span></span><br><span class="line">          <span class="punctuation">&#125;</span></span><br><span class="line">        <span class="punctuation">&#125;</span></span><br><span class="line">      <span class="punctuation">&#125;</span></span><br><span class="line">    <span class="punctuation">&#125;</span></span><br><span class="line">  <span class="punctuation">&#125;</span><span class="punctuation">,</span></span><br><span class="line">  <span class="attr">&quot;size&quot;</span><span class="punctuation">:</span> <span class="number">0</span></span><br><span class="line"><span class="punctuation">&#125;</span></span><br></pre></td></tr></table></figure><p>输出结果：</p><figure class="highlight json"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br><span class="line">116</span><br><span class="line">117</span><br><span class="line">118</span><br><span class="line">119</span><br><span class="line">120</span><br><span class="line">121</span><br><span class="line">122</span><br><span class="line">123</span><br><span class="line">124</span><br><span class="line">125</span><br><span class="line">126</span><br><span class="line">127</span><br><span class="line">128</span><br><span class="line">129</span><br><span class="line">130</span><br><span class="line">131</span><br><span class="line">132</span><br><span class="line">133</span><br><span class="line">134</span><br><span class="line">135</span><br><span class="line">136</span><br><span class="line">137</span><br><span class="line">138</span><br><span class="line">139</span><br><span class="line">140</span><br><span class="line">141</span><br><span class="line">142</span><br><span class="line">143</span><br><span class="line">144</span><br><span class="line">145</span><br><span class="line">146</span><br><span class="line">147</span><br><span class="line">148</span><br><span class="line">149</span><br><span class="line">150</span><br><span class="line">151</span><br><span class="line">152</span><br><span class="line">153</span><br><span class="line">154</span><br><span class="line">155</span><br><span class="line">156</span><br><span class="line">157</span><br><span class="line">158</span><br><span class="line">159</span><br><span class="line">160</span><br><span class="line">161</span><br><span class="line">162</span><br><span class="line">163</span><br><span class="line">164</span><br><span class="line">165</span><br><span class="line">166</span><br><span class="line">167</span><br><span class="line">168</span><br><span class="line">169</span><br><span class="line">170</span><br><span class="line">171</span><br><span class="line">172</span><br><span class="line">173</span><br><span class="line">174</span><br><span class="line">175</span><br><span class="line">176</span><br><span class="line">177</span><br><span class="line">178</span><br><span class="line">179</span><br><span class="line">180</span><br><span class="line">181</span><br><span class="line">182</span><br><span class="line">183</span><br><span class="line">184</span><br><span class="line">185</span><br><span class="line">186</span><br><span class="line">187</span><br><span class="line">188</span><br><span class="line">189</span><br><span class="line">190</span><br><span class="line">191</span><br><span class="line">192</span><br><span class="line">193</span><br><span class="line">194</span><br><span class="line">195</span><br><span class="line">196</span><br><span class="line">197</span><br><span class="line">198</span><br><span class="line">199</span><br><span class="line">200</span><br><span class="line">201</span><br><span class="line">202</span><br><span class="line">203</span><br><span class="line">204</span><br><span class="line">205</span><br><span class="line">206</span><br><span class="line">207</span><br><span class="line">208</span><br><span class="line">209</span><br><span class="line">210</span><br><span class="line">211</span><br><span class="line">212</span><br><span class="line">213</span><br><span class="line">214</span><br><span class="line">215</span><br><span class="line">216</span><br><span class="line">217</span><br><span class="line">218</span><br><span class="line">219</span><br><span class="line">220</span><br><span class="line">221</span><br><span class="line">222</span><br><span class="line">223</span><br><span class="line">224</span><br><span class="line">225</span><br><span class="line">226</span><br><span class="line">227</span><br><span class="line">228</span><br><span class="line">229</span><br><span class="line">230</span><br><span class="line">231</span><br><span class="line">232</span><br><span class="line">233</span><br><span class="line">234</span><br><span class="line">235</span><br><span class="line">236</span><br><span class="line">237</span><br><span class="line">238</span><br><span class="line">239</span><br><span class="line">240</span><br><span class="line">241</span><br><span class="line">242</span><br><span class="line">243</span><br><span class="line">244</span><br><span class="line">245</span><br><span class="line">246</span><br><span class="line">247</span><br><span class="line">248</span><br><span class="line">249</span><br><span class="line">250</span><br><span class="line">251</span><br><span class="line">252</span><br><span class="line">253</span><br><span class="line">254</span><br><span class="line">255</span><br><span class="line">256</span><br><span class="line">257</span><br><span class="line">258</span><br><span class="line">259</span><br><span class="line">260</span><br><span class="line">261</span><br><span class="line">262</span><br><span class="line">263</span><br><span class="line">264</span><br><span class="line">265</span><br><span class="line">266</span><br><span class="line">267</span><br><span class="line">268</span><br><span class="line">269</span><br><span class="line">270</span><br><span class="line">271</span><br><span class="line">272</span><br><span class="line">273</span><br><span class="line">274</span><br><span class="line">275</span><br><span class="line">276</span><br><span class="line">277</span><br><span class="line">278</span><br><span class="line">279</span><br><span class="line">280</span><br><span class="line">281</span><br><span class="line">282</span><br><span class="line">283</span><br><span class="line">284</span><br><span class="line">285</span><br><span class="line">286</span><br><span class="line">287</span><br><span class="line">288</span><br><span class="line">289</span><br><span class="line">290</span><br><span class="line">291</span><br><span class="line">292</span><br><span class="line">293</span><br><span class="line">294</span><br><span class="line">295</span><br><span class="line">296</span><br><span class="line">297</span><br><span class="line">298</span><br><span class="line">299</span><br><span class="line">300</span><br><span class="line">301</span><br><span class="line">302</span><br><span class="line">303</span><br><span class="line">304</span><br><span class="line">305</span><br><span class="line">306</span><br><span class="line">307</span><br><span class="line">308</span><br><span class="line">309</span><br><span class="line">310</span><br><span class="line">311</span><br><span class="line">312</span><br><span class="line">313</span><br><span class="line">314</span><br><span class="line">315</span><br><span class="line">316</span><br><span class="line">317</span><br><span class="line">318</span><br><span class="line">319</span><br><span class="line">320</span><br><span class="line">321</span><br><span class="line">322</span><br><span class="line">323</span><br><span class="line">324</span><br><span class="line">325</span><br><span class="line">326</span><br><span class="line">327</span><br><span class="line">328</span><br><span class="line">329</span><br><span class="line">330</span><br><span class="line">331</span><br><span class="line">332</span><br><span class="line">333</span><br><span class="line">334</span><br><span class="line">335</span><br><span class="line">336</span><br><span class="line">337</span><br><span class="line">338</span><br><span class="line">339</span><br><span class="line">340</span><br><span class="line">341</span><br><span class="line">342</span><br><span class="line">343</span><br><span class="line">344</span><br><span class="line">345</span><br><span class="line">346</span><br><span class="line">347</span><br><span class="line">348</span><br><span class="line">349</span><br><span class="line">350</span><br><span class="line">351</span><br><span class="line">352</span><br><span class="line">353</span><br><span class="line">354</span><br><span class="line">355</span><br><span class="line">356</span><br><span class="line">357</span><br><span class="line">358</span><br><span class="line">359</span><br><span class="line">360</span><br><span class="line">361</span><br><span class="line">362</span><br><span class="line">363</span><br><span class="line">364</span><br><span class="line">365</span><br><span class="line">366</span><br><span class="line">367</span><br><span class="line">368</span><br><span class="line">369</span><br><span class="line">370</span><br><span class="line">371</span><br><span class="line">372</span><br><span class="line">373</span><br><span class="line">374</span><br><span class="line">375</span><br><span class="line">376</span><br><span class="line">377</span><br><span class="line">378</span><br><span class="line">379</span><br><span class="line">380</span><br><span class="line">381</span><br><span class="line">382</span><br><span class="line">383</span><br><span class="line">384</span><br><span class="line">385</span><br><span class="line">386</span><br><span class="line">387</span><br><span class="line">388</span><br><span class="line">389</span><br><span class="line">390</span><br><span class="line">391</span><br><span class="line">392</span><br><span class="line">393</span><br><span class="line">394</span><br><span class="line">395</span><br><span class="line">396</span><br><span class="line">397</span><br><span class="line">398</span><br><span class="line">399</span><br><span class="line">400</span><br><span class="line">401</span><br><span class="line">402</span><br><span class="line">403</span><br><span class="line">404</span><br><span class="line">405</span><br><span class="line">406</span><br><span class="line">407</span><br><span class="line">408</span><br><span class="line">409</span><br><span class="line">410</span><br><span class="line">411</span><br><span class="line">412</span><br><span class="line">413</span><br><span class="line">414</span><br><span class="line">415</span><br><span class="line">416</span><br><span class="line">417</span><br><span class="line">418</span><br><span class="line">419</span><br><span class="line">420</span><br><span class="line">421</span><br><span class="line">422</span><br><span class="line">423</span><br><span class="line">424</span><br><span class="line">425</span><br><span class="line">426</span><br><span class="line">427</span><br><span class="line">428</span><br><span class="line">429</span><br><span class="line">430</span><br><span class="line">431</span><br><span class="line">432</span><br><span class="line">433</span><br><span class="line">434</span><br><span class="line">435</span><br><span class="line">436</span><br><span class="line">437</span><br><span class="line">438</span><br><span class="line">439</span><br><span class="line">440</span><br><span class="line">441</span><br><span class="line">442</span><br><span class="line">443</span><br><span class="line">444</span><br><span class="line">445</span><br><span class="line">446</span><br><span class="line">447</span><br><span class="line">448</span><br><span class="line">449</span><br><span class="line">450</span><br><span class="line">451</span><br><span class="line">452</span><br><span class="line">453</span><br><span class="line">454</span><br><span class="line">455</span><br><span class="line">456</span><br><span class="line">457</span><br><span class="line">458</span><br><span class="line">459</span><br><span class="line">460</span><br><span class="line">461</span><br><span class="line">462</span><br><span class="line">463</span><br><span class="line">464</span><br><span class="line">465</span><br><span class="line">466</span><br><span class="line">467</span><br><span class="line">468</span><br><span class="line">469</span><br><span class="line">470</span><br><span class="line">471</span><br><span class="line">472</span><br><span class="line">473</span><br><span class="line">474</span><br><span class="line">475</span><br><span class="line">476</span><br><span class="line">477</span><br><span class="line">478</span><br><span class="line">479</span><br><span class="line">480</span><br><span class="line">481</span><br><span class="line">482</span><br><span class="line">483</span><br><span class="line">484</span><br><span class="line">485</span><br><span class="line">486</span><br><span class="line">487</span><br><span class="line">488</span><br><span class="line">489</span><br><span class="line">490</span><br><span class="line">491</span><br><span class="line">492</span><br><span class="line">493</span><br><span class="line">494</span><br><span class="line">495</span><br><span class="line">496</span><br><span class="line">497</span><br><span class="line">498</span><br><span class="line">499</span><br><span class="line">500</span><br><span class="line">501</span><br><span class="line">502</span><br><span class="line">503</span><br><span class="line">504</span><br><span class="line">505</span><br><span class="line">506</span><br><span class="line">507</span><br><span class="line">508</span><br><span class="line">509</span><br><span class="line">510</span><br><span class="line">511</span><br><span class="line">512</span><br><span class="line">513</span><br><span class="line">514</span><br><span class="line">515</span><br><span class="line">516</span><br><span class="line">517</span><br><span class="line">518</span><br><span class="line">519</span><br><span class="line">520</span><br><span class="line">521</span><br><span class="line">522</span><br><span class="line">523</span><br><span class="line">524</span><br><span class="line">525</span><br><span class="line">526</span><br><span class="line">527</span><br><span class="line">528</span><br><span class="line">529</span><br><span class="line">530</span><br><span class="line">531</span><br><span class="line">532</span><br><span class="line">533</span><br><span class="line">534</span><br><span class="line">535</span><br><span class="line">536</span><br><span class="line">537</span><br><span class="line">538</span><br><span class="line">539</span><br><span class="line">540</span><br><span class="line">541</span><br><span class="line">542</span><br><span class="line">543</span><br><span class="line">544</span><br><span class="line">545</span><br><span class="line">546</span><br><span class="line">547</span><br><span class="line">548</span><br><span class="line">549</span><br><span class="line">550</span><br><span class="line">551</span><br><span class="line">552</span><br><span class="line">553</span><br><span class="line">554</span><br><span class="line">555</span><br><span class="line">556</span><br><span class="line">557</span><br><span class="line">558</span><br><span class="line">559</span><br><span class="line">560</span><br><span class="line">561</span><br><span class="line">562</span><br><span class="line">563</span><br><span class="line">564</span><br><span class="line">565</span><br><span class="line">566</span><br><span class="line">567</span><br><span class="line">568</span><br><span class="line">569</span><br><span class="line">570</span><br><span class="line">571</span><br><span class="line">572</span><br><span class="line">573</span><br><span class="line">574</span><br><span class="line">575</span><br><span class="line">576</span><br><span class="line">577</span><br><span class="line">578</span><br><span class="line">579</span><br><span class="line">580</span><br><span class="line">581</span><br><span class="line">582</span><br><span class="line">583</span><br><span class="line">584</span><br><span class="line">585</span><br><span class="line">586</span><br><span class="line">587</span><br><span class="line">588</span><br><span class="line">589</span><br><span class="line">590</span><br><span class="line">591</span><br><span class="line">592</span><br><span class="line">593</span><br></pre></td><td class="code"><pre><span class="line"><span class="punctuation">&#123;</span></span><br><span class="line">  <span class="attr">&quot;took&quot;</span> <span class="punctuation">:</span> <span class="number">1</span><span class="punctuation">,</span></span><br><span class="line">  <span class="attr">&quot;timed_out&quot;</span> <span class="punctuation">:</span> <span class="keyword">false</span><span class="punctuation">,</span></span><br><span class="line">  <span class="attr">&quot;_shards&quot;</span> <span class="punctuation">:</span> <span class="punctuation">&#123;</span></span><br><span class="line">    <span class="attr">&quot;total&quot;</span> <span class="punctuation">:</span> <span class="number">1</span><span class="punctuation">,</span></span><br><span class="line">    <span class="attr">&quot;successful&quot;</span> <span class="punctuation">:</span> <span class="number">1</span><span class="punctuation">,</span></span><br><span class="line">    <span class="attr">&quot;skipped&quot;</span> <span class="punctuation">:</span> <span class="number">0</span><span class="punctuation">,</span></span><br><span class="line">    <span class="attr">&quot;failed&quot;</span> <span class="punctuation">:</span> <span class="number">0</span></span><br><span class="line">  <span class="punctuation">&#125;</span><span class="punctuation">,</span></span><br><span class="line">  <span class="attr">&quot;hits&quot;</span> <span class="punctuation">:</span> <span class="punctuation">&#123;</span></span><br><span class="line">    <span class="attr">&quot;total&quot;</span> <span class="punctuation">:</span> <span class="punctuation">&#123;</span></span><br><span class="line">      <span class="attr">&quot;value&quot;</span> <span class="punctuation">:</span> <span class="number">1000</span><span class="punctuation">,</span></span><br><span class="line">      <span class="attr">&quot;relation&quot;</span> <span class="punctuation">:</span> <span class="string">&quot;eq&quot;</span></span><br><span class="line">    <span class="punctuation">&#125;</span><span class="punctuation">,</span></span><br><span class="line">    <span class="attr">&quot;max_score&quot;</span> <span class="punctuation">:</span> <span class="keyword">null</span><span class="punctuation">,</span></span><br><span class="line">    <span class="attr">&quot;hits&quot;</span> <span class="punctuation">:</span> <span class="punctuation">[</span> <span class="punctuation">]</span></span><br><span class="line">  <span class="punctuation">&#125;</span><span class="punctuation">,</span></span><br><span class="line">  <span class="attr">&quot;aggregations&quot;</span> <span class="punctuation">:</span> <span class="punctuation">&#123;</span></span><br><span class="line">    <span class="attr">&quot;ageAgg&quot;</span> <span class="punctuation">:</span> <span class="punctuation">&#123;</span></span><br><span class="line">      <span class="attr">&quot;doc_count_error_upper_bound&quot;</span> <span class="punctuation">:</span> <span class="number">0</span><span class="punctuation">,</span></span><br><span class="line">      <span class="attr">&quot;sum_other_doc_count&quot;</span> <span class="punctuation">:</span> <span class="number">0</span><span class="punctuation">,</span></span><br><span class="line">      <span class="attr">&quot;buckets&quot;</span> <span class="punctuation">:</span> <span class="punctuation">[</span></span><br><span class="line">        <span class="punctuation">&#123;</span></span><br><span class="line">          <span class="attr">&quot;key&quot;</span> <span class="punctuation">:</span> <span class="number">31</span><span class="punctuation">,</span></span><br><span class="line">          <span class="attr">&quot;doc_count&quot;</span> <span class="punctuation">:</span> <span class="number">61</span><span class="punctuation">,</span></span><br><span class="line">          <span class="attr">&quot;genderAgg&quot;</span> <span class="punctuation">:</span> <span class="punctuation">&#123;</span></span><br><span class="line">            <span class="attr">&quot;doc_count_error_upper_bound&quot;</span> <span class="punctuation">:</span> <span class="number">0</span><span class="punctuation">,</span></span><br><span class="line">            <span class="attr">&quot;sum_other_doc_count&quot;</span> <span class="punctuation">:</span> <span class="number">0</span><span class="punctuation">,</span></span><br><span class="line">            <span class="attr">&quot;buckets&quot;</span> <span class="punctuation">:</span> <span class="punctuation">[</span></span><br><span class="line">              <span class="punctuation">&#123;</span></span><br><span class="line">                <span class="attr">&quot;key&quot;</span> <span class="punctuation">:</span> <span class="string">&quot;M&quot;</span><span class="punctuation">,</span></span><br><span class="line">                <span class="attr">&quot;doc_count&quot;</span> <span class="punctuation">:</span> <span class="number">35</span><span class="punctuation">,</span></span><br><span class="line">                <span class="attr">&quot;balanceAvg&quot;</span> <span class="punctuation">:</span> <span class="punctuation">&#123;</span></span><br><span class="line">                  <span class="attr">&quot;value&quot;</span> <span class="punctuation">:</span> <span class="number">29565.628571428573</span></span><br><span class="line">                <span class="punctuation">&#125;</span></span><br><span class="line">              <span class="punctuation">&#125;</span><span class="punctuation">,</span></span><br><span class="line">              <span class="punctuation">&#123;</span></span><br><span class="line">                <span class="attr">&quot;key&quot;</span> <span class="punctuation">:</span> <span class="string">&quot;F&quot;</span><span class="punctuation">,</span></span><br><span class="line">                <span class="attr">&quot;doc_count&quot;</span> <span class="punctuation">:</span> <span class="number">26</span><span class="punctuation">,</span></span><br><span class="line">                <span class="attr">&quot;balanceAvg&quot;</span> <span class="punctuation">:</span> <span class="punctuation">&#123;</span></span><br><span class="line">                  <span class="attr">&quot;value&quot;</span> <span class="punctuation">:</span> <span class="number">26626.576923076922</span></span><br><span class="line">                <span class="punctuation">&#125;</span></span><br><span class="line">              <span class="punctuation">&#125;</span></span><br><span class="line">            <span class="punctuation">]</span></span><br><span class="line">          <span class="punctuation">&#125;</span><span class="punctuation">,</span></span><br><span class="line">          <span class="attr">&quot;ageBalanceAvg&quot;</span> <span class="punctuation">:</span> <span class="punctuation">&#123;</span></span><br><span class="line">            <span class="attr">&quot;value&quot;</span> <span class="punctuation">:</span> <span class="number">28312.918032786885</span></span><br><span class="line">          <span class="punctuation">&#125;</span></span><br><span class="line">        <span class="punctuation">&#125;</span><span class="punctuation">,</span></span><br><span class="line">        <span class="punctuation">&#123;</span></span><br><span class="line">          <span class="attr">&quot;key&quot;</span> <span class="punctuation">:</span> <span class="number">39</span><span class="punctuation">,</span></span><br><span class="line">          <span class="attr">&quot;doc_count&quot;</span> <span class="punctuation">:</span> <span class="number">60</span><span class="punctuation">,</span></span><br><span class="line">          <span class="attr">&quot;genderAgg&quot;</span> <span class="punctuation">:</span> <span class="punctuation">&#123;</span></span><br><span class="line">            <span class="attr">&quot;doc_count_error_upper_bound&quot;</span> <span class="punctuation">:</span> <span class="number">0</span><span class="punctuation">,</span></span><br><span class="line">            <span class="attr">&quot;sum_other_doc_count&quot;</span> <span class="punctuation">:</span> <span class="number">0</span><span class="punctuation">,</span></span><br><span class="line">            <span class="attr">&quot;buckets&quot;</span> <span class="punctuation">:</span> <span class="punctuation">[</span></span><br><span class="line">              <span class="punctuation">&#123;</span></span><br><span class="line">                <span class="attr">&quot;key&quot;</span> <span class="punctuation">:</span> <span class="string">&quot;F&quot;</span><span class="punctuation">,</span></span><br><span class="line">                <span class="attr">&quot;doc_count&quot;</span> <span class="punctuation">:</span> <span class="number">38</span><span class="punctuation">,</span></span><br><span class="line">                <span class="attr">&quot;balanceAvg&quot;</span> <span class="punctuation">:</span> <span class="punctuation">&#123;</span></span><br><span class="line">                  <span class="attr">&quot;value&quot;</span> <span class="punctuation">:</span> <span class="number">26348.684210526317</span></span><br><span class="line">                <span class="punctuation">&#125;</span></span><br><span class="line">              <span class="punctuation">&#125;</span><span class="punctuation">,</span></span><br><span class="line">              <span class="punctuation">&#123;</span></span><br><span class="line">                <span class="attr">&quot;key&quot;</span> <span class="punctuation">:</span> <span class="string">&quot;M&quot;</span><span class="punctuation">,</span></span><br><span class="line">                <span class="attr">&quot;doc_count&quot;</span> <span class="punctuation">:</span> <span class="number">22</span><span class="punctuation">,</span></span><br><span class="line">                <span class="attr">&quot;balanceAvg&quot;</span> <span class="punctuation">:</span> <span class="punctuation">&#123;</span></span><br><span class="line">                  <span class="attr">&quot;value&quot;</span> <span class="punctuation">:</span> <span class="number">23405.68181818182</span></span><br><span class="line">                <span class="punctuation">&#125;</span></span><br><span class="line">              <span class="punctuation">&#125;</span></span><br><span class="line">            <span class="punctuation">]</span></span><br><span class="line">          <span class="punctuation">&#125;</span><span class="punctuation">,</span></span><br><span class="line">          <span class="attr">&quot;ageBalanceAvg&quot;</span> <span class="punctuation">:</span> <span class="punctuation">&#123;</span></span><br><span class="line">            <span class="attr">&quot;value&quot;</span> <span class="punctuation">:</span> <span class="number">25269.583333333332</span></span><br><span class="line">          <span class="punctuation">&#125;</span></span><br><span class="line">        <span class="punctuation">&#125;</span><span class="punctuation">,</span></span><br><span class="line">        <span class="punctuation">&#123;</span></span><br><span class="line">          <span class="attr">&quot;key&quot;</span> <span class="punctuation">:</span> <span class="number">26</span><span class="punctuation">,</span></span><br><span class="line">          <span class="attr">&quot;doc_count&quot;</span> <span class="punctuation">:</span> <span class="number">59</span><span class="punctuation">,</span></span><br><span class="line">          <span class="attr">&quot;genderAgg&quot;</span> <span class="punctuation">:</span> <span class="punctuation">&#123;</span></span><br><span class="line">            <span class="attr">&quot;doc_count_error_upper_bound&quot;</span> <span class="punctuation">:</span> <span class="number">0</span><span class="punctuation">,</span></span><br><span class="line">            <span class="attr">&quot;sum_other_doc_count&quot;</span> <span class="punctuation">:</span> <span class="number">0</span><span class="punctuation">,</span></span><br><span class="line">            <span class="attr">&quot;buckets&quot;</span> <span class="punctuation">:</span> <span class="punctuation">[</span></span><br><span class="line">              <span class="punctuation">&#123;</span></span><br><span class="line">                <span class="attr">&quot;key&quot;</span> <span class="punctuation">:</span> <span class="string">&quot;M&quot;</span><span class="punctuation">,</span></span><br><span class="line">                <span class="attr">&quot;doc_count&quot;</span> <span class="punctuation">:</span> <span class="number">32</span><span class="punctuation">,</span></span><br><span class="line">                <span class="attr">&quot;balanceAvg&quot;</span> <span class="punctuation">:</span> <span class="punctuation">&#123;</span></span><br><span class="line">                  <span class="attr">&quot;value&quot;</span> <span class="punctuation">:</span> <span class="number">25094.78125</span></span><br><span class="line">                <span class="punctuation">&#125;</span></span><br><span class="line">              <span class="punctuation">&#125;</span><span class="punctuation">,</span></span><br><span class="line">              <span class="punctuation">&#123;</span></span><br><span class="line">                <span class="attr">&quot;key&quot;</span> <span class="punctuation">:</span> <span class="string">&quot;F&quot;</span><span class="punctuation">,</span></span><br><span class="line">                <span class="attr">&quot;doc_count&quot;</span> <span class="punctuation">:</span> <span class="number">27</span><span class="punctuation">,</span></span><br><span class="line">                <span class="attr">&quot;balanceAvg&quot;</span> <span class="punctuation">:</span> <span class="punctuation">&#123;</span></span><br><span class="line">                  <span class="attr">&quot;value&quot;</span> <span class="punctuation">:</span> <span class="number">20943.0</span></span><br><span class="line">                <span class="punctuation">&#125;</span></span><br><span class="line">              <span class="punctuation">&#125;</span></span><br><span class="line">            <span class="punctuation">]</span></span><br><span class="line">          <span class="punctuation">&#125;</span><span class="punctuation">,</span></span><br><span class="line">          <span class="attr">&quot;ageBalanceAvg&quot;</span> <span class="punctuation">:</span> <span class="punctuation">&#123;</span></span><br><span class="line">            <span class="attr">&quot;value&quot;</span> <span class="punctuation">:</span> <span class="number">23194.813559322032</span></span><br><span class="line">          <span class="punctuation">&#125;</span></span><br><span class="line">        <span class="punctuation">&#125;</span><span class="punctuation">,</span></span><br><span class="line">        <span class="punctuation">&#123;</span></span><br><span class="line">          <span class="attr">&quot;key&quot;</span> <span class="punctuation">:</span> <span class="number">32</span><span class="punctuation">,</span></span><br><span class="line">          <span class="attr">&quot;doc_count&quot;</span> <span class="punctuation">:</span> <span class="number">52</span><span class="punctuation">,</span></span><br><span class="line">          <span class="attr">&quot;genderAgg&quot;</span> <span class="punctuation">:</span> <span class="punctuation">&#123;</span></span><br><span class="line">            <span class="attr">&quot;doc_count_error_upper_bound&quot;</span> <span class="punctuation">:</span> <span class="number">0</span><span class="punctuation">,</span></span><br><span class="line">            <span class="attr">&quot;sum_other_doc_count&quot;</span> <span class="punctuation">:</span> <span class="number">0</span><span class="punctuation">,</span></span><br><span class="line">            <span class="attr">&quot;buckets&quot;</span> <span class="punctuation">:</span> <span class="punctuation">[</span></span><br><span class="line">              <span class="punctuation">&#123;</span></span><br><span class="line">                <span class="attr">&quot;key&quot;</span> <span class="punctuation">:</span> <span class="string">&quot;M&quot;</span><span class="punctuation">,</span></span><br><span class="line">                <span class="attr">&quot;doc_count&quot;</span> <span class="punctuation">:</span> <span class="number">28</span><span class="punctuation">,</span></span><br><span class="line">                <span class="attr">&quot;balanceAvg&quot;</span> <span class="punctuation">:</span> <span class="punctuation">&#123;</span></span><br><span class="line">                  <span class="attr">&quot;value&quot;</span> <span class="punctuation">:</span> <span class="number">22941.964285714286</span></span><br><span class="line">                <span class="punctuation">&#125;</span></span><br><span class="line">              <span class="punctuation">&#125;</span><span class="punctuation">,</span></span><br><span class="line">              <span class="punctuation">&#123;</span></span><br><span class="line">                <span class="attr">&quot;key&quot;</span> <span class="punctuation">:</span> <span class="string">&quot;F&quot;</span><span class="punctuation">,</span></span><br><span class="line">                <span class="attr">&quot;doc_count&quot;</span> <span class="punctuation">:</span> <span class="number">24</span><span class="punctuation">,</span></span><br><span class="line">                <span class="attr">&quot;balanceAvg&quot;</span> <span class="punctuation">:</span> <span class="punctuation">&#123;</span></span><br><span class="line">                  <span class="attr">&quot;value&quot;</span> <span class="punctuation">:</span> <span class="number">25128.958333333332</span></span><br><span class="line">                <span class="punctuation">&#125;</span></span><br><span class="line">              <span class="punctuation">&#125;</span></span><br><span class="line">            <span class="punctuation">]</span></span><br><span class="line">          <span class="punctuation">&#125;</span><span class="punctuation">,</span></span><br><span class="line">          <span class="attr">&quot;ageBalanceAvg&quot;</span> <span class="punctuation">:</span> <span class="punctuation">&#123;</span></span><br><span class="line">            <span class="attr">&quot;value&quot;</span> <span class="punctuation">:</span> <span class="number">23951.346153846152</span></span><br><span class="line">          <span class="punctuation">&#125;</span></span><br><span class="line">        <span class="punctuation">&#125;</span><span class="punctuation">,</span></span><br><span class="line">        <span class="punctuation">&#123;</span></span><br><span class="line">          <span class="attr">&quot;key&quot;</span> <span class="punctuation">:</span> <span class="number">35</span><span class="punctuation">,</span></span><br><span class="line">          <span class="attr">&quot;doc_count&quot;</span> <span class="punctuation">:</span> <span class="number">52</span><span class="punctuation">,</span></span><br><span class="line">          <span class="attr">&quot;genderAgg&quot;</span> <span class="punctuation">:</span> <span class="punctuation">&#123;</span></span><br><span class="line">            <span class="attr">&quot;doc_count_error_upper_bound&quot;</span> <span class="punctuation">:</span> <span class="number">0</span><span class="punctuation">,</span></span><br><span class="line">            <span class="attr">&quot;sum_other_doc_count&quot;</span> <span class="punctuation">:</span> <span class="number">0</span><span class="punctuation">,</span></span><br><span class="line">            <span class="attr">&quot;buckets&quot;</span> <span class="punctuation">:</span> <span class="punctuation">[</span></span><br><span class="line">              <span class="punctuation">&#123;</span></span><br><span class="line">                <span class="attr">&quot;key&quot;</span> <span class="punctuation">:</span> <span class="string">&quot;M&quot;</span><span class="punctuation">,</span></span><br><span class="line">                <span class="attr">&quot;doc_count&quot;</span> <span class="punctuation">:</span> <span class="number">28</span><span class="punctuation">,</span></span><br><span class="line">                <span class="attr">&quot;balanceAvg&quot;</span> <span class="punctuation">:</span> <span class="punctuation">&#123;</span></span><br><span class="line">                  <span class="attr">&quot;value&quot;</span> <span class="punctuation">:</span> <span class="number">24226.321428571428</span></span><br><span class="line">                <span class="punctuation">&#125;</span></span><br><span class="line">              <span class="punctuation">&#125;</span><span class="punctuation">,</span></span><br><span class="line">              <span class="punctuation">&#123;</span></span><br><span class="line">                <span class="attr">&quot;key&quot;</span> <span class="punctuation">:</span> <span class="string">&quot;F&quot;</span><span class="punctuation">,</span></span><br><span class="line">                <span class="attr">&quot;doc_count&quot;</span> <span class="punctuation">:</span> <span class="number">24</span><span class="punctuation">,</span></span><br><span class="line">                <span class="attr">&quot;balanceAvg&quot;</span> <span class="punctuation">:</span> <span class="punctuation">&#123;</span></span><br><span class="line">                  <span class="attr">&quot;value&quot;</span> <span class="punctuation">:</span> <span class="number">19698.791666666668</span></span><br><span class="line">                <span class="punctuation">&#125;</span></span><br><span class="line">              <span class="punctuation">&#125;</span></span><br><span class="line">            <span class="punctuation">]</span></span><br><span class="line">          <span class="punctuation">&#125;</span><span class="punctuation">,</span></span><br><span class="line">          <span class="attr">&quot;ageBalanceAvg&quot;</span> <span class="punctuation">:</span> <span class="punctuation">&#123;</span></span><br><span class="line">            <span class="attr">&quot;value&quot;</span> <span class="punctuation">:</span> <span class="number">22136.69230769231</span></span><br><span class="line">          <span class="punctuation">&#125;</span></span><br><span class="line">        <span class="punctuation">&#125;</span><span class="punctuation">,</span></span><br><span class="line">        <span class="punctuation">&#123;</span></span><br><span class="line">          <span class="attr">&quot;key&quot;</span> <span class="punctuation">:</span> <span class="number">36</span><span class="punctuation">,</span></span><br><span class="line">          <span class="attr">&quot;doc_count&quot;</span> <span class="punctuation">:</span> <span class="number">52</span><span class="punctuation">,</span></span><br><span class="line">          <span class="attr">&quot;genderAgg&quot;</span> <span class="punctuation">:</span> <span class="punctuation">&#123;</span></span><br><span class="line">            <span class="attr">&quot;doc_count_error_upper_bound&quot;</span> <span class="punctuation">:</span> <span class="number">0</span><span class="punctuation">,</span></span><br><span class="line">            <span class="attr">&quot;sum_other_doc_count&quot;</span> <span class="punctuation">:</span> <span class="number">0</span><span class="punctuation">,</span></span><br><span class="line">            <span class="attr">&quot;buckets&quot;</span> <span class="punctuation">:</span> <span class="punctuation">[</span></span><br><span class="line">              <span class="punctuation">&#123;</span></span><br><span class="line">                <span class="attr">&quot;key&quot;</span> <span class="punctuation">:</span> <span class="string">&quot;M&quot;</span><span class="punctuation">,</span></span><br><span class="line">                <span class="attr">&quot;doc_count&quot;</span> <span class="punctuation">:</span> <span class="number">31</span><span class="punctuation">,</span></span><br><span class="line">                <span class="attr">&quot;balanceAvg&quot;</span> <span class="punctuation">:</span> <span class="punctuation">&#123;</span></span><br><span class="line">                  <span class="attr">&quot;value&quot;</span> <span class="punctuation">:</span> <span class="number">20884.677419354837</span></span><br><span class="line">                <span class="punctuation">&#125;</span></span><br><span class="line">              <span class="punctuation">&#125;</span><span class="punctuation">,</span></span><br><span class="line">              <span class="punctuation">&#123;</span></span><br><span class="line">                <span class="attr">&quot;key&quot;</span> <span class="punctuation">:</span> <span class="string">&quot;F&quot;</span><span class="punctuation">,</span></span><br><span class="line">                <span class="attr">&quot;doc_count&quot;</span> <span class="punctuation">:</span> <span class="number">21</span><span class="punctuation">,</span></span><br><span class="line">                <span class="attr">&quot;balanceAvg&quot;</span> <span class="punctuation">:</span> <span class="punctuation">&#123;</span></span><br><span class="line">                  <span class="attr">&quot;value&quot;</span> <span class="punctuation">:</span> <span class="number">24079.04761904762</span></span><br><span class="line">                <span class="punctuation">&#125;</span></span><br><span class="line">              <span class="punctuation">&#125;</span></span><br><span class="line">            <span class="punctuation">]</span></span><br><span class="line">          <span class="punctuation">&#125;</span><span class="punctuation">,</span></span><br><span class="line">          <span class="attr">&quot;ageBalanceAvg&quot;</span> <span class="punctuation">:</span> <span class="punctuation">&#123;</span></span><br><span class="line">            <span class="attr">&quot;value&quot;</span> <span class="punctuation">:</span> <span class="number">22174.71153846154</span></span><br><span class="line">          <span class="punctuation">&#125;</span></span><br><span class="line">        <span class="punctuation">&#125;</span><span class="punctuation">,</span></span><br><span class="line">        <span class="punctuation">&#123;</span></span><br><span class="line">          <span class="attr">&quot;key&quot;</span> <span class="punctuation">:</span> <span class="number">22</span><span class="punctuation">,</span></span><br><span class="line">          <span class="attr">&quot;doc_count&quot;</span> <span class="punctuation">:</span> <span class="number">51</span><span class="punctuation">,</span></span><br><span class="line">          <span class="attr">&quot;genderAgg&quot;</span> <span class="punctuation">:</span> <span class="punctuation">&#123;</span></span><br><span class="line">            <span class="attr">&quot;doc_count_error_upper_bound&quot;</span> <span class="punctuation">:</span> <span class="number">0</span><span class="punctuation">,</span></span><br><span class="line">            <span class="attr">&quot;sum_other_doc_count&quot;</span> <span class="punctuation">:</span> <span class="number">0</span><span class="punctuation">,</span></span><br><span class="line">            <span class="attr">&quot;buckets&quot;</span> <span class="punctuation">:</span> <span class="punctuation">[</span></span><br><span class="line">              <span class="punctuation">&#123;</span></span><br><span class="line">                <span class="attr">&quot;key&quot;</span> <span class="punctuation">:</span> <span class="string">&quot;F&quot;</span><span class="punctuation">,</span></span><br><span class="line">                <span class="attr">&quot;doc_count&quot;</span> <span class="punctuation">:</span> <span class="number">27</span><span class="punctuation">,</span></span><br><span class="line">                <span class="attr">&quot;balanceAvg&quot;</span> <span class="punctuation">:</span> <span class="punctuation">&#123;</span></span><br><span class="line">                  <span class="attr">&quot;value&quot;</span> <span class="punctuation">:</span> <span class="number">22152.74074074074</span></span><br><span class="line">                <span class="punctuation">&#125;</span></span><br><span class="line">              <span class="punctuation">&#125;</span><span class="punctuation">,</span></span><br><span class="line">              <span class="punctuation">&#123;</span></span><br><span class="line">                <span class="attr">&quot;key&quot;</span> <span class="punctuation">:</span> <span class="string">&quot;M&quot;</span><span class="punctuation">,</span></span><br><span class="line">                <span class="attr">&quot;doc_count&quot;</span> <span class="punctuation">:</span> <span class="number">24</span><span class="punctuation">,</span></span><br><span class="line">                <span class="attr">&quot;balanceAvg&quot;</span> <span class="punctuation">:</span> <span class="punctuation">&#123;</span></span><br><span class="line">                  <span class="attr">&quot;value&quot;</span> <span class="punctuation">:</span> <span class="number">27631.708333333332</span></span><br><span class="line">                <span class="punctuation">&#125;</span></span><br><span class="line">              <span class="punctuation">&#125;</span></span><br><span class="line">            <span class="punctuation">]</span></span><br><span class="line">          <span class="punctuation">&#125;</span><span class="punctuation">,</span></span><br><span class="line">          <span class="attr">&quot;ageBalanceAvg&quot;</span> <span class="punctuation">:</span> <span class="punctuation">&#123;</span></span><br><span class="line">            <span class="attr">&quot;value&quot;</span> <span class="punctuation">:</span> <span class="number">24731.07843137255</span></span><br><span class="line">          <span class="punctuation">&#125;</span></span><br><span class="line">        <span class="punctuation">&#125;</span><span class="punctuation">,</span></span><br><span class="line">        <span class="punctuation">&#123;</span></span><br><span class="line">          <span class="attr">&quot;key&quot;</span> <span class="punctuation">:</span> <span class="number">28</span><span class="punctuation">,</span></span><br><span class="line">          <span class="attr">&quot;doc_count&quot;</span> <span class="punctuation">:</span> <span class="number">51</span><span class="punctuation">,</span></span><br><span class="line">          <span class="attr">&quot;genderAgg&quot;</span> <span class="punctuation">:</span> <span class="punctuation">&#123;</span></span><br><span class="line">            <span class="attr">&quot;doc_count_error_upper_bound&quot;</span> <span class="punctuation">:</span> <span class="number">0</span><span class="punctuation">,</span></span><br><span class="line">            <span class="attr">&quot;sum_other_doc_count&quot;</span> <span class="punctuation">:</span> <span class="number">0</span><span class="punctuation">,</span></span><br><span class="line">            <span class="attr">&quot;buckets&quot;</span> <span class="punctuation">:</span> <span class="punctuation">[</span></span><br><span class="line">              <span class="punctuation">&#123;</span></span><br><span class="line">                <span class="attr">&quot;key&quot;</span> <span class="punctuation">:</span> <span class="string">&quot;F&quot;</span><span class="punctuation">,</span></span><br><span class="line">                <span class="attr">&quot;doc_count&quot;</span> <span class="punctuation">:</span> <span class="number">31</span><span class="punctuation">,</span></span><br><span class="line">                <span class="attr">&quot;balanceAvg&quot;</span> <span class="punctuation">:</span> <span class="punctuation">&#123;</span></span><br><span class="line">                  <span class="attr">&quot;value&quot;</span> <span class="punctuation">:</span> <span class="number">27076.8064516129</span></span><br><span class="line">                <span class="punctuation">&#125;</span></span><br><span class="line">              <span class="punctuation">&#125;</span><span class="punctuation">,</span></span><br><span class="line">              <span class="punctuation">&#123;</span></span><br><span class="line">                <span class="attr">&quot;key&quot;</span> <span class="punctuation">:</span> <span class="string">&quot;M&quot;</span><span class="punctuation">,</span></span><br><span class="line">                <span class="attr">&quot;doc_count&quot;</span> <span class="punctuation">:</span> <span class="number">20</span><span class="punctuation">,</span></span><br><span class="line">                <span class="attr">&quot;balanceAvg&quot;</span> <span class="punctuation">:</span> <span class="punctuation">&#123;</span></span><br><span class="line">                  <span class="attr">&quot;value&quot;</span> <span class="punctuation">:</span> <span class="number">30129.35</span></span><br><span class="line">                <span class="punctuation">&#125;</span></span><br><span class="line">              <span class="punctuation">&#125;</span></span><br><span class="line">            <span class="punctuation">]</span></span><br><span class="line">          <span class="punctuation">&#125;</span><span class="punctuation">,</span></span><br><span class="line">          <span class="attr">&quot;ageBalanceAvg&quot;</span> <span class="punctuation">:</span> <span class="punctuation">&#123;</span></span><br><span class="line">            <span class="attr">&quot;value&quot;</span> <span class="punctuation">:</span> <span class="number">28273.882352941175</span></span><br><span class="line">          <span class="punctuation">&#125;</span></span><br><span class="line">        <span class="punctuation">&#125;</span><span class="punctuation">,</span></span><br><span class="line">        <span class="punctuation">&#123;</span></span><br><span class="line">          <span class="attr">&quot;key&quot;</span> <span class="punctuation">:</span> <span class="number">33</span><span class="punctuation">,</span></span><br><span class="line">          <span class="attr">&quot;doc_count&quot;</span> <span class="punctuation">:</span> <span class="number">50</span><span class="punctuation">,</span></span><br><span class="line">          <span class="attr">&quot;genderAgg&quot;</span> <span class="punctuation">:</span> <span class="punctuation">&#123;</span></span><br><span class="line">            <span class="attr">&quot;doc_count_error_upper_bound&quot;</span> <span class="punctuation">:</span> <span class="number">0</span><span class="punctuation">,</span></span><br><span class="line">            <span class="attr">&quot;sum_other_doc_count&quot;</span> <span class="punctuation">:</span> <span class="number">0</span><span class="punctuation">,</span></span><br><span class="line">            <span class="attr">&quot;buckets&quot;</span> <span class="punctuation">:</span> <span class="punctuation">[</span></span><br><span class="line">              <span class="punctuation">&#123;</span></span><br><span class="line">                <span class="attr">&quot;key&quot;</span> <span class="punctuation">:</span> <span class="string">&quot;F&quot;</span><span class="punctuation">,</span></span><br><span class="line">                <span class="attr">&quot;doc_count&quot;</span> <span class="punctuation">:</span> <span class="number">26</span><span class="punctuation">,</span></span><br><span class="line">                <span class="attr">&quot;balanceAvg&quot;</span> <span class="punctuation">:</span> <span class="punctuation">&#123;</span></span><br><span class="line">                  <span class="attr">&quot;value&quot;</span> <span class="punctuation">:</span> <span class="number">26437.615384615383</span></span><br><span class="line">                <span class="punctuation">&#125;</span></span><br><span class="line">              <span class="punctuation">&#125;</span><span class="punctuation">,</span></span><br><span class="line">              <span class="punctuation">&#123;</span></span><br><span class="line">                <span class="attr">&quot;key&quot;</span> <span class="punctuation">:</span> <span class="string">&quot;M&quot;</span><span class="punctuation">,</span></span><br><span class="line">                <span class="attr">&quot;doc_count&quot;</span> <span class="punctuation">:</span> <span class="number">24</span><span class="punctuation">,</span></span><br><span class="line">                <span class="attr">&quot;balanceAvg&quot;</span> <span class="punctuation">:</span> <span class="punctuation">&#123;</span></span><br><span class="line">                  <span class="attr">&quot;value&quot;</span> <span class="punctuation">:</span> <span class="number">23638.291666666668</span></span><br><span class="line">                <span class="punctuation">&#125;</span></span><br><span class="line">              <span class="punctuation">&#125;</span></span><br><span class="line">            <span class="punctuation">]</span></span><br><span class="line">          <span class="punctuation">&#125;</span><span class="punctuation">,</span></span><br><span class="line">          <span class="attr">&quot;ageBalanceAvg&quot;</span> <span class="punctuation">:</span> <span class="punctuation">&#123;</span></span><br><span class="line">            <span class="attr">&quot;value&quot;</span> <span class="punctuation">:</span> <span class="number">25093.94</span></span><br><span class="line">          <span class="punctuation">&#125;</span></span><br><span class="line">        <span class="punctuation">&#125;</span><span class="punctuation">,</span></span><br><span class="line">        <span class="punctuation">&#123;</span></span><br><span class="line">          <span class="attr">&quot;key&quot;</span> <span class="punctuation">:</span> <span class="number">34</span><span class="punctuation">,</span></span><br><span class="line">          <span class="attr">&quot;doc_count&quot;</span> <span class="punctuation">:</span> <span class="number">49</span><span class="punctuation">,</span></span><br><span class="line">          <span class="attr">&quot;genderAgg&quot;</span> <span class="punctuation">:</span> <span class="punctuation">&#123;</span></span><br><span class="line">            <span class="attr">&quot;doc_count_error_upper_bound&quot;</span> <span class="punctuation">:</span> <span class="number">0</span><span class="punctuation">,</span></span><br><span class="line">            <span class="attr">&quot;sum_other_doc_count&quot;</span> <span class="punctuation">:</span> <span class="number">0</span><span class="punctuation">,</span></span><br><span class="line">            <span class="attr">&quot;buckets&quot;</span> <span class="punctuation">:</span> <span class="punctuation">[</span></span><br><span class="line">              <span class="punctuation">&#123;</span></span><br><span class="line">                <span class="attr">&quot;key&quot;</span> <span class="punctuation">:</span> <span class="string">&quot;F&quot;</span><span class="punctuation">,</span></span><br><span class="line">                <span class="attr">&quot;doc_count&quot;</span> <span class="punctuation">:</span> <span class="number">30</span><span class="punctuation">,</span></span><br><span class="line">                <span class="attr">&quot;balanceAvg&quot;</span> <span class="punctuation">:</span> <span class="punctuation">&#123;</span></span><br><span class="line">                  <span class="attr">&quot;value&quot;</span> <span class="punctuation">:</span> <span class="number">26039.166666666668</span></span><br><span class="line">                <span class="punctuation">&#125;</span></span><br><span class="line">              <span class="punctuation">&#125;</span><span class="punctuation">,</span></span><br><span class="line">              <span class="punctuation">&#123;</span></span><br><span class="line">                <span class="attr">&quot;key&quot;</span> <span class="punctuation">:</span> <span class="string">&quot;M&quot;</span><span class="punctuation">,</span></span><br><span class="line">                <span class="attr">&quot;doc_count&quot;</span> <span class="punctuation">:</span> <span class="number">19</span><span class="punctuation">,</span></span><br><span class="line">                <span class="attr">&quot;balanceAvg&quot;</span> <span class="punctuation">:</span> <span class="punctuation">&#123;</span></span><br><span class="line">                  <span class="attr">&quot;value&quot;</span> <span class="punctuation">:</span> <span class="number">28027.0</span></span><br><span class="line">                <span class="punctuation">&#125;</span></span><br><span class="line">              <span class="punctuation">&#125;</span></span><br><span class="line">            <span class="punctuation">]</span></span><br><span class="line">          <span class="punctuation">&#125;</span><span class="punctuation">,</span></span><br><span class="line">          <span class="attr">&quot;ageBalanceAvg&quot;</span> <span class="punctuation">:</span> <span class="punctuation">&#123;</span></span><br><span class="line">            <span class="attr">&quot;value&quot;</span> <span class="punctuation">:</span> <span class="number">26809.95918367347</span></span><br><span class="line">          <span class="punctuation">&#125;</span></span><br><span class="line">        <span class="punctuation">&#125;</span><span class="punctuation">,</span></span><br><span class="line">        <span class="punctuation">&#123;</span></span><br><span class="line">          <span class="attr">&quot;key&quot;</span> <span class="punctuation">:</span> <span class="number">30</span><span class="punctuation">,</span></span><br><span class="line">          <span class="attr">&quot;doc_count&quot;</span> <span class="punctuation">:</span> <span class="number">47</span><span class="punctuation">,</span></span><br><span class="line">          <span class="attr">&quot;genderAgg&quot;</span> <span class="punctuation">:</span> <span class="punctuation">&#123;</span></span><br><span class="line">            <span class="attr">&quot;doc_count_error_upper_bound&quot;</span> <span class="punctuation">:</span> <span class="number">0</span><span class="punctuation">,</span></span><br><span class="line">            <span class="attr">&quot;sum_other_doc_count&quot;</span> <span class="punctuation">:</span> <span class="number">0</span><span class="punctuation">,</span></span><br><span class="line">            <span class="attr">&quot;buckets&quot;</span> <span class="punctuation">:</span> <span class="punctuation">[</span></span><br><span class="line">              <span class="punctuation">&#123;</span></span><br><span class="line">                <span class="attr">&quot;key&quot;</span> <span class="punctuation">:</span> <span class="string">&quot;F&quot;</span><span class="punctuation">,</span></span><br><span class="line">                <span class="attr">&quot;doc_count&quot;</span> <span class="punctuation">:</span> <span class="number">25</span><span class="punctuation">,</span></span><br><span class="line">                <span class="attr">&quot;balanceAvg&quot;</span> <span class="punctuation">:</span> <span class="punctuation">&#123;</span></span><br><span class="line">                  <span class="attr">&quot;value&quot;</span> <span class="punctuation">:</span> <span class="number">25316.16</span></span><br><span class="line">                <span class="punctuation">&#125;</span></span><br><span class="line">              <span class="punctuation">&#125;</span><span class="punctuation">,</span></span><br><span class="line">              <span class="punctuation">&#123;</span></span><br><span class="line">                <span class="attr">&quot;key&quot;</span> <span class="punctuation">:</span> <span class="string">&quot;M&quot;</span><span class="punctuation">,</span></span><br><span class="line">                <span class="attr">&quot;doc_count&quot;</span> <span class="punctuation">:</span> <span class="number">22</span><span class="punctuation">,</span></span><br><span class="line">                <span class="attr">&quot;balanceAvg&quot;</span> <span class="punctuation">:</span> <span class="punctuation">&#123;</span></span><br><span class="line">                  <span class="attr">&quot;value&quot;</span> <span class="punctuation">:</span> <span class="number">20028.545454545456</span></span><br><span class="line">                <span class="punctuation">&#125;</span></span><br><span class="line">              <span class="punctuation">&#125;</span></span><br><span class="line">            <span class="punctuation">]</span></span><br><span class="line">          <span class="punctuation">&#125;</span><span class="punctuation">,</span></span><br><span class="line">          <span class="attr">&quot;ageBalanceAvg&quot;</span> <span class="punctuation">:</span> <span class="punctuation">&#123;</span></span><br><span class="line">            <span class="attr">&quot;value&quot;</span> <span class="punctuation">:</span> <span class="number">22841.106382978724</span></span><br><span class="line">          <span class="punctuation">&#125;</span></span><br><span class="line">        <span class="punctuation">&#125;</span><span class="punctuation">,</span></span><br><span class="line">        <span class="punctuation">&#123;</span></span><br><span class="line">          <span class="attr">&quot;key&quot;</span> <span class="punctuation">:</span> <span class="number">21</span><span class="punctuation">,</span></span><br><span class="line">          <span class="attr">&quot;doc_count&quot;</span> <span class="punctuation">:</span> <span class="number">46</span><span class="punctuation">,</span></span><br><span class="line">          <span class="attr">&quot;genderAgg&quot;</span> <span class="punctuation">:</span> <span class="punctuation">&#123;</span></span><br><span class="line">            <span class="attr">&quot;doc_count_error_upper_bound&quot;</span> <span class="punctuation">:</span> <span class="number">0</span><span class="punctuation">,</span></span><br><span class="line">            <span class="attr">&quot;sum_other_doc_count&quot;</span> <span class="punctuation">:</span> <span class="number">0</span><span class="punctuation">,</span></span><br><span class="line">            <span class="attr">&quot;buckets&quot;</span> <span class="punctuation">:</span> <span class="punctuation">[</span></span><br><span class="line">              <span class="punctuation">&#123;</span></span><br><span class="line">                <span class="attr">&quot;key&quot;</span> <span class="punctuation">:</span> <span class="string">&quot;F&quot;</span><span class="punctuation">,</span></span><br><span class="line">                <span class="attr">&quot;doc_count&quot;</span> <span class="punctuation">:</span> <span class="number">24</span><span class="punctuation">,</span></span><br><span class="line">                <span class="attr">&quot;balanceAvg&quot;</span> <span class="punctuation">:</span> <span class="punctuation">&#123;</span></span><br><span class="line">                  <span class="attr">&quot;value&quot;</span> <span class="punctuation">:</span> <span class="number">28210.916666666668</span></span><br><span class="line">                <span class="punctuation">&#125;</span></span><br><span class="line">              <span class="punctuation">&#125;</span><span class="punctuation">,</span></span><br><span class="line">              <span class="punctuation">&#123;</span></span><br><span class="line">                <span class="attr">&quot;key&quot;</span> <span class="punctuation">:</span> <span class="string">&quot;M&quot;</span><span class="punctuation">,</span></span><br><span class="line">                <span class="attr">&quot;doc_count&quot;</span> <span class="punctuation">:</span> <span class="number">22</span><span class="punctuation">,</span></span><br><span class="line">                <span class="attr">&quot;balanceAvg&quot;</span> <span class="punctuation">:</span> <span class="punctuation">&#123;</span></span><br><span class="line">                  <span class="attr">&quot;value&quot;</span> <span class="punctuation">:</span> <span class="number">25640.18181818182</span></span><br><span class="line">                <span class="punctuation">&#125;</span></span><br><span class="line">              <span class="punctuation">&#125;</span></span><br><span class="line">            <span class="punctuation">]</span></span><br><span class="line">          <span class="punctuation">&#125;</span><span class="punctuation">,</span></span><br><span class="line">          <span class="attr">&quot;ageBalanceAvg&quot;</span> <span class="punctuation">:</span> <span class="punctuation">&#123;</span></span><br><span class="line">            <span class="attr">&quot;value&quot;</span> <span class="punctuation">:</span> <span class="number">26981.434782608696</span></span><br><span class="line">          <span class="punctuation">&#125;</span></span><br><span class="line">        <span class="punctuation">&#125;</span><span class="punctuation">,</span></span><br><span class="line">        <span class="punctuation">&#123;</span></span><br><span class="line">          <span class="attr">&quot;key&quot;</span> <span class="punctuation">:</span> <span class="number">40</span><span class="punctuation">,</span></span><br><span class="line">          <span class="attr">&quot;doc_count&quot;</span> <span class="punctuation">:</span> <span class="number">45</span><span class="punctuation">,</span></span><br><span class="line">          <span class="attr">&quot;genderAgg&quot;</span> <span class="punctuation">:</span> <span class="punctuation">&#123;</span></span><br><span class="line">            <span class="attr">&quot;doc_count_error_upper_bound&quot;</span> <span class="punctuation">:</span> <span class="number">0</span><span class="punctuation">,</span></span><br><span class="line">            <span class="attr">&quot;sum_other_doc_count&quot;</span> <span class="punctuation">:</span> <span class="number">0</span><span class="punctuation">,</span></span><br><span class="line">            <span class="attr">&quot;buckets&quot;</span> <span class="punctuation">:</span> <span class="punctuation">[</span></span><br><span class="line">              <span class="punctuation">&#123;</span></span><br><span class="line">                <span class="attr">&quot;key&quot;</span> <span class="punctuation">:</span> <span class="string">&quot;M&quot;</span><span class="punctuation">,</span></span><br><span class="line">                <span class="attr">&quot;doc_count&quot;</span> <span class="punctuation">:</span> <span class="number">24</span><span class="punctuation">,</span></span><br><span class="line">                <span class="attr">&quot;balanceAvg&quot;</span> <span class="punctuation">:</span> <span class="punctuation">&#123;</span></span><br><span class="line">                  <span class="attr">&quot;value&quot;</span> <span class="punctuation">:</span> <span class="number">26474.958333333332</span></span><br><span class="line">                <span class="punctuation">&#125;</span></span><br><span class="line">              <span class="punctuation">&#125;</span><span class="punctuation">,</span></span><br><span class="line">              <span class="punctuation">&#123;</span></span><br><span class="line">                <span class="attr">&quot;key&quot;</span> <span class="punctuation">:</span> <span class="string">&quot;F&quot;</span><span class="punctuation">,</span></span><br><span class="line">                <span class="attr">&quot;doc_count&quot;</span> <span class="punctuation">:</span> <span class="number">21</span><span class="punctuation">,</span></span><br><span class="line">                <span class="attr">&quot;balanceAvg&quot;</span> <span class="punctuation">:</span> <span class="punctuation">&#123;</span></span><br><span class="line">                  <span class="attr">&quot;value&quot;</span> <span class="punctuation">:</span> <span class="number">27992.571428571428</span></span><br><span class="line">                <span class="punctuation">&#125;</span></span><br><span class="line">              <span class="punctuation">&#125;</span></span><br><span class="line">            <span class="punctuation">]</span></span><br><span class="line">          <span class="punctuation">&#125;</span><span class="punctuation">,</span></span><br><span class="line">          <span class="attr">&quot;ageBalanceAvg&quot;</span> <span class="punctuation">:</span> <span class="punctuation">&#123;</span></span><br><span class="line">            <span class="attr">&quot;value&quot;</span> <span class="punctuation">:</span> <span class="number">27183.17777777778</span></span><br><span class="line">          <span class="punctuation">&#125;</span></span><br><span class="line">        <span class="punctuation">&#125;</span><span class="punctuation">,</span></span><br><span class="line">        <span class="punctuation">&#123;</span></span><br><span class="line">          <span class="attr">&quot;key&quot;</span> <span class="punctuation">:</span> <span class="number">20</span><span class="punctuation">,</span></span><br><span class="line">          <span class="attr">&quot;doc_count&quot;</span> <span class="punctuation">:</span> <span class="number">44</span><span class="punctuation">,</span></span><br><span class="line">          <span class="attr">&quot;genderAgg&quot;</span> <span class="punctuation">:</span> <span class="punctuation">&#123;</span></span><br><span class="line">            <span class="attr">&quot;doc_count_error_upper_bound&quot;</span> <span class="punctuation">:</span> <span class="number">0</span><span class="punctuation">,</span></span><br><span class="line">            <span class="attr">&quot;sum_other_doc_count&quot;</span> <span class="punctuation">:</span> <span class="number">0</span><span class="punctuation">,</span></span><br><span class="line">            <span class="attr">&quot;buckets&quot;</span> <span class="punctuation">:</span> <span class="punctuation">[</span></span><br><span class="line">              <span class="punctuation">&#123;</span></span><br><span class="line">                <span class="attr">&quot;key&quot;</span> <span class="punctuation">:</span> <span class="string">&quot;M&quot;</span><span class="punctuation">,</span></span><br><span class="line">                <span class="attr">&quot;doc_count&quot;</span> <span class="punctuation">:</span> <span class="number">27</span><span class="punctuation">,</span></span><br><span class="line">                <span class="attr">&quot;balanceAvg&quot;</span> <span class="punctuation">:</span> <span class="punctuation">&#123;</span></span><br><span class="line">                  <span class="attr">&quot;value&quot;</span> <span class="punctuation">:</span> <span class="number">29047.444444444445</span></span><br><span class="line">                <span class="punctuation">&#125;</span></span><br><span class="line">              <span class="punctuation">&#125;</span><span class="punctuation">,</span></span><br><span class="line">              <span class="punctuation">&#123;</span></span><br><span class="line">                <span class="attr">&quot;key&quot;</span> <span class="punctuation">:</span> <span class="string">&quot;F&quot;</span><span class="punctuation">,</span></span><br><span class="line">                <span class="attr">&quot;doc_count&quot;</span> <span class="punctuation">:</span> <span class="number">17</span><span class="punctuation">,</span></span><br><span class="line">                <span class="attr">&quot;balanceAvg&quot;</span> <span class="punctuation">:</span> <span class="punctuation">&#123;</span></span><br><span class="line">                  <span class="attr">&quot;value&quot;</span> <span class="punctuation">:</span> <span class="number">25666.647058823528</span></span><br><span class="line">                <span class="punctuation">&#125;</span></span><br><span class="line">              <span class="punctuation">&#125;</span></span><br><span class="line">            <span class="punctuation">]</span></span><br><span class="line">          <span class="punctuation">&#125;</span><span class="punctuation">,</span></span><br><span class="line">          <span class="attr">&quot;ageBalanceAvg&quot;</span> <span class="punctuation">:</span> <span class="punctuation">&#123;</span></span><br><span class="line">            <span class="attr">&quot;value&quot;</span> <span class="punctuation">:</span> <span class="number">27741.227272727272</span></span><br><span class="line">          <span class="punctuation">&#125;</span></span><br><span class="line">        <span class="punctuation">&#125;</span><span class="punctuation">,</span></span><br><span class="line">        <span class="punctuation">&#123;</span></span><br><span class="line">          <span class="attr">&quot;key&quot;</span> <span class="punctuation">:</span> <span class="number">23</span><span class="punctuation">,</span></span><br><span class="line">          <span class="attr">&quot;doc_count&quot;</span> <span class="punctuation">:</span> <span class="number">42</span><span class="punctuation">,</span></span><br><span class="line">          <span class="attr">&quot;genderAgg&quot;</span> <span class="punctuation">:</span> <span class="punctuation">&#123;</span></span><br><span class="line">            <span class="attr">&quot;doc_count_error_upper_bound&quot;</span> <span class="punctuation">:</span> <span class="number">0</span><span class="punctuation">,</span></span><br><span class="line">            <span class="attr">&quot;sum_other_doc_count&quot;</span> <span class="punctuation">:</span> <span class="number">0</span><span class="punctuation">,</span></span><br><span class="line">            <span class="attr">&quot;buckets&quot;</span> <span class="punctuation">:</span> <span class="punctuation">[</span></span><br><span class="line">              <span class="punctuation">&#123;</span></span><br><span class="line">                <span class="attr">&quot;key&quot;</span> <span class="punctuation">:</span> <span class="string">&quot;M&quot;</span><span class="punctuation">,</span></span><br><span class="line">                <span class="attr">&quot;doc_count&quot;</span> <span class="punctuation">:</span> <span class="number">24</span><span class="punctuation">,</span></span><br><span class="line">                <span class="attr">&quot;balanceAvg&quot;</span> <span class="punctuation">:</span> <span class="punctuation">&#123;</span></span><br><span class="line">                  <span class="attr">&quot;value&quot;</span> <span class="punctuation">:</span> <span class="number">27730.75</span></span><br><span class="line">                <span class="punctuation">&#125;</span></span><br><span class="line">              <span class="punctuation">&#125;</span><span class="punctuation">,</span></span><br><span class="line">              <span class="punctuation">&#123;</span></span><br><span class="line">                <span class="attr">&quot;key&quot;</span> <span class="punctuation">:</span> <span class="string">&quot;F&quot;</span><span class="punctuation">,</span></span><br><span class="line">                <span class="attr">&quot;doc_count&quot;</span> <span class="punctuation">:</span> <span class="number">18</span><span class="punctuation">,</span></span><br><span class="line">                <span class="attr">&quot;balanceAvg&quot;</span> <span class="punctuation">:</span> <span class="punctuation">&#123;</span></span><br><span class="line">                  <span class="attr">&quot;value&quot;</span> <span class="punctuation">:</span> <span class="number">26758.833333333332</span></span><br><span class="line">                <span class="punctuation">&#125;</span></span><br><span class="line">              <span class="punctuation">&#125;</span></span><br><span class="line">            <span class="punctuation">]</span></span><br><span class="line">          <span class="punctuation">&#125;</span><span class="punctuation">,</span></span><br><span class="line">          <span class="attr">&quot;ageBalanceAvg&quot;</span> <span class="punctuation">:</span> <span class="punctuation">&#123;</span></span><br><span class="line">            <span class="attr">&quot;value&quot;</span> <span class="punctuation">:</span> <span class="number">27314.214285714286</span></span><br><span class="line">          <span class="punctuation">&#125;</span></span><br><span class="line">        <span class="punctuation">&#125;</span><span class="punctuation">,</span></span><br><span class="line">        <span class="punctuation">&#123;</span></span><br><span class="line">          <span class="attr">&quot;key&quot;</span> <span class="punctuation">:</span> <span class="number">24</span><span class="punctuation">,</span></span><br><span class="line">          <span class="attr">&quot;doc_count&quot;</span> <span class="punctuation">:</span> <span class="number">42</span><span class="punctuation">,</span></span><br><span class="line">          <span class="attr">&quot;genderAgg&quot;</span> <span class="punctuation">:</span> <span class="punctuation">&#123;</span></span><br><span class="line">            <span class="attr">&quot;doc_count_error_upper_bound&quot;</span> <span class="punctuation">:</span> <span class="number">0</span><span class="punctuation">,</span></span><br><span class="line">            <span class="attr">&quot;sum_other_doc_count&quot;</span> <span class="punctuation">:</span> <span class="number">0</span><span class="punctuation">,</span></span><br><span class="line">            <span class="attr">&quot;buckets&quot;</span> <span class="punctuation">:</span> <span class="punctuation">[</span></span><br><span class="line">              <span class="punctuation">&#123;</span></span><br><span class="line">                <span class="attr">&quot;key&quot;</span> <span class="punctuation">:</span> <span class="string">&quot;F&quot;</span><span class="punctuation">,</span></span><br><span class="line">                <span class="attr">&quot;doc_count&quot;</span> <span class="punctuation">:</span> <span class="number">23</span><span class="punctuation">,</span></span><br><span class="line">                <span class="attr">&quot;balanceAvg&quot;</span> <span class="punctuation">:</span> <span class="punctuation">&#123;</span></span><br><span class="line">                  <span class="attr">&quot;value&quot;</span> <span class="punctuation">:</span> <span class="number">29414.521739130436</span></span><br><span class="line">                <span class="punctuation">&#125;</span></span><br><span class="line">              <span class="punctuation">&#125;</span><span class="punctuation">,</span></span><br><span class="line">              <span class="punctuation">&#123;</span></span><br><span class="line">                <span class="attr">&quot;key&quot;</span> <span class="punctuation">:</span> <span class="string">&quot;M&quot;</span><span class="punctuation">,</span></span><br><span class="line">                <span class="attr">&quot;doc_count&quot;</span> <span class="punctuation">:</span> <span class="number">19</span><span class="punctuation">,</span></span><br><span class="line">                <span class="attr">&quot;balanceAvg&quot;</span> <span class="punctuation">:</span> <span class="punctuation">&#123;</span></span><br><span class="line">                  <span class="attr">&quot;value&quot;</span> <span class="punctuation">:</span> <span class="number">27435.052631578947</span></span><br><span class="line">                <span class="punctuation">&#125;</span></span><br><span class="line">              <span class="punctuation">&#125;</span></span><br><span class="line">            <span class="punctuation">]</span></span><br><span class="line">          <span class="punctuation">&#125;</span><span class="punctuation">,</span></span><br><span class="line">          <span class="attr">&quot;ageBalanceAvg&quot;</span> <span class="punctuation">:</span> <span class="punctuation">&#123;</span></span><br><span class="line">            <span class="attr">&quot;value&quot;</span> <span class="punctuation">:</span> <span class="number">28519.04761904762</span></span><br><span class="line">          <span class="punctuation">&#125;</span></span><br><span class="line">        <span class="punctuation">&#125;</span><span class="punctuation">,</span></span><br><span class="line">        <span class="punctuation">&#123;</span></span><br><span class="line">          <span class="attr">&quot;key&quot;</span> <span class="punctuation">:</span> <span class="number">25</span><span class="punctuation">,</span></span><br><span class="line">          <span class="attr">&quot;doc_count&quot;</span> <span class="punctuation">:</span> <span class="number">42</span><span class="punctuation">,</span></span><br><span class="line">          <span class="attr">&quot;genderAgg&quot;</span> <span class="punctuation">:</span> <span class="punctuation">&#123;</span></span><br><span class="line">            <span class="attr">&quot;doc_count_error_upper_bound&quot;</span> <span class="punctuation">:</span> <span class="number">0</span><span class="punctuation">,</span></span><br><span class="line">            <span class="attr">&quot;sum_other_doc_count&quot;</span> <span class="punctuation">:</span> <span class="number">0</span><span class="punctuation">,</span></span><br><span class="line">            <span class="attr">&quot;buckets&quot;</span> <span class="punctuation">:</span> <span class="punctuation">[</span></span><br><span class="line">              <span class="punctuation">&#123;</span></span><br><span class="line">                <span class="attr">&quot;key&quot;</span> <span class="punctuation">:</span> <span class="string">&quot;M&quot;</span><span class="punctuation">,</span></span><br><span class="line">                <span class="attr">&quot;doc_count&quot;</span> <span class="punctuation">:</span> <span class="number">23</span><span class="punctuation">,</span></span><br><span class="line">                <span class="attr">&quot;balanceAvg&quot;</span> <span class="punctuation">:</span> <span class="punctuation">&#123;</span></span><br><span class="line">                  <span class="attr">&quot;value&quot;</span> <span class="punctuation">:</span> <span class="number">29336.08695652174</span></span><br><span class="line">                <span class="punctuation">&#125;</span></span><br><span class="line">              <span class="punctuation">&#125;</span><span class="punctuation">,</span></span><br><span class="line">              <span class="punctuation">&#123;</span></span><br><span class="line">                <span class="attr">&quot;key&quot;</span> <span class="punctuation">:</span> <span class="string">&quot;F&quot;</span><span class="punctuation">,</span></span><br><span class="line">                <span class="attr">&quot;doc_count&quot;</span> <span class="punctuation">:</span> <span class="number">19</span><span class="punctuation">,</span></span><br><span class="line">                <span class="attr">&quot;balanceAvg&quot;</span> <span class="punctuation">:</span> <span class="punctuation">&#123;</span></span><br><span class="line">                  <span class="attr">&quot;value&quot;</span> <span class="punctuation">:</span> <span class="number">25156.263157894737</span></span><br><span class="line">                <span class="punctuation">&#125;</span></span><br><span class="line">              <span class="punctuation">&#125;</span></span><br><span class="line">            <span class="punctuation">]</span></span><br><span class="line">          <span class="punctuation">&#125;</span><span class="punctuation">,</span></span><br><span class="line">          <span class="attr">&quot;ageBalanceAvg&quot;</span> <span class="punctuation">:</span> <span class="punctuation">&#123;</span></span><br><span class="line">            <span class="attr">&quot;value&quot;</span> <span class="punctuation">:</span> <span class="number">27445.214285714286</span></span><br><span class="line">          <span class="punctuation">&#125;</span></span><br><span class="line">        <span class="punctuation">&#125;</span><span class="punctuation">,</span></span><br><span class="line">        <span class="punctuation">&#123;</span></span><br><span class="line">          <span class="attr">&quot;key&quot;</span> <span class="punctuation">:</span> <span class="number">37</span><span class="punctuation">,</span></span><br><span class="line">          <span class="attr">&quot;doc_count&quot;</span> <span class="punctuation">:</span> <span class="number">42</span><span class="punctuation">,</span></span><br><span class="line">          <span class="attr">&quot;genderAgg&quot;</span> <span class="punctuation">:</span> <span class="punctuation">&#123;</span></span><br><span class="line">            <span class="attr">&quot;doc_count_error_upper_bound&quot;</span> <span class="punctuation">:</span> <span class="number">0</span><span class="punctuation">,</span></span><br><span class="line">            <span class="attr">&quot;sum_other_doc_count&quot;</span> <span class="punctuation">:</span> <span class="number">0</span><span class="punctuation">,</span></span><br><span class="line">            <span class="attr">&quot;buckets&quot;</span> <span class="punctuation">:</span> <span class="punctuation">[</span></span><br><span class="line">              <span class="punctuation">&#123;</span></span><br><span class="line">                <span class="attr">&quot;key&quot;</span> <span class="punctuation">:</span> <span class="string">&quot;M&quot;</span><span class="punctuation">,</span></span><br><span class="line">                <span class="attr">&quot;doc_count&quot;</span> <span class="punctuation">:</span> <span class="number">23</span><span class="punctuation">,</span></span><br><span class="line">                <span class="attr">&quot;balanceAvg&quot;</span> <span class="punctuation">:</span> <span class="punctuation">&#123;</span></span><br><span class="line">                  <span class="attr">&quot;value&quot;</span> <span class="punctuation">:</span> <span class="number">25015.739130434784</span></span><br><span class="line">                <span class="punctuation">&#125;</span></span><br><span class="line">              <span class="punctuation">&#125;</span><span class="punctuation">,</span></span><br><span class="line">              <span class="punctuation">&#123;</span></span><br><span class="line">                <span class="attr">&quot;key&quot;</span> <span class="punctuation">:</span> <span class="string">&quot;F&quot;</span><span class="punctuation">,</span></span><br><span class="line">                <span class="attr">&quot;doc_count&quot;</span> <span class="punctuation">:</span> <span class="number">19</span><span class="punctuation">,</span></span><br><span class="line">                <span class="attr">&quot;balanceAvg&quot;</span> <span class="punctuation">:</span> <span class="punctuation">&#123;</span></span><br><span class="line">                  <span class="attr">&quot;value&quot;</span> <span class="punctuation">:</span> <span class="number">29451.21052631579</span></span><br><span class="line">                <span class="punctuation">&#125;</span></span><br><span class="line">              <span class="punctuation">&#125;</span></span><br><span class="line">            <span class="punctuation">]</span></span><br><span class="line">          <span class="punctuation">&#125;</span><span class="punctuation">,</span></span><br><span class="line">          <span class="attr">&quot;ageBalanceAvg&quot;</span> <span class="punctuation">:</span> <span class="punctuation">&#123;</span></span><br><span class="line">            <span class="attr">&quot;value&quot;</span> <span class="punctuation">:</span> <span class="number">27022.261904761905</span></span><br><span class="line">          <span class="punctuation">&#125;</span></span><br><span class="line">        <span class="punctuation">&#125;</span><span class="punctuation">,</span></span><br><span class="line">        <span class="punctuation">&#123;</span></span><br><span class="line">          <span class="attr">&quot;key&quot;</span> <span class="punctuation">:</span> <span class="number">27</span><span class="punctuation">,</span></span><br><span class="line">          <span class="attr">&quot;doc_count&quot;</span> <span class="punctuation">:</span> <span class="number">39</span><span class="punctuation">,</span></span><br><span class="line">          <span class="attr">&quot;genderAgg&quot;</span> <span class="punctuation">:</span> <span class="punctuation">&#123;</span></span><br><span class="line">            <span class="attr">&quot;doc_count_error_upper_bound&quot;</span> <span class="punctuation">:</span> <span class="number">0</span><span class="punctuation">,</span></span><br><span class="line">            <span class="attr">&quot;sum_other_doc_count&quot;</span> <span class="punctuation">:</span> <span class="number">0</span><span class="punctuation">,</span></span><br><span class="line">            <span class="attr">&quot;buckets&quot;</span> <span class="punctuation">:</span> <span class="punctuation">[</span></span><br><span class="line">              <span class="punctuation">&#123;</span></span><br><span class="line">                <span class="attr">&quot;key&quot;</span> <span class="punctuation">:</span> <span class="string">&quot;F&quot;</span><span class="punctuation">,</span></span><br><span class="line">                <span class="attr">&quot;doc_count&quot;</span> <span class="punctuation">:</span> <span class="number">21</span><span class="punctuation">,</span></span><br><span class="line">                <span class="attr">&quot;balanceAvg&quot;</span> <span class="punctuation">:</span> <span class="punctuation">&#123;</span></span><br><span class="line">                  <span class="attr">&quot;value&quot;</span> <span class="punctuation">:</span> <span class="number">21618.85714285714</span></span><br><span class="line">                <span class="punctuation">&#125;</span></span><br><span class="line">              <span class="punctuation">&#125;</span><span class="punctuation">,</span></span><br><span class="line">              <span class="punctuation">&#123;</span></span><br><span class="line">                <span class="attr">&quot;key&quot;</span> <span class="punctuation">:</span> <span class="string">&quot;M&quot;</span><span class="punctuation">,</span></span><br><span class="line">                <span class="attr">&quot;doc_count&quot;</span> <span class="punctuation">:</span> <span class="number">18</span><span class="punctuation">,</span></span><br><span class="line">                <span class="attr">&quot;balanceAvg&quot;</span> <span class="punctuation">:</span> <span class="punctuation">&#123;</span></span><br><span class="line">                  <span class="attr">&quot;value&quot;</span> <span class="punctuation">:</span> <span class="number">21300.38888888889</span></span><br><span class="line">                <span class="punctuation">&#125;</span></span><br><span class="line">              <span class="punctuation">&#125;</span></span><br><span class="line">            <span class="punctuation">]</span></span><br><span class="line">          <span class="punctuation">&#125;</span><span class="punctuation">,</span></span><br><span class="line">          <span class="attr">&quot;ageBalanceAvg&quot;</span> <span class="punctuation">:</span> <span class="punctuation">&#123;</span></span><br><span class="line">            <span class="attr">&quot;value&quot;</span> <span class="punctuation">:</span> <span class="number">21471.871794871793</span></span><br><span class="line">          <span class="punctuation">&#125;</span></span><br><span class="line">        <span class="punctuation">&#125;</span><span class="punctuation">,</span></span><br><span class="line">        <span class="punctuation">&#123;</span></span><br><span class="line">          <span class="attr">&quot;key&quot;</span> <span class="punctuation">:</span> <span class="number">38</span><span class="punctuation">,</span></span><br><span class="line">          <span class="attr">&quot;doc_count&quot;</span> <span class="punctuation">:</span> <span class="number">39</span><span class="punctuation">,</span></span><br><span class="line">          <span class="attr">&quot;genderAgg&quot;</span> <span class="punctuation">:</span> <span class="punctuation">&#123;</span></span><br><span class="line">            <span class="attr">&quot;doc_count_error_upper_bound&quot;</span> <span class="punctuation">:</span> <span class="number">0</span><span class="punctuation">,</span></span><br><span class="line">            <span class="attr">&quot;sum_other_doc_count&quot;</span> <span class="punctuation">:</span> <span class="number">0</span><span class="punctuation">,</span></span><br><span class="line">            <span class="attr">&quot;buckets&quot;</span> <span class="punctuation">:</span> <span class="punctuation">[</span></span><br><span class="line">              <span class="punctuation">&#123;</span></span><br><span class="line">                <span class="attr">&quot;key&quot;</span> <span class="punctuation">:</span> <span class="string">&quot;F&quot;</span><span class="punctuation">,</span></span><br><span class="line">                <span class="attr">&quot;doc_count&quot;</span> <span class="punctuation">:</span> <span class="number">20</span><span class="punctuation">,</span></span><br><span class="line">                <span class="attr">&quot;balanceAvg&quot;</span> <span class="punctuation">:</span> <span class="punctuation">&#123;</span></span><br><span class="line">                  <span class="attr">&quot;value&quot;</span> <span class="punctuation">:</span> <span class="number">27931.65</span></span><br><span class="line">                <span class="punctuation">&#125;</span></span><br><span class="line">              <span class="punctuation">&#125;</span><span class="punctuation">,</span></span><br><span class="line">              <span class="punctuation">&#123;</span></span><br><span class="line">                <span class="attr">&quot;key&quot;</span> <span class="punctuation">:</span> <span class="string">&quot;M&quot;</span><span class="punctuation">,</span></span><br><span class="line">                <span class="attr">&quot;doc_count&quot;</span> <span class="punctuation">:</span> <span class="number">19</span><span class="punctuation">,</span></span><br><span class="line">                <span class="attr">&quot;balanceAvg&quot;</span> <span class="punctuation">:</span> <span class="punctuation">&#123;</span></span><br><span class="line">                  <span class="attr">&quot;value&quot;</span> <span class="punctuation">:</span> <span class="number">24350.894736842107</span></span><br><span class="line">                <span class="punctuation">&#125;</span></span><br><span class="line">              <span class="punctuation">&#125;</span></span><br><span class="line">            <span class="punctuation">]</span></span><br><span class="line">          <span class="punctuation">&#125;</span><span class="punctuation">,</span></span><br><span class="line">          <span class="attr">&quot;ageBalanceAvg&quot;</span> <span class="punctuation">:</span> <span class="punctuation">&#123;</span></span><br><span class="line">            <span class="attr">&quot;value&quot;</span> <span class="punctuation">:</span> <span class="number">26187.17948717949</span></span><br><span class="line">          <span class="punctuation">&#125;</span></span><br><span class="line">        <span class="punctuation">&#125;</span><span class="punctuation">,</span></span><br><span class="line">        <span class="punctuation">&#123;</span></span><br><span class="line">          <span class="attr">&quot;key&quot;</span> <span class="punctuation">:</span> <span class="number">29</span><span class="punctuation">,</span></span><br><span class="line">          <span class="attr">&quot;doc_count&quot;</span> <span class="punctuation">:</span> <span class="number">35</span><span class="punctuation">,</span></span><br><span class="line">          <span class="attr">&quot;genderAgg&quot;</span> <span class="punctuation">:</span> <span class="punctuation">&#123;</span></span><br><span class="line">            <span class="attr">&quot;doc_count_error_upper_bound&quot;</span> <span class="punctuation">:</span> <span class="number">0</span><span class="punctuation">,</span></span><br><span class="line">            <span class="attr">&quot;sum_other_doc_count&quot;</span> <span class="punctuation">:</span> <span class="number">0</span><span class="punctuation">,</span></span><br><span class="line">            <span class="attr">&quot;buckets&quot;</span> <span class="punctuation">:</span> <span class="punctuation">[</span></span><br><span class="line">              <span class="punctuation">&#123;</span></span><br><span class="line">                <span class="attr">&quot;key&quot;</span> <span class="punctuation">:</span> <span class="string">&quot;M&quot;</span><span class="punctuation">,</span></span><br><span class="line">                <span class="attr">&quot;doc_count&quot;</span> <span class="punctuation">:</span> <span class="number">23</span><span class="punctuation">,</span></span><br><span class="line">                <span class="attr">&quot;balanceAvg&quot;</span> <span class="punctuation">:</span> <span class="punctuation">&#123;</span></span><br><span class="line">                  <span class="attr">&quot;value&quot;</span> <span class="punctuation">:</span> <span class="number">29943.17391304348</span></span><br><span class="line">                <span class="punctuation">&#125;</span></span><br><span class="line">              <span class="punctuation">&#125;</span><span class="punctuation">,</span></span><br><span class="line">              <span class="punctuation">&#123;</span></span><br><span class="line">                <span class="attr">&quot;key&quot;</span> <span class="punctuation">:</span> <span class="string">&quot;F&quot;</span><span class="punctuation">,</span></span><br><span class="line">                <span class="attr">&quot;doc_count&quot;</span> <span class="punctuation">:</span> <span class="number">12</span><span class="punctuation">,</span></span><br><span class="line">                <span class="attr">&quot;balanceAvg&quot;</span> <span class="punctuation">:</span> <span class="punctuation">&#123;</span></span><br><span class="line">                  <span class="attr">&quot;value&quot;</span> <span class="punctuation">:</span> <span class="number">28601.416666666668</span></span><br><span class="line">                <span class="punctuation">&#125;</span></span><br><span class="line">              <span class="punctuation">&#125;</span></span><br><span class="line">            <span class="punctuation">]</span></span><br><span class="line">          <span class="punctuation">&#125;</span><span class="punctuation">,</span></span><br><span class="line">          <span class="attr">&quot;ageBalanceAvg&quot;</span> <span class="punctuation">:</span> <span class="punctuation">&#123;</span></span><br><span class="line">            <span class="attr">&quot;value&quot;</span> <span class="punctuation">:</span> <span class="number">29483.14285714286</span></span><br><span class="line">          <span class="punctuation">&#125;</span></span><br><span class="line">        <span class="punctuation">&#125;</span></span><br><span class="line">      <span class="punctuation">]</span></span><br><span class="line">    <span class="punctuation">&#125;</span></span><br><span class="line">  <span class="punctuation">&#125;</span></span><br><span class="line"><span class="punctuation">&#125;</span></span><br></pre></td></tr></table></figure><h3 id="3）Mapping"><a href="#3）Mapping" class="headerlink" title="3）Mapping"></a>3）Mapping</h3><h4 id="（1）字段类型"><a href="#（1）字段类型" class="headerlink" title="（1）字段类型"></a>（1）字段类型</h4><p><strong>核心类型：</strong></p><p>字符串(string): text,keyword</p><p>数字类型(Numeric)：long,integer,short,byte,double,float,half_float,scaled_float</p><p>日期类型(Date): date</p><p>布尔类型(Boolean): boolean</p><p>二进制类型(binary): binary</p><p><strong>复合类型：</strong></p><p>数组类型(Array): Array支持不针对特定的类型</p><p>对象类型(Object): object用于单JSON对象</p><p>嵌套类型(Nested): nested用户JSON对象数组</p><p><strong>地理类型(Geo)</strong></p><p>地理坐标(Geo-points): geo_point用于描述 经纬度坐标</p><p>地理图形(Geo-Shape): geo_shape用户描述复杂形状，如多边形</p><p><strong>特定类型：</strong></p><p>IP类型：ip用于描述ipv4和ipv6地址</p><p>补全类型（Completion）：completion提供自动完成提示</p><p>令牌计数类型（Token count）：token_count用于统计字符串种的词条数量</p><p>附件类型（attachment）：参考mapper-attachements插件，支持将附件如Microsoft Office格式，Open Document格式，ePub，HTML等等索引为attachment数据类型。</p><p>抽取类型（Percolator）：接受特定领域查询语言（query-dsl）的查询</p><p><strong>多字段：</strong></p><p>通常用于为不同的方法索引同一个字段。例如，string字段可以映射为一个text字段用于全文检索，同样可以映射为一个keyword字段用于排序和聚合。另外，你可以使用standard analyzer，english analyzer， french analyzer来索引一个text字段</p><p>这就是muti-fields的目的，大多数的数据类型通过fields参数来支持muti-fields。</p><h4 id="（2）映射"><a href="#（2）映射" class="headerlink" title="（2）映射"></a>（2）映射</h4><p>Mapping(映射)<br>Maping是用来定义一个文档（document），以及它所包含的属性（field）是如何存储和索引的。比如：使用maping来定义：</p><ul><li><p>哪些字符串属性应该被看做全文本属性（full text fields）；</p></li><li><p>哪些属性包含数字，日期或地理位置；</p></li><li><p>文档中的所有属性是否都嫩被索引（all 配置）；</p></li><li><p>日期的格式；</p></li><li><p>自定义映射规则来执行动态添加属性；</p></li><li><p>查看mapping信息</p><figure class="highlight json"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br></pre></td><td class="code"><pre><span class="line">GET bank/_mapping</span><br><span class="line"></span><br><span class="line"><span class="punctuation">&#123;</span></span><br><span class="line">  <span class="attr">&quot;bank&quot;</span> <span class="punctuation">:</span> <span class="punctuation">&#123;</span></span><br><span class="line">    <span class="attr">&quot;mappings&quot;</span> <span class="punctuation">:</span> <span class="punctuation">&#123;</span></span><br><span class="line">      <span class="attr">&quot;properties&quot;</span> <span class="punctuation">:</span> <span class="punctuation">&#123;</span></span><br><span class="line">        <span class="attr">&quot;account_number&quot;</span> <span class="punctuation">:</span> <span class="punctuation">&#123;</span></span><br><span class="line">          <span class="attr">&quot;type&quot;</span> <span class="punctuation">:</span> <span class="string">&quot;long&quot;</span></span><br><span class="line">        <span class="punctuation">&#125;</span><span class="punctuation">,</span></span><br><span class="line">        <span class="attr">&quot;address&quot;</span> <span class="punctuation">:</span> <span class="punctuation">&#123;</span></span><br><span class="line">          <span class="attr">&quot;type&quot;</span> <span class="punctuation">:</span> <span class="string">&quot;text&quot;</span><span class="punctuation">,</span></span><br><span class="line">          <span class="attr">&quot;fields&quot;</span> <span class="punctuation">:</span> <span class="punctuation">&#123;</span></span><br><span class="line">            <span class="attr">&quot;keyword&quot;</span> <span class="punctuation">:</span> <span class="punctuation">&#123;</span></span><br><span class="line">              <span class="attr">&quot;type&quot;</span> <span class="punctuation">:</span> <span class="string">&quot;keyword&quot;</span><span class="punctuation">,</span></span><br><span class="line">              <span class="attr">&quot;ignore_above&quot;</span> <span class="punctuation">:</span> <span class="number">256</span></span><br><span class="line">            <span class="punctuation">&#125;</span></span><br><span class="line">          <span class="punctuation">&#125;</span></span><br><span class="line">        <span class="punctuation">&#125;</span><span class="punctuation">,</span></span><br><span class="line">        <span class="attr">&quot;age&quot;</span> <span class="punctuation">:</span> <span class="punctuation">&#123;</span></span><br><span class="line">          <span class="attr">&quot;type&quot;</span> <span class="punctuation">:</span> <span class="string">&quot;long&quot;</span></span><br><span class="line">        <span class="punctuation">&#125;</span><span class="punctuation">,</span></span><br><span class="line">        <span class="attr">&quot;balance&quot;</span> <span class="punctuation">:</span> <span class="punctuation">&#123;</span></span><br><span class="line">          <span class="attr">&quot;type&quot;</span> <span class="punctuation">:</span> <span class="string">&quot;long&quot;</span></span><br><span class="line">        <span class="punctuation">&#125;</span><span class="punctuation">,</span></span><br><span class="line">        <span class="attr">&quot;city&quot;</span> <span class="punctuation">:</span> <span class="punctuation">&#123;</span></span><br><span class="line">          <span class="attr">&quot;type&quot;</span> <span class="punctuation">:</span> <span class="string">&quot;text&quot;</span><span class="punctuation">,</span></span><br><span class="line">          <span class="attr">&quot;fields&quot;</span> <span class="punctuation">:</span> <span class="punctuation">&#123;</span></span><br><span class="line">            <span class="attr">&quot;keyword&quot;</span> <span class="punctuation">:</span> <span class="punctuation">&#123;</span></span><br><span class="line">              <span class="attr">&quot;type&quot;</span> <span class="punctuation">:</span> <span class="string">&quot;keyword&quot;</span><span class="punctuation">,</span></span><br><span class="line">              <span class="attr">&quot;ignore_above&quot;</span> <span class="punctuation">:</span> <span class="number">256</span></span><br><span class="line">            <span class="punctuation">&#125;</span></span><br><span class="line">          <span class="punctuation">&#125;</span></span><br><span class="line">        <span class="punctuation">&#125;</span><span class="punctuation">,</span></span><br><span class="line">        <span class="attr">&quot;email&quot;</span> <span class="punctuation">:</span> <span class="punctuation">&#123;</span></span><br><span class="line">          <span class="attr">&quot;type&quot;</span> <span class="punctuation">:</span> <span class="string">&quot;text&quot;</span><span class="punctuation">,</span></span><br><span class="line">          <span class="attr">&quot;fields&quot;</span> <span class="punctuation">:</span> <span class="punctuation">&#123;</span></span><br><span class="line">            <span class="attr">&quot;keyword&quot;</span> <span class="punctuation">:</span> <span class="punctuation">&#123;</span></span><br><span class="line">              <span class="attr">&quot;type&quot;</span> <span class="punctuation">:</span> <span class="string">&quot;keyword&quot;</span><span class="punctuation">,</span></span><br><span class="line">              <span class="attr">&quot;ignore_above&quot;</span> <span class="punctuation">:</span> <span class="number">256</span></span><br><span class="line">            <span class="punctuation">&#125;</span></span><br><span class="line">          <span class="punctuation">&#125;</span></span><br><span class="line">        <span class="punctuation">&#125;</span><span class="punctuation">,</span></span><br><span class="line">        <span class="attr">&quot;employer&quot;</span> <span class="punctuation">:</span> <span class="punctuation">&#123;</span></span><br><span class="line">          <span class="attr">&quot;type&quot;</span> <span class="punctuation">:</span> <span class="string">&quot;text&quot;</span><span class="punctuation">,</span></span><br><span class="line">          <span class="attr">&quot;fields&quot;</span> <span class="punctuation">:</span> <span class="punctuation">&#123;</span></span><br><span class="line">            <span class="attr">&quot;keyword&quot;</span> <span class="punctuation">:</span> <span class="punctuation">&#123;</span></span><br><span class="line">              <span class="attr">&quot;type&quot;</span> <span class="punctuation">:</span> <span class="string">&quot;keyword&quot;</span><span class="punctuation">,</span></span><br><span class="line">              <span class="attr">&quot;ignore_above&quot;</span> <span class="punctuation">:</span> <span class="number">256</span></span><br><span class="line">            <span class="punctuation">&#125;</span></span><br><span class="line">          <span class="punctuation">&#125;</span></span><br><span class="line">        <span class="punctuation">&#125;</span><span class="punctuation">,</span></span><br><span class="line">        <span class="attr">&quot;firstname&quot;</span> <span class="punctuation">:</span> <span class="punctuation">&#123;</span></span><br><span class="line">          <span class="attr">&quot;type&quot;</span> <span class="punctuation">:</span> <span class="string">&quot;text&quot;</span><span class="punctuation">,</span></span><br><span class="line">          <span class="attr">&quot;fields&quot;</span> <span class="punctuation">:</span> <span class="punctuation">&#123;</span></span><br><span class="line">            <span class="attr">&quot;keyword&quot;</span> <span class="punctuation">:</span> <span class="punctuation">&#123;</span></span><br><span class="line">              <span class="attr">&quot;type&quot;</span> <span class="punctuation">:</span> <span class="string">&quot;keyword&quot;</span><span class="punctuation">,</span></span><br><span class="line">              <span class="attr">&quot;ignore_above&quot;</span> <span class="punctuation">:</span> <span class="number">256</span></span><br><span class="line">            <span class="punctuation">&#125;</span></span><br><span class="line">          <span class="punctuation">&#125;</span></span><br><span class="line">        <span class="punctuation">&#125;</span><span class="punctuation">,</span></span><br><span class="line">        <span class="attr">&quot;gender&quot;</span> <span class="punctuation">:</span> <span class="punctuation">&#123;</span></span><br><span class="line">          <span class="attr">&quot;type&quot;</span> <span class="punctuation">:</span> <span class="string">&quot;text&quot;</span><span class="punctuation">,</span></span><br><span class="line">          <span class="attr">&quot;fields&quot;</span> <span class="punctuation">:</span> <span class="punctuation">&#123;</span></span><br><span class="line">            <span class="attr">&quot;keyword&quot;</span> <span class="punctuation">:</span> <span class="punctuation">&#123;</span></span><br><span class="line">              <span class="attr">&quot;type&quot;</span> <span class="punctuation">:</span> <span class="string">&quot;keyword&quot;</span><span class="punctuation">,</span></span><br><span class="line">              <span class="attr">&quot;ignore_above&quot;</span> <span class="punctuation">:</span> <span class="number">256</span></span><br><span class="line">            <span class="punctuation">&#125;</span></span><br><span class="line">          <span class="punctuation">&#125;</span></span><br><span class="line">        <span class="punctuation">&#125;</span><span class="punctuation">,</span></span><br><span class="line">        <span class="attr">&quot;lastname&quot;</span> <span class="punctuation">:</span> <span class="punctuation">&#123;</span></span><br><span class="line">          <span class="attr">&quot;type&quot;</span> <span class="punctuation">:</span> <span class="string">&quot;text&quot;</span><span class="punctuation">,</span></span><br><span class="line">          <span class="attr">&quot;fields&quot;</span> <span class="punctuation">:</span> <span class="punctuation">&#123;</span></span><br><span class="line">            <span class="attr">&quot;keyword&quot;</span> <span class="punctuation">:</span> <span class="punctuation">&#123;</span></span><br><span class="line">              <span class="attr">&quot;type&quot;</span> <span class="punctuation">:</span> <span class="string">&quot;keyword&quot;</span><span class="punctuation">,</span></span><br><span class="line">              <span class="attr">&quot;ignore_above&quot;</span> <span class="punctuation">:</span> <span class="number">256</span></span><br><span class="line">            <span class="punctuation">&#125;</span></span><br><span class="line">          <span class="punctuation">&#125;</span></span><br><span class="line">        <span class="punctuation">&#125;</span><span class="punctuation">,</span></span><br><span class="line">        <span class="attr">&quot;state&quot;</span> <span class="punctuation">:</span> <span class="punctuation">&#123;</span></span><br><span class="line">          <span class="attr">&quot;type&quot;</span> <span class="punctuation">:</span> <span class="string">&quot;text&quot;</span><span class="punctuation">,</span></span><br><span class="line">          <span class="attr">&quot;fields&quot;</span> <span class="punctuation">:</span> <span class="punctuation">&#123;</span></span><br><span class="line">            <span class="attr">&quot;keyword&quot;</span> <span class="punctuation">:</span> <span class="punctuation">&#123;</span></span><br><span class="line">              <span class="attr">&quot;type&quot;</span> <span class="punctuation">:</span> <span class="string">&quot;keyword&quot;</span><span class="punctuation">,</span></span><br><span class="line">              <span class="attr">&quot;ignore_above&quot;</span> <span class="punctuation">:</span> <span class="number">256</span></span><br><span class="line">            <span class="punctuation">&#125;</span></span><br><span class="line">          <span class="punctuation">&#125;</span></span><br><span class="line">        <span class="punctuation">&#125;</span></span><br><span class="line">      <span class="punctuation">&#125;</span></span><br><span class="line">    <span class="punctuation">&#125;</span></span><br><span class="line">  <span class="punctuation">&#125;</span></span><br><span class="line"><span class="punctuation">&#125;</span></span><br></pre></td></tr></table></figure></li><li><p>修改mapping信息</p><p><a href="https://www.elastic.co/guide/en/elasticsearch/reference/current/mapping.html">https://www.elastic.co/guide/en/elasticsearch/reference/current/mapping.html</a></p><p>自动猜测的映射类型</p><table><thead><tr><th>JSON type</th><th>域 type</th></tr></thead><tbody><tr><td>布尔型：true 或者 false</td><td>boolean</td></tr><tr><td>整数：123</td><td>long</td></tr><tr><td>浮点数：123.45</td><td>double</td></tr><tr><td>字符串，有效日期：2014-09-15</td><td>date</td></tr><tr><td>字符串：foo bar</td><td>string</td></tr></tbody></table></li></ul><h4 id="（3）新版本改变"><a href="#（3）新版本改变" class="headerlink" title="（3）新版本改变"></a>（3）新版本改变</h4><p>ElasticSearch7-去掉type概念</p><ol><li><p>关系型数据库中两个数据表示是独立的，即使他们里面有相同名称的列也不影响使用，但ES中不是这样的。elasticsearch是基于Lucene开发的搜索引擎，而ES中不同type下名称相同的filed最终在Lucene中的处理方式是一样的。</p><ul><li>两个不同type下的两个user_name，在ES同一个索引下其实被认为是同一个filed，你必须在两个不同的type中定义相同的filed映射。否则，不同type中的相同字段名称就会在处理中出现冲突的情况，导致Lucene处理效率下降。</li><li>去掉type就是为了提高ES处理数据的效率。</li></ul></li><li><p>Elasticsearch 7.x URL中的type参数为可选。比如，索引一个文档不再要求提供文档类型。</p></li><li><p>Elasticsearch 8.x 不再支持URL中的type参数。</p></li><li><p>解决：<br>将索引从多类型迁移到单类型，每种类型文档一个独立索引</p><p>将已存在的索引下的类型数据，全部迁移到指定位置即可。详见数据迁移</p></li></ol><blockquote><p><strong>Elasticsearch 7.x</strong></p><ul><li>Specifying types in requests is deprecated. For instance, indexing a document no longer requires a document <code>type</code>. The new index APIs are <code>PUT &#123;index&#125;/_doc/&#123;id&#125;</code> in case of explicit ids and <code>POST &#123;index&#125;/_doc</code> for auto-generated ids. Note that in 7.0, <code>_doc</code> is a permanent part of the path, and represents the endpoint name rather than the document type.</li><li>The <code>include_type_name</code> parameter in the index creation, index template, and mapping APIs will default to <code>false</code>. Setting the parameter at all will result in a deprecation warning.</li><li>The <code>_default_</code> mapping type is removed.</li></ul><p><strong>Elasticsearch 8.x</strong></p><ul><li>Specifying types in requests is no longer supported.</li><li>The <code>include_type_name</code> parameter is removed.</li></ul></blockquote><h4 id="创建映射"><a href="#创建映射" class="headerlink" title="创建映射"></a>创建映射</h4><p>创建索引并指定映射</p><figure class="highlight json"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><span class="line">PUT /my_index</span><br><span class="line"><span class="punctuation">&#123;</span></span><br><span class="line">  <span class="attr">&quot;mappings&quot;</span><span class="punctuation">:</span> <span class="punctuation">&#123;</span></span><br><span class="line">    <span class="attr">&quot;properties&quot;</span><span class="punctuation">:</span> <span class="punctuation">&#123;</span></span><br><span class="line">      <span class="attr">&quot;age&quot;</span><span class="punctuation">:</span> <span class="punctuation">&#123;</span></span><br><span class="line">        <span class="attr">&quot;type&quot;</span><span class="punctuation">:</span> <span class="string">&quot;integer&quot;</span></span><br><span class="line">      <span class="punctuation">&#125;</span><span class="punctuation">,</span></span><br><span class="line">      <span class="attr">&quot;email&quot;</span><span class="punctuation">:</span> <span class="punctuation">&#123;</span></span><br><span class="line">        <span class="attr">&quot;type&quot;</span><span class="punctuation">:</span> <span class="string">&quot;keyword&quot;</span></span><br><span class="line">      <span class="punctuation">&#125;</span><span class="punctuation">,</span></span><br><span class="line">      <span class="attr">&quot;name&quot;</span><span class="punctuation">:</span> <span class="punctuation">&#123;</span></span><br><span class="line">        <span class="attr">&quot;type&quot;</span><span class="punctuation">:</span> <span class="string">&quot;text&quot;</span></span><br><span class="line">      <span class="punctuation">&#125;</span></span><br><span class="line">    <span class="punctuation">&#125;</span></span><br><span class="line">  <span class="punctuation">&#125;</span></span><br><span class="line"><span class="punctuation">&#125;</span></span><br></pre></td></tr></table></figure><p> 输出：</p><figure class="highlight json"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="punctuation">&#123;</span></span><br><span class="line">  <span class="attr">&quot;acknowledged&quot;</span> <span class="punctuation">:</span> <span class="keyword">true</span><span class="punctuation">,</span></span><br><span class="line">  <span class="attr">&quot;shards_acknowledged&quot;</span> <span class="punctuation">:</span> <span class="keyword">true</span><span class="punctuation">,</span></span><br><span class="line">  <span class="attr">&quot;index&quot;</span> <span class="punctuation">:</span> <span class="string">&quot;my_index&quot;</span></span><br><span class="line"><span class="punctuation">&#125;</span></span><br><span class="line"></span><br></pre></td></tr></table></figure><h4 id="查看映射"><a href="#查看映射" class="headerlink" title="查看映射"></a>查看映射</h4><figure class="highlight json"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">GET /my_index</span><br></pre></td></tr></table></figure><p>输出结果：</p><figure class="highlight json"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br></pre></td><td class="code"><pre><span class="line"><span class="punctuation">&#123;</span></span><br><span class="line">  <span class="attr">&quot;my_index&quot;</span> <span class="punctuation">:</span> <span class="punctuation">&#123;</span></span><br><span class="line">    <span class="attr">&quot;aliases&quot;</span> <span class="punctuation">:</span> <span class="punctuation">&#123;</span> <span class="punctuation">&#125;</span><span class="punctuation">,</span></span><br><span class="line">    <span class="attr">&quot;mappings&quot;</span> <span class="punctuation">:</span> <span class="punctuation">&#123;</span></span><br><span class="line">      <span class="attr">&quot;properties&quot;</span> <span class="punctuation">:</span> <span class="punctuation">&#123;</span></span><br><span class="line">        <span class="attr">&quot;age&quot;</span> <span class="punctuation">:</span> <span class="punctuation">&#123;</span></span><br><span class="line">          <span class="attr">&quot;type&quot;</span> <span class="punctuation">:</span> <span class="string">&quot;integer&quot;</span></span><br><span class="line">        <span class="punctuation">&#125;</span><span class="punctuation">,</span></span><br><span class="line">        <span class="attr">&quot;email&quot;</span> <span class="punctuation">:</span> <span class="punctuation">&#123;</span></span><br><span class="line">          <span class="attr">&quot;type&quot;</span> <span class="punctuation">:</span> <span class="string">&quot;keyword&quot;</span></span><br><span class="line">        <span class="punctuation">&#125;</span><span class="punctuation">,</span></span><br><span class="line">        <span class="attr">&quot;name&quot;</span> <span class="punctuation">:</span> <span class="punctuation">&#123;</span></span><br><span class="line">          <span class="attr">&quot;type&quot;</span> <span class="punctuation">:</span> <span class="string">&quot;text&quot;</span></span><br><span class="line">        <span class="punctuation">&#125;</span></span><br><span class="line">      <span class="punctuation">&#125;</span></span><br><span class="line">    <span class="punctuation">&#125;</span><span class="punctuation">,</span></span><br><span class="line">    <span class="attr">&quot;settings&quot;</span> <span class="punctuation">:</span> <span class="punctuation">&#123;</span></span><br><span class="line">      <span class="attr">&quot;index&quot;</span> <span class="punctuation">:</span> <span class="punctuation">&#123;</span></span><br><span class="line">        <span class="attr">&quot;creation_date&quot;</span> <span class="punctuation">:</span> <span class="string">&quot;1648691594218&quot;</span><span class="punctuation">,</span></span><br><span class="line">        <span class="attr">&quot;number_of_shards&quot;</span> <span class="punctuation">:</span> <span class="string">&quot;1&quot;</span><span class="punctuation">,</span></span><br><span class="line">        <span class="attr">&quot;number_of_replicas&quot;</span> <span class="punctuation">:</span> <span class="string">&quot;1&quot;</span><span class="punctuation">,</span></span><br><span class="line">        <span class="attr">&quot;uuid&quot;</span> <span class="punctuation">:</span> <span class="string">&quot;2gowX9taSjmvYBz-OaDILQ&quot;</span><span class="punctuation">,</span></span><br><span class="line">        <span class="attr">&quot;version&quot;</span> <span class="punctuation">:</span> <span class="punctuation">&#123;</span></span><br><span class="line">          <span class="attr">&quot;created&quot;</span> <span class="punctuation">:</span> <span class="string">&quot;7060299&quot;</span></span><br><span class="line">        <span class="punctuation">&#125;</span><span class="punctuation">,</span></span><br><span class="line">        <span class="attr">&quot;provided_name&quot;</span> <span class="punctuation">:</span> <span class="string">&quot;my_index&quot;</span></span><br><span class="line">      <span class="punctuation">&#125;</span></span><br><span class="line">    <span class="punctuation">&#125;</span></span><br><span class="line">  <span class="punctuation">&#125;</span></span><br><span class="line"><span class="punctuation">&#125;</span></span><br></pre></td></tr></table></figure><h4 id="添加新的字段映射"><a href="#添加新的字段映射" class="headerlink" title="添加新的字段映射"></a>添加新的字段映射</h4><figure class="highlight json"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line">PUT /my_index/_mapping</span><br><span class="line"><span class="punctuation">&#123;</span></span><br><span class="line">  <span class="attr">&quot;properties&quot;</span><span class="punctuation">:</span> <span class="punctuation">&#123;</span></span><br><span class="line">    <span class="attr">&quot;employee-id&quot;</span><span class="punctuation">:</span> <span class="punctuation">&#123;</span></span><br><span class="line">      <span class="attr">&quot;type&quot;</span><span class="punctuation">:</span> <span class="string">&quot;keyword&quot;</span><span class="punctuation">,</span></span><br><span class="line">      <span class="attr">&quot;index&quot;</span><span class="punctuation">:</span> <span class="keyword">false</span></span><br><span class="line">    <span class="punctuation">&#125;</span></span><br><span class="line">  <span class="punctuation">&#125;</span></span><br><span class="line"><span class="punctuation">&#125;</span></span><br></pre></td></tr></table></figure><p>这里的 “index”: false，表明新增的字段不能被检索，只是一个冗余字段。</p><h4 id="更新映射"><a href="#更新映射" class="headerlink" title="更新映射"></a>更新映射</h4><p>对于已经存在的字段映射，我们不能更新。更新必须创建新的索引，进行数据迁移。</p><h4 id="数据迁移"><a href="#数据迁移" class="headerlink" title="数据迁移"></a>数据迁移</h4><p>先创建new_twitter的正确映射。然后使用如下方式进行数据迁移。</p><figure class="highlight json"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line">POST _reindex <span class="punctuation">[</span>固定写法<span class="punctuation">]</span></span><br><span class="line"><span class="punctuation">&#123;</span></span><br><span class="line">  <span class="attr">&quot;source&quot;</span><span class="punctuation">:</span><span class="punctuation">&#123;</span></span><br><span class="line">      <span class="attr">&quot;index&quot;</span><span class="punctuation">:</span><span class="string">&quot;twitter&quot;</span></span><br><span class="line">   <span class="punctuation">&#125;</span><span class="punctuation">,</span></span><br><span class="line">  <span class="attr">&quot;dest&quot;</span><span class="punctuation">:</span><span class="punctuation">&#123;</span></span><br><span class="line">      <span class="attr">&quot;index&quot;</span><span class="punctuation">:</span><span class="string">&quot;new_twitters&quot;</span></span><br><span class="line">   <span class="punctuation">&#125;</span></span><br><span class="line"><span class="punctuation">&#125;</span></span><br></pre></td></tr></table></figure><p>将旧索引的type下的数据进行迁移</p><figure class="highlight json"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line">POST _reindex <span class="punctuation">[</span>固定写法<span class="punctuation">]</span></span><br><span class="line"><span class="punctuation">&#123;</span></span><br><span class="line">  <span class="attr">&quot;source&quot;</span><span class="punctuation">:</span><span class="punctuation">&#123;</span></span><br><span class="line">      <span class="attr">&quot;index&quot;</span><span class="punctuation">:</span><span class="string">&quot;twitter&quot;</span><span class="punctuation">,</span></span><br><span class="line">      <span class="attr">&quot;twitter&quot;</span><span class="punctuation">:</span><span class="string">&quot;twitter&quot;</span></span><br><span class="line">   <span class="punctuation">&#125;</span><span class="punctuation">,</span></span><br><span class="line">  <span class="attr">&quot;dest&quot;</span><span class="punctuation">:</span><span class="punctuation">&#123;</span></span><br><span class="line">      <span class="attr">&quot;index&quot;</span><span class="punctuation">:</span><span class="string">&quot;new_twitters&quot;</span></span><br><span class="line">   <span class="punctuation">&#125;</span></span><br><span class="line"><span class="punctuation">&#125;</span></span><br></pre></td></tr></table></figure><p>更多详情见： <a href="https://www.elastic.co/guide/en/elasticsearch/reference/7.6/docs-reindex.html">https://www.elastic.co/guide/en/elasticsearch/reference/7.6/docs-reindex.html</a> </p><figure class="highlight json"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br></pre></td><td class="code"><pre><span class="line">GET /bank/_search</span><br><span class="line"><span class="punctuation">&#123;</span></span><br><span class="line">  <span class="attr">&quot;took&quot;</span> <span class="punctuation">:</span> <span class="number">0</span><span class="punctuation">,</span></span><br><span class="line">  <span class="attr">&quot;timed_out&quot;</span> <span class="punctuation">:</span> <span class="keyword">false</span><span class="punctuation">,</span></span><br><span class="line">  <span class="attr">&quot;_shards&quot;</span> <span class="punctuation">:</span> <span class="punctuation">&#123;</span></span><br><span class="line">    <span class="attr">&quot;total&quot;</span> <span class="punctuation">:</span> <span class="number">1</span><span class="punctuation">,</span></span><br><span class="line">    <span class="attr">&quot;successful&quot;</span> <span class="punctuation">:</span> <span class="number">1</span><span class="punctuation">,</span></span><br><span class="line">    <span class="attr">&quot;skipped&quot;</span> <span class="punctuation">:</span> <span class="number">0</span><span class="punctuation">,</span></span><br><span class="line">    <span class="attr">&quot;failed&quot;</span> <span class="punctuation">:</span> <span class="number">0</span></span><br><span class="line">  <span class="punctuation">&#125;</span><span class="punctuation">,</span></span><br><span class="line">  <span class="attr">&quot;hits&quot;</span> <span class="punctuation">:</span> <span class="punctuation">&#123;</span></span><br><span class="line">    <span class="attr">&quot;total&quot;</span> <span class="punctuation">:</span> <span class="punctuation">&#123;</span></span><br><span class="line">      <span class="attr">&quot;value&quot;</span> <span class="punctuation">:</span> <span class="number">1000</span><span class="punctuation">,</span></span><br><span class="line">      <span class="attr">&quot;relation&quot;</span> <span class="punctuation">:</span> <span class="string">&quot;eq&quot;</span></span><br><span class="line">    <span class="punctuation">&#125;</span><span class="punctuation">,</span></span><br><span class="line">    <span class="attr">&quot;max_score&quot;</span> <span class="punctuation">:</span> <span class="number">1.0</span><span class="punctuation">,</span></span><br><span class="line">    <span class="attr">&quot;hits&quot;</span> <span class="punctuation">:</span> <span class="punctuation">[</span></span><br><span class="line">      <span class="punctuation">&#123;</span></span><br><span class="line">        <span class="attr">&quot;_index&quot;</span> <span class="punctuation">:</span> <span class="string">&quot;bank&quot;</span><span class="punctuation">,</span></span><br><span class="line">        <span class="attr">&quot;_type&quot;</span> <span class="punctuation">:</span> <span class="string">&quot;account&quot;</span><span class="punctuation">,</span><span class="comment">//类型为account</span></span><br><span class="line">        <span class="attr">&quot;_id&quot;</span> <span class="punctuation">:</span> <span class="string">&quot;1&quot;</span><span class="punctuation">,</span></span><br><span class="line">        <span class="attr">&quot;_score&quot;</span> <span class="punctuation">:</span> <span class="number">1.0</span><span class="punctuation">,</span></span><br><span class="line">        <span class="attr">&quot;_source&quot;</span> <span class="punctuation">:</span> <span class="punctuation">&#123;</span></span><br><span class="line">          <span class="attr">&quot;account_number&quot;</span> <span class="punctuation">:</span> <span class="number">1</span><span class="punctuation">,</span></span><br><span class="line">          <span class="attr">&quot;balance&quot;</span> <span class="punctuation">:</span> <span class="number">39225</span><span class="punctuation">,</span></span><br><span class="line">          <span class="attr">&quot;firstname&quot;</span> <span class="punctuation">:</span> <span class="string">&quot;Amber&quot;</span><span class="punctuation">,</span></span><br><span class="line">          <span class="attr">&quot;lastname&quot;</span> <span class="punctuation">:</span> <span class="string">&quot;Duke&quot;</span><span class="punctuation">,</span></span><br><span class="line">          <span class="attr">&quot;age&quot;</span> <span class="punctuation">:</span> <span class="number">32</span><span class="punctuation">,</span></span><br><span class="line">          <span class="attr">&quot;gender&quot;</span> <span class="punctuation">:</span> <span class="string">&quot;M&quot;</span><span class="punctuation">,</span></span><br><span class="line">          <span class="attr">&quot;address&quot;</span> <span class="punctuation">:</span> <span class="string">&quot;880 Holmes Lane&quot;</span><span class="punctuation">,</span></span><br><span class="line">          <span class="attr">&quot;employer&quot;</span> <span class="punctuation">:</span> <span class="string">&quot;Pyrami&quot;</span><span class="punctuation">,</span></span><br><span class="line">          <span class="attr">&quot;email&quot;</span> <span class="punctuation">:</span> <span class="string">&quot;amberduke@pyrami.com&quot;</span><span class="punctuation">,</span></span><br><span class="line">          <span class="attr">&quot;city&quot;</span> <span class="punctuation">:</span> <span class="string">&quot;Brogan&quot;</span><span class="punctuation">,</span></span><br><span class="line">          <span class="attr">&quot;state&quot;</span> <span class="punctuation">:</span> <span class="string">&quot;IL&quot;</span></span><br><span class="line">        <span class="punctuation">&#125;</span></span><br><span class="line">      <span class="punctuation">&#125;</span><span class="punctuation">,</span></span><br><span class="line">      ...</span><br></pre></td></tr></table></figure><figure class="highlight awk"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">GET <span class="regexp">/bank/</span>_mapping</span><br></pre></td></tr></table></figure><p><img src="https://cdn.jsdelivr.net/gh/zsxfa/CDN/img/md/2022/03/31/1648692859.png" alt="desc"></p><p>想要将年龄修改为integer</p><figure class="highlight json"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br></pre></td><td class="code"><pre><span class="line">PUT /newbank</span><br><span class="line"><span class="punctuation">&#123;</span></span><br><span class="line">  <span class="attr">&quot;mappings&quot;</span><span class="punctuation">:</span> <span class="punctuation">&#123;</span></span><br><span class="line">    <span class="attr">&quot;properties&quot;</span><span class="punctuation">:</span> <span class="punctuation">&#123;</span></span><br><span class="line">      <span class="attr">&quot;account_number&quot;</span><span class="punctuation">:</span> <span class="punctuation">&#123;</span></span><br><span class="line">        <span class="attr">&quot;type&quot;</span><span class="punctuation">:</span> <span class="string">&quot;long&quot;</span></span><br><span class="line">      <span class="punctuation">&#125;</span><span class="punctuation">,</span></span><br><span class="line">      <span class="attr">&quot;address&quot;</span><span class="punctuation">:</span> <span class="punctuation">&#123;</span></span><br><span class="line">        <span class="attr">&quot;type&quot;</span><span class="punctuation">:</span> <span class="string">&quot;text&quot;</span></span><br><span class="line">      <span class="punctuation">&#125;</span><span class="punctuation">,</span></span><br><span class="line">      <span class="attr">&quot;age&quot;</span><span class="punctuation">:</span> <span class="punctuation">&#123;</span></span><br><span class="line">        <span class="attr">&quot;type&quot;</span><span class="punctuation">:</span> <span class="string">&quot;integer&quot;</span></span><br><span class="line">      <span class="punctuation">&#125;</span><span class="punctuation">,</span></span><br><span class="line">      <span class="attr">&quot;balance&quot;</span><span class="punctuation">:</span> <span class="punctuation">&#123;</span></span><br><span class="line">        <span class="attr">&quot;type&quot;</span><span class="punctuation">:</span> <span class="string">&quot;long&quot;</span></span><br><span class="line">      <span class="punctuation">&#125;</span><span class="punctuation">,</span></span><br><span class="line">      <span class="attr">&quot;city&quot;</span><span class="punctuation">:</span> <span class="punctuation">&#123;</span></span><br><span class="line">        <span class="attr">&quot;type&quot;</span><span class="punctuation">:</span> <span class="string">&quot;keyword&quot;</span></span><br><span class="line">      <span class="punctuation">&#125;</span><span class="punctuation">,</span></span><br><span class="line">      <span class="attr">&quot;email&quot;</span><span class="punctuation">:</span> <span class="punctuation">&#123;</span></span><br><span class="line">        <span class="attr">&quot;type&quot;</span><span class="punctuation">:</span> <span class="string">&quot;keyword&quot;</span></span><br><span class="line">      <span class="punctuation">&#125;</span><span class="punctuation">,</span></span><br><span class="line">      <span class="attr">&quot;employer&quot;</span><span class="punctuation">:</span> <span class="punctuation">&#123;</span></span><br><span class="line">        <span class="attr">&quot;type&quot;</span><span class="punctuation">:</span> <span class="string">&quot;keyword&quot;</span></span><br><span class="line">      <span class="punctuation">&#125;</span><span class="punctuation">,</span></span><br><span class="line">      <span class="attr">&quot;firstname&quot;</span><span class="punctuation">:</span> <span class="punctuation">&#123;</span></span><br><span class="line">        <span class="attr">&quot;type&quot;</span><span class="punctuation">:</span> <span class="string">&quot;text&quot;</span></span><br><span class="line">      <span class="punctuation">&#125;</span><span class="punctuation">,</span></span><br><span class="line">      <span class="attr">&quot;gender&quot;</span><span class="punctuation">:</span> <span class="punctuation">&#123;</span></span><br><span class="line">        <span class="attr">&quot;type&quot;</span><span class="punctuation">:</span> <span class="string">&quot;keyword&quot;</span></span><br><span class="line">      <span class="punctuation">&#125;</span><span class="punctuation">,</span></span><br><span class="line">      <span class="attr">&quot;lastname&quot;</span><span class="punctuation">:</span> <span class="punctuation">&#123;</span></span><br><span class="line">        <span class="attr">&quot;type&quot;</span><span class="punctuation">:</span> <span class="string">&quot;text&quot;</span><span class="punctuation">,</span></span><br><span class="line">        <span class="attr">&quot;fields&quot;</span><span class="punctuation">:</span> <span class="punctuation">&#123;</span></span><br><span class="line">          <span class="attr">&quot;keyword&quot;</span><span class="punctuation">:</span> <span class="punctuation">&#123;</span></span><br><span class="line">            <span class="attr">&quot;type&quot;</span><span class="punctuation">:</span> <span class="string">&quot;keyword&quot;</span><span class="punctuation">,</span></span><br><span class="line">            <span class="attr">&quot;ignore_above&quot;</span><span class="punctuation">:</span> <span class="number">256</span></span><br><span class="line">          <span class="punctuation">&#125;</span></span><br><span class="line">        <span class="punctuation">&#125;</span></span><br><span class="line">      <span class="punctuation">&#125;</span><span class="punctuation">,</span></span><br><span class="line">      <span class="attr">&quot;state&quot;</span><span class="punctuation">:</span> <span class="punctuation">&#123;</span></span><br><span class="line">        <span class="attr">&quot;type&quot;</span><span class="punctuation">:</span> <span class="string">&quot;keyword&quot;</span></span><br><span class="line">      <span class="punctuation">&#125;</span></span><br><span class="line">    <span class="punctuation">&#125;</span></span><br><span class="line">  <span class="punctuation">&#125;</span></span><br><span class="line"><span class="punctuation">&#125;</span></span><br></pre></td></tr></table></figure><p>查看“newbank”的映射：</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">GET /newbank/_mapping</span><br></pre></td></tr></table></figure><p>能够看到age的映射类型被修改为了integer.</p><p><img src="https://cdn.jsdelivr.net/gh/zsxfa/CDN/img/md/2022/03/31/1648693176.png" alt="desc"></p><p>将bank中的数据迁移到newbank中</p><figure class="highlight json"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line">POST _reindex</span><br><span class="line"><span class="punctuation">&#123;</span></span><br><span class="line">  <span class="attr">&quot;source&quot;</span><span class="punctuation">:</span> <span class="punctuation">&#123;</span></span><br><span class="line">    <span class="attr">&quot;index&quot;</span><span class="punctuation">:</span> <span class="string">&quot;bank&quot;</span><span class="punctuation">,</span></span><br><span class="line">    <span class="attr">&quot;type&quot;</span><span class="punctuation">:</span> <span class="string">&quot;account&quot;</span></span><br><span class="line">  <span class="punctuation">&#125;</span><span class="punctuation">,</span></span><br><span class="line">  <span class="attr">&quot;dest&quot;</span><span class="punctuation">:</span> <span class="punctuation">&#123;</span></span><br><span class="line">    <span class="attr">&quot;index&quot;</span><span class="punctuation">:</span> <span class="string">&quot;newbank&quot;</span></span><br><span class="line">  <span class="punctuation">&#125;</span></span><br><span class="line"><span class="punctuation">&#125;</span></span><br></pre></td></tr></table></figure><p>运行输出：</p><figure class="highlight json"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br></pre></td><td class="code"><pre><span class="line">#! Deprecation<span class="punctuation">:</span> <span class="punctuation">[</span>types removal<span class="punctuation">]</span> Specifying types in reindex requests is deprecated.</span><br><span class="line"><span class="punctuation">&#123;</span></span><br><span class="line">  <span class="attr">&quot;took&quot;</span> <span class="punctuation">:</span> <span class="number">768</span><span class="punctuation">,</span></span><br><span class="line">  <span class="attr">&quot;timed_out&quot;</span> <span class="punctuation">:</span> <span class="keyword">false</span><span class="punctuation">,</span></span><br><span class="line">  <span class="attr">&quot;total&quot;</span> <span class="punctuation">:</span> <span class="number">1000</span><span class="punctuation">,</span></span><br><span class="line">  <span class="attr">&quot;updated&quot;</span> <span class="punctuation">:</span> <span class="number">0</span><span class="punctuation">,</span></span><br><span class="line">  <span class="attr">&quot;created&quot;</span> <span class="punctuation">:</span> <span class="number">1000</span><span class="punctuation">,</span></span><br><span class="line">  <span class="attr">&quot;deleted&quot;</span> <span class="punctuation">:</span> <span class="number">0</span><span class="punctuation">,</span></span><br><span class="line">  <span class="attr">&quot;batches&quot;</span> <span class="punctuation">:</span> <span class="number">1</span><span class="punctuation">,</span></span><br><span class="line">  <span class="attr">&quot;version_conflicts&quot;</span> <span class="punctuation">:</span> <span class="number">0</span><span class="punctuation">,</span></span><br><span class="line">  <span class="attr">&quot;noops&quot;</span> <span class="punctuation">:</span> <span class="number">0</span><span class="punctuation">,</span></span><br><span class="line">  <span class="attr">&quot;retries&quot;</span> <span class="punctuation">:</span> <span class="punctuation">&#123;</span></span><br><span class="line">    <span class="attr">&quot;bulk&quot;</span> <span class="punctuation">:</span> <span class="number">0</span><span class="punctuation">,</span></span><br><span class="line">    <span class="attr">&quot;search&quot;</span> <span class="punctuation">:</span> <span class="number">0</span></span><br><span class="line">  <span class="punctuation">&#125;</span><span class="punctuation">,</span></span><br><span class="line">  <span class="attr">&quot;throttled_millis&quot;</span> <span class="punctuation">:</span> <span class="number">0</span><span class="punctuation">,</span></span><br><span class="line">  <span class="attr">&quot;requests_per_second&quot;</span> <span class="punctuation">:</span> <span class="number">-1.0</span><span class="punctuation">,</span></span><br><span class="line">  <span class="attr">&quot;throttled_until_millis&quot;</span> <span class="punctuation">:</span> <span class="number">0</span><span class="punctuation">,</span></span><br><span class="line">  <span class="attr">&quot;failures&quot;</span> <span class="punctuation">:</span> <span class="punctuation">[</span> <span class="punctuation">]</span></span><br><span class="line"><span class="punctuation">&#125;</span></span><br></pre></td></tr></table></figure><p>查看newbank中的数据</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">GET /newbank/_search</span><br></pre></td></tr></table></figure><h3 id="4）分词"><a href="#4）分词" class="headerlink" title="4）分词"></a>4）分词</h3><p>一个tokenizer（分词器）接收一个字符流，将之分割为独立的tokens（词元，通常是独立的单词），然后输出tokens流。</p><p>例如：whitespace tokenizer遇到空白字符时分割文本。它会将文本“Quick brown fox!”分割为[Quick,brown,fox!]。</p><p>该tokenizer（分词器）还负责记录各个terms(词条)的顺序或position位置（用于phrase短语和word proximity词近邻查询），以及term（词条）所代表的原始word（单词）的start（起始）和end（结束）的character offsets（字符串偏移量）（用于高亮显示搜索的内容）。</p><p>elasticsearch提供了很多内置的分词器，可以用来构建custom analyzers（自定义分词器）。</p><p>关于分词器： <a href="https://www.elastic.co/guide/en/elasticsearch/reference/7.6/analysis.html">https://www.elastic.co/guide/en/elasticsearch/reference/7.6/analysis.html</a> </p><figure class="highlight json"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">POST _analyze</span><br><span class="line"><span class="punctuation">&#123;</span></span><br><span class="line">  <span class="attr">&quot;analyzer&quot;</span><span class="punctuation">:</span> <span class="string">&quot;standard&quot;</span><span class="punctuation">,</span></span><br><span class="line">  <span class="attr">&quot;text&quot;</span><span class="punctuation">:</span> <span class="string">&quot;The 2 QUICK Brown-Foxes jumped over the lazy dog&#x27;s bone.&quot;</span></span><br><span class="line"><span class="punctuation">&#125;</span></span><br></pre></td></tr></table></figure><p>执行结果：</p><figure class="highlight json"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br></pre></td><td class="code"><pre><span class="line"><span class="punctuation">&#123;</span></span><br><span class="line">  <span class="attr">&quot;tokens&quot;</span> <span class="punctuation">:</span> <span class="punctuation">[</span></span><br><span class="line">    <span class="punctuation">&#123;</span></span><br><span class="line">      <span class="attr">&quot;token&quot;</span> <span class="punctuation">:</span> <span class="string">&quot;the&quot;</span><span class="punctuation">,</span></span><br><span class="line">      <span class="attr">&quot;start_offset&quot;</span> <span class="punctuation">:</span> <span class="number">0</span><span class="punctuation">,</span></span><br><span class="line">      <span class="attr">&quot;end_offset&quot;</span> <span class="punctuation">:</span> <span class="number">3</span><span class="punctuation">,</span></span><br><span class="line">      <span class="attr">&quot;type&quot;</span> <span class="punctuation">:</span> <span class="string">&quot;&lt;ALPHANUM&gt;&quot;</span><span class="punctuation">,</span></span><br><span class="line">      <span class="attr">&quot;position&quot;</span> <span class="punctuation">:</span> <span class="number">0</span></span><br><span class="line">    <span class="punctuation">&#125;</span><span class="punctuation">,</span></span><br><span class="line">    <span class="punctuation">&#123;</span></span><br><span class="line">      <span class="attr">&quot;token&quot;</span> <span class="punctuation">:</span> <span class="string">&quot;2&quot;</span><span class="punctuation">,</span></span><br><span class="line">      <span class="attr">&quot;start_offset&quot;</span> <span class="punctuation">:</span> <span class="number">4</span><span class="punctuation">,</span></span><br><span class="line">      <span class="attr">&quot;end_offset&quot;</span> <span class="punctuation">:</span> <span class="number">5</span><span class="punctuation">,</span></span><br><span class="line">      <span class="attr">&quot;type&quot;</span> <span class="punctuation">:</span> <span class="string">&quot;&lt;NUM&gt;&quot;</span><span class="punctuation">,</span></span><br><span class="line">      <span class="attr">&quot;position&quot;</span> <span class="punctuation">:</span> <span class="number">1</span></span><br><span class="line">    <span class="punctuation">&#125;</span><span class="punctuation">,</span></span><br><span class="line">    <span class="punctuation">&#123;</span></span><br><span class="line">      <span class="attr">&quot;token&quot;</span> <span class="punctuation">:</span> <span class="string">&quot;quick&quot;</span><span class="punctuation">,</span></span><br><span class="line">      <span class="attr">&quot;start_offset&quot;</span> <span class="punctuation">:</span> <span class="number">6</span><span class="punctuation">,</span></span><br><span class="line">      <span class="attr">&quot;end_offset&quot;</span> <span class="punctuation">:</span> <span class="number">11</span><span class="punctuation">,</span></span><br><span class="line">      <span class="attr">&quot;type&quot;</span> <span class="punctuation">:</span> <span class="string">&quot;&lt;ALPHANUM&gt;&quot;</span><span class="punctuation">,</span></span><br><span class="line">      <span class="attr">&quot;position&quot;</span> <span class="punctuation">:</span> <span class="number">2</span></span><br><span class="line">    <span class="punctuation">&#125;</span><span class="punctuation">,</span></span><br><span class="line">    <span class="punctuation">&#123;</span></span><br><span class="line">      <span class="attr">&quot;token&quot;</span> <span class="punctuation">:</span> <span class="string">&quot;brown&quot;</span><span class="punctuation">,</span></span><br><span class="line">      <span class="attr">&quot;start_offset&quot;</span> <span class="punctuation">:</span> <span class="number">12</span><span class="punctuation">,</span></span><br><span class="line">      <span class="attr">&quot;end_offset&quot;</span> <span class="punctuation">:</span> <span class="number">17</span><span class="punctuation">,</span></span><br><span class="line">      <span class="attr">&quot;type&quot;</span> <span class="punctuation">:</span> <span class="string">&quot;&lt;ALPHANUM&gt;&quot;</span><span class="punctuation">,</span></span><br><span class="line">      <span class="attr">&quot;position&quot;</span> <span class="punctuation">:</span> <span class="number">3</span></span><br><span class="line">    <span class="punctuation">&#125;</span><span class="punctuation">,</span></span><br><span class="line">    <span class="punctuation">&#123;</span></span><br><span class="line">      <span class="attr">&quot;token&quot;</span> <span class="punctuation">:</span> <span class="string">&quot;foxes&quot;</span><span class="punctuation">,</span></span><br><span class="line">      <span class="attr">&quot;start_offset&quot;</span> <span class="punctuation">:</span> <span class="number">18</span><span class="punctuation">,</span></span><br><span class="line">      <span class="attr">&quot;end_offset&quot;</span> <span class="punctuation">:</span> <span class="number">23</span><span class="punctuation">,</span></span><br><span class="line">      <span class="attr">&quot;type&quot;</span> <span class="punctuation">:</span> <span class="string">&quot;&lt;ALPHANUM&gt;&quot;</span><span class="punctuation">,</span></span><br><span class="line">      <span class="attr">&quot;position&quot;</span> <span class="punctuation">:</span> <span class="number">4</span></span><br><span class="line">    <span class="punctuation">&#125;</span><span class="punctuation">,</span></span><br><span class="line">    <span class="punctuation">&#123;</span></span><br><span class="line">      <span class="attr">&quot;token&quot;</span> <span class="punctuation">:</span> <span class="string">&quot;jumped&quot;</span><span class="punctuation">,</span></span><br><span class="line">      <span class="attr">&quot;start_offset&quot;</span> <span class="punctuation">:</span> <span class="number">24</span><span class="punctuation">,</span></span><br><span class="line">      <span class="attr">&quot;end_offset&quot;</span> <span class="punctuation">:</span> <span class="number">30</span><span class="punctuation">,</span></span><br><span class="line">      <span class="attr">&quot;type&quot;</span> <span class="punctuation">:</span> <span class="string">&quot;&lt;ALPHANUM&gt;&quot;</span><span class="punctuation">,</span></span><br><span class="line">      <span class="attr">&quot;position&quot;</span> <span class="punctuation">:</span> <span class="number">5</span></span><br><span class="line">    <span class="punctuation">&#125;</span><span class="punctuation">,</span></span><br><span class="line">    <span class="punctuation">&#123;</span></span><br><span class="line">      <span class="attr">&quot;token&quot;</span> <span class="punctuation">:</span> <span class="string">&quot;over&quot;</span><span class="punctuation">,</span></span><br><span class="line">      <span class="attr">&quot;start_offset&quot;</span> <span class="punctuation">:</span> <span class="number">31</span><span class="punctuation">,</span></span><br><span class="line">      <span class="attr">&quot;end_offset&quot;</span> <span class="punctuation">:</span> <span class="number">35</span><span class="punctuation">,</span></span><br><span class="line">      <span class="attr">&quot;type&quot;</span> <span class="punctuation">:</span> <span class="string">&quot;&lt;ALPHANUM&gt;&quot;</span><span class="punctuation">,</span></span><br><span class="line">      <span class="attr">&quot;position&quot;</span> <span class="punctuation">:</span> <span class="number">6</span></span><br><span class="line">    <span class="punctuation">&#125;</span><span class="punctuation">,</span></span><br><span class="line">    <span class="punctuation">&#123;</span></span><br><span class="line">      <span class="attr">&quot;token&quot;</span> <span class="punctuation">:</span> <span class="string">&quot;the&quot;</span><span class="punctuation">,</span></span><br><span class="line">      <span class="attr">&quot;start_offset&quot;</span> <span class="punctuation">:</span> <span class="number">36</span><span class="punctuation">,</span></span><br><span class="line">      <span class="attr">&quot;end_offset&quot;</span> <span class="punctuation">:</span> <span class="number">39</span><span class="punctuation">,</span></span><br><span class="line">      <span class="attr">&quot;type&quot;</span> <span class="punctuation">:</span> <span class="string">&quot;&lt;ALPHANUM&gt;&quot;</span><span class="punctuation">,</span></span><br><span class="line">      <span class="attr">&quot;position&quot;</span> <span class="punctuation">:</span> <span class="number">7</span></span><br><span class="line">    <span class="punctuation">&#125;</span><span class="punctuation">,</span></span><br><span class="line">    <span class="punctuation">&#123;</span></span><br><span class="line">      <span class="attr">&quot;token&quot;</span> <span class="punctuation">:</span> <span class="string">&quot;lazy&quot;</span><span class="punctuation">,</span></span><br><span class="line">      <span class="attr">&quot;start_offset&quot;</span> <span class="punctuation">:</span> <span class="number">40</span><span class="punctuation">,</span></span><br><span class="line">      <span class="attr">&quot;end_offset&quot;</span> <span class="punctuation">:</span> <span class="number">44</span><span class="punctuation">,</span></span><br><span class="line">      <span class="attr">&quot;type&quot;</span> <span class="punctuation">:</span> <span class="string">&quot;&lt;ALPHANUM&gt;&quot;</span><span class="punctuation">,</span></span><br><span class="line">      <span class="attr">&quot;position&quot;</span> <span class="punctuation">:</span> <span class="number">8</span></span><br><span class="line">    <span class="punctuation">&#125;</span><span class="punctuation">,</span></span><br><span class="line">    <span class="punctuation">&#123;</span></span><br><span class="line">      <span class="attr">&quot;token&quot;</span> <span class="punctuation">:</span> <span class="string">&quot;dog&#x27;s&quot;</span><span class="punctuation">,</span></span><br><span class="line">      <span class="attr">&quot;start_offset&quot;</span> <span class="punctuation">:</span> <span class="number">45</span><span class="punctuation">,</span></span><br><span class="line">      <span class="attr">&quot;end_offset&quot;</span> <span class="punctuation">:</span> <span class="number">50</span><span class="punctuation">,</span></span><br><span class="line">      <span class="attr">&quot;type&quot;</span> <span class="punctuation">:</span> <span class="string">&quot;&lt;ALPHANUM&gt;&quot;</span><span class="punctuation">,</span></span><br><span class="line">      <span class="attr">&quot;position&quot;</span> <span class="punctuation">:</span> <span class="number">9</span></span><br><span class="line">    <span class="punctuation">&#125;</span><span class="punctuation">,</span></span><br><span class="line">    <span class="punctuation">&#123;</span></span><br><span class="line">      <span class="attr">&quot;token&quot;</span> <span class="punctuation">:</span> <span class="string">&quot;bone&quot;</span><span class="punctuation">,</span></span><br><span class="line">      <span class="attr">&quot;start_offset&quot;</span> <span class="punctuation">:</span> <span class="number">51</span><span class="punctuation">,</span></span><br><span class="line">      <span class="attr">&quot;end_offset&quot;</span> <span class="punctuation">:</span> <span class="number">55</span><span class="punctuation">,</span></span><br><span class="line">      <span class="attr">&quot;type&quot;</span> <span class="punctuation">:</span> <span class="string">&quot;&lt;ALPHANUM&gt;&quot;</span><span class="punctuation">,</span></span><br><span class="line">      <span class="attr">&quot;position&quot;</span> <span class="punctuation">:</span> <span class="number">10</span></span><br><span class="line">    <span class="punctuation">&#125;</span></span><br><span class="line">  <span class="punctuation">]</span></span><br><span class="line"><span class="punctuation">&#125;</span></span><br></pre></td></tr></table></figure><h4 id="1）安装ik分词器"><a href="#1）安装ik分词器" class="headerlink" title="1）安装ik分词器"></a>1）安装ik分词器</h4><p><img src="https://cdn.jsdelivr.net/gh/zsxfa/CDN/img/md/2022/03/31/1648694712.png" alt="desc"></p><p>所有的语言分词，默认使用的都是“Standard Analyzer”，但是这些分词器针对于中文的分词，并不友好。为此需要安装中文的分词器。</p><p>注意：不能用默认elasticsearch-plugin install xxx.zip 进行自动安装<br><a href="https://github.com/medcl/elasticsearch-analysis-ik/releases">https://github.com/medcl/elasticsearch-analysis-ik/releases</a> 对应es版本安装</p><p>在前面安装的elasticsearch时，我们已经将elasticsearch容器的“/usr/share/elasticsearch/plugins”目录，映射到宿主机的“ /mydata/elasticsearch/plugins”目录下，所以比较方便的做法就是下载“/elasticsearch-analysis-ik-7.6.2.zip”文件，然后解压到该文件夹下即可。安装完毕后，需要重启elasticsearch容器。</p><p>如果不嫌麻烦，还可以采用如下的方式。</p><h5 id="a、查看elasticsearch版本号："><a href="#a、查看elasticsearch版本号：" class="headerlink" title="a、查看elasticsearch版本号："></a>a、查看elasticsearch版本号：</h5><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br></pre></td><td class="code"><pre><span class="line">[root@hadoop-104 ~]# curl http://localhost:9200</span><br><span class="line">&#123;</span><br><span class="line">  &quot;name&quot; : &quot;0adeb7852e00&quot;,</span><br><span class="line">  &quot;cluster_name&quot; : &quot;elasticsearch&quot;,</span><br><span class="line">  &quot;cluster_uuid&quot; : &quot;9gglpP0HTfyOTRAaSe2rIg&quot;,</span><br><span class="line">  &quot;version&quot; : &#123;</span><br><span class="line">    &quot;number&quot; : &quot;7.6.2&quot;,      #版本号为7.6.2</span><br><span class="line">    &quot;build_flavor&quot; : &quot;default&quot;,</span><br><span class="line">    &quot;build_type&quot; : &quot;docker&quot;,</span><br><span class="line">    &quot;build_hash&quot; : &quot;ef48eb35cf30adf4db14086e8aabd07ef6fb113f&quot;,</span><br><span class="line">    &quot;build_date&quot; : &quot;2020-03-26T06:34:37.794943Z&quot;,</span><br><span class="line">    &quot;build_snapshot&quot; : false,</span><br><span class="line">    &quot;lucene_version&quot; : &quot;8.4.0&quot;,</span><br><span class="line">    &quot;minimum_wire_compatibility_version&quot; : &quot;6.8.0&quot;,</span><br><span class="line">    &quot;minimum_index_compatibility_version&quot; : &quot;6.0.0-beta1&quot;</span><br><span class="line">  &#125;,</span><br><span class="line">  &quot;tagline&quot; : &quot;You Know, for Search&quot;</span><br><span class="line">&#125;</span><br><span class="line">[root@hadoop-104 ~]# </span><br></pre></td></tr></table></figure><h5 id="b、进入es容器内部plugin目录"><a href="#b、进入es容器内部plugin目录" class="headerlink" title="b、进入es容器内部plugin目录"></a>b、进入es容器内部plugin目录</h5><ul><li>docker exec -it 容器id /bin/bash</li></ul><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">[root@hadoop-104 ~]# docker exec -it elasticsearch /bin/bash</span><br><span class="line">[root@0adeb7852e00 elasticsearch]# </span><br></pre></td></tr></table></figure><ul><li>wget <a href="https://github.com/medcl/elasticsearch-analysis-ik/releases/download/v7.6.2/elasticsearch-analysis-ik-7.6.2.zip">https://github.com/medcl/elasticsearch-analysis-ik/releases/download/v7.6.2/elasticsearch-analysis-ik-7.6.2.zip</a></li><li>如果wget显示未找到命令，就需要先进行安装，yum install wget</li></ul><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">[root@0adeb7852e00 elasticsearch]# pwd</span><br><span class="line">/usr/share/elasticsearch</span><br><span class="line"><span class="meta prompt_">#</span><span class="language-bash">下载ik7.6.2</span></span><br><span class="line">[root@0adeb7852e00 elasticsearch]# wget https://github.com/medcl/elasticsearch-analysis-ik/releases/download/v7.6.2/elasticsearch-analysis-ik-7.6.2.zip</span><br></pre></td></tr></table></figure><ul><li>unzip 下载的文件</li></ul><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br></pre></td><td class="code"><pre><span class="line">[root@0adeb7852e00 elasticsearch]# unzip elasticsearch-analysis-ik-7.6.2.zip -d ik</span><br><span class="line">Archive:  elasticsearch-analysis-ik-7.6.2.zip</span><br><span class="line">   creating: ik/config/</span><br><span class="line">  inflating: ik/config/main.dic      </span><br><span class="line">  inflating: ik/config/quantifier.dic  </span><br><span class="line">  inflating: ik/config/extra_single_word_full.dic  </span><br><span class="line">  inflating: ik/config/IKAnalyzer.cfg.xml  </span><br><span class="line">  inflating: ik/config/surname.dic   </span><br><span class="line">  inflating: ik/config/suffix.dic    </span><br><span class="line">  inflating: ik/config/stopword.dic  </span><br><span class="line">  inflating: ik/config/extra_main.dic  </span><br><span class="line">  inflating: ik/config/extra_stopword.dic  </span><br><span class="line">  inflating: ik/config/preposition.dic  </span><br><span class="line">  inflating: ik/config/extra_single_word_low_freq.dic  </span><br><span class="line">  inflating: ik/config/extra_single_word.dic  </span><br><span class="line">  inflating: ik/elasticsearch-analysis-ik-7.6.2.jar  </span><br><span class="line">  inflating: ik/httpclient-4.5.2.jar  </span><br><span class="line">  inflating: ik/httpcore-4.4.4.jar   </span><br><span class="line">  inflating: ik/commons-logging-1.2.jar  </span><br><span class="line">  inflating: ik/commons-codec-1.9.jar  </span><br><span class="line">  inflating: ik/plugin-descriptor.properties  </span><br><span class="line">  inflating: ik/plugin-security.policy  </span><br><span class="line">[root@0adeb7852e00 elasticsearch]# chmod -R 777 ik/</span><br><span class="line"><span class="meta prompt_">#</span><span class="language-bash">移动到plugins目录下</span></span><br><span class="line">[root@0adeb7852e00 elasticsearch]# mv ik plugins/</span><br></pre></td></tr></table></figure><ul><li>rm -rf *.zip</li></ul><figure class="highlight autoit"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">[root<span class="symbol">@0adeb7852e00</span> elasticsearch]<span class="meta"># rm -rf elasticsearch-analysis-ik-7.6.2.zip </span></span><br></pre></td></tr></table></figure><p>确认是否安装好了分词器,进入到bin目录中执行</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">elasticsearch-plugin list</span><br></pre></td></tr></table></figure><h4 id="2）测试分词器"><a href="#2）测试分词器" class="headerlink" title="2）测试分词器"></a>2）测试分词器</h4><p>使用默认</p><figure class="highlight json"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">GET my_index/_analyze</span><br><span class="line"><span class="punctuation">&#123;</span></span><br><span class="line">   <span class="attr">&quot;text&quot;</span><span class="punctuation">:</span><span class="string">&quot;我是中国人&quot;</span></span><br><span class="line"><span class="punctuation">&#125;</span></span><br></pre></td></tr></table></figure><p>请观察执行结果：</p><figure class="highlight json"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br></pre></td><td class="code"><pre><span class="line"><span class="punctuation">&#123;</span></span><br><span class="line">  <span class="attr">&quot;tokens&quot;</span> <span class="punctuation">:</span> <span class="punctuation">[</span></span><br><span class="line">    <span class="punctuation">&#123;</span></span><br><span class="line">      <span class="attr">&quot;token&quot;</span> <span class="punctuation">:</span> <span class="string">&quot;我&quot;</span><span class="punctuation">,</span></span><br><span class="line">      <span class="attr">&quot;start_offset&quot;</span> <span class="punctuation">:</span> <span class="number">0</span><span class="punctuation">,</span></span><br><span class="line">      <span class="attr">&quot;end_offset&quot;</span> <span class="punctuation">:</span> <span class="number">1</span><span class="punctuation">,</span></span><br><span class="line">      <span class="attr">&quot;type&quot;</span> <span class="punctuation">:</span> <span class="string">&quot;&lt;IDEOGRAPHIC&gt;&quot;</span><span class="punctuation">,</span></span><br><span class="line">      <span class="attr">&quot;position&quot;</span> <span class="punctuation">:</span> <span class="number">0</span></span><br><span class="line">    <span class="punctuation">&#125;</span><span class="punctuation">,</span></span><br><span class="line">    <span class="punctuation">&#123;</span></span><br><span class="line">      <span class="attr">&quot;token&quot;</span> <span class="punctuation">:</span> <span class="string">&quot;是&quot;</span><span class="punctuation">,</span></span><br><span class="line">      <span class="attr">&quot;start_offset&quot;</span> <span class="punctuation">:</span> <span class="number">1</span><span class="punctuation">,</span></span><br><span class="line">      <span class="attr">&quot;end_offset&quot;</span> <span class="punctuation">:</span> <span class="number">2</span><span class="punctuation">,</span></span><br><span class="line">      <span class="attr">&quot;type&quot;</span> <span class="punctuation">:</span> <span class="string">&quot;&lt;IDEOGRAPHIC&gt;&quot;</span><span class="punctuation">,</span></span><br><span class="line">      <span class="attr">&quot;position&quot;</span> <span class="punctuation">:</span> <span class="number">1</span></span><br><span class="line">    <span class="punctuation">&#125;</span><span class="punctuation">,</span></span><br><span class="line">    <span class="punctuation">&#123;</span></span><br><span class="line">      <span class="attr">&quot;token&quot;</span> <span class="punctuation">:</span> <span class="string">&quot;中&quot;</span><span class="punctuation">,</span></span><br><span class="line">      <span class="attr">&quot;start_offset&quot;</span> <span class="punctuation">:</span> <span class="number">2</span><span class="punctuation">,</span></span><br><span class="line">      <span class="attr">&quot;end_offset&quot;</span> <span class="punctuation">:</span> <span class="number">3</span><span class="punctuation">,</span></span><br><span class="line">      <span class="attr">&quot;type&quot;</span> <span class="punctuation">:</span> <span class="string">&quot;&lt;IDEOGRAPHIC&gt;&quot;</span><span class="punctuation">,</span></span><br><span class="line">      <span class="attr">&quot;position&quot;</span> <span class="punctuation">:</span> <span class="number">2</span></span><br><span class="line">    <span class="punctuation">&#125;</span><span class="punctuation">,</span></span><br><span class="line">    <span class="punctuation">&#123;</span></span><br><span class="line">      <span class="attr">&quot;token&quot;</span> <span class="punctuation">:</span> <span class="string">&quot;国&quot;</span><span class="punctuation">,</span></span><br><span class="line">      <span class="attr">&quot;start_offset&quot;</span> <span class="punctuation">:</span> <span class="number">3</span><span class="punctuation">,</span></span><br><span class="line">      <span class="attr">&quot;end_offset&quot;</span> <span class="punctuation">:</span> <span class="number">4</span><span class="punctuation">,</span></span><br><span class="line">      <span class="attr">&quot;type&quot;</span> <span class="punctuation">:</span> <span class="string">&quot;&lt;IDEOGRAPHIC&gt;&quot;</span><span class="punctuation">,</span></span><br><span class="line">      <span class="attr">&quot;position&quot;</span> <span class="punctuation">:</span> <span class="number">3</span></span><br><span class="line">    <span class="punctuation">&#125;</span><span class="punctuation">,</span></span><br><span class="line">    <span class="punctuation">&#123;</span></span><br><span class="line">      <span class="attr">&quot;token&quot;</span> <span class="punctuation">:</span> <span class="string">&quot;人&quot;</span><span class="punctuation">,</span></span><br><span class="line">      <span class="attr">&quot;start_offset&quot;</span> <span class="punctuation">:</span> <span class="number">4</span><span class="punctuation">,</span></span><br><span class="line">      <span class="attr">&quot;end_offset&quot;</span> <span class="punctuation">:</span> <span class="number">5</span><span class="punctuation">,</span></span><br><span class="line">      <span class="attr">&quot;type&quot;</span> <span class="punctuation">:</span> <span class="string">&quot;&lt;IDEOGRAPHIC&gt;&quot;</span><span class="punctuation">,</span></span><br><span class="line">      <span class="attr">&quot;position&quot;</span> <span class="punctuation">:</span> <span class="number">4</span></span><br><span class="line">    <span class="punctuation">&#125;</span></span><br><span class="line">  <span class="punctuation">]</span></span><br><span class="line"><span class="punctuation">&#125;</span></span><br></pre></td></tr></table></figure><p>使用ik_smart分词器</p><figure class="highlight json"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">GET my_index/_analyze</span><br><span class="line"><span class="punctuation">&#123;</span></span><br><span class="line">   <span class="attr">&quot;analyzer&quot;</span><span class="punctuation">:</span> <span class="string">&quot;ik_smart&quot;</span><span class="punctuation">,</span> </span><br><span class="line">   <span class="attr">&quot;text&quot;</span><span class="punctuation">:</span><span class="string">&quot;我是中国人&quot;</span></span><br><span class="line"><span class="punctuation">&#125;</span></span><br></pre></td></tr></table></figure><p>输出结果：</p><figure class="highlight json"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br></pre></td><td class="code"><pre><span class="line"><span class="punctuation">&#123;</span></span><br><span class="line">  <span class="attr">&quot;tokens&quot;</span> <span class="punctuation">:</span> <span class="punctuation">[</span></span><br><span class="line">    <span class="punctuation">&#123;</span></span><br><span class="line">      <span class="attr">&quot;token&quot;</span> <span class="punctuation">:</span> <span class="string">&quot;我&quot;</span><span class="punctuation">,</span></span><br><span class="line">      <span class="attr">&quot;start_offset&quot;</span> <span class="punctuation">:</span> <span class="number">0</span><span class="punctuation">,</span></span><br><span class="line">      <span class="attr">&quot;end_offset&quot;</span> <span class="punctuation">:</span> <span class="number">1</span><span class="punctuation">,</span></span><br><span class="line">      <span class="attr">&quot;type&quot;</span> <span class="punctuation">:</span> <span class="string">&quot;CN_CHAR&quot;</span><span class="punctuation">,</span></span><br><span class="line">      <span class="attr">&quot;position&quot;</span> <span class="punctuation">:</span> <span class="number">0</span></span><br><span class="line">    <span class="punctuation">&#125;</span><span class="punctuation">,</span></span><br><span class="line">    <span class="punctuation">&#123;</span></span><br><span class="line">      <span class="attr">&quot;token&quot;</span> <span class="punctuation">:</span> <span class="string">&quot;是&quot;</span><span class="punctuation">,</span></span><br><span class="line">      <span class="attr">&quot;start_offset&quot;</span> <span class="punctuation">:</span> <span class="number">1</span><span class="punctuation">,</span></span><br><span class="line">      <span class="attr">&quot;end_offset&quot;</span> <span class="punctuation">:</span> <span class="number">2</span><span class="punctuation">,</span></span><br><span class="line">      <span class="attr">&quot;type&quot;</span> <span class="punctuation">:</span> <span class="string">&quot;CN_CHAR&quot;</span><span class="punctuation">,</span></span><br><span class="line">      <span class="attr">&quot;position&quot;</span> <span class="punctuation">:</span> <span class="number">1</span></span><br><span class="line">    <span class="punctuation">&#125;</span><span class="punctuation">,</span></span><br><span class="line">    <span class="punctuation">&#123;</span></span><br><span class="line">      <span class="attr">&quot;token&quot;</span> <span class="punctuation">:</span> <span class="string">&quot;中国人&quot;</span><span class="punctuation">,</span></span><br><span class="line">      <span class="attr">&quot;start_offset&quot;</span> <span class="punctuation">:</span> <span class="number">2</span><span class="punctuation">,</span></span><br><span class="line">      <span class="attr">&quot;end_offset&quot;</span> <span class="punctuation">:</span> <span class="number">5</span><span class="punctuation">,</span></span><br><span class="line">      <span class="attr">&quot;type&quot;</span> <span class="punctuation">:</span> <span class="string">&quot;CN_WORD&quot;</span><span class="punctuation">,</span></span><br><span class="line">      <span class="attr">&quot;position&quot;</span> <span class="punctuation">:</span> <span class="number">2</span></span><br><span class="line">    <span class="punctuation">&#125;</span></span><br><span class="line">  <span class="punctuation">]</span></span><br><span class="line"><span class="punctuation">&#125;</span></span><br></pre></td></tr></table></figure><p>使用ik_max_word分词器</p><figure class="highlight json"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">GET my_index/_analyze</span><br><span class="line"><span class="punctuation">&#123;</span></span><br><span class="line">   <span class="attr">&quot;analyzer&quot;</span><span class="punctuation">:</span> <span class="string">&quot;ik_max_word&quot;</span><span class="punctuation">,</span> </span><br><span class="line">   <span class="attr">&quot;text&quot;</span><span class="punctuation">:</span><span class="string">&quot;我是中国人&quot;</span></span><br><span class="line"><span class="punctuation">&#125;</span></span><br></pre></td></tr></table></figure><p>输出结果：</p><figure class="highlight json"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br></pre></td><td class="code"><pre><span class="line"><span class="punctuation">&#123;</span></span><br><span class="line">  <span class="attr">&quot;tokens&quot;</span> <span class="punctuation">:</span> <span class="punctuation">[</span></span><br><span class="line">    <span class="punctuation">&#123;</span></span><br><span class="line">      <span class="attr">&quot;token&quot;</span> <span class="punctuation">:</span> <span class="string">&quot;我&quot;</span><span class="punctuation">,</span></span><br><span class="line">      <span class="attr">&quot;start_offset&quot;</span> <span class="punctuation">:</span> <span class="number">0</span><span class="punctuation">,</span></span><br><span class="line">      <span class="attr">&quot;end_offset&quot;</span> <span class="punctuation">:</span> <span class="number">1</span><span class="punctuation">,</span></span><br><span class="line">      <span class="attr">&quot;type&quot;</span> <span class="punctuation">:</span> <span class="string">&quot;CN_CHAR&quot;</span><span class="punctuation">,</span></span><br><span class="line">      <span class="attr">&quot;position&quot;</span> <span class="punctuation">:</span> <span class="number">0</span></span><br><span class="line">    <span class="punctuation">&#125;</span><span class="punctuation">,</span></span><br><span class="line">    <span class="punctuation">&#123;</span></span><br><span class="line">      <span class="attr">&quot;token&quot;</span> <span class="punctuation">:</span> <span class="string">&quot;是&quot;</span><span class="punctuation">,</span></span><br><span class="line">      <span class="attr">&quot;start_offset&quot;</span> <span class="punctuation">:</span> <span class="number">1</span><span class="punctuation">,</span></span><br><span class="line">      <span class="attr">&quot;end_offset&quot;</span> <span class="punctuation">:</span> <span class="number">2</span><span class="punctuation">,</span></span><br><span class="line">      <span class="attr">&quot;type&quot;</span> <span class="punctuation">:</span> <span class="string">&quot;CN_CHAR&quot;</span><span class="punctuation">,</span></span><br><span class="line">      <span class="attr">&quot;position&quot;</span> <span class="punctuation">:</span> <span class="number">1</span></span><br><span class="line">    <span class="punctuation">&#125;</span><span class="punctuation">,</span></span><br><span class="line">    <span class="punctuation">&#123;</span></span><br><span class="line">      <span class="attr">&quot;token&quot;</span> <span class="punctuation">:</span> <span class="string">&quot;中国人&quot;</span><span class="punctuation">,</span></span><br><span class="line">      <span class="attr">&quot;start_offset&quot;</span> <span class="punctuation">:</span> <span class="number">2</span><span class="punctuation">,</span></span><br><span class="line">      <span class="attr">&quot;end_offset&quot;</span> <span class="punctuation">:</span> <span class="number">5</span><span class="punctuation">,</span></span><br><span class="line">      <span class="attr">&quot;type&quot;</span> <span class="punctuation">:</span> <span class="string">&quot;CN_WORD&quot;</span><span class="punctuation">,</span></span><br><span class="line">      <span class="attr">&quot;position&quot;</span> <span class="punctuation">:</span> <span class="number">2</span></span><br><span class="line">    <span class="punctuation">&#125;</span><span class="punctuation">,</span></span><br><span class="line">    <span class="punctuation">&#123;</span></span><br><span class="line">      <span class="attr">&quot;token&quot;</span> <span class="punctuation">:</span> <span class="string">&quot;中国&quot;</span><span class="punctuation">,</span></span><br><span class="line">      <span class="attr">&quot;start_offset&quot;</span> <span class="punctuation">:</span> <span class="number">2</span><span class="punctuation">,</span></span><br><span class="line">      <span class="attr">&quot;end_offset&quot;</span> <span class="punctuation">:</span> <span class="number">4</span><span class="punctuation">,</span></span><br><span class="line">      <span class="attr">&quot;type&quot;</span> <span class="punctuation">:</span> <span class="string">&quot;CN_WORD&quot;</span><span class="punctuation">,</span></span><br><span class="line">      <span class="attr">&quot;position&quot;</span> <span class="punctuation">:</span> <span class="number">3</span></span><br><span class="line">    <span class="punctuation">&#125;</span><span class="punctuation">,</span></span><br><span class="line">    <span class="punctuation">&#123;</span></span><br><span class="line">      <span class="attr">&quot;token&quot;</span> <span class="punctuation">:</span> <span class="string">&quot;国人&quot;</span><span class="punctuation">,</span></span><br><span class="line">      <span class="attr">&quot;start_offset&quot;</span> <span class="punctuation">:</span> <span class="number">3</span><span class="punctuation">,</span></span><br><span class="line">      <span class="attr">&quot;end_offset&quot;</span> <span class="punctuation">:</span> <span class="number">5</span><span class="punctuation">,</span></span><br><span class="line">      <span class="attr">&quot;type&quot;</span> <span class="punctuation">:</span> <span class="string">&quot;CN_WORD&quot;</span><span class="punctuation">,</span></span><br><span class="line">      <span class="attr">&quot;position&quot;</span> <span class="punctuation">:</span> <span class="number">4</span></span><br><span class="line">    <span class="punctuation">&#125;</span></span><br><span class="line">  <span class="punctuation">]</span></span><br><span class="line"><span class="punctuation">&#125;</span></span><br></pre></td></tr></table></figure><h4 id="3）对ES进行设置"><a href="#3）对ES进行设置" class="headerlink" title="3）对ES进行设置"></a>3）对ES进行设置</h4><p>由于之前为Linux分配的内存太小了，所以首先需要对虚拟机内存进行配置，</p><p><img src="https://cdn.jsdelivr.net/gh/zsxfa/CDN/img/md/2022/03/31/1648711729.png" alt="desc"></p><p>然后需要将ES的docker镜像删除掉重新设置一个新的</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line">[root@localhost ~]# docker ps</span><br><span class="line">1e3900cda632   elasticsearch:7.6.2   &quot;/usr/local/bin/dock…&quot;   ...</span><br><span class="line">[root@localhost ~]# docker stop 1e3</span><br><span class="line">[root@localhost ~]# docker rm 1e3</span><br><span class="line">[root@localhost ~]#docker run --name elasticsearch -p 9200:9200 -p 9300:9300 \</span><br><span class="line">-e  &quot;discovery.type=single-node&quot; \</span><br><span class="line">-e ES_JAVA_OPTS=&quot;-Xms64m -Xmx512m&quot; \</span><br><span class="line">-v /mydata/elasticsearch/config/elasticsearch.yml:/usr/share/elasticsearch/config/elasticsearch.yml \</span><br><span class="line">-v /mydata/elasticsearch/data:/usr/share/elasticsearch/data \</span><br><span class="line">-v  /mydata/elasticsearch/plugins:/usr/share/elasticsearch/plugins \</span><br><span class="line">-d elasticsearch:7.6.2</span><br></pre></td></tr></table></figure><h4 id="4）自定义词库"><a href="#4）自定义词库" class="headerlink" title="4）自定义词库"></a>4）自定义词库</h4><p><strong>首先看第5部分附录的安装Nginx部分</strong></p><ul><li>修改/mydata/elasticsearch/plugins/ik/config中的IKAnalyzer.cfg.xml<br>/mydata/elasticsearch/plugins/ik/config</li></ul><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?xml version=<span class="string">&quot;1.0&quot;</span> encoding=<span class="string">&quot;UTF-8&quot;</span>?&gt;</span></span><br><span class="line"><span class="meta">&lt;!DOCTYPE <span class="keyword">properties</span> <span class="keyword">SYSTEM</span> <span class="string">&quot;http://java.sun.com/dtd/properties.dtd&quot;</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">properties</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">comment</span>&gt;</span>IK Analyzer 扩展配置<span class="tag">&lt;/<span class="name">comment</span>&gt;</span></span><br><span class="line"><span class="comment">&lt;!--用户可以在这里配置自己的扩展字典 --&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">entry</span> <span class="attr">key</span>=<span class="string">&quot;ext_dict&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">entry</span>&gt;</span></span><br><span class="line"> <span class="comment">&lt;!--用户可以在这里配置自己的扩展停止词字典--&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">entry</span> <span class="attr">key</span>=<span class="string">&quot;ext_stopwords&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">entry</span>&gt;</span></span><br><span class="line"><span class="comment">&lt;!--用户可以在这里配置远程扩展字典 --&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">entry</span> <span class="attr">key</span>=<span class="string">&quot;remote_ext_dict&quot;</span>&gt;</span>http://#/es/fenci.txt<span class="tag">&lt;/<span class="name">entry</span>&gt;</span> </span><br><span class="line"><span class="comment">&lt;!--用户可以在这里配置远程扩展停止词字典--&gt;</span></span><br><span class="line"><span class="comment">&lt;!-- &lt;entry key=&quot;remote_ext_stopwords&quot;&gt;words_location&lt;/entry&gt; --&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">properties</span>&gt;</span></span><br></pre></td></tr></table></figure><p>原来的xml</p><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?xml version=<span class="string">&quot;1.0&quot;</span> encoding=<span class="string">&quot;UTF-8&quot;</span>?&gt;</span></span><br><span class="line"><span class="meta">&lt;!DOCTYPE <span class="keyword">properties</span> <span class="keyword">SYSTEM</span> <span class="string">&quot;http://java.sun.com/dtd/properties.dtd&quot;</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">properties</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">comment</span>&gt;</span>IK Analyzer 扩展配置<span class="tag">&lt;/<span class="name">comment</span>&gt;</span></span><br><span class="line"><span class="comment">&lt;!--用户可以在这里配置自己的扩展字典 --&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">entry</span> <span class="attr">key</span>=<span class="string">&quot;ext_dict&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">entry</span>&gt;</span></span><br><span class="line"> <span class="comment">&lt;!--用户可以在这里配置自己的扩展停止词字典--&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">entry</span> <span class="attr">key</span>=<span class="string">&quot;ext_stopwords&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">entry</span>&gt;</span></span><br><span class="line"><span class="comment">&lt;!--用户可以在这里配置远程扩展字典 --&gt;</span></span><br><span class="line"><span class="comment">&lt;!-- &lt;entry key=&quot;remote_ext_dict&quot;&gt;words_location&lt;/entry&gt; --&gt;</span></span><br><span class="line"><span class="comment">&lt;!--用户可以在这里配置远程扩展停止词字典--&gt;</span></span><br><span class="line"><span class="comment">&lt;!-- &lt;entry key=&quot;remote_ext_stopwords&quot;&gt;words_location&lt;/entry&gt; --&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">properties</span>&gt;</span></span><br><span class="line"></span><br></pre></td></tr></table></figure><p>修改完成后，需要重启elasticsearch容器，否则修改不生效。</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">[root@localhost config]# docker restart elasticsearch</span><br></pre></td></tr></table></figure><p>更新完成后，es只会对于新增的数据用更新分词。历史数据是不会重新分词的。如果想要历史数据重新分词，需要执行：</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">POST my_index/_update_by_query?conflicts=proceed</span><br></pre></td></tr></table></figure><p>http://#/es/fenci.txt，这个是nginx上资源的访问路径</p><p>在运行下面实例之前，需要安装nginx（安装方法见安装nginx），然后创建“fenci.txt”文件，内容如下：</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">echo &quot;乔碧萝&quot; &gt; /mydata/nginx/html/fenci.txt </span><br></pre></td></tr></table></figure><p>测试效果：</p><figure class="highlight json"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">GET my_index/_analyze</span><br><span class="line"><span class="punctuation">&#123;</span></span><br><span class="line">   <span class="attr">&quot;analyzer&quot;</span><span class="punctuation">:</span> <span class="string">&quot;ik_max_word&quot;</span><span class="punctuation">,</span> </span><br><span class="line">   <span class="attr">&quot;text&quot;</span><span class="punctuation">:</span><span class="string">&quot;乔碧萝殿下&quot;</span></span><br><span class="line"><span class="punctuation">&#125;</span></span><br></pre></td></tr></table></figure><p>输出结果：</p><figure class="highlight json"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br></pre></td><td class="code"><pre><span class="line"><span class="punctuation">&#123;</span></span><br><span class="line">  <span class="attr">&quot;tokens&quot;</span> <span class="punctuation">:</span> <span class="punctuation">[</span></span><br><span class="line">    <span class="punctuation">&#123;</span></span><br><span class="line">      <span class="attr">&quot;token&quot;</span> <span class="punctuation">:</span> <span class="string">&quot;乔碧萝&quot;</span><span class="punctuation">,</span></span><br><span class="line">      <span class="attr">&quot;start_offset&quot;</span> <span class="punctuation">:</span> <span class="number">0</span><span class="punctuation">,</span></span><br><span class="line">      <span class="attr">&quot;end_offset&quot;</span> <span class="punctuation">:</span> <span class="number">3</span><span class="punctuation">,</span></span><br><span class="line">      <span class="attr">&quot;type&quot;</span> <span class="punctuation">:</span> <span class="string">&quot;CN_WORD&quot;</span><span class="punctuation">,</span></span><br><span class="line">      <span class="attr">&quot;position&quot;</span> <span class="punctuation">:</span> <span class="number">0</span></span><br><span class="line">    <span class="punctuation">&#125;</span><span class="punctuation">,</span></span><br><span class="line">    <span class="punctuation">&#123;</span></span><br><span class="line">      <span class="attr">&quot;token&quot;</span> <span class="punctuation">:</span> <span class="string">&quot;殿下&quot;</span><span class="punctuation">,</span></span><br><span class="line">      <span class="attr">&quot;start_offset&quot;</span> <span class="punctuation">:</span> <span class="number">3</span><span class="punctuation">,</span></span><br><span class="line">      <span class="attr">&quot;end_offset&quot;</span> <span class="punctuation">:</span> <span class="number">5</span><span class="punctuation">,</span></span><br><span class="line">      <span class="attr">&quot;type&quot;</span> <span class="punctuation">:</span> <span class="string">&quot;CN_WORD&quot;</span><span class="punctuation">,</span></span><br><span class="line">      <span class="attr">&quot;position&quot;</span> <span class="punctuation">:</span> <span class="number">1</span></span><br><span class="line">    <span class="punctuation">&#125;</span></span><br><span class="line">  <span class="punctuation">]</span></span><br><span class="line"><span class="punctuation">&#125;</span></span><br></pre></td></tr></table></figure><h3 id="4、elasticsearch-Rest-Client"><a href="#4、elasticsearch-Rest-Client" class="headerlink" title="4、elasticsearch-Rest-Client"></a>4、elasticsearch-Rest-Client</h3><h4 id="1）9300-TCP"><a href="#1）9300-TCP" class="headerlink" title="1）9300: TCP"></a>1）9300: TCP</h4><ul><li>spring-data-elasticsearch:transport-api.jar;<ul><li>springboot版本不同，ransport-api.jar不同，不能适配es版本</li><li>7.x已经不建议使用，8以后就要废弃</li></ul></li></ul><h4 id="2）9200-HTTP"><a href="#2）9200-HTTP" class="headerlink" title="2）9200: HTTP"></a>2）9200: HTTP</h4><ul><li><p>jestClient: 非官方，更新慢；</p></li><li><p>RestTemplate：模拟HTTP请求，ES很多操作需要自己封装，麻烦；</p></li><li><p>HttpClient：同上；</p></li><li><p>Elasticsearch-Rest-Client：官方RestClient，封装了ES操作，API层次分明，上手简单；<br>最终选择Elasticsearch-Rest-Client（elasticsearch-rest-high-level-client）；<br> <a href="https://www.elastic.co/guide/en/elasticsearch/client/java-rest/current/java-rest-high.html">https://www.elastic.co/guide/en/elasticsearch/client/java-rest/current/java-rest-high.html</a> </p></li></ul><h3 id="5、附录：安装Nginx"><a href="#5、附录：安装Nginx" class="headerlink" title="5、附录：安装Nginx"></a>5、附录：安装Nginx</h3><ul><li><p>在mydata文件夹中先创建一个文件夹，nginx的有关内容放在文件夹中</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">[root@localhost mydata]# mkdir nginx</span><br></pre></td></tr></table></figure></li></ul><ul><li><p>随便启动一个nginx实例，只是为了复制出配置</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">[root@localhost mydata]# docker run -p80:80 --name nginx -d nginx:1.10   </span><br></pre></td></tr></table></figure></li><li><p>将容器内的配置文件拷贝到/mydata/nginx/conf/ 下</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">[root@localhost mydata]# docker container cp nginx:/etc/nginx .</span><br><span class="line"><span class="meta prompt_">#</span><span class="language-bash">由于拷贝完成后文件会存在nginx文件夹，这里将nginx文件夹的名字改为conf</span></span><br><span class="line">[root@localhost mydata]# mv nginx conf</span><br><span class="line"><span class="meta prompt_">#</span><span class="language-bash">再次创建一个nginx文件夹</span></span><br><span class="line">[root@localhost mydata]# mkdir nginx</span><br><span class="line">[root@localhost mydata]# mv conf nginx/</span><br></pre></td></tr></table></figure></li><li><p>终止原容器：</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">docker stop nginx</span><br></pre></td></tr></table></figure></li><li><p>执行命令删除原容器：</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">docker rm nginx</span><br></pre></td></tr></table></figure></li><li><p>创建新的Nginx，执行以下命令</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">docker run -p 80:80 --name nginx \</span><br><span class="line"> -v /mydata/nginx/html:/usr/share/nginx/html \</span><br><span class="line"> -v /mydata/nginx/logs:/var/log/nginx \</span><br><span class="line"> -v /mydata/nginx/conf/:/etc/nginx \</span><br><span class="line"> -d nginx:1.10</span><br></pre></td></tr></table></figure></li><li><p>设置开机启动nginx</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">docker update nginx --restart=always</span><br></pre></td></tr></table></figure></li><li><p>创建“/mydata/nginx/html/index.html”文件，测试是否能够正常访问</p><figure class="highlight vim"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">echo</span> <span class="string">&#x27;&lt;h2&gt;hello nginx!&lt;/h2&gt;&#x27;</span> &gt;<span class="built_in">index</span>.html</span><br></pre></td></tr></table></figure><p>访问：<a href="http://ngix所在主机的ip/index.html">http://ngix所在主机的IP:80/index.html</a></p></li></ul><h2 id="SpringBoot整合ElasticSearch"><a href="#SpringBoot整合ElasticSearch" class="headerlink" title="SpringBoot整合ElasticSearch"></a>SpringBoot整合ElasticSearch</h2><h3 id="1、导入依赖"><a href="#1、导入依赖" class="headerlink" title="1、导入依赖"></a>1、导入依赖</h3><p>这里的版本要和所按照的ELK版本匹配。</p><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>org.elasticsearch.client<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>elasticsearch-rest-high-level-client<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">version</span>&gt;</span>7.6.2<span class="tag">&lt;/<span class="name">version</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br></pre></td></tr></table></figure><p>在spring-boot-dependencies中所依赖的ELK版本位6.8.7</p><figure class="highlight apache"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="section">&lt;elasticsearch.version&gt;</span><span class="attribute">6</span>.<span class="number">8</span>.<span class="number">7</span>&lt;/elasticsearch.version&gt;</span><br></pre></td></tr></table></figure><p>需要在项目中将它改为7.6.2</p><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">properties</span>&gt;</span></span><br><span class="line">    ...</span><br><span class="line">    <span class="tag">&lt;<span class="name">elasticsearch.version</span>&gt;</span>7.6.2<span class="tag">&lt;/<span class="name">elasticsearch.version</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">properties</span>&gt;</span></span><br></pre></td></tr></table></figure><h3 id="2、编写测试类"><a href="#2、编写测试类" class="headerlink" title="2、编写测试类"></a>2、编写测试类</h3><h4 id="1）测试保存数据"><a href="#1）测试保存数据" class="headerlink" title="1）测试保存数据"></a>1）测试保存数据</h4><p> <a href="https://www.elastic.co/guide/en/elasticsearch/client/java-rest/current/java-rest-high-document-index.html">https://www.elastic.co/guide/en/elasticsearch/client/java-rest/current/java-rest-high-document-index.html</a> </p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">@Test</span></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">indexData</span><span class="params">()</span> <span class="keyword">throws</span> IOException &#123;</span><br><span class="line">    <span class="type">IndexRequest</span> <span class="variable">indexRequest</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">IndexRequest</span> (<span class="string">&quot;users&quot;</span>);</span><br><span class="line"></span><br><span class="line">    <span class="type">User</span> <span class="variable">user</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">User</span>();</span><br><span class="line">    user.setUserName(<span class="string">&quot;张三&quot;</span>);</span><br><span class="line">    user.setAge(<span class="number">20</span>);</span><br><span class="line">    user.setGender(<span class="string">&quot;男&quot;</span>);</span><br><span class="line">    <span class="type">String</span> <span class="variable">jsonString</span> <span class="operator">=</span> JSON.toJSONString(user);</span><br><span class="line">    <span class="comment">//设置要保存的内容</span></span><br><span class="line">    indexRequest.source(jsonString, XContentType.JSON);</span><br><span class="line">    <span class="comment">//执行创建索引和保存数据</span></span><br><span class="line">    <span class="type">IndexResponse</span> <span class="variable">index</span> <span class="operator">=</span> client.index(indexRequest, GulimallElasticSearchConfig.COMMON_OPTIONS);</span><br><span class="line">    System.out.println(index);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>测试后：</p><p><img src="https://cdn.jsdelivr.net/gh/zsxfa/CDN/img/md/2022/03/31/1648720214.png" alt="desc"></p><h4 id="2）测试获取数据"><a href="#2）测试获取数据" class="headerlink" title="2）测试获取数据"></a>2）测试获取数据</h4><p> <a href="https://www.elastic.co/guide/en/elasticsearch/client/java-rest/current/java-rest-high-search.html">https://www.elastic.co/guide/en/elasticsearch/client/java-rest/current/java-rest-high-search.html</a> </p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">@Test</span></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">searchData</span><span class="params">()</span> <span class="keyword">throws</span> IOException &#123;</span><br><span class="line">    <span class="type">GetRequest</span> <span class="variable">getRequest</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">GetRequest</span>(</span><br><span class="line">        <span class="string">&quot;users&quot;</span>,</span><br><span class="line">        <span class="string">&quot;_-2vAHIB0nzmLJLkxKWk&quot;</span>);</span><br><span class="line"></span><br><span class="line">    <span class="type">GetResponse</span> <span class="variable">getResponse</span> <span class="operator">=</span> client.get(getRequest, RequestOptions.DEFAULT);</span><br><span class="line">    System.out.println(getResponse);</span><br><span class="line">    <span class="type">String</span> <span class="variable">index</span> <span class="operator">=</span> getResponse.getIndex();</span><br><span class="line">    System.out.println(index);</span><br><span class="line">    <span class="type">String</span> <span class="variable">id</span> <span class="operator">=</span> getResponse.getId();</span><br><span class="line">    System.out.println(id);</span><br><span class="line">    <span class="keyword">if</span> (getResponse.isExists()) &#123;</span><br><span class="line">        <span class="type">long</span> <span class="variable">version</span> <span class="operator">=</span> getResponse.getVersion();</span><br><span class="line">        System.out.println(version);</span><br><span class="line">        <span class="type">String</span> <span class="variable">sourceAsString</span> <span class="operator">=</span> getResponse.getSourceAsString();</span><br><span class="line">        System.out.println(sourceAsString);</span><br><span class="line">        Map&lt;String, Object&gt; sourceAsMap = getResponse.getSourceAsMap();</span><br><span class="line">        System.out.println(sourceAsMap);</span><br><span class="line">        <span class="type">byte</span>[] sourceAsBytes = getResponse.getSourceAsBytes();</span><br><span class="line">    &#125; <span class="keyword">else</span> &#123;</span><br><span class="line"></span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>查询state=”AK”的文档：</p><figure class="highlight"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"></span><br></pre></td></tr></table></figure><figure class="highlight json"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br></pre></td><td class="code"><pre><span class="line"><span class="punctuation">&#123;</span></span><br><span class="line"><span class="attr">&quot;took&quot;</span><span class="punctuation">:</span> <span class="number">1</span><span class="punctuation">,</span></span><br><span class="line"><span class="attr">&quot;timed_out&quot;</span><span class="punctuation">:</span> <span class="keyword">false</span><span class="punctuation">,</span></span><br><span class="line"><span class="attr">&quot;_shards&quot;</span><span class="punctuation">:</span> <span class="punctuation">&#123;</span></span><br><span class="line"><span class="attr">&quot;total&quot;</span><span class="punctuation">:</span> <span class="number">1</span><span class="punctuation">,</span></span><br><span class="line"><span class="attr">&quot;successful&quot;</span><span class="punctuation">:</span> <span class="number">1</span><span class="punctuation">,</span></span><br><span class="line"><span class="attr">&quot;skipped&quot;</span><span class="punctuation">:</span> <span class="number">0</span><span class="punctuation">,</span></span><br><span class="line"><span class="attr">&quot;failed&quot;</span><span class="punctuation">:</span> <span class="number">0</span></span><br><span class="line"><span class="punctuation">&#125;</span><span class="punctuation">,</span></span><br><span class="line"><span class="attr">&quot;hits&quot;</span><span class="punctuation">:</span> <span class="punctuation">&#123;</span></span><br><span class="line"><span class="attr">&quot;total&quot;</span><span class="punctuation">:</span> <span class="punctuation">&#123;</span></span><br><span class="line"><span class="attr">&quot;value&quot;</span><span class="punctuation">:</span> <span class="number">22</span><span class="punctuation">,</span>   <span class="comment">//匹配到了22条</span></span><br><span class="line"><span class="attr">&quot;relation&quot;</span><span class="punctuation">:</span> <span class="string">&quot;eq&quot;</span></span><br><span class="line"><span class="punctuation">&#125;</span><span class="punctuation">,</span></span><br><span class="line"><span class="attr">&quot;max_score&quot;</span><span class="punctuation">:</span> <span class="number">3.7952394</span><span class="punctuation">,</span></span><br><span class="line"><span class="attr">&quot;hits&quot;</span><span class="punctuation">:</span> <span class="punctuation">[</span><span class="punctuation">&#123;</span></span><br><span class="line"><span class="attr">&quot;_index&quot;</span><span class="punctuation">:</span> <span class="string">&quot;bank&quot;</span><span class="punctuation">,</span></span><br><span class="line"><span class="attr">&quot;_type&quot;</span><span class="punctuation">:</span> <span class="string">&quot;account&quot;</span><span class="punctuation">,</span></span><br><span class="line"><span class="attr">&quot;_id&quot;</span><span class="punctuation">:</span> <span class="string">&quot;210&quot;</span><span class="punctuation">,</span></span><br><span class="line"><span class="attr">&quot;_score&quot;</span><span class="punctuation">:</span> <span class="number">3.7952394</span><span class="punctuation">,</span></span><br><span class="line"><span class="attr">&quot;_source&quot;</span><span class="punctuation">:</span> <span class="punctuation">&#123;</span></span><br><span class="line"><span class="attr">&quot;account_number&quot;</span><span class="punctuation">:</span> <span class="number">210</span><span class="punctuation">,</span></span><br><span class="line"><span class="attr">&quot;balance&quot;</span><span class="punctuation">:</span> <span class="number">33946</span><span class="punctuation">,</span></span><br><span class="line"><span class="attr">&quot;firstname&quot;</span><span class="punctuation">:</span> <span class="string">&quot;Cherry&quot;</span><span class="punctuation">,</span></span><br><span class="line"><span class="attr">&quot;lastname&quot;</span><span class="punctuation">:</span> <span class="string">&quot;Carey&quot;</span><span class="punctuation">,</span></span><br><span class="line"><span class="attr">&quot;age&quot;</span><span class="punctuation">:</span> <span class="number">24</span><span class="punctuation">,</span></span><br><span class="line"><span class="attr">&quot;gender&quot;</span><span class="punctuation">:</span> <span class="string">&quot;M&quot;</span><span class="punctuation">,</span></span><br><span class="line"><span class="attr">&quot;address&quot;</span><span class="punctuation">:</span> <span class="string">&quot;539 Tiffany Place&quot;</span><span class="punctuation">,</span></span><br><span class="line"><span class="attr">&quot;employer&quot;</span><span class="punctuation">:</span> <span class="string">&quot;Martgo&quot;</span><span class="punctuation">,</span></span><br><span class="line"><span class="attr">&quot;email&quot;</span><span class="punctuation">:</span> <span class="string">&quot;cherrycarey@martgo.com&quot;</span><span class="punctuation">,</span></span><br><span class="line"><span class="attr">&quot;city&quot;</span><span class="punctuation">:</span> <span class="string">&quot;Fairacres&quot;</span><span class="punctuation">,</span></span><br><span class="line"><span class="attr">&quot;state&quot;</span><span class="punctuation">:</span> <span class="string">&quot;AK&quot;</span></span><br><span class="line"><span class="punctuation">&#125;</span></span><br><span class="line"><span class="punctuation">&#125;</span><span class="punctuation">,</span></span><br><span class="line">           ....<span class="comment">//省略其他</span></span><br><span class="line">          <span class="punctuation">]</span></span><br><span class="line"><span class="punctuation">&#125;</span></span><br><span class="line"><span class="punctuation">&#125;</span></span><br></pre></td></tr></table></figure><p><strong>搜索address中包含mill的所有人的年龄分布以及平均年龄，平均薪资</strong></p><figure class="highlight json"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br></pre></td><td class="code"><pre><span class="line">GET bank/_search</span><br><span class="line"><span class="punctuation">&#123;</span></span><br><span class="line">  <span class="attr">&quot;query&quot;</span><span class="punctuation">:</span> <span class="punctuation">&#123;</span></span><br><span class="line">    <span class="attr">&quot;match&quot;</span><span class="punctuation">:</span> <span class="punctuation">&#123;</span></span><br><span class="line">      <span class="attr">&quot;address&quot;</span><span class="punctuation">:</span> <span class="string">&quot;Mill&quot;</span></span><br><span class="line">    <span class="punctuation">&#125;</span></span><br><span class="line">  <span class="punctuation">&#125;</span><span class="punctuation">,</span></span><br><span class="line">  <span class="attr">&quot;aggs&quot;</span><span class="punctuation">:</span> <span class="punctuation">&#123;</span></span><br><span class="line">    <span class="attr">&quot;ageAgg&quot;</span><span class="punctuation">:</span> <span class="punctuation">&#123;</span></span><br><span class="line">      <span class="attr">&quot;terms&quot;</span><span class="punctuation">:</span> <span class="punctuation">&#123;</span></span><br><span class="line">        <span class="attr">&quot;field&quot;</span><span class="punctuation">:</span> <span class="string">&quot;age&quot;</span><span class="punctuation">,</span></span><br><span class="line">        <span class="attr">&quot;size&quot;</span><span class="punctuation">:</span> <span class="number">10</span></span><br><span class="line">      <span class="punctuation">&#125;</span></span><br><span class="line">    <span class="punctuation">&#125;</span><span class="punctuation">,</span></span><br><span class="line">    <span class="attr">&quot;ageAvg&quot;</span><span class="punctuation">:</span> <span class="punctuation">&#123;</span></span><br><span class="line">      <span class="attr">&quot;avg&quot;</span><span class="punctuation">:</span> <span class="punctuation">&#123;</span></span><br><span class="line">        <span class="attr">&quot;field&quot;</span><span class="punctuation">:</span> <span class="string">&quot;age&quot;</span></span><br><span class="line">      <span class="punctuation">&#125;</span></span><br><span class="line">    <span class="punctuation">&#125;</span><span class="punctuation">,</span></span><br><span class="line">    <span class="attr">&quot;balanceAvg&quot;</span><span class="punctuation">:</span> <span class="punctuation">&#123;</span></span><br><span class="line">      <span class="attr">&quot;avg&quot;</span><span class="punctuation">:</span> <span class="punctuation">&#123;</span></span><br><span class="line">        <span class="attr">&quot;field&quot;</span><span class="punctuation">:</span> <span class="string">&quot;balance&quot;</span></span><br><span class="line">      <span class="punctuation">&#125;</span></span><br><span class="line">    <span class="punctuation">&#125;</span></span><br><span class="line">  <span class="punctuation">&#125;</span></span><br><span class="line"><span class="punctuation">&#125;</span></span><br></pre></td></tr></table></figure><p>java实现</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * 复杂检索:在bank中搜索address中包含mill的所有人的年龄分布以及平均年龄，平均薪资</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@throws</span> IOException</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="meta">@Test</span></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">searchData</span><span class="params">()</span> <span class="keyword">throws</span> IOException &#123;</span><br><span class="line">    <span class="comment">//1. 创建检索请求</span></span><br><span class="line">    <span class="type">SearchRequest</span> <span class="variable">searchRequest</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">SearchRequest</span>();</span><br><span class="line"></span><br><span class="line">    <span class="comment">//1.1）指定索引</span></span><br><span class="line">    searchRequest.indices(<span class="string">&quot;bank&quot;</span>);</span><br><span class="line">    <span class="comment">//1.2）构造检索条件</span></span><br><span class="line">    <span class="type">SearchSourceBuilder</span> <span class="variable">sourceBuilder</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">SearchSourceBuilder</span>();</span><br><span class="line">    sourceBuilder.query(QueryBuilders.matchQuery(<span class="string">&quot;address&quot;</span>,<span class="string">&quot;Mill&quot;</span>));</span><br><span class="line"></span><br><span class="line">    <span class="comment">//1.2.1)按照年龄分布进行聚合</span></span><br><span class="line">    TermsAggregationBuilder ageAgg=AggregationBuilders.terms(<span class="string">&quot;ageAgg&quot;</span>).field(<span class="string">&quot;age&quot;</span>).size(<span class="number">10</span>);</span><br><span class="line">    sourceBuilder.aggregation(ageAgg);</span><br><span class="line"></span><br><span class="line">    <span class="comment">//1.2.2)计算平均年龄</span></span><br><span class="line">    <span class="type">AvgAggregationBuilder</span> <span class="variable">ageAvg</span> <span class="operator">=</span> AggregationBuilders.avg(<span class="string">&quot;ageAvg&quot;</span>).field(<span class="string">&quot;age&quot;</span>);</span><br><span class="line">    sourceBuilder.aggregation(ageAvg);</span><br><span class="line">    <span class="comment">//1.2.3)计算平均薪资</span></span><br><span class="line">    <span class="type">AvgAggregationBuilder</span> <span class="variable">balanceAvg</span> <span class="operator">=</span> AggregationBuilders.avg(<span class="string">&quot;balanceAvg&quot;</span>).field(<span class="string">&quot;balance&quot;</span>);</span><br><span class="line">    sourceBuilder.aggregation(balanceAvg);</span><br><span class="line"></span><br><span class="line">    System.out.println(<span class="string">&quot;检索条件：&quot;</span>+sourceBuilder);</span><br><span class="line">    searchRequest.source(sourceBuilder);</span><br><span class="line">    <span class="comment">//2. 执行检索</span></span><br><span class="line">    <span class="type">SearchResponse</span> <span class="variable">searchResponse</span> <span class="operator">=</span> client.search(searchRequest, RequestOptions.DEFAULT);</span><br><span class="line">    System.out.println(<span class="string">&quot;检索结果：&quot;</span>+searchResponse);</span><br><span class="line"></span><br><span class="line">    <span class="comment">//3. 将检索结果封装为Bean</span></span><br><span class="line">    <span class="type">SearchHits</span> <span class="variable">hits</span> <span class="operator">=</span> searchResponse.getHits();</span><br><span class="line">    SearchHit[] searchHits = hits.getHits();</span><br><span class="line">    <span class="keyword">for</span> (SearchHit searchHit : searchHits) &#123;</span><br><span class="line">        <span class="type">String</span> <span class="variable">sourceAsString</span> <span class="operator">=</span> searchHit.getSourceAsString();</span><br><span class="line">        <span class="type">Account</span> <span class="variable">account</span> <span class="operator">=</span> JSON.parseObject(sourceAsString, Account.class);</span><br><span class="line">        System.out.println(account);</span><br><span class="line"></span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">//4. 获取聚合信息</span></span><br><span class="line">    <span class="type">Aggregations</span> <span class="variable">aggregations</span> <span class="operator">=</span> searchResponse.getAggregations();</span><br><span class="line"></span><br><span class="line">    <span class="type">Terms</span> <span class="variable">ageAgg1</span> <span class="operator">=</span> aggregations.get(<span class="string">&quot;ageAgg&quot;</span>);</span><br><span class="line"></span><br><span class="line">    <span class="keyword">for</span> (Terms.Bucket bucket : ageAgg1.getBuckets()) &#123;</span><br><span class="line">        <span class="type">String</span> <span class="variable">keyAsString</span> <span class="operator">=</span> bucket.getKeyAsString();</span><br><span class="line">        System.out.println(<span class="string">&quot;年龄：&quot;</span>+keyAsString+<span class="string">&quot; ==&gt; &quot;</span>+bucket.getDocCount());</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="type">Avg</span> <span class="variable">ageAvg1</span> <span class="operator">=</span> aggregations.get(<span class="string">&quot;ageAvg&quot;</span>);</span><br><span class="line">    System.out.println(<span class="string">&quot;平均年龄：&quot;</span>+ageAvg1.getValue());</span><br><span class="line"></span><br><span class="line">    <span class="type">Avg</span> <span class="variable">balanceAvg1</span> <span class="operator">=</span> aggregations.get(<span class="string">&quot;balanceAvg&quot;</span>);</span><br><span class="line">    System.out.println(<span class="string">&quot;平均薪资：&quot;</span>+balanceAvg1.getValue());</span><br><span class="line">&#125;  </span><br></pre></td></tr></table></figure><p>可以尝试对比打印的条件和执行结果，和前面的ElasticSearch的检索语句和检索结果进行比较；</p><h2 id="其他"><a href="#其他" class="headerlink" title="其他"></a>其他</h2><h3 id="1-kibana控制台命令"><a href="#1-kibana控制台命令" class="headerlink" title="1. kibana控制台命令"></a>1. kibana控制台命令</h3><p>ctrl+home：回到文档首部；</p><p>ctril+end：回到文档尾部。</p><h1 id="商品上架"><a href="#商品上架" class="headerlink" title="商品上架"></a>商品上架</h1><h2 id="spu在es中的存储模型分析"><a href="#spu在es中的存储模型分析" class="headerlink" title="spu在es中的存储模型分析"></a>spu在es中的存储模型分析</h2><p>如果每个sku都存储规格参数，会有冗余存储，因为每个spu对应的sku的规格参数都一样</p><p>但是如果将规格参数单独建立索引会出现检索时出现大量数据传输的问题，会阻塞网络</p><p>因此我们选用第一种存储模型，以空间换时间</p><p><img src="https://cdn.jsdelivr.net/gh/zsxfa/CDN/img/md/2022/04/01/1648779243.png" alt="desc"></p><h2 id="向ES添加商品属性映射"><a href="#向ES添加商品属性映射" class="headerlink" title="向ES添加商品属性映射"></a>向ES添加商品属性映射</h2><figure class="highlight json"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br></pre></td><td class="code"><pre><span class="line">PUT product</span><br><span class="line"><span class="punctuation">&#123;</span></span><br><span class="line">    <span class="attr">&quot;mappings&quot;</span><span class="punctuation">:</span><span class="punctuation">&#123;</span></span><br><span class="line">        <span class="attr">&quot;properties&quot;</span><span class="punctuation">:</span> <span class="punctuation">&#123;</span></span><br><span class="line">            <span class="attr">&quot;skuId&quot;</span><span class="punctuation">:</span><span class="punctuation">&#123;</span></span><br><span class="line">                <span class="attr">&quot;type&quot;</span><span class="punctuation">:</span> <span class="string">&quot;long&quot;</span></span><br><span class="line">            <span class="punctuation">&#125;</span><span class="punctuation">,</span></span><br><span class="line">            <span class="attr">&quot;spuId&quot;</span><span class="punctuation">:</span><span class="punctuation">&#123;</span></span><br><span class="line">                <span class="attr">&quot;type&quot;</span><span class="punctuation">:</span> <span class="string">&quot;keyword&quot;</span></span><br><span class="line">            <span class="punctuation">&#125;</span><span class="punctuation">,</span></span><br><span class="line">            <span class="attr">&quot;skuTitle&quot;</span><span class="punctuation">:</span> <span class="punctuation">&#123;</span></span><br><span class="line">                <span class="attr">&quot;type&quot;</span><span class="punctuation">:</span> <span class="string">&quot;text&quot;</span><span class="punctuation">,</span></span><br><span class="line">                <span class="attr">&quot;analyzer&quot;</span><span class="punctuation">:</span> <span class="string">&quot;ik_smart&quot;</span></span><br><span class="line">            <span class="punctuation">&#125;</span><span class="punctuation">,</span></span><br><span class="line">            <span class="attr">&quot;skuPrice&quot;</span><span class="punctuation">:</span> <span class="punctuation">&#123;</span></span><br><span class="line">                <span class="attr">&quot;type&quot;</span><span class="punctuation">:</span> <span class="string">&quot;keyword&quot;</span></span><br><span class="line">            <span class="punctuation">&#125;</span><span class="punctuation">,</span></span><br><span class="line">            <span class="attr">&quot;skuImg&quot;</span><span class="punctuation">:</span><span class="punctuation">&#123;</span></span><br><span class="line">                <span class="attr">&quot;type&quot;</span><span class="punctuation">:</span> <span class="string">&quot;keyword&quot;</span><span class="punctuation">,</span></span><br><span class="line">                <span class="attr">&quot;index&quot;</span><span class="punctuation">:</span> <span class="keyword">false</span><span class="punctuation">,</span></span><br><span class="line">                <span class="attr">&quot;doc_values&quot;</span><span class="punctuation">:</span> <span class="keyword">false</span></span><br><span class="line">            <span class="punctuation">&#125;</span><span class="punctuation">,</span></span><br><span class="line">            <span class="attr">&quot;saleCount&quot;</span><span class="punctuation">:</span><span class="punctuation">&#123;</span></span><br><span class="line">                <span class="attr">&quot;type&quot;</span><span class="punctuation">:</span><span class="string">&quot;long&quot;</span></span><br><span class="line">            <span class="punctuation">&#125;</span><span class="punctuation">,</span></span><br><span class="line">            <span class="attr">&quot;hasStock&quot;</span><span class="punctuation">:</span> <span class="punctuation">&#123;</span></span><br><span class="line">                <span class="attr">&quot;type&quot;</span><span class="punctuation">:</span> <span class="string">&quot;boolean&quot;</span></span><br><span class="line">            <span class="punctuation">&#125;</span><span class="punctuation">,</span></span><br><span class="line">            <span class="attr">&quot;hotScore&quot;</span><span class="punctuation">:</span> <span class="punctuation">&#123;</span></span><br><span class="line">                <span class="attr">&quot;type&quot;</span><span class="punctuation">:</span> <span class="string">&quot;long&quot;</span></span><br><span class="line">            <span class="punctuation">&#125;</span><span class="punctuation">,</span></span><br><span class="line">            <span class="attr">&quot;brandId&quot;</span><span class="punctuation">:</span> <span class="punctuation">&#123;</span></span><br><span class="line">                <span class="attr">&quot;type&quot;</span><span class="punctuation">:</span> <span class="string">&quot;long&quot;</span></span><br><span class="line">            <span class="punctuation">&#125;</span><span class="punctuation">,</span></span><br><span class="line">            <span class="attr">&quot;catalogId&quot;</span><span class="punctuation">:</span> <span class="punctuation">&#123;</span></span><br><span class="line">                <span class="attr">&quot;type&quot;</span><span class="punctuation">:</span> <span class="string">&quot;long&quot;</span></span><br><span class="line">            <span class="punctuation">&#125;</span><span class="punctuation">,</span></span><br><span class="line">            <span class="attr">&quot;brandName&quot;</span><span class="punctuation">:</span> <span class="punctuation">&#123;</span></span><br><span class="line">                <span class="attr">&quot;type&quot;</span><span class="punctuation">:</span> <span class="string">&quot;keyword&quot;</span><span class="punctuation">,</span></span><br><span class="line">                <span class="attr">&quot;index&quot;</span><span class="punctuation">:</span> <span class="keyword">false</span><span class="punctuation">,</span></span><br><span class="line">                <span class="attr">&quot;doc_values&quot;</span><span class="punctuation">:</span> <span class="keyword">false</span></span><br><span class="line">            <span class="punctuation">&#125;</span><span class="punctuation">,</span></span><br><span class="line">            <span class="attr">&quot;brandImg&quot;</span><span class="punctuation">:</span><span class="punctuation">&#123;</span></span><br><span class="line">                <span class="attr">&quot;type&quot;</span><span class="punctuation">:</span> <span class="string">&quot;keyword&quot;</span><span class="punctuation">,</span></span><br><span class="line">                 <span class="attr">&quot;index&quot;</span><span class="punctuation">:</span> <span class="keyword">false</span><span class="punctuation">,</span></span><br><span class="line">                <span class="attr">&quot;doc_values&quot;</span><span class="punctuation">:</span> <span class="keyword">false</span></span><br><span class="line">            <span class="punctuation">&#125;</span><span class="punctuation">,</span></span><br><span class="line">            <span class="attr">&quot;catalogName&quot;</span><span class="punctuation">:</span> <span class="punctuation">&#123;</span></span><br><span class="line">                <span class="attr">&quot;type&quot;</span><span class="punctuation">:</span> <span class="string">&quot;keyword&quot;</span><span class="punctuation">,</span></span><br><span class="line">                <span class="attr">&quot;index&quot;</span><span class="punctuation">:</span> <span class="keyword">false</span><span class="punctuation">,</span></span><br><span class="line">                <span class="attr">&quot;doc_values&quot;</span><span class="punctuation">:</span> <span class="keyword">false</span></span><br><span class="line">            <span class="punctuation">&#125;</span><span class="punctuation">,</span></span><br><span class="line">            <span class="attr">&quot;attrs&quot;</span><span class="punctuation">:</span> <span class="punctuation">&#123;</span></span><br><span class="line">                <span class="attr">&quot;type&quot;</span><span class="punctuation">:</span> <span class="string">&quot;nested&quot;</span><span class="punctuation">,</span></span><br><span class="line">                <span class="attr">&quot;properties&quot;</span><span class="punctuation">:</span> <span class="punctuation">&#123;</span></span><br><span class="line">                    <span class="attr">&quot;attrId&quot;</span><span class="punctuation">:</span> <span class="punctuation">&#123;</span></span><br><span class="line">                        <span class="attr">&quot;type&quot;</span><span class="punctuation">:</span> <span class="string">&quot;long&quot;</span></span><br><span class="line">                    <span class="punctuation">&#125;</span><span class="punctuation">,</span></span><br><span class="line">                    <span class="attr">&quot;attrName&quot;</span><span class="punctuation">:</span> <span class="punctuation">&#123;</span></span><br><span class="line">                        <span class="attr">&quot;type&quot;</span><span class="punctuation">:</span> <span class="string">&quot;keyword&quot;</span><span class="punctuation">,</span></span><br><span class="line">                        <span class="attr">&quot;index&quot;</span><span class="punctuation">:</span> <span class="keyword">false</span><span class="punctuation">,</span></span><br><span class="line">                        <span class="attr">&quot;doc_values&quot;</span><span class="punctuation">:</span> <span class="keyword">false</span></span><br><span class="line">                    <span class="punctuation">&#125;</span><span class="punctuation">,</span></span><br><span class="line">                    <span class="attr">&quot;attrValue&quot;</span><span class="punctuation">:</span> <span class="punctuation">&#123;</span></span><br><span class="line">                        <span class="attr">&quot;type&quot;</span><span class="punctuation">:</span> <span class="string">&quot;keyword&quot;</span></span><br><span class="line">                    <span class="punctuation">&#125;</span></span><br><span class="line">                <span class="punctuation">&#125;</span></span><br><span class="line">            <span class="punctuation">&#125;</span></span><br><span class="line">        <span class="punctuation">&#125;</span></span><br><span class="line">    <span class="punctuation">&#125;</span></span><br><span class="line"><span class="punctuation">&#125;</span></span><br></pre></td></tr></table></figure><h2 id="商品上架接口实现"><a href="#商品上架接口实现" class="headerlink" title="商品上架接口实现"></a>商品上架接口实现</h2><p>在SpuInfoController中添加商品上架功能的方法</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment">* 商品上架功能：https://easydoc.xyz/doc/75716633/ZUqEdvA4/DhOtFr4A</span></span><br><span class="line"><span class="comment">* <span class="doctag">@return</span></span></span><br><span class="line"><span class="comment">*/</span></span><br><span class="line"><span class="meta">@PostMapping(&quot;&#123;spuId&#125;/up&quot;)</span></span><br><span class="line"><span class="keyword">public</span> R <span class="title function_">spuUp</span><span class="params">(<span class="meta">@PathVariable(&quot;spuId&quot;)</span> Long spuId)</span>&#123;</span><br><span class="line">spuInfoService.up(spuId);</span><br><span class="line"><span class="keyword">return</span> R.ok();</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>商品上架需要在es中保存spu信息并更新spu的状态信息，由于<code>SpuInfoEntity</code>与索引的数据模型并不对应，所以我们要建立专门的vo进行数据传输</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">@Data</span></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">SkuEsModel</span> &#123;</span><br><span class="line">    <span class="keyword">private</span> Long skuId;</span><br><span class="line">    <span class="keyword">private</span> Long spuId;</span><br><span class="line">    <span class="keyword">private</span> String skuTitle;</span><br><span class="line">    <span class="keyword">private</span> BigDecimal skuPrice;</span><br><span class="line">    <span class="keyword">private</span> String skuImg;</span><br><span class="line">    <span class="keyword">private</span> Long saleCount;</span><br><span class="line">    <span class="keyword">private</span> <span class="type">boolean</span> hasStock;</span><br><span class="line">    <span class="keyword">private</span> Long hotScore;</span><br><span class="line">    <span class="keyword">private</span> Long brandId;</span><br><span class="line">    <span class="keyword">private</span> Long catalogId;</span><br><span class="line">    <span class="keyword">private</span> String brandName;</span><br><span class="line">    <span class="keyword">private</span> String brandImg;</span><br><span class="line">    <span class="keyword">private</span> String catalogName;</span><br><span class="line">    <span class="keyword">private</span> List&lt;Attrs&gt; attrs;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Data</span></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">class</span> <span class="title class_">Attrs</span>&#123;</span><br><span class="line">        <span class="keyword">private</span> Long attrId;</span><br><span class="line">        <span class="keyword">private</span> String attrName;</span><br><span class="line">        <span class="keyword">private</span> String attrValue;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p><strong>编写商品上架的接口</strong></p><p>由于每个spu对应的各个sku的规格参数相同，因此我们要将查询规格参数提前，只查询一次</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">upSpuForSearch</span><span class="params">(Long spuId)</span> &#123;</span><br><span class="line">       <span class="comment">//1、查出当前spuId对应的所有sku信息,品牌的名字</span></span><br><span class="line">       List&lt;SkuInfoEntity&gt; skuInfoEntities=skuInfoService.getSkusBySpuId(spuId);</span><br><span class="line">       <span class="comment">//TODO 4、查出当前sku的所有可以被用来检索的规格属性</span></span><br><span class="line">       List&lt;ProductAttrValueEntity&gt; productAttrValueEntities = productAttrValueService.list(<span class="keyword">new</span> <span class="title class_">QueryWrapper</span>&lt;ProductAttrValueEntity&gt;().eq(<span class="string">&quot;spu_id&quot;</span>, spuId));</span><br><span class="line">       List&lt;Long&gt; attrIds = productAttrValueEntities.stream().map(attr -&gt; &#123;</span><br><span class="line">           <span class="keyword">return</span> attr.getAttrId();</span><br><span class="line">       &#125;).collect(Collectors.toList());</span><br><span class="line">       List&lt;Long&gt; searchIds=attrService.selectSearchAttrIds(attrIds);</span><br><span class="line">       Set&lt;Long&gt; ids = <span class="keyword">new</span> <span class="title class_">HashSet</span>&lt;&gt;(searchIds);</span><br><span class="line">       List&lt;SkuEsModel.Attr&gt; searchAttrs = productAttrValueEntities.stream().filter(entity -&gt; &#123;</span><br><span class="line">           <span class="keyword">return</span> ids.contains(entity.getAttrId());</span><br><span class="line">       &#125;).map(entity -&gt; &#123;</span><br><span class="line">           SkuEsModel.<span class="type">Attr</span> <span class="variable">attr</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">SkuEsModel</span>.Attr();</span><br><span class="line">           BeanUtils.copyProperties(entity, attr);</span><br><span class="line">           <span class="keyword">return</span> attr;</span><br><span class="line">       &#125;).collect(Collectors.toList());</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">       <span class="comment">//TODO 1、发送远程调用，库存系统查询是否有库存</span></span><br><span class="line">       Map&lt;Long, Boolean&gt; stockMap = <span class="literal">null</span>;</span><br><span class="line">       <span class="keyword">try</span> &#123;</span><br><span class="line">           List&lt;Long&gt; longList = skuInfoEntities.stream().map(SkuInfoEntity::getSkuId).collect(Collectors.toList());</span><br><span class="line">           List&lt;SkuHasStockVo&gt; skuHasStocks = wareFeignService.getSkuHasStocks(longList);</span><br><span class="line">           stockMap = skuHasStocks.stream().collect(Collectors.toMap(SkuHasStockVo::getSkuId, SkuHasStockVo::getHasStock));</span><br><span class="line">       &#125;<span class="keyword">catch</span> (Exception e)&#123;</span><br><span class="line">           log.error(<span class="string">&quot;远程调用库存服务失败,原因&#123;&#125;&quot;</span>,e);</span><br><span class="line">       &#125;</span><br><span class="line"></span><br><span class="line">       <span class="comment">//2、封装每个sku的信息</span></span><br><span class="line">       Map&lt;Long, Boolean&gt; finalStockMap = stockMap;</span><br><span class="line">       List&lt;SkuEsModel&gt; skuEsModels = skuInfoEntities.stream().map(sku -&gt; &#123;</span><br><span class="line">           <span class="type">SkuEsModel</span> <span class="variable">skuEsModel</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">SkuEsModel</span>();</span><br><span class="line">           BeanUtils.copyProperties(sku, skuEsModel);</span><br><span class="line">           skuEsModel.setSkuPrice(sku.getPrice());</span><br><span class="line">           skuEsModel.setSkuImg(sku.getSkuDefaultImg());</span><br><span class="line">           <span class="comment">//TODO 2、热度评分。0</span></span><br><span class="line">           skuEsModel.setHotScore(<span class="number">0L</span>);</span><br><span class="line">           <span class="comment">//TODO 3、查询品牌和分类的名字信息</span></span><br><span class="line">           <span class="type">BrandEntity</span> <span class="variable">brandEntity</span> <span class="operator">=</span> brandService.getById(sku.getBrandId());</span><br><span class="line">           skuEsModel.setBrandName(brandEntity.getName());</span><br><span class="line">           skuEsModel.setBrandImg(brandEntity.getLogo());</span><br><span class="line">           <span class="type">CategoryEntity</span> <span class="variable">categoryEntity</span> <span class="operator">=</span> categoryService.getById(sku.getCatalogId());</span><br><span class="line">           skuEsModel.setCatalogName(categoryEntity.getName());</span><br><span class="line">           <span class="comment">//设置可搜索属性</span></span><br><span class="line">           skuEsModel.setAttrs(searchAttrs);</span><br><span class="line">           <span class="comment">//设置是否有库存</span></span><br><span class="line">           skuEsModel.setHasStock(finalStockMap==<span class="literal">null</span>?<span class="literal">false</span>:finalStockMap.get(sku.getSkuId()));</span><br><span class="line">           <span class="keyword">return</span> skuEsModel;</span><br><span class="line">       &#125;).collect(Collectors.toList());</span><br><span class="line"></span><br><span class="line">       <span class="comment">//TODO 5、将数据发给es进行保存：gulimall-search</span></span><br><span class="line">       <span class="type">R</span> <span class="variable">r</span> <span class="operator">=</span> searchFeignService.saveProductAsIndices(skuEsModels);</span><br><span class="line">       <span class="keyword">if</span> (r.getCode()==<span class="number">0</span>)&#123;</span><br><span class="line">           <span class="built_in">this</span>.baseMapper.upSpuStatus(spuId, ProductConstant.ProductStatusEnum.SPU_UP.getCode());</span><br><span class="line">       &#125;<span class="keyword">else</span> &#123;</span><br><span class="line">           log.error(<span class="string">&quot;商品远程es保存失败&quot;</span>);</span><br><span class="line">       &#125;</span><br><span class="line">   &#125;</span><br></pre></td></tr></table></figure><h1 id="商城系统首页"><a href="#商城系统首页" class="headerlink" title="商城系统首页"></a>商城系统首页</h1><h2 id="导入依赖"><a href="#导入依赖" class="headerlink" title="导入依赖"></a>导入依赖</h2><p>前端使用了thymeleaf开发，因此要导入该依赖,并且为了改动页面实时生效导入devtools</p><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>org.springframework.boot<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>spring-boot-devtools<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">optional</span>&gt;</span>true<span class="tag">&lt;/<span class="name">optional</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>org.springframework.boot<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>spring-boot-starter-thymeleaf<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br></pre></td></tr></table></figure><h2 id="渲染一级分类菜单"><a href="#渲染一级分类菜单" class="headerlink" title="渲染一级分类菜单"></a>渲染一级分类菜单</h2><p>由于访问首页时就要加载一级目录,所以我们需要在加载首页时获取该数据</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">@GetMapping(&#123;&quot;/&quot;, &quot;index.html&quot;&#125;)</span></span><br><span class="line"><span class="keyword">public</span> String <span class="title function_">indexPage</span><span class="params">(Model model)</span> &#123;</span><br><span class="line">    <span class="comment">//获取所有的一级分类</span></span><br><span class="line">    List&lt;CategoryEntity&gt; catagories = categoryService.getLevel1Catagories();</span><br><span class="line">    model.addAttribute(<span class="string">&quot;catagories&quot;</span>, catagories);</span><br><span class="line">    <span class="keyword">return</span> <span class="string">&quot;index&quot;</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>页面遍历菜单数据</p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">li</span> <span class="attr">th:each</span>=<span class="string">&quot;catagory:$&#123;catagories&#125;&quot;</span> &gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">a</span> <span class="attr">href</span>=<span class="string">&quot;#&quot;</span> <span class="attr">class</span>=<span class="string">&quot;header_main_left_a&quot;</span> <span class="attr">ctg-data</span>=<span class="string">&quot;3&quot;</span> <span class="attr">th:attr</span>=<span class="string">&quot;ctg-data=$&#123;catagory.catId&#125;&quot;</span>&gt;</span><span class="tag">&lt;<span class="name">b</span> <span class="attr">th:text</span>=<span class="string">&quot;$&#123;catagory.name&#125;&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">b</span>&gt;</span><span class="tag">&lt;/<span class="name">a</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">li</span>&gt;</span></span><br></pre></td></tr></table></figure><p><img src="https://cdn.jsdelivr.net/gh/zsxfa/CDN/img/md/2022/04/01/1648807749.png" alt="desc"></p><h2 id="渲染二级三级分类菜单"><a href="#渲染二级三级分类菜单" class="headerlink" title="渲染二级三级分类菜单"></a>渲染二级三级分类菜单</h2><p>首先创建一个VO类表示二级和三级菜单</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">@Data</span></span><br><span class="line"><span class="meta">@AllArgsConstructor</span></span><br><span class="line"><span class="meta">@NoArgsConstructor</span></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">Catelog2Vo</span> &#123;</span><br><span class="line">    <span class="comment">//父分类id</span></span><br><span class="line">    <span class="keyword">private</span> String catalog1Id;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">private</span> String id;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">private</span> String name;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">private</span> List&lt;Catelog3Vo&gt; catalog3List;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Data</span></span><br><span class="line">    <span class="meta">@AllArgsConstructor</span></span><br><span class="line">    <span class="meta">@NoArgsConstructor</span></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">class</span> <span class="title class_">Catelog3Vo</span>&#123;</span><br><span class="line">        <span class="keyword">private</span> String catalog2Id;</span><br><span class="line">        <span class="keyword">private</span> String id;</span><br><span class="line">        <span class="keyword">private</span> String name;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>注意其中的catalog1Id属性和catalog2Id属性</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">@GetMapping(&quot;index/catelog.json&quot;)</span></span><br><span class="line"><span class="meta">@ResponseBodye</span></span><br><span class="line"><span class="keyword">public</span> Map&lt;String, List&lt;Catelog2Vo&gt;&gt; <span class="title function_">getCategoryJson</span><span class="params">()</span> &#123;</span><br><span class="line">    <span class="keyword">return</span> categoryService.getCategoryJson();</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">@Data</span></span><br><span class="line"><span class="meta">@AllArgsConstructor</span></span><br><span class="line"><span class="meta">@NoArgsConstructor</span></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">Catelog2Vo</span> &#123;</span><br><span class="line">    <span class="comment">//父分类id</span></span><br><span class="line">    <span class="keyword">private</span> String catelog1Id;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">private</span> String id;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">private</span> String name;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">private</span> List&lt;Catelog3Vo&gt; catelog3List;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Data</span></span><br><span class="line">    <span class="meta">@AllArgsConstructor</span></span><br><span class="line">    <span class="meta">@NoArgsConstructor</span></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">class</span> <span class="title class_">Catelog3Vo</span>&#123;</span><br><span class="line">        <span class="keyword">private</span> String catelog2Id;</span><br><span class="line">        <span class="keyword">private</span> String id;</span><br><span class="line">        <span class="keyword">private</span> String name;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>修改resources/static/index下的catalogLoader.js文件中的访问路径为<code>index/catelog.json</code></p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">@Override</span></span><br><span class="line">    <span class="keyword">public</span> Map&lt;String, List&lt;Catelog2Vo&gt;&gt; <span class="title function_">getCategoryJson</span><span class="params">()</span> &#123;</span><br><span class="line">        <span class="comment">//1.查出所有1级分类</span></span><br><span class="line">        List&lt;CategoryEntity&gt; level1Categories = getLevel1Catagories();</span><br><span class="line">        <span class="comment">//2.封装数据</span></span><br><span class="line">        Map&lt;String, List&lt;Catelog2Vo&gt;&gt; parent_cid = level1Categories.stream().collect(Collectors.toMap(k -&gt; k.getCatId().toString(), v -&gt; &#123;</span><br><span class="line">            <span class="comment">//1.每一个1级分类,查到这个一级分类的二级分类</span></span><br><span class="line">            List&lt;CategoryEntity&gt; categoryEntities = baseMapper.selectList(<span class="keyword">new</span> <span class="title class_">QueryWrapper</span>&lt;CategoryEntity&gt;().eq(<span class="string">&quot;parent_cid&quot;</span>, v.getCatId()));</span><br><span class="line">            <span class="comment">//2.封装上面的结果</span></span><br><span class="line">            List&lt;Catelog2Vo&gt; catelog2Vos = <span class="literal">null</span>;</span><br><span class="line">            <span class="keyword">if</span> (categoryEntities != <span class="literal">null</span>) &#123;</span><br><span class="line">                catelog2Vos = categoryEntities.stream().map(l2 -&gt; &#123;</span><br><span class="line">                    <span class="type">Catelog2Vo</span> <span class="variable">catelog2Vo</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">Catelog2Vo</span>(v.getCatId().toString(), l2.getCatId().toString(), l2.getName(), <span class="literal">null</span>);</span><br><span class="line">                    <span class="comment">//找当前二级分类的三级分类封装成vo</span></span><br><span class="line">                    List&lt;CategoryEntity&gt; level3Catelog = baseMapper.selectList(<span class="keyword">new</span> <span class="title class_">QueryWrapper</span>&lt;CategoryEntity&gt;().eq(<span class="string">&quot;parent_cid&quot;</span>, l2.getCatId()));</span><br><span class="line">                    <span class="keyword">if</span> (level3Catelog != <span class="literal">null</span>) &#123;</span><br><span class="line">                        List&lt;Catelog2Vo.Catelog3Vo&gt; collect = level3Catelog.stream().map(l3 -&gt; &#123;</span><br><span class="line">                            <span class="comment">//封装成指定格式</span></span><br><span class="line">                            Catelog2Vo.<span class="type">Catelog3Vo</span> <span class="variable">catelog3Vo</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">Catelog2Vo</span>.Catelog3Vo(l2.getCatId().toString(), l3.getCatId().toString(), l3.getName());</span><br><span class="line">                            <span class="keyword">return</span> catelog3Vo;</span><br><span class="line">                        &#125;).collect(Collectors.toList());</span><br><span class="line">                        catelog2Vo.setCatalog3List(collect);</span><br><span class="line">                    &#125;</span><br><span class="line">                    <span class="keyword">return</span> catelog2Vo;</span><br><span class="line">                &#125;).collect(Collectors.toList());</span><br><span class="line">            &#125;</span><br><span class="line">            <span class="keyword">return</span> catelog2Vos;</span><br><span class="line">        &#125;));</span><br><span class="line">        <span class="keyword">return</span> parent_cid;</span><br><span class="line">    &#125;</span><br></pre></td></tr></table></figure><p><img src="https://cdn.jsdelivr.net/gh/zsxfa/CDN/img/md/2022/04/01/1648817806.png" alt="desc"></p><h1 id="搭建域名访问环境"><a href="#搭建域名访问环境" class="headerlink" title="搭建域名访问环境"></a>搭建域名访问环境</h1><h2 id="1-正向代理与反向代理"><a href="#1-正向代理与反向代理" class="headerlink" title="1. 正向代理与反向代理"></a>1. 正向代理与反向代理</h2><p><img src="https://cdn.jsdelivr.net/gh/zsxfa/CDN/img/md/2022/04/02/1648863473.png" alt="desc"></p><p>nginx就是通过反向代理实现负载均衡</p><h2 id="2-Nginx配置文件"><a href="#2-Nginx配置文件" class="headerlink" title="2. Nginx配置文件"></a>2. Nginx配置文件</h2><p><img src="https://cdn.jsdelivr.net/gh/zsxfa/CDN/img/md/2022/04/02/1648863801.png" alt="desc"></p><p>nginx.conf</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br></pre></td><td class="code"><pre><span class="line">user  nginx;</span><br><span class="line">worker_processes  1;</span><br><span class="line"></span><br><span class="line">error_log  /var/log/nginx/error.log warn;</span><br><span class="line">pid        /var/run/nginx.pid;</span><br><span class="line"><span class="meta prompt_"></span></span><br><span class="line"><span class="meta prompt_">#</span><span class="language-bash">event块</span></span><br><span class="line">events &#123;</span><br><span class="line">    worker_connections  1024;</span><br><span class="line">&#125;</span><br><span class="line"><span class="meta prompt_"></span></span><br><span class="line"><span class="meta prompt_">#</span><span class="language-bash">http块</span></span><br><span class="line">http &#123;</span><br><span class="line">    include       /etc/nginx/mime.types;</span><br><span class="line">    default_type  application/octet-stream;</span><br><span class="line"></span><br><span class="line">    log_format  main  &#x27;$remote_addr - $remote_user [$time_local] &quot;$request&quot; &#x27;</span><br><span class="line">                      &#x27;$status $body_bytes_sent &quot;$http_referer&quot; &#x27;</span><br><span class="line">                      &#x27;&quot;$http_user_agent&quot; &quot;$http_x_forwarded_for&quot;&#x27;;</span><br><span class="line"></span><br><span class="line">    access_log  /var/log/nginx/access.log  main;</span><br><span class="line"></span><br><span class="line">    sendfile        on;</span><br><span class="line">    #tcp_nopush     on;</span><br><span class="line"></span><br><span class="line">    keepalive_timeout  65;</span><br><span class="line"></span><br><span class="line">    #gzip  on;    </span><br><span class="line"></span><br><span class="line">    include /etc/nginx/conf.d/*.conf;</span><br><span class="line">&#125; </span><br></pre></td></tr></table></figure><p>/etc/nginx/conf.d/default.conf</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta prompt_"> #</span><span class="language-bash">/etc/nginx/conf.d/default.conf 的server块</span></span><br><span class="line">server &#123;</span><br><span class="line">    listen       80;</span><br><span class="line">    server_name  localhost;</span><br><span class="line"></span><br><span class="line">    #charset koi8-r;</span><br><span class="line">    #access_log  /var/log/nginx/log/host.access.log  main;</span><br><span class="line"></span><br><span class="line">    location / &#123;</span><br><span class="line">        root   /usr/share/nginx/html;</span><br><span class="line">        index  index.html index.htm;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    #error_page  404              /404.html;</span><br><span class="line"></span><br><span class="line">    # redirect server error pages to the static page /50x.html</span><br><span class="line">    #</span><br><span class="line">    error_page   500 502 503 504  /50x.html;</span><br><span class="line">    location = /50x.html &#123;</span><br><span class="line">        root   /usr/share/nginx/html;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    # proxy the PHP scripts to Apache listening on 127.0.0.1:80</span><br><span class="line">    #</span><br><span class="line">    #location ~ \.php$ &#123;</span><br><span class="line">    #    proxy_pass   http://127.0.0.1;</span><br><span class="line">    #&#125;</span><br><span class="line"></span><br><span class="line">    # pass the PHP scripts to FastCGI server listening on 127.0.0.1:9000</span><br><span class="line">    #</span><br><span class="line">    #location ~ \.php$ &#123;</span><br><span class="line">    #    root           html;</span><br><span class="line">    #    fastcgi_pass   127.0.0.1:9000;</span><br><span class="line">    #    fastcgi_index  index.php;</span><br><span class="line">    #    fastcgi_param  SCRIPT_FILENAME  /scripts$fastcgi_script_name;</span><br><span class="line">    #    include        fastcgi_params;</span><br><span class="line">    #&#125;</span><br><span class="line"></span><br><span class="line">    # deny access to .htaccess files, if Apache&#x27;s document root</span><br><span class="line">    # concurs with nginx&#x27;s one</span><br><span class="line">    #</span><br><span class="line">    #location ~ /\.ht &#123;</span><br><span class="line">    #    deny  all;</span><br><span class="line">    #&#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="3-Nginx-Windows搭建域名访问环境"><a href="#3-Nginx-Windows搭建域名访问环境" class="headerlink" title="3. Nginx+Windows搭建域名访问环境"></a>3. Nginx+Windows搭建域名访问环境</h2><p><img src="https://cdn.jsdelivr.net/gh/zsxfa/CDN/img/md/2022/04/02/1648864295.png" alt="desc"></p><ol><li><p>修改windows hosts文件改变本地域名映射，将<code>gulimall.com</code>映射到虚拟机ip</p></li><li><p>修改nginx的根配置文件nginx.conf，将<code>upstream</code>映射到我们的网关服务</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">upstream gulimall&#123;</span><br><span class="line">server 192.168.56.1:88;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></li><li><p>修改nginx的server块配置文件<code>gulimall.conf</code>，将以<code>/</code>开头的请求转发至我们配好的<code>gulimall</code>的<code>upstream</code>,由于nginx的转发会丢失<code>host</code>头，所以我们添加头信息</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">location / &#123;</span><br><span class="line">proxy_pass http://gulimall;</span><br><span class="line">proxy_set_header Host $host;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></li><li><p>配置网关服务，将域名为<code>.gulimall.com</code>转发至商品服务</p><figure class="highlight yaml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="bullet">-</span> <span class="attr">id:</span> <span class="string">gulimall_host</span></span><br><span class="line">  <span class="attr">uri:</span> <span class="string">lb://gulimall-product</span></span><br><span class="line">  <span class="attr">predicates:</span></span><br><span class="line">    <span class="bullet">-</span> <span class="string">Host=**.gulimall.com</span></span><br></pre></td></tr></table></figure></li></ol><h1 id="性能压测与优化"><a href="#性能压测与优化" class="headerlink" title="性能压测与优化"></a>性能压测与优化</h1><h2 id="1-压测工具与环境"><a href="#1-压测工具与环境" class="headerlink" title="1. 压测工具与环境"></a>1. 压测工具与环境</h2><ul><li><p>jvisualvm</p><p>用于检测java应用资源占用和垃圾回收的情况，cmd输入jvisualvm即可打开</p></li><li><p>Jmeter <a href="https://jmeter.apache.org/download_jmeter.cgi">https://jmeter.apache.org/download_jmeter.cgi</a></p><p>下载后bin目录<code>jmeter.bat</code>打开</p></li><li><p>测试环境</p><p><strong>系统</strong>win10 Pro N for Workstations，<strong>CPU</strong> AMD Ryzen 7 4800，<strong>内存</strong>16G</p></li></ul><p>注：简单业务仅返回一个字符串</p><table><thead><tr><th align="center">压测内容</th><th align="center">压测线程数</th><th align="center">吞吐量/s</th><th align="center">90%响应时间</th><th align="center">99%响应时间</th></tr></thead><tbody><tr><td align="center"><strong>Nginx</strong></td><td align="center">50</td><td align="center">6355</td><td align="center">4</td><td align="center">235</td></tr><tr><td align="center"><strong>Gateway</strong></td><td align="center">50</td><td align="center">14355</td><td align="center">5</td><td align="center">23</td></tr><tr><td align="center"><strong>简单服务</strong></td><td align="center">50</td><td align="center">27373</td><td align="center">3</td><td align="center">5</td></tr><tr><td align="center"><strong>首页一级菜单渲染</strong></td><td align="center">50</td><td align="center">252(db,thymeleaf)</td><td align="center">241</td><td align="center">316</td></tr><tr><td align="center"><strong>首页菜单渲染(开缓存)</strong></td><td align="center">50</td><td align="center">640</td><td align="center">100</td><td align="center">179</td></tr><tr><td align="center"><strong>首页菜单渲染(开缓存、优化数据库、关日志)</strong></td><td align="center">50</td><td align="center">1204</td><td align="center">50</td><td align="center">85</td></tr><tr><td align="center"><strong>三级分类数据获取</strong></td><td align="center">50</td><td align="center">5(db)</td><td align="center">10132</td><td align="center">10275</td></tr><tr><td align="center"><strong>三级分类(加索引)</strong></td><td align="center">50</td><td align="center">15(加索引)</td><td align="center">3715</td><td align="center">3871</td></tr><tr><td align="center"><strong>三级分类(优化业务)</strong></td><td align="center">50</td><td align="center">285</td><td align="center">205</td><td align="center">313</td></tr><tr><td align="center"><strong>三级分类(redis缓存)</strong></td><td align="center">50</td><td align="center">658</td><td align="center">97</td><td align="center">121</td></tr><tr><td align="center"><strong>首页全量数据获取</strong></td><td align="center">50</td><td align="center">2.5(静态资源)</td><td align="center">34096</td><td align="center">35168</td></tr><tr><td align="center"><strong>首页全量数据获取(动静分类)</strong></td><td align="center">50</td><td align="center">7</td><td align="center">3977</td><td align="center">5215</td></tr><tr><td align="center">Gateway+简单服务</td><td align="center">50</td><td align="center">6200</td><td align="center">13</td><td align="center">34</td></tr><tr><td align="center">全链路(Nginx+GateWay+简单服务)</td><td align="center">50</td><td align="center">1539</td><td align="center">46</td><td align="center">66</td></tr></tbody></table><ul><li>中间件越多，性能损失越大，大多都损失在网络交互了；</li><li>业务：<ul><li>Db（MySQL 优化）</li><li>模板的渲染速度（缓存）</li><li>静态资源</li></ul></li></ul><h2 id="2-首页菜单渲染优化数据库"><a href="#2-首页菜单渲染优化数据库" class="headerlink" title="2. 首页菜单渲染优化数据库"></a>2. 首页菜单渲染优化数据库</h2><p>优化数据库前</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">public</span> List&lt;CategoryEntity&gt; <span class="title function_">getLevel1Catagories</span><span class="params">()</span> &#123;</span><br><span class="line">       <span class="type">long</span> <span class="variable">start</span> <span class="operator">=</span> System.currentTimeMillis();</span><br><span class="line">       List&lt;CategoryEntity&gt; parent_cid = <span class="built_in">this</span>.list(<span class="keyword">new</span> <span class="title class_">QueryWrapper</span>&lt;CategoryEntity&gt;().eq(<span class="string">&quot;parent_cid&quot;</span>, <span class="number">0</span>));</span><br><span class="line">       System.out.println(<span class="string">&quot;查询一级菜单时间:&quot;</span>+(System.currentTimeMillis()-start));</span><br><span class="line">       <span class="keyword">return</span> parent_cid;</span><br><span class="line">   &#125;</span><br></pre></td></tr></table></figure><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">查询一级菜单时间:4</span><br><span class="line">查询一级菜单时间:3</span><br></pre></td></tr></table></figure><p>给<code>parent_cid</code>添加索引后</p><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">查询一级菜单时间:2</span><br><span class="line">查询一级菜单时间:3</span><br></pre></td></tr></table></figure><p>但是整体业务和吞吐量并没有优化，可能由于使用了远程数据库，通信时间较长？</p><h2 id="3-三级分类-优化业务"><a href="#3-三级分类-优化业务" class="headerlink" title="3. 三级分类(优化业务)"></a>3. 三级分类(优化业务)</h2><p><strong>优化前</strong></p><p>对二级菜单的每次遍历都需要查询数据库，浪费大量资源</p><p><strong>优化后</strong></p><p>仅查询一次数据库，剩下的数据通过遍历得到并封装</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">@Override</span></span><br><span class="line"><span class="keyword">public</span> Map&lt;String, List&lt;Catelog2Vo&gt;&gt; <span class="title function_">getCategoryJson</span><span class="params">()</span> &#123;</span><br><span class="line">    List&lt;CategoryEntity&gt; selectList = baseMapper.selectList(<span class="literal">null</span>);</span><br><span class="line"></span><br><span class="line">    <span class="comment">//1.查出所有1级分类</span></span><br><span class="line">    List&lt;CategoryEntity&gt; level1Categories = getParent_cid(selectList, <span class="number">0L</span>);</span><br><span class="line">    <span class="comment">//2.封装数据</span></span><br><span class="line">    Map&lt;String, List&lt;Catelog2Vo&gt;&gt; parent_cid = level1Categories.stream().collect(Collectors.toMap(k -&gt; k.getCatId().toString(), v -&gt; &#123;</span><br><span class="line">        <span class="comment">//1.每一个1级分类,查到这个一级分类的二级分类</span></span><br><span class="line">        List&lt;CategoryEntity&gt; categoryEntities = getParent_cid(selectList,v.getCatId());</span><br><span class="line">        <span class="comment">//2.封装上面的结果</span></span><br><span class="line">        List&lt;Catelog2Vo&gt; catelog2Vos = <span class="literal">null</span>;</span><br><span class="line">        <span class="keyword">if</span> (categoryEntities != <span class="literal">null</span>) &#123;</span><br><span class="line">            catelog2Vos = categoryEntities.stream().map(l2 -&gt; &#123;</span><br><span class="line">                <span class="type">Catelog2Vo</span> <span class="variable">catelog2Vo</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">Catelog2Vo</span>(v.getCatId().toString(), l2.getCatId().toString(), l2.getName(), <span class="literal">null</span>);</span><br><span class="line">                <span class="comment">//找当前二级分类的三级分类封装成vo</span></span><br><span class="line">                List&lt;CategoryEntity&gt; level3Catelog = getParent_cid(selectList,l2.getCatId());</span><br><span class="line">                <span class="keyword">if</span> (level3Catelog != <span class="literal">null</span>) &#123;</span><br><span class="line">                    List&lt;Catelog2Vo.Catelog3Vo&gt; collect = level3Catelog.stream().map(l3 -&gt; &#123;</span><br><span class="line">                        <span class="comment">//封装成指定格式</span></span><br><span class="line">                        Catelog2Vo.<span class="type">Catelog3Vo</span> <span class="variable">catelog3Vo</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">Catelog2Vo</span>.Catelog3Vo(l2.getCatId().toString(), l3.getCatId().toString(), l3.getName());</span><br><span class="line">                        <span class="keyword">return</span> catelog3Vo;</span><br><span class="line">                    &#125;).collect(Collectors.toList());</span><br><span class="line">                    catelog2Vo.setCatalog3List(collect);</span><br><span class="line">                &#125;</span><br><span class="line">                <span class="keyword">return</span> catelog2Vo;</span><br><span class="line">            &#125;).collect(Collectors.toList());</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">return</span> catelog2Vos;</span><br><span class="line">    &#125;));</span><br><span class="line">    <span class="keyword">return</span> parent_cid;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">private</span> List&lt;CategoryEntity&gt; <span class="title function_">getParent_cid</span><span class="params">(List&lt;CategoryEntity&gt; selectList, Long parent_cid)</span> &#123;</span><br><span class="line">    List&lt;CategoryEntity&gt; collect = selectList.stream().filter(item -&gt; item.getParentCid() == parent_cid).collect(Collectors.toList());</span><br><span class="line">    <span class="keyword">return</span> collect;</span><br><span class="line">    <span class="comment">//        return baseMapper.selectList(new QueryWrapper&lt;CategoryEntity&gt;().eq(&quot;parent_cid&quot;, v.getCatId()));</span></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="4-Nginx动静分类"><a href="#4-Nginx动静分类" class="headerlink" title="4. Nginx动静分类"></a>4. Nginx动静分类</h2><p>由于动态资源和静态资源目前都处于服务端，所以为了减轻服务器压力，我们将js、css、img等静态资源放置在Nginx端，以减轻服务器压力</p><p><img src="https://cdn.jsdelivr.net/gh/zsxfa/CDN/img/md/2022/04/02/1648888974.png" alt="desc"></p><ol><li><p>在nginx的html文件夹创建staic文件夹，并将index/css等静态资源全部上传到该文件夹中</p></li><li><p>修改index.html的静态资源路径，使其全部带有static前缀<code>src=&quot;/static/index/img/img_09.png&quot;</code></p></li><li><p>修改nginx的配置文件<code>/mydata/nginx/conf/conf.d/gulimall.conf</code></p><p>如果遇到有<code>/static</code>为前缀的请求，转发至html文件夹</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">location /static &#123;</span><br><span class="line">root   /usr/share/nginx/html;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">location / &#123;</span><br><span class="line">proxy_pass http://gulimall;</span><br><span class="line">proxy_set_header Host $host;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></li></ol><h1 id="缓存"><a href="#缓存" class="headerlink" title="缓存"></a>缓存</h1><h2 id="1-本地缓存"><a href="#1-本地缓存" class="headerlink" title="1. 本地缓存"></a>1. 本地缓存</h2><h3 id="1-使用hashmap本地缓存"><a href="#1-使用hashmap本地缓存" class="headerlink" title="1)  使用hashmap本地缓存"></a>1)  使用hashmap本地缓存</h3><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//测试本地缓存，通过hashmap</span></span><br><span class="line"><span class="keyword">private</span> Map&lt;String,Object&gt; cache=<span class="keyword">new</span> <span class="title class_">HashMap</span>&lt;&gt;();</span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> Map&lt;String, List&lt;Catalog2Vo&gt;&gt; <span class="title function_">getCategoryMap</span><span class="params">()</span> &#123;</span><br><span class="line">    Map&lt;String, List&lt;Catalog2Vo&gt;&gt; catalogMap = (Map&lt;String, List&lt;Catalog2Vo&gt;&gt;) cache.get(<span class="string">&quot;catalogMap&quot;</span>);</span><br><span class="line">    <span class="comment">//如果没有缓存，则从数据库中查询并放入缓存中</span></span><br><span class="line">    <span class="keyword">if</span> (catalogMap == <span class="literal">null</span>) &#123;</span><br><span class="line">        catalogMap = getCategoriesDb();</span><br><span class="line">        cache.put(<span class="string">&quot;catalogMap&quot;</span>,catalogMap);</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> catalogMap;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="2-整合redis进行测试"><a href="#2-整合redis进行测试" class="headerlink" title="2) 整合redis进行测试"></a>2) 整合redis进行测试</h3><p>导入依赖</p><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>org.springframework.boot<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>spring-boot-starter-data-redis<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br></pre></td></tr></table></figure><p>配置redis主机地址</p><figure class="highlight yaml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="attr">spring:</span></span><br><span class="line">  <span class="attr">redis:</span></span><br><span class="line">    <span class="attr">host:</span> <span class="comment">#</span></span><br><span class="line">    <span class="attr">port:</span> <span class="number">6379</span></span><br></pre></td></tr></table></figure><p>使用springboot自动配置的RedisTemplate优化菜单获取业务</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line">ValueOperations&lt;String, String&gt; ops = stringRedisTemplate.opsForValue();</span><br><span class="line"><span class="type">String</span> <span class="variable">catalogJson</span> <span class="operator">=</span> ops.get(<span class="string">&quot;catalogJson&quot;</span>);</span><br><span class="line"><span class="keyword">if</span> (catalogJson == <span class="literal">null</span>) &#123;</span><br><span class="line">    Map&lt;String, List&lt;Catalog2Vo&gt;&gt; categoriesDb = getCategoriesDb();</span><br><span class="line">    <span class="type">String</span> <span class="variable">toJSONString</span> <span class="operator">=</span> JSON.toJSONString(categoriesDb);</span><br><span class="line">    ops.set(<span class="string">&quot;catalogJson&quot;</span>,toJSONString);</span><br><span class="line">    <span class="keyword">return</span> categoriesDb;</span><br><span class="line">&#125;</span><br><span class="line">Map&lt;String, List&lt;Catalog2Vo&gt;&gt; listMap = JSON.parseObject(catalogJson, <span class="keyword">new</span> <span class="title class_">TypeReference</span>&lt;Map&lt;String, List&lt;Catalog2Vo&gt;&gt;&gt;() &#123;&#125;);</span><br><span class="line"><span class="keyword">return</span> listMap;</span><br></pre></td></tr></table></figure><p><strong>内存泄漏及解决办法</strong></p><p>当进行压力测试时后期后出现堆外内存溢出OutOfDirectMemoryError</p><p>产生原因：</p><p>1)、springboot2.0以后默认使用lettuce操作redis的客户端，它使用通信</p><p>2)、lettuce的bug导致netty堆外内存溢出</p><p>解决方案：由于是lettuce的bug造成，不能直接使用-Dio.netty.maxDirectMemory去调大虚拟机堆外内存</p><p>1)、升级lettuce客户端。   2）、切换使用jedis</p><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>org.springframework.boot<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>spring-boot-starter-data-redis<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">exclusions</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">exclusion</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>io.lettuce<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>lettuce-core<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">exclusion</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">exclusions</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>redis.clients<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>jedis<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br></pre></td></tr></table></figure><h3 id="3-高并发下缓存失效问题"><a href="#3-高并发下缓存失效问题" class="headerlink" title="3) 高并发下缓存失效问题"></a>3) 高并发下缓存失效问题</h3><p><strong>缓存穿透</strong></p><p>指查询一个一定不存在的数据，由于缓存是不命中，将去查询数据库，但是数据库也无此记录，我们没有将这次查询的null写入缓存，这将导致这个不存在的数据每次请求都要到存储层去查询，失去了缓存的意义</p><p>风险：<br>利用不存在的数据进行攻击，数据库瞬时压力增大，最终导致崩溃</p><p>解决：<br>null结果缓存，并加入短暂过期时间</p><p><strong>缓存雪崩</strong></p><p>缓存雪崩是指在我们设置缓存时key采用了相同的过期时间，导致缓存在某一时刻同时失效，请求全部转发到DB，DB瞬时<br>压力过重雪崩。</p><p>解决：<br>原有的失效时间基础上增加一个随机值，比如1-5分钟随机，这样每一个缓存的过期时间的重复率就会降低，就很难引发集体失效的事件。</p><p><strong>缓存击穿</strong></p><ul><li><p>对于一些设置了过期时间的key，如果这些key可能会在某些时间点被超高并发地访问，是一种非常“热点”的数据。</p></li><li><p>如果这个key在大量请求同时进来前正好失效，那么所有对这个key的数据查询都落到db，我们称为缓存击穿。</p></li></ul><p>解决：<br>加锁。大量并发只让一个去查，其他人等待，查到以后释放锁，其他人获取到锁，先查缓存，就会有数据，不用去db</p><h3 id="4-加锁解决缓存击穿问题"><a href="#4-加锁解决缓存击穿问题" class="headerlink" title="4) 加锁解决缓存击穿问题"></a>4) 加锁解决缓存击穿问题</h3><p>将查询db的方法加锁，这样在同一时间只有一个方法能查询数据库，就能解决缓存击穿的问题了</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">@Override</span></span><br><span class="line"><span class="keyword">public</span> Map&lt;String, List&lt;Catelog2Vo&gt;&gt; <span class="title function_">getCategoryJson</span><span class="params">()</span> &#123;</span><br><span class="line">    <span class="comment">//1.加入缓存逻辑，缓存中存的数据是json字符串</span></span><br><span class="line">    <span class="comment">//JSON跨语言，跨平台兼容</span></span><br><span class="line">    <span class="type">String</span> <span class="variable">catelogJson</span> <span class="operator">=</span> redisTemplate.opsForValue().get(<span class="string">&quot;catelogJson&quot;</span>);</span><br><span class="line">    <span class="keyword">if</span> (catelogJson == <span class="literal">null</span>) &#123;</span><br><span class="line">        <span class="comment">//2.缓存中没有，查询数据库</span></span><br><span class="line">        System.out.println(<span class="string">&quot;缓存没有命中..进入getCategoryJsonFromDB方法&quot;</span>);</span><br><span class="line">        Map&lt;String, List&lt;Catelog2Vo&gt;&gt; categoriesDb = getCategoryJsonFromDB();</span><br><span class="line">        <span class="comment">//3.查到的数据再放入缓存，将对象转为json放在缓存中</span></span><br><span class="line">        <span class="type">String</span> <span class="variable">toJSONString</span> <span class="operator">=</span> JSON.toJSONString(categoriesDb);</span><br><span class="line">        redisTemplate.opsForValue().set(<span class="string">&quot;catelogJson&quot;</span>,toJSONString);</span><br><span class="line">        <span class="keyword">return</span> categoriesDb;</span><br><span class="line">    &#125;</span><br><span class="line">    System.out.println(<span class="string">&quot;缓存命中....&quot;</span>);</span><br><span class="line">    Map&lt;String, List&lt;Catelog2Vo&gt;&gt; listMap = JSON.parseObject(catelogJson, <span class="keyword">new</span> <span class="title class_">TypeReference</span>&lt;Map&lt;String, List&lt;Catelog2Vo&gt;&gt;&gt;() &#123;&#125;);</span><br><span class="line">    <span class="keyword">return</span> listMap;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> Map&lt;String, List&lt;Catelog2Vo&gt;&gt; <span class="title function_">getCategoryJsonFromDB</span><span class="params">()</span> &#123;</span><br><span class="line">    <span class="keyword">synchronized</span> (<span class="built_in">this</span>)&#123;</span><br><span class="line">        <span class="type">String</span> <span class="variable">catelogJson</span> <span class="operator">=</span> redisTemplate.opsForValue().get(<span class="string">&quot;catelogJson&quot;</span>);</span><br><span class="line">        <span class="keyword">if</span> (!StringUtils.isEmpty(catelogJson)) &#123;</span><br><span class="line">            Map&lt;String, List&lt;Catelog2Vo&gt;&gt; listMap = JSON.parseObject(catelogJson, <span class="keyword">new</span> <span class="title class_">TypeReference</span>&lt;Map&lt;String, List&lt;Catelog2Vo&gt;&gt;&gt;() &#123;&#125;);</span><br><span class="line">            <span class="keyword">return</span> listMap;</span><br><span class="line">        &#125;</span><br><span class="line">        System.out.println(<span class="string">&quot;查询数据库........&quot;</span>);</span><br><span class="line">        ......</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="5-锁时序问题"><a href="#5-锁时序问题" class="headerlink" title="5)  锁时序问题"></a>5)  锁时序问题</h3><p>在上述方法中，我们将业务逻辑中的<code>确认缓存没有</code>和<code>查数据库</code>放到了锁里，但是最终控制台却打印了两次查询了数据库。这是因为在将结果放入缓存的这段时间里，有其他线程确认缓存没有，又再次查询了数据库，因此我们要将<code>结果放入缓存</code>也进行加锁</p><p>优化代码逻辑后</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">public</span> Map&lt;String, List&lt;Catelog2Vo&gt;&gt; <span class="title function_">getCategoryJsonFromDB</span><span class="params">()</span> &#123;</span><br><span class="line">    <span class="keyword">synchronized</span> (<span class="built_in">this</span>)&#123;</span><br><span class="line">        <span class="type">String</span> <span class="variable">catelogJson</span> <span class="operator">=</span> redisTemplate.opsForValue().get(<span class="string">&quot;catelogJson&quot;</span>);</span><br><span class="line">        <span class="keyword">if</span> (!StringUtils.isEmpty(catelogJson)) &#123;</span><br><span class="line">            Map&lt;String, List&lt;Catelog2Vo&gt;&gt; listMap = JSON.parseObject(catelogJson, <span class="keyword">new</span> <span class="title class_">TypeReference</span>&lt;Map&lt;String, List&lt;Catelog2Vo&gt;&gt;&gt;() &#123;&#125;);</span><br><span class="line">            <span class="keyword">return</span> listMap;</span><br><span class="line">        &#125;</span><br><span class="line">        System.out.println(<span class="string">&quot;查询数据库........&quot;</span>);</span><br><span class="line">        ......</span><br><span class="line">        <span class="comment">//查到的数据再放入缓存，将对象转为json放在缓存中</span></span><br><span class="line">        <span class="type">String</span> <span class="variable">toJSONString</span> <span class="operator">=</span> JSON.toJSONString(parent_cid);</span><br><span class="line">        redisTemplate.opsForValue().set(<span class="string">&quot;catelogJson&quot;</span>,toJSONString);</span><br><span class="line">        <span class="keyword">return</span> parent_cid;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>优化后多线程访问时仅查询一次数据库</p><h2 id="2-分布式缓存"><a href="#2-分布式缓存" class="headerlink" title="2. 分布式缓存"></a>2. 分布式缓存</h2><h3 id="1-本地缓存面临问题"><a href="#1-本地缓存面临问题" class="headerlink" title="1) 本地缓存面临问题"></a>1) 本地缓存面临问题</h3><p>当有多个服务存在时，每个服务的缓存仅能够为本服务使用，这样每个服务都要查询一次数据库，并且当数据更新时只会更新单个服务的缓存数据，就会造成数据不一致的问题</p><p><img src="https://cdn.jsdelivr.net/gh/zsxfa/CDN/img/md/2022/04/03/1648980967.png" alt="desc"></p><p>所有的服务都到同一个redis进行获取数据，就可以避免这个问题</p><p><img src="https://cdn.jsdelivr.net/gh/zsxfa/CDN/img/md/2022/04/03/1648980997.png" alt="desc"></p><h3 id="2-分布式锁"><a href="#2-分布式锁" class="headerlink" title="2)  分布式锁"></a>2)  分布式锁</h3><p>当分布式项目在高并发下也需要加锁，但本地锁只能锁住当前服务，这个时候就需要分布式锁</p><p><img src="https://cdn.jsdelivr.net/gh/zsxfa/CDN/img/md/2022/04/03/1648981025.png" alt="desc"></p><h3 id="3-分布式锁的演进"><a href="#3-分布式锁的演进" class="headerlink" title="3) 分布式锁的演进"></a>3) 分布式锁的演进</h3><p><strong>基本原理</strong></p><p>我们可以同时去一个地方“占坑”，如果占到，就执行逻辑。否则就必须等待，直到释放锁。“占坑”可以去redis，可以去数据库，可以去任何大家都能访问的地方。等待可以自旋的方式。</p><p><strong>阶段一</strong></p><p><img src="https://cdn.jsdelivr.net/gh/zsxfa/CDN/img/md/2022/04/03/1648981054.png" alt="desc"></p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">public</span> Map&lt;String, List&lt;Catalog2Vo&gt;&gt; <span class="title function_">getCategoryJsonFromDBWithRedisLock</span><span class="params">()</span> &#123;</span><br><span class="line">    <span class="comment">//阶段一</span></span><br><span class="line">    <span class="type">Boolean</span> <span class="variable">lock</span> <span class="operator">=</span> redisTemplate.opsForValue().setIfAbsent(<span class="string">&quot;lock&quot;</span>, <span class="string">&quot;111&quot;</span>);</span><br><span class="line">    <span class="comment">//获取到锁，执行业务</span></span><br><span class="line">    <span class="keyword">if</span> (lock) &#123;</span><br><span class="line">        Map&lt;String, List&lt;Catalog2Vo&gt;&gt; categoriesDb = getCategoryMap();</span><br><span class="line">        <span class="comment">//删除锁，如果在此之前报错或宕机会造成死锁</span></span><br><span class="line">        redisTemplate.delete(<span class="string">&quot;lock&quot;</span>);</span><br><span class="line">        <span class="keyword">return</span> categoriesDb;</span><br><span class="line">    &#125;<span class="keyword">else</span> &#123;</span><br><span class="line">        <span class="comment">//没获取到锁，等待100ms重试</span></span><br><span class="line">        <span class="keyword">try</span> &#123;</span><br><span class="line">            Thread.sleep(<span class="number">100</span>);</span><br><span class="line">        &#125; <span class="keyword">catch</span> (InterruptedException e) &#123;</span><br><span class="line">            e.printStackTrace();</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">return</span> getCatelogJsonDbWithRedisLock();</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> Map&lt;String, List&lt;Catalog2Vo&gt;&gt; <span class="title function_">getCategoryMap</span><span class="params">()</span> &#123;</span><br><span class="line">        ValueOperations&lt;String, String&gt; ops = redisTemplate.opsForValue();</span><br><span class="line">        <span class="type">String</span> <span class="variable">catalogJson</span> <span class="operator">=</span> ops.get(<span class="string">&quot;catalogJson&quot;</span>);</span><br><span class="line">        <span class="keyword">if</span> (StringUtils.isEmpty(catalogJson)) &#123;</span><br><span class="line">            System.out.println(<span class="string">&quot;缓存不命中，准备查询数据库。。。&quot;</span>);</span><br><span class="line">            Map&lt;String, List&lt;Catalog2Vo&gt;&gt; categoriesDb= getCategoryJsonFromDBWithRedisLock();</span><br><span class="line">            <span class="type">String</span> <span class="variable">toJSONString</span> <span class="operator">=</span> JSON.toJSONString(categoriesDb);</span><br><span class="line">            ops.set(<span class="string">&quot;catalogJson&quot;</span>, toJSONString);</span><br><span class="line">            <span class="keyword">return</span> categoriesDb;</span><br><span class="line">        &#125;</span><br><span class="line">        System.out.println(<span class="string">&quot;缓存命中。。。。&quot;</span>);</span><br><span class="line">        Map&lt;String, List&lt;Catalog2Vo&gt;&gt; listMap = JSON.parseObject(catalogJson, <span class="keyword">new</span> <span class="title class_">TypeReference</span>&lt;Map&lt;String, List&lt;Catalog2Vo&gt;&gt;&gt;() &#123;&#125;);</span><br><span class="line">        <span class="keyword">return</span> listMap;</span><br><span class="line">    &#125;</span><br></pre></td></tr></table></figure><p>问题：<br>1、setnx占好了位，业务代码异常或者程序在页面过程中宕机。没有执行删除锁逻辑，这就造成了死锁</p><p>解决：设置锁的自动过期，即使没有删除，会自动删除</p><p><strong>阶段二</strong></p><p><img src="https://cdn.jsdelivr.net/gh/zsxfa/CDN/img/md/2022/04/03/1648981233.png" alt="desc"></p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">public</span> Map&lt;String, List&lt;Catelog2Vo&gt;&gt; <span class="title function_">getCategoryJsonFromDBWithRedisLock</span><span class="params">()</span> &#123;</span><br><span class="line">    <span class="comment">//占分布式锁，去redis占坑,阶段2</span></span><br><span class="line">    <span class="type">Boolean</span> <span class="variable">lock</span> <span class="operator">=</span> redisTemplate.opsForValue().setIfAbsent(<span class="string">&quot;lock&quot;</span>, <span class="string">&quot;111&quot;</span>);</span><br><span class="line">    <span class="comment">//获取到锁，执行业务</span></span><br><span class="line">    <span class="keyword">if</span>(lock)&#123;</span><br><span class="line">        <span class="comment">//设置过期时间</span></span><br><span class="line">        redisTemplate.expire(<span class="string">&quot;lock&quot;</span>, <span class="number">30</span>, TimeUnit.SECONDS);</span><br><span class="line">        <span class="comment">//加锁成功</span></span><br><span class="line">        Map&lt;String, List&lt;Catelog2Vo&gt;&gt; dataFromDB = getDataFromDB();</span><br><span class="line">        <span class="comment">//删除锁，如果在此之前报错或宕机会造成死锁</span></span><br><span class="line">        redisTemplate.delete(<span class="string">&quot;lock&quot;</span>);</span><br><span class="line">        <span class="keyword">return</span> dataFromDB;</span><br><span class="line">    &#125;<span class="keyword">else</span>&#123;</span><br><span class="line">        <span class="comment">//加锁失败...</span></span><br><span class="line">        <span class="comment">//休眠100ms重试</span></span><br><span class="line">        <span class="keyword">try</span> &#123;</span><br><span class="line">            Thread.sleep(<span class="number">100</span>);</span><br><span class="line">        &#125; <span class="keyword">catch</span> (InterruptedException e) &#123;</span><br><span class="line">            e.printStackTrace();</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">return</span> getCategoryJsonFromDBWithLocalLock();</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>问题：<br>1、setnx设置好，正要去设置过期时间，宕机。又死锁了。<br>解决：<br>设置过期时间和占位必须是原子的。redis支持使用setnx ex命令</p><p><strong>阶段三</strong></p><p><img src="https://cdn.jsdelivr.net/gh/zsxfa/CDN/img/md/2022/04/03/1648981530.png" alt="desc"></p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">public</span> Map&lt;String, List&lt;Catelog2Vo&gt;&gt; <span class="title function_">getCategoryJsonFromDBWithRedisLock</span><span class="params">()</span> &#123;</span><br><span class="line"></span><br><span class="line">    <span class="comment">//占分布式锁，去redis占坑,阶段1，2</span></span><br><span class="line">    <span class="comment">//Boolean lock = redisTemplate.opsForValue().setIfAbsent(&quot;lock&quot;, &quot;111&quot;);</span></span><br><span class="line">    <span class="comment">//加锁的同时设置过期时间，二者是原子性操作，阶段3</span></span><br><span class="line">    <span class="type">Boolean</span> <span class="variable">lock</span> <span class="operator">=</span> redisTemplate.opsForValue().setIfAbsent(<span class="string">&quot;lock&quot;</span>, <span class="string">&quot;111&quot;</span>,<span class="number">5</span>, TimeUnit.SECONDS);</span><br><span class="line">    <span class="comment">//获取到锁，执行业务</span></span><br><span class="line">    <span class="keyword">if</span>(lock)&#123;</span><br><span class="line">        <span class="comment">//设置过期时间</span></span><br><span class="line">        <span class="comment">//redisTemplate.expire(&quot;lock&quot;, 30, TimeUnit.SECONDS);</span></span><br><span class="line">        <span class="comment">//加锁成功</span></span><br><span class="line">        Map&lt;String, List&lt;Catelog2Vo&gt;&gt; dataFromDB = getDataFromDB();</span><br><span class="line">        <span class="comment">//删除锁，如果在此之前报错或宕机会造成死锁</span></span><br><span class="line">        redisTemplate.delete(<span class="string">&quot;lock&quot;</span>);</span><br><span class="line">        <span class="keyword">return</span> dataFromDB;</span><br><span class="line">    &#125;<span class="keyword">else</span>&#123;</span><br><span class="line">        <span class="comment">//加锁失败...</span></span><br><span class="line">        <span class="comment">//休眠100ms重试</span></span><br><span class="line">        <span class="keyword">try</span> &#123;</span><br><span class="line">            Thread.sleep(<span class="number">100</span>);</span><br><span class="line">        &#125; <span class="keyword">catch</span> (InterruptedException e) &#123;</span><br><span class="line">            e.printStackTrace();</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">return</span> getCategoryJsonFromDBWithLocalLock();</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>问题：<br>1、删除锁直接删除？？？<br>如果由于业务时间很长，锁自己过期了，我们直接删除，有可能把别人正在持有的锁删除了。<br>解决：<br>占锁的时候，值指定为uuid，每个人匹配是自己的锁才删除。</p><p><strong>阶段四</strong></p><p><img src="https://cdn.jsdelivr.net/gh/zsxfa/CDN/img/md/2022/04/03/1648981632.png" alt="desc"></p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">public</span> Map&lt;String, List&lt;Catelog2Vo&gt;&gt; <span class="title function_">getCategoryJsonFromDBWithRedisLock</span><span class="params">()</span> &#123;</span><br><span class="line"></span><br><span class="line">    <span class="comment">//占分布式锁，去redis占坑,阶段2</span></span><br><span class="line">    <span class="comment">//Boolean lock = redisTemplate.opsForValue().setIfAbsent(&quot;lock&quot;, &quot;111&quot;);</span></span><br><span class="line">    <span class="comment">//加锁的同时设置过期时间，二者是原子性操作，阶段3</span></span><br><span class="line">    <span class="comment">//Boolean lock = redisTemplate.opsForValue().setIfAbsent(&quot;lock&quot;, &quot;111&quot;,5, TimeUnit.SECONDS);</span></span><br><span class="line"></span><br><span class="line">    <span class="comment">//为当前锁设置唯一的uuid，只有当uuid相同时才会进行删除锁的操作，阶段4</span></span><br><span class="line">    <span class="type">String</span> <span class="variable">uuid</span> <span class="operator">=</span> UUID.randomUUID().toString();</span><br><span class="line">    <span class="type">Boolean</span> <span class="variable">lock</span> <span class="operator">=</span> redisTemplate.opsForValue().setIfAbsent(<span class="string">&quot;lock&quot;</span>, uuid, <span class="number">5</span>, TimeUnit.SECONDS);</span><br><span class="line">    <span class="comment">//获取到锁，执行业务</span></span><br><span class="line">    <span class="keyword">if</span> (lock) &#123;</span><br><span class="line">        <span class="comment">//设置过期时间</span></span><br><span class="line">        <span class="comment">//redisTemplate.expire(&quot;lock&quot;, 30, TimeUnit.SECONDS);</span></span><br><span class="line">        <span class="comment">//加锁成功</span></span><br><span class="line">        Map&lt;String, List&lt;Catelog2Vo&gt;&gt; dataFromDB = getDataFromDB();</span><br><span class="line">        <span class="comment">////获取值对比+对比成功删除=原子操作，阶段4</span></span><br><span class="line">        <span class="type">String</span> <span class="variable">lockValue</span> <span class="operator">=</span> redisTemplate.opsForValue().get(<span class="string">&quot;lock&quot;</span>);</span><br><span class="line">        <span class="keyword">if</span> (uuid.equals(lockValue)) &#123;</span><br><span class="line">            <span class="comment">//删除锁，如果在此之前报错或宕机会造成死锁</span></span><br><span class="line">            redisTemplate.delete(<span class="string">&quot;lock&quot;</span>);</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">return</span> dataFromDB;</span><br><span class="line">    &#125;<span class="keyword">else</span> &#123;</span><br><span class="line">        <span class="comment">//加锁失败...</span></span><br><span class="line">        <span class="comment">//休眠100ms重试</span></span><br><span class="line">        <span class="keyword">try</span> &#123;</span><br><span class="line">            Thread.sleep(<span class="number">100</span>);</span><br><span class="line">        &#125; <span class="keyword">catch</span> (InterruptedException e) &#123;</span><br><span class="line">            e.printStackTrace();</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">return</span> getCategoryJsonFromDBWithLocalLock();</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>问题：<br>1、如果正好判断是当前值，正要删除锁的时候，锁已经过期，别人已经设置到了新的值。那么我们删除的是别人的锁<br>解决：<br>删除锁必须保证原子性。使用redis+Lua脚本完成</p><p><strong>阶段五-最终形态</strong></p><p><img src="https://cdn.jsdelivr.net/gh/zsxfa/CDN/img/md/2022/04/03/1648983252.png" alt="desc"></p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">public</span> Map&lt;String, List&lt;Catelog2Vo&gt;&gt; <span class="title function_">getCategoryJsonFromDBWithRedisLock</span><span class="params">()</span> &#123;</span><br><span class="line"></span><br><span class="line">    <span class="comment">//占分布式锁，去redis占坑,阶段1，2</span></span><br><span class="line">    <span class="comment">//Boolean lock = redisTemplate.opsForValue().setIfAbsent(&quot;lock&quot;, &quot;111&quot;);</span></span><br><span class="line">    <span class="comment">//加锁的同时设置过期时间，二者是原子性操作，阶段3</span></span><br><span class="line">    <span class="comment">//Boolean lock = redisTemplate.opsForValue().setIfAbsent(&quot;lock&quot;, &quot;111&quot;,5, TimeUnit.SECONDS);</span></span><br><span class="line"></span><br><span class="line">    <span class="comment">//为当前锁设置唯一的uuid，只有当uuid相同时才会进行删除锁的操作，阶段4</span></span><br><span class="line">    <span class="type">String</span> <span class="variable">uuid</span> <span class="operator">=</span> UUID.randomUUID().toString();</span><br><span class="line">    <span class="type">Boolean</span> <span class="variable">lock</span> <span class="operator">=</span> redisTemplate.opsForValue().setIfAbsent(<span class="string">&quot;lock&quot;</span>, uuid, <span class="number">5</span>, TimeUnit.SECONDS);</span><br><span class="line">    <span class="comment">//获取到锁，执行业务</span></span><br><span class="line">    <span class="keyword">if</span> (lock) &#123;</span><br><span class="line">        System.out.println(<span class="string">&quot;获取分布式锁成功...&quot;</span>);</span><br><span class="line">        <span class="comment">//设置过期时间</span></span><br><span class="line">        <span class="comment">//redisTemplate.expire(&quot;lock&quot;, 30, TimeUnit.SECONDS);</span></span><br><span class="line">        Map&lt;String, List&lt;Catelog2Vo&gt;&gt; dataFromDB;</span><br><span class="line">        <span class="keyword">try</span>&#123;</span><br><span class="line">            <span class="comment">//加锁成功</span></span><br><span class="line">            dataFromDB = getDataFromDB();</span><br><span class="line">        &#125;<span class="keyword">finally</span> &#123;</span><br><span class="line">            <span class="comment">//获取值对比+对比成功删除=原子操作，lua脚本，阶段5</span></span><br><span class="line">            <span class="type">String</span> <span class="variable">script</span> <span class="operator">=</span> <span class="string">&quot;if redis.call(&#x27;get&#x27;,KEYS[1]) == ARGV[1] then\n&quot;</span> +</span><br><span class="line">                <span class="string">&quot;    return redis.call(&#x27;del&#x27;,KEYS[1])\n&quot;</span> +</span><br><span class="line">                <span class="string">&quot;else\n&quot;</span> +</span><br><span class="line">                <span class="string">&quot;    return 0\n&quot;</span> +</span><br><span class="line">                <span class="string">&quot;end&quot;</span>;</span><br><span class="line">            redisTemplate.execute(<span class="keyword">new</span> <span class="title class_">DefaultRedisScript</span>&lt;Long&gt;(script, Long.class), Arrays.asList(<span class="string">&quot;lock&quot;</span>), uuid);</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="comment">//获取值对比+对比成功删除=原子操作，阶段4</span></span><br><span class="line">        <span class="comment">//String lockValue = redisTemplate.opsForValue().get(&quot;lock&quot;);</span></span><br><span class="line">        <span class="comment">//if (uuid.equals(lockValue)) &#123;</span></span><br><span class="line">        <span class="comment">//删除锁，如果在此之前报错或宕机会造成死锁</span></span><br><span class="line">        <span class="comment">//redisTemplate.delete(&quot;lock&quot;);</span></span><br><span class="line">        <span class="comment">//&#125;</span></span><br><span class="line">        <span class="keyword">return</span> dataFromDB;</span><br><span class="line">    &#125;<span class="keyword">else</span> &#123;</span><br><span class="line">        <span class="comment">//加锁失败...</span></span><br><span class="line">        <span class="comment">//休眠100ms重试</span></span><br><span class="line">        System.out.println(<span class="string">&quot;获取分布式锁失败...等待重试...&quot;</span>);</span><br><span class="line">        <span class="keyword">try</span> &#123;</span><br><span class="line">            Thread.sleep(<span class="number">100</span>);</span><br><span class="line">        &#125; <span class="keyword">catch</span> (InterruptedException e) &#123;</span><br><span class="line">            e.printStackTrace();</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">return</span> getCategoryJsonFromDBWithLocalLock();</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>保证加锁【占位+过期时间】和删除锁【判断+删除】的原子性。更难的事情，锁的自动续期</p><h3 id="4-Redisson"><a href="#4-Redisson" class="headerlink" title="4) Redisson"></a>4) Redisson</h3><p>Redisson是一个在Redis的基础上实现的Java驻内存数据网格（In-Memory Data Grid）。它不仅提供了一系列的分布式的Java常用对象，还提供了许多分布式服务。其中包括(<code>BitSet</code>, <code>Set</code>, <code>Multimap</code>, <code>SortedSet</code>, <code>Map</code>, <code>List</code>, <code>Queue</code>, <code>BlockingQueue</code>, <code>Deque</code>, <code>BlockingDeque</code>, <code>Semaphore</code>, <code>Lock</code>, <code>AtomicLong</code>, <code>CountDownLatch</code>, <code>Publish / Subscribe</code>, <code>Bloom filter</code>, <code>Remote service</code>, <code>Spring cache</code>, <code>Executor service</code>, <code>Live Object service</code>, <code>Scheduler service</code>) Redisson提供了使用Redis的最简单和最便捷的方法。Redisson的宗旨是促进使用者对Redis的关注分离（Separation of Concern），从而让使用者能够将精力更集中地放在处理业务逻辑上。</p><p>本文我们仅关注分布式锁的实现，更多请参考<a href="https://github.com/redisson/redisson/wiki/8.-%E5%88%86%E5%B8%83%E5%BC%8F%E9%94%81%E5%92%8C%E5%90%8C%E6%AD%A5%E5%99%A8">官方文档</a></p><h4 id="1-环境搭建"><a href="#1-环境搭建" class="headerlink" title="(1) 环境搭建"></a>(1) 环境搭建</h4><p><strong>导入依赖</strong></p><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>org.redisson<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>redisson<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">version</span>&gt;</span>3.13.4<span class="tag">&lt;/<span class="name">version</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br></pre></td></tr></table></figure><p>开启配置</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">@Configuration</span></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">RedissonConfig</span> &#123;</span><br><span class="line">    <span class="meta">@Bean</span></span><br><span class="line">    <span class="keyword">public</span> RedissonClient <span class="title function_">redissonClient</span><span class="params">()</span>&#123;</span><br><span class="line">        <span class="type">Config</span> <span class="variable">config</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">Config</span>();</span><br><span class="line">        config.useSingleServer().setAddress(<span class="string">&quot;redis://192.168.56.10:6379&quot;</span>);</span><br><span class="line">        <span class="type">RedissonClient</span> <span class="variable">redisson</span> <span class="operator">=</span> Redisson.create(config);</span><br><span class="line">        <span class="keyword">return</span> redisson;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h4 id="2-可重入锁（Reentrant-Lock）"><a href="#2-可重入锁（Reentrant-Lock）" class="headerlink" title="(2)  可重入锁（Reentrant Lock）"></a>(2)  可重入锁（Reentrant Lock）</h4><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">@GetMapping(&quot;/hello&quot;)</span></span><br><span class="line"><span class="meta">@ResponseBody</span></span><br><span class="line"><span class="keyword">public</span> String <span class="title function_">hello</span><span class="params">()</span> &#123;</span><br><span class="line">    <span class="type">RLock</span> <span class="variable">lock</span> <span class="operator">=</span> redissonClient.getLock(<span class="string">&quot;my-lock&quot;</span>);</span><br><span class="line">    lock.lock();</span><br><span class="line">    <span class="keyword">try</span> &#123;</span><br><span class="line">        System.out.println(<span class="string">&quot;加锁成功，执行业务...&quot;</span>+Thread.currentThread().getId());</span><br><span class="line">        Thread.sleep(<span class="number">30000</span>);</span><br><span class="line">    &#125; <span class="keyword">catch</span> (InterruptedException e) &#123;</span><br><span class="line">        e.printStackTrace();</span><br><span class="line">    &#125;<span class="keyword">finally</span> &#123;</span><br><span class="line">        System.out.println(<span class="string">&quot;释放锁...&quot;</span>);</span><br><span class="line">        lock.unlock();</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> <span class="string">&quot;hello&quot;</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>如果负责储存这个分布式锁的Redisson节点宕机以后，而且这个锁正好处于锁住的状态时，这个锁会出现锁死的状态。为了避免这种情况的发生，所以就设置了过期时间，但是如果业务执行时间过长，业务还未执行完锁就已经过期，那么就会出现解锁时解了其他线程的锁的情况。</p><p>所以Redisson内部提供了一个监控锁的看门狗，它的作用是在Redisson实例被关闭前，不断的延长锁的有效期。默认情况下，看门狗的检查锁的超时时间是30秒钟，也可以通过修改<a href="https://github.com/redisson/redisson/wiki/2.-%E9%85%8D%E7%BD%AE%E6%96%B9%E6%B3%95#lockwatchdogtimeout%E7%9B%91%E6%8E%A7%E9%94%81%E7%9A%84%E7%9C%8B%E9%97%A8%E7%8B%97%E8%B6%85%E6%97%B6%E5%8D%95%E4%BD%8D%E6%AF%AB%E7%A7%92">Config.lockWatchdogTimeout</a>来另行指定。</p><p>在本次测试中<code>lock</code>的初始过期时间TTL为30s，但是每到1/3看门狗时间就会自动续借成30s</p><p><img src="https://cdn.jsdelivr.net/gh/zsxfa/CDN/img/md/2022/04/04/1649040896.png" alt="desc"></p><p>另外Redisson还通过加锁的方法提供了<code>leaseTime</code>的参数来指定加锁的时间。超过这个时间后锁便自动解开了。不会自动续期！</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// 加锁以后10秒钟自动解锁</span></span><br><span class="line"><span class="comment">// 无需调用unlock方法手动解锁,如果要手动解锁一定要确保业务执行时间小于锁的失效时间</span></span><br><span class="line">lock.lock(<span class="number">10</span>, TimeUnit.SECONDS);</span><br><span class="line"></span><br><span class="line"><span class="comment">// 尝试加锁，最多等待100秒，上锁以后10秒自动解锁</span></span><br><span class="line"><span class="type">boolean</span> <span class="variable">res</span> <span class="operator">=</span> lock.tryLock(<span class="number">100</span>, <span class="number">10</span>, TimeUnit.SECONDS);</span><br><span class="line"><span class="keyword">if</span> (res) &#123;</span><br><span class="line">   <span class="keyword">try</span> &#123;</span><br><span class="line">     ...</span><br><span class="line">   &#125; <span class="keyword">finally</span> &#123;</span><br><span class="line">       lock.unlock();</span><br><span class="line">   &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h4 id="3-读写锁（ReadWriteLock）"><a href="#3-读写锁（ReadWriteLock）" class="headerlink" title="(3) 读写锁（ReadWriteLock）"></a>(3) 读写锁（ReadWriteLock）</h4><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//保证一定能读到最新数据，修改期间，写锁是一个排他锁</span></span><br><span class="line"><span class="meta">@GetMapping(&quot;/write&quot;)</span></span><br><span class="line"><span class="meta">@ResponseBody</span></span><br><span class="line"><span class="keyword">public</span> String <span class="title function_">writeValue</span><span class="params">()</span>&#123;</span><br><span class="line">    <span class="type">RReadWriteLock</span> <span class="variable">readWriteLock</span> <span class="operator">=</span> redissonClient.getReadWriteLock(<span class="string">&quot;rw-lock&quot;</span>);</span><br><span class="line">    <span class="type">String</span> <span class="variable">uuid</span> <span class="operator">=</span> <span class="string">&quot;&quot;</span>;</span><br><span class="line">    <span class="type">RLock</span> <span class="variable">rLock</span> <span class="operator">=</span> readWriteLock.writeLock();</span><br><span class="line">    <span class="keyword">try</span> &#123;</span><br><span class="line">        <span class="comment">//1.改数据加写锁，读数据加读锁</span></span><br><span class="line">        rLock.lock();</span><br><span class="line">        uuid = UUID.randomUUID().toString();</span><br><span class="line">        Thread.sleep(<span class="number">30000</span>);</span><br><span class="line">        redisTemplate.opsForValue().set(<span class="string">&quot;writeValue&quot;</span>,uuid);</span><br><span class="line">    &#125; <span class="keyword">catch</span> (InterruptedException e) &#123;</span><br><span class="line">        e.printStackTrace();</span><br><span class="line">    &#125;<span class="keyword">finally</span> &#123;</span><br><span class="line">        rLock.unlock();</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> uuid;</span><br><span class="line">&#125;</span><br><span class="line"><span class="meta">@GetMapping(&quot;/read&quot;)</span></span><br><span class="line"><span class="meta">@ResponseBody</span></span><br><span class="line"><span class="keyword">public</span> String <span class="title function_">readValue</span><span class="params">()</span>&#123;</span><br><span class="line">    <span class="type">RReadWriteLock</span> <span class="variable">readWriteLock</span> <span class="operator">=</span> redissonClient.getReadWriteLock(<span class="string">&quot;rw-lock&quot;</span>);</span><br><span class="line">    <span class="comment">//加读锁</span></span><br><span class="line">    <span class="type">RLock</span> <span class="variable">rLock</span> <span class="operator">=</span> readWriteLock.readLock();</span><br><span class="line">    <span class="type">String</span> <span class="variable">res</span> <span class="operator">=</span> <span class="string">&quot;&quot;</span>;</span><br><span class="line">    <span class="keyword">try</span> &#123;</span><br><span class="line">        rLock.lock();</span><br><span class="line">        res = redisTemplate.opsForValue().get(<span class="string">&quot;writeValue&quot;</span>);</span><br><span class="line">    &#125; <span class="keyword">catch</span> (Exception e) &#123;</span><br><span class="line">        e.printStackTrace();</span><br><span class="line">    &#125;<span class="keyword">finally</span> &#123;</span><br><span class="line">        rLock.unlock();</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> res;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>写锁会阻塞读锁，但是读锁不会阻塞读锁，但读锁会阻塞写锁</p><p>总之含有写的过程都会被阻塞，只有读读不会被阻塞</p><p>上锁时在redis的状态</p><p><img src="https://cdn.jsdelivr.net/gh/zsxfa/CDN/img/md/2022/04/04/1649042053.png" alt="desc"></p><h4 id="4-信号量（Semaphore）"><a href="#4-信号量（Semaphore）" class="headerlink" title="(4) 信号量（Semaphore）"></a>(4) 信号量（Semaphore）</h4><p>信号量为存储在redis中的一个数字，当这个数字大于0时，即可以调用<code>acquire()</code>方法增加数量，也可以调用<code>release()</code>方法减少数量，但是当调用<code>release()</code>之后小于0的话方法就会阻塞，直到数字大于0</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">@GetMapping(&quot;/park&quot;)</span></span><br><span class="line"><span class="meta">@ResponseBody</span></span><br><span class="line"><span class="keyword">public</span> String <span class="title function_">park</span><span class="params">()</span> &#123;</span><br><span class="line">    <span class="type">RSemaphore</span> <span class="variable">park</span> <span class="operator">=</span> redissonClient.getSemaphore(<span class="string">&quot;park&quot;</span>);</span><br><span class="line">    <span class="keyword">try</span> &#123;</span><br><span class="line">        park.acquire(<span class="number">2</span>);</span><br><span class="line">    &#125; <span class="keyword">catch</span> (InterruptedException e) &#123;</span><br><span class="line">        e.printStackTrace();</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> <span class="string">&quot;停进2&quot;</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="meta">@GetMapping(&quot;/go&quot;)</span></span><br><span class="line"><span class="meta">@ResponseBody</span></span><br><span class="line"><span class="keyword">public</span> String <span class="title function_">go</span><span class="params">()</span> &#123;</span><br><span class="line">    <span class="type">RSemaphore</span> <span class="variable">park</span> <span class="operator">=</span> redissonClient.getSemaphore(<span class="string">&quot;park&quot;</span>);</span><br><span class="line">    park.release(<span class="number">2</span>);</span><br><span class="line">    <span class="keyword">return</span> <span class="string">&quot;开走2&quot;</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h4 id="5-闭锁（CountDownLatch）"><a href="#5-闭锁（CountDownLatch）" class="headerlink" title="(5) 闭锁（CountDownLatch）"></a>(5) 闭锁（CountDownLatch）</h4><p>可以理解为门栓，使用若干个门栓将当前方法阻塞，只有当全部门栓都被放开时，当前方法才能继续执行。</p><p>以下代码只有<code>offLatch()</code>被调用5次后 <code>setLatch()</code>才能继续执行</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">@GetMapping(&quot;/setLatch&quot;)</span></span><br><span class="line"><span class="meta">@ResponseBody</span></span><br><span class="line"><span class="keyword">public</span> String <span class="title function_">setLatch</span><span class="params">()</span> &#123;</span><br><span class="line">    <span class="type">RCountDownLatch</span> <span class="variable">latch</span> <span class="operator">=</span> redissonClient.getCountDownLatch(<span class="string">&quot;CountDownLatch&quot;</span>);</span><br><span class="line">    <span class="keyword">try</span> &#123;</span><br><span class="line">        latch.trySetCount(<span class="number">5</span>);</span><br><span class="line">        latch.await();</span><br><span class="line">    &#125; <span class="keyword">catch</span> (InterruptedException e) &#123;</span><br><span class="line">        e.printStackTrace();</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> <span class="string">&quot;门栓被放开&quot;</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="meta">@GetMapping(&quot;/offLatch&quot;)</span></span><br><span class="line"><span class="meta">@ResponseBody</span></span><br><span class="line"><span class="keyword">public</span> String <span class="title function_">offLatch</span><span class="params">()</span> &#123;</span><br><span class="line">    <span class="type">RCountDownLatch</span> <span class="variable">latch</span> <span class="operator">=</span> redissonClient.getCountDownLatch(<span class="string">&quot;CountDownLatch&quot;</span>);</span><br><span class="line">    latch.countDown();</span><br><span class="line">    <span class="keyword">return</span> <span class="string">&quot;门栓被放开1&quot;</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="3-缓存数据的一致性"><a href="#3-缓存数据的一致性" class="headerlink" title="3. 缓存数据的一致性"></a>3. 缓存数据的一致性</h2><h3 id="1-双写模式"><a href="#1-双写模式" class="headerlink" title="1)  双写模式"></a>1)  双写模式</h3><p>当数据更新时，更新数据库时同时更新缓存</p><p><strong>存在问题</strong></p><p>由于卡顿等原因，导致写缓存2在最前，写缓存1在后面就出现了不一致</p><p><img src="https://cdn.jsdelivr.net/gh/zsxfa/CDN/img/md/2022/04/04/1649050459.png" alt="desc"></p><p>这是暂时性的脏数据问题，但是在数据稳定，缓存过期以后，又能得到最新的正确数据</p><h3 id="2-失效模式"><a href="#2-失效模式" class="headerlink" title="2) 失效模式"></a>2) 失效模式</h3><p>数据库更新时将缓存删除</p><p><strong>存在问题</strong></p><p>当两个请求同时修改数据库，一个请求已经更新成功并删除缓存时又有读数据的请求进来，这时候发现缓存中无数据就去数据库中查询并放入缓存，在放入缓存前第二个更新数据库的请求成功，这时候留在缓存中的数据依然是第一次数据更新的数据</p><p><img src="https://cdn.jsdelivr.net/gh/zsxfa/CDN/img/md/2022/04/04/1649050967.png" alt="desc"></p><p><strong>解决方法</strong></p><p>1、缓存的所有数据都有过期时间，数据过期下一次查询触发主动更新<br>2、读写数据的时候(并且写的不频繁)，加上分布式的读写锁。</p><h3 id="3-解决方案"><a href="#3-解决方案" class="headerlink" title="3) 解决方案"></a>3) 解决方案</h3><p>无论是双写模式还是失效模式，都会导致缓存的不一致问题。即多个实例同时更新会出事。怎么办？</p><ul><li><p>如果是用户纬度数据（订单数据、用户数据），这种并发几率非常小，不用考虑这个问题，缓存数据加上过期时间，每隔一段时间触发读的主动更新即可</p></li><li><p>如果是菜单，商品介绍等基础数据，也可以去使用canal订阅binlog的方式。</p><p><img src="https://cdn.jsdelivr.net/gh/zsxfa/CDN/img/md/2022/04/04/1649051078.png" alt="desc"></p></li><li><p>缓存数据+过期时间也足够解决大部分业务对于缓存的要求。</p></li><li><p>通过加锁保证并发读写，写写的时候按顺序排好队。读读无所谓。所以适合使用读写锁。（业务不关心脏数据，允许临时脏数据可忽略）；</p></li></ul><p>总结：</p><ul><li>我们能放入缓存的数据本就不应该是实时性、一致性要求超高的。所以缓存数据的时候加上过期时间，保证每天拿到当前最新数据即可。</li><li>我们不应该过度设计，增加系统的复杂性</li><li>遇到实时性、一致性要求高的数据，就应该查数据库，即使慢点。</li></ul><h2 id="4-SpringCache"><a href="#4-SpringCache" class="headerlink" title="4. SpringCache"></a>4. SpringCache</h2><h3 id="1-导入依赖"><a href="#1-导入依赖" class="headerlink" title="1)  导入依赖"></a>1)  导入依赖</h3><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>org.springframework.boot<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>spring-boot-starter-cache<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br></pre></td></tr></table></figure><h3 id="2-自定义配置"><a href="#2-自定义配置" class="headerlink" title="2) 自定义配置"></a>2) 自定义配置</h3><p>指定缓存类型并在主配置类上加上注解<code>@EnableCaching</code></p><p>在<code>application.properties</code>文件中可进行如下配置：</p><figure class="highlight yaml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">#指定缓存类型为redis</span></span><br><span class="line"><span class="string">spring.cache.type=redis</span></span><br><span class="line"><span class="comment">#指定redis中的过期时间为1h</span></span><br><span class="line"><span class="string">spring.cache.redis.time-to-live=3600000</span></span><br><span class="line"><span class="comment">#如果指定了前缀就用我们指定的前缀，如果没有就默认使用缓存的名字作为前缀</span></span><br><span class="line"><span class="comment">#spring.cache.redis.key-prefix=CACHE_</span></span><br><span class="line"><span class="string">spring.cache.redis.use-key-prefix=true</span></span><br><span class="line"><span class="comment">#是否缓存空值，防止缓存穿透</span></span><br><span class="line"><span class="string">spring.cache.redis.cache-null-values=true</span></span><br></pre></td></tr></table></figure><p>默认使用jdk进行序列化，自定义序列化方式需要编写配置类</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">@Configuration</span></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">MyCacheConfig</span> &#123;</span><br><span class="line">    <span class="meta">@Bean</span></span><br><span class="line">    <span class="keyword">public</span> org.springframework.data.redis.cache.RedisCacheConfiguration <span class="title function_">redisCacheConfiguration</span><span class="params">(</span></span><br><span class="line"><span class="params">            CacheProperties cacheProperties)</span> &#123;</span><br><span class="line">        CacheProperties.<span class="type">Redis</span> <span class="variable">redisProperties</span> <span class="operator">=</span> cacheProperties.getRedis();</span><br><span class="line">        org.springframework.data.redis.cache.<span class="type">RedisCacheConfiguration</span> <span class="variable">config</span> <span class="operator">=</span> org.springframework.data.redis.cache.RedisCacheConfiguration</span><br><span class="line">                .defaultCacheConfig();</span><br><span class="line">        <span class="comment">//指定缓存序列化方式为json</span></span><br><span class="line">        config = config.serializeValuesWith(</span><br><span class="line">                RedisSerializationContext.SerializationPair.fromSerializer(<span class="keyword">new</span> <span class="title class_">GenericJackson2JsonRedisSerializer</span>()));</span><br><span class="line">        <span class="comment">//设置配置文件中的各项配置，如过期时间</span></span><br><span class="line">        <span class="keyword">if</span> (redisProperties.getTimeToLive() != <span class="literal">null</span>) &#123;</span><br><span class="line">            config = config.entryTtl(redisProperties.getTimeToLive());</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">if</span> (redisProperties.getKeyPrefix() != <span class="literal">null</span>) &#123;</span><br><span class="line">            config = config.prefixKeysWith(redisProperties.getKeyPrefix());</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">if</span> (!redisProperties.isCacheNullValues()) &#123;</span><br><span class="line">            config = config.disableCachingNullValues();</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">if</span> (!redisProperties.isUseKeyPrefix()) &#123;</span><br><span class="line">            config = config.disableKeyPrefix();</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">return</span> config;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="3-自定义序列化原理"><a href="#3-自定义序列化原理" class="headerlink" title="3) 自定义序列化原理"></a>3) 自定义序列化原理</h3><p>缓存使用</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//调用该方法时会将结果缓存，缓存名为category，key为方法名</span></span><br><span class="line"><span class="comment">//表示该方法的缓存被读取时会加锁</span></span><br><span class="line"><span class="meta">@Cacheable(value = &#123;&quot;category&quot;&#125;,key = &quot;#root.method.name&quot;,sync = true)</span></span><br><span class="line"><span class="keyword">public</span> Map&lt;String, List&lt;Catalog2Vo&gt;&gt; <span class="title function_">getCatalogJsonDbWithSpringCache</span><span class="params">()</span> &#123;</span><br><span class="line">    <span class="keyword">return</span> getCategoriesDb();</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">//调用该方法会删除缓存category下的所有cache</span></span><br><span class="line"><span class="meta">@Override</span></span><br><span class="line"><span class="meta">@CacheEvict(value = &#123;&quot;category&quot;&#125;,allEntries = true)</span></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">updateCascade</span><span class="params">(CategoryEntity category)</span> &#123;</span><br><span class="line">    <span class="built_in">this</span>.updateById(category);</span><br><span class="line">    <span class="keyword">if</span> (!StringUtils.isEmpty(category.getName())) &#123;</span><br><span class="line">        categoryBrandRelationService.updateCategory(category);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="4-Spring-Cache的不足之处"><a href="#4-Spring-Cache的不足之处" class="headerlink" title="4)  Spring-Cache的不足之处"></a>4)  Spring-Cache的不足之处</h3><p><strong>1）、读模式</strong></p><p>缓存穿透：查询一个null数据。解决方案：缓存空数据，可通过<code>spring.cache.redis.cache-null-values=true</code></p><p>缓存击穿：大量并发进来同时查询一个正好过期的数据。解决方案：加锁 ? 默认是无加锁的;</p><p>使用sync = true来解决击穿问题</p><p>缓存雪崩：大量的key同时过期。解决：加随机时间。加上过期时间</p><p><strong>2)、写模式：（缓存与数据库一致）</strong></p><p>a、读写加锁。</p><p>b、引入Canal,感知到MySQL的更新去更新Redis</p><p>c 、读多写多，直接去数据库查询就行</p><p><strong>3）、总结：</strong></p><p>常规数据（读多写少，即时性，一致性要求不高的数据，完全可以使用Spring-Cache）：</p><p>写模式(只要缓存的数据有过期时间就足够了)</p><p>特殊数据：特殊设计</p><h1 id="检索"><a href="#检索" class="headerlink" title="检索"></a>检索</h1><h2 id="1-检索条件分析"><a href="#1-检索条件分析" class="headerlink" title="1. 检索条件分析"></a>1. 检索条件分析</h2><ul><li><p>全文检索：skuTitle-》keyword</p></li><li><p>排序：saleCount（销量）、hotScore（热度分）、skuPrice（价格）</p></li><li><p>过滤：hasStock、skuPrice区间、brandId、catalog3Id、attrs</p></li><li><p>聚合：attrs</p></li></ul><p>完整查询参数<br><code>keyword=小米&amp;sort=saleCount_desc/asc&amp;hasStock=0/1&amp;skuPrice=400_1900&amp;brandId=1&amp;catalog3Id=1&amp;at trs=1_3G:4G:5G&amp;attrs=2_骁龙845&amp;attrs=4_高清屏</code></p><h2 id="2-DSL分析"><a href="#2-DSL分析" class="headerlink" title="2. DSL分析"></a>2. DSL分析</h2><figure class="highlight json"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br><span class="line">116</span><br><span class="line">117</span><br><span class="line">118</span><br><span class="line">119</span><br><span class="line">120</span><br><span class="line">121</span><br><span class="line">122</span><br><span class="line">123</span><br><span class="line">124</span><br><span class="line">125</span><br><span class="line">126</span><br><span class="line">127</span><br><span class="line">128</span><br><span class="line">129</span><br><span class="line">130</span><br><span class="line">131</span><br><span class="line">132</span><br></pre></td><td class="code"><pre><span class="line">GET gulimall_product/_search</span><br><span class="line"><span class="punctuation">&#123;</span></span><br><span class="line">  <span class="attr">&quot;query&quot;</span><span class="punctuation">:</span> <span class="punctuation">&#123;</span></span><br><span class="line">    <span class="attr">&quot;bool&quot;</span><span class="punctuation">:</span> <span class="punctuation">&#123;</span></span><br><span class="line">      <span class="attr">&quot;must&quot;</span><span class="punctuation">:</span> <span class="punctuation">[</span></span><br><span class="line">        <span class="punctuation">&#123;</span></span><br><span class="line">          <span class="attr">&quot;match&quot;</span><span class="punctuation">:</span> <span class="punctuation">&#123;</span></span><br><span class="line">            <span class="attr">&quot;skuTitle&quot;</span><span class="punctuation">:</span> <span class="string">&quot;华为&quot;</span></span><br><span class="line">          <span class="punctuation">&#125;</span></span><br><span class="line">        <span class="punctuation">&#125;</span></span><br><span class="line">      <span class="punctuation">]</span><span class="punctuation">,</span></span><br><span class="line">      <span class="attr">&quot;filter&quot;</span><span class="punctuation">:</span> <span class="punctuation">[</span></span><br><span class="line">        <span class="punctuation">&#123;</span></span><br><span class="line">            <span class="attr">&quot;term&quot;</span><span class="punctuation">:</span> <span class="punctuation">&#123;</span></span><br><span class="line">              <span class="attr">&quot;catalogId&quot;</span><span class="punctuation">:</span> <span class="string">&quot;225&quot;</span></span><br><span class="line">            <span class="punctuation">&#125;</span></span><br><span class="line">        <span class="punctuation">&#125;</span><span class="punctuation">,</span></span><br><span class="line">        <span class="punctuation">&#123;</span></span><br><span class="line">            <span class="attr">&quot;terms&quot;</span><span class="punctuation">:</span> <span class="punctuation">&#123;</span></span><br><span class="line">            <span class="attr">&quot;brandId&quot;</span><span class="punctuation">:</span> <span class="punctuation">[</span></span><br><span class="line">              <span class="string">&quot;2&quot;</span></span><br><span class="line">            <span class="punctuation">]</span></span><br><span class="line">          <span class="punctuation">&#125;</span></span><br><span class="line">        <span class="punctuation">&#125;</span><span class="punctuation">,</span></span><br><span class="line">        <span class="punctuation">&#123;</span></span><br><span class="line">          <span class="attr">&quot;term&quot;</span><span class="punctuation">:</span> <span class="punctuation">&#123;</span></span><br><span class="line">            <span class="attr">&quot;hasStock&quot;</span><span class="punctuation">:</span> <span class="string">&quot;false&quot;</span></span><br><span class="line">          <span class="punctuation">&#125;</span></span><br><span class="line">        <span class="punctuation">&#125;</span><span class="punctuation">,</span></span><br><span class="line">        <span class="punctuation">&#123;</span></span><br><span class="line">          <span class="attr">&quot;range&quot;</span><span class="punctuation">:</span> <span class="punctuation">&#123;</span></span><br><span class="line">            <span class="attr">&quot;skuPrice&quot;</span><span class="punctuation">:</span> <span class="punctuation">&#123;</span></span><br><span class="line">              <span class="attr">&quot;gte&quot;</span><span class="punctuation">:</span> <span class="number">1000</span><span class="punctuation">,</span></span><br><span class="line">              <span class="attr">&quot;lte&quot;</span><span class="punctuation">:</span> <span class="number">7000</span></span><br><span class="line">            <span class="punctuation">&#125;</span></span><br><span class="line">          <span class="punctuation">&#125;</span></span><br><span class="line">        <span class="punctuation">&#125;</span><span class="punctuation">,</span></span><br><span class="line">        <span class="punctuation">&#123;</span></span><br><span class="line">          <span class="attr">&quot;nested&quot;</span><span class="punctuation">:</span> <span class="punctuation">&#123;</span></span><br><span class="line">            <span class="attr">&quot;path&quot;</span><span class="punctuation">:</span> <span class="string">&quot;attrs&quot;</span><span class="punctuation">,</span></span><br><span class="line">            <span class="attr">&quot;query&quot;</span><span class="punctuation">:</span> <span class="punctuation">&#123;</span></span><br><span class="line">              <span class="attr">&quot;bool&quot;</span><span class="punctuation">:</span> <span class="punctuation">&#123;</span></span><br><span class="line">                <span class="attr">&quot;must&quot;</span><span class="punctuation">:</span> <span class="punctuation">[</span></span><br><span class="line">                  <span class="punctuation">&#123;</span></span><br><span class="line">                    <span class="attr">&quot;term&quot;</span><span class="punctuation">:</span> <span class="punctuation">&#123;</span></span><br><span class="line">                      <span class="attr">&quot;attrs.attrId&quot;</span><span class="punctuation">:</span> <span class="punctuation">&#123;</span></span><br><span class="line">                        <span class="attr">&quot;value&quot;</span><span class="punctuation">:</span> <span class="string">&quot;6&quot;</span></span><br><span class="line">                      <span class="punctuation">&#125;</span></span><br><span class="line">                    <span class="punctuation">&#125;</span></span><br><span class="line">                  <span class="punctuation">&#125;</span></span><br><span class="line">                <span class="punctuation">]</span></span><br><span class="line">              <span class="punctuation">&#125;</span></span><br><span class="line">            <span class="punctuation">&#125;</span></span><br><span class="line">          <span class="punctuation">&#125;</span></span><br><span class="line">        <span class="punctuation">&#125;</span></span><br><span class="line">      <span class="punctuation">]</span></span><br><span class="line">    <span class="punctuation">&#125;</span></span><br><span class="line">  <span class="punctuation">&#125;</span><span class="punctuation">,</span></span><br><span class="line">  <span class="attr">&quot;sort&quot;</span><span class="punctuation">:</span> <span class="punctuation">[</span></span><br><span class="line">    <span class="punctuation">&#123;</span></span><br><span class="line">      <span class="attr">&quot;skuPrice&quot;</span><span class="punctuation">:</span> <span class="punctuation">&#123;</span></span><br><span class="line">        <span class="attr">&quot;order&quot;</span><span class="punctuation">:</span> <span class="string">&quot;desc&quot;</span></span><br><span class="line">      <span class="punctuation">&#125;</span></span><br><span class="line">    <span class="punctuation">&#125;</span></span><br><span class="line">  <span class="punctuation">]</span><span class="punctuation">,</span></span><br><span class="line">  <span class="attr">&quot;from&quot;</span><span class="punctuation">:</span> <span class="number">0</span><span class="punctuation">,</span></span><br><span class="line">  <span class="attr">&quot;size&quot;</span><span class="punctuation">:</span> <span class="number">5</span><span class="punctuation">,</span></span><br><span class="line">  <span class="attr">&quot;highlight&quot;</span><span class="punctuation">:</span> <span class="punctuation">&#123;</span></span><br><span class="line">    <span class="attr">&quot;fields&quot;</span><span class="punctuation">:</span> <span class="punctuation">&#123;</span><span class="attr">&quot;skuTitle&quot;</span><span class="punctuation">:</span> <span class="punctuation">&#123;</span><span class="punctuation">&#125;</span><span class="punctuation">&#125;</span><span class="punctuation">,</span></span><br><span class="line">    <span class="attr">&quot;pre_tags&quot;</span><span class="punctuation">:</span> <span class="string">&quot;&lt;b style=&#x27;color:red&#x27;&gt;&quot;</span><span class="punctuation">,</span> </span><br><span class="line">    <span class="attr">&quot;post_tags&quot;</span><span class="punctuation">:</span> <span class="string">&quot;&lt;/b&gt;&quot;</span></span><br><span class="line">  <span class="punctuation">&#125;</span><span class="punctuation">,</span></span><br><span class="line">  <span class="attr">&quot;aggs&quot;</span><span class="punctuation">:</span> <span class="punctuation">&#123;</span></span><br><span class="line">    <span class="attr">&quot;brandAgg&quot;</span><span class="punctuation">:</span> <span class="punctuation">&#123;</span></span><br><span class="line">      <span class="attr">&quot;terms&quot;</span><span class="punctuation">:</span> <span class="punctuation">&#123;</span></span><br><span class="line">        <span class="attr">&quot;field&quot;</span><span class="punctuation">:</span> <span class="string">&quot;brandId&quot;</span><span class="punctuation">,</span></span><br><span class="line">        <span class="attr">&quot;size&quot;</span><span class="punctuation">:</span> <span class="number">10</span></span><br><span class="line">      <span class="punctuation">&#125;</span><span class="punctuation">,</span></span><br><span class="line">      <span class="attr">&quot;aggs&quot;</span><span class="punctuation">:</span> <span class="punctuation">&#123;</span></span><br><span class="line">        <span class="attr">&quot;brandNameAgg&quot;</span><span class="punctuation">:</span> <span class="punctuation">&#123;</span></span><br><span class="line">          <span class="attr">&quot;terms&quot;</span><span class="punctuation">:</span> <span class="punctuation">&#123;</span></span><br><span class="line">            <span class="attr">&quot;field&quot;</span><span class="punctuation">:</span> <span class="string">&quot;brandName&quot;</span><span class="punctuation">,</span></span><br><span class="line">            <span class="attr">&quot;size&quot;</span><span class="punctuation">:</span> <span class="number">10</span></span><br><span class="line">          <span class="punctuation">&#125;</span></span><br><span class="line">        <span class="punctuation">&#125;</span><span class="punctuation">,</span></span><br><span class="line">      </span><br><span class="line">        <span class="attr">&quot;brandImgAgg&quot;</span><span class="punctuation">:</span> <span class="punctuation">&#123;</span></span><br><span class="line">          <span class="attr">&quot;terms&quot;</span><span class="punctuation">:</span> <span class="punctuation">&#123;</span></span><br><span class="line">            <span class="attr">&quot;field&quot;</span><span class="punctuation">:</span> <span class="string">&quot;brandImg&quot;</span><span class="punctuation">,</span></span><br><span class="line">            <span class="attr">&quot;size&quot;</span><span class="punctuation">:</span> <span class="number">10</span></span><br><span class="line">          <span class="punctuation">&#125;</span></span><br><span class="line">        <span class="punctuation">&#125;</span></span><br><span class="line">        </span><br><span class="line">      <span class="punctuation">&#125;</span></span><br><span class="line">    <span class="punctuation">&#125;</span><span class="punctuation">,</span></span><br><span class="line">    <span class="attr">&quot;catalogAgg&quot;</span><span class="punctuation">:</span><span class="punctuation">&#123;</span></span><br><span class="line">      <span class="attr">&quot;terms&quot;</span><span class="punctuation">:</span> <span class="punctuation">&#123;</span></span><br><span class="line">        <span class="attr">&quot;field&quot;</span><span class="punctuation">:</span> <span class="string">&quot;catalogId&quot;</span><span class="punctuation">,</span></span><br><span class="line">        <span class="attr">&quot;size&quot;</span><span class="punctuation">:</span> <span class="number">10</span></span><br><span class="line">      <span class="punctuation">&#125;</span><span class="punctuation">,</span></span><br><span class="line">      <span class="attr">&quot;aggs&quot;</span><span class="punctuation">:</span> <span class="punctuation">&#123;</span></span><br><span class="line">        <span class="attr">&quot;catalogNameAgg&quot;</span><span class="punctuation">:</span> <span class="punctuation">&#123;</span></span><br><span class="line">          <span class="attr">&quot;terms&quot;</span><span class="punctuation">:</span> <span class="punctuation">&#123;</span></span><br><span class="line">            <span class="attr">&quot;field&quot;</span><span class="punctuation">:</span> <span class="string">&quot;catalogName&quot;</span><span class="punctuation">,</span></span><br><span class="line">            <span class="attr">&quot;size&quot;</span><span class="punctuation">:</span> <span class="number">10</span></span><br><span class="line">          <span class="punctuation">&#125;</span></span><br><span class="line">        <span class="punctuation">&#125;</span></span><br><span class="line">      <span class="punctuation">&#125;</span></span><br><span class="line">    <span class="punctuation">&#125;</span><span class="punctuation">,</span></span><br><span class="line">    <span class="attr">&quot;attrs&quot;</span><span class="punctuation">:</span><span class="punctuation">&#123;</span></span><br><span class="line">      <span class="attr">&quot;nested&quot;</span><span class="punctuation">:</span> <span class="punctuation">&#123;</span></span><br><span class="line">        <span class="attr">&quot;path&quot;</span><span class="punctuation">:</span> <span class="string">&quot;attrs&quot;</span></span><br><span class="line">      <span class="punctuation">&#125;</span><span class="punctuation">,</span></span><br><span class="line">      <span class="attr">&quot;aggs&quot;</span><span class="punctuation">:</span> <span class="punctuation">&#123;</span></span><br><span class="line">        <span class="attr">&quot;attrIdAgg&quot;</span><span class="punctuation">:</span> <span class="punctuation">&#123;</span></span><br><span class="line">          <span class="attr">&quot;terms&quot;</span><span class="punctuation">:</span> <span class="punctuation">&#123;</span></span><br><span class="line">            <span class="attr">&quot;field&quot;</span><span class="punctuation">:</span> <span class="string">&quot;attrs.attrId&quot;</span><span class="punctuation">,</span></span><br><span class="line">            <span class="attr">&quot;size&quot;</span><span class="punctuation">:</span> <span class="number">10</span></span><br><span class="line">          <span class="punctuation">&#125;</span><span class="punctuation">,</span></span><br><span class="line">          <span class="attr">&quot;aggs&quot;</span><span class="punctuation">:</span> <span class="punctuation">&#123;</span></span><br><span class="line">            <span class="attr">&quot;attrNameAgg&quot;</span><span class="punctuation">:</span> <span class="punctuation">&#123;</span></span><br><span class="line">              <span class="attr">&quot;terms&quot;</span><span class="punctuation">:</span> <span class="punctuation">&#123;</span></span><br><span class="line">                <span class="attr">&quot;field&quot;</span><span class="punctuation">:</span> <span class="string">&quot;attrs.attrName&quot;</span><span class="punctuation">,</span></span><br><span class="line">                <span class="attr">&quot;size&quot;</span><span class="punctuation">:</span> <span class="number">10</span></span><br><span class="line">              <span class="punctuation">&#125;</span></span><br><span class="line">            <span class="punctuation">&#125;</span></span><br><span class="line">          <span class="punctuation">&#125;</span></span><br><span class="line">        <span class="punctuation">&#125;</span></span><br><span class="line">      <span class="punctuation">&#125;</span></span><br><span class="line">    <span class="punctuation">&#125;</span></span><br><span class="line">  <span class="punctuation">&#125;</span></span><br><span class="line"><span class="punctuation">&#125;</span></span><br></pre></td></tr></table></figure><h2 id="3-检索代码编写"><a href="#3-检索代码编写" class="headerlink" title="3. 检索代码编写"></a>3. 检索代码编写</h2><h3 id="1-请求参数和返回结果"><a href="#1-请求参数和返回结果" class="headerlink" title="1) 请求参数和返回结果"></a>1) 请求参数和返回结果</h3><p>请求参数的封装</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">@Data</span></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">SearchParam</span> &#123;</span><br><span class="line">    <span class="comment">//页面传递过来的全文匹配关键字</span></span><br><span class="line">    <span class="keyword">private</span> String keyword;</span><br><span class="line"></span><br><span class="line">    <span class="comment">//品牌id,可以多选</span></span><br><span class="line">    <span class="keyword">private</span> List&lt;Long&gt; brandId;</span><br><span class="line"></span><br><span class="line">    <span class="comment">//三级分类id</span></span><br><span class="line">    <span class="keyword">private</span> Long catalog3Id;</span><br><span class="line"></span><br><span class="line">    <span class="comment">//排序条件：sort=price/salecount/hotscore_desc/asc</span></span><br><span class="line">    <span class="keyword">private</span> String sort;</span><br><span class="line"></span><br><span class="line">    <span class="comment">//是否显示有货</span></span><br><span class="line">    <span class="keyword">private</span> Integer hasStock;</span><br><span class="line"></span><br><span class="line">    <span class="comment">//价格区间查询</span></span><br><span class="line">    <span class="keyword">private</span> String skuPrice;</span><br><span class="line"></span><br><span class="line">    <span class="comment">//按照属性进行筛选</span></span><br><span class="line">    <span class="keyword">private</span> List&lt;String&gt; attrs;</span><br><span class="line"></span><br><span class="line">    <span class="comment">//页码</span></span><br><span class="line">    <span class="keyword">private</span> <span class="type">Integer</span> <span class="variable">pageNum</span> <span class="operator">=</span> <span class="number">1</span>;</span><br><span class="line"></span><br><span class="line">    <span class="comment">//原生的所有查询条件</span></span><br><span class="line">    <span class="keyword">private</span> String _queryString;</span><br><span class="line"></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>返回结果</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">@Data</span></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">SearchResult</span> &#123;</span><br><span class="line">    <span class="comment">//查询到的所有商品信息</span></span><br><span class="line">    <span class="keyword">private</span> List&lt;SkuEsModel&gt; product;</span><br><span class="line"></span><br><span class="line">    <span class="comment">//当前页码</span></span><br><span class="line">    <span class="keyword">private</span> Integer pageNum;</span><br><span class="line"></span><br><span class="line">    <span class="comment">//总记录数</span></span><br><span class="line">    <span class="keyword">private</span> Long total;</span><br><span class="line"></span><br><span class="line">    <span class="comment">//总页码</span></span><br><span class="line">    <span class="keyword">private</span> Integer totalPages;</span><br><span class="line"><span class="comment">//页码遍历结果集(分页)</span></span><br><span class="line">    <span class="keyword">private</span> List&lt;Integer&gt; pageNavs;</span><br><span class="line"></span><br><span class="line">    <span class="comment">//当前查询到的结果，所有涉及到的品牌</span></span><br><span class="line">    <span class="keyword">private</span> List&lt;BrandVo&gt; brands;</span><br><span class="line"></span><br><span class="line">    <span class="comment">//当前查询到的结果，所有涉及到的所有属性</span></span><br><span class="line">    <span class="keyword">private</span> List&lt;AttrVo&gt; attrs;</span><br><span class="line"></span><br><span class="line">    <span class="comment">//当前查询到的结果，所有涉及到的所有分类</span></span><br><span class="line">    <span class="keyword">private</span> List&lt;CatalogVo&gt; catalogs;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">    <span class="comment">//===========================以上是返回给页面的所有信息============================//</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line">    <span class="comment">/* 面包屑导航数据 */</span></span><br><span class="line">    <span class="keyword">private</span> List&lt;NavVo&gt; navs;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Data</span></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">class</span> <span class="title class_">NavVo</span> &#123;</span><br><span class="line">        <span class="keyword">private</span> String navName;</span><br><span class="line">        <span class="keyword">private</span> String navValue;</span><br><span class="line">        <span class="keyword">private</span> String link;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">    <span class="meta">@Data</span></span><br><span class="line">    <span class="meta">@AllArgsConstructor</span></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">class</span> <span class="title class_">BrandVo</span> &#123;</span><br><span class="line"></span><br><span class="line">        <span class="keyword">private</span> Long brandId;</span><br><span class="line"></span><br><span class="line">        <span class="keyword">private</span> String brandName;</span><br><span class="line"></span><br><span class="line">        <span class="keyword">private</span> String brandImg;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">    <span class="meta">@Data</span></span><br><span class="line">    <span class="meta">@AllArgsConstructor</span></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">class</span> <span class="title class_">AttrVo</span> &#123;</span><br><span class="line"></span><br><span class="line">        <span class="keyword">private</span> Long attrId;</span><br><span class="line"></span><br><span class="line">        <span class="keyword">private</span> String attrName;</span><br><span class="line"></span><br><span class="line">        <span class="keyword">private</span> List&lt;String&gt; attrValue;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">    <span class="meta">@Data</span></span><br><span class="line">    <span class="meta">@AllArgsConstructor</span></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">class</span> <span class="title class_">CatalogVo</span> &#123;</span><br><span class="line"></span><br><span class="line">        <span class="keyword">private</span> Long catalogId;</span><br><span class="line"></span><br><span class="line">        <span class="keyword">private</span> String catalogName;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="2-主体逻辑"><a href="#2-主体逻辑" class="headerlink" title="2)  主体逻辑"></a>2)  主体逻辑</h3><p>主要逻辑在service层进行，service层将封装好的<code>SearchParam</code>组建查询条件，再将返回后的结果封装成<code>SearchResult</code></p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">@GetMapping(value = &#123;&quot;/search.html&quot;,&quot;/&quot;&#125;)</span></span><br><span class="line">   <span class="keyword">public</span> String <span class="title function_">getSearchPage</span><span class="params">(SearchParam searchParam, Model model, HttpServletRequest request)</span> &#123;</span><br><span class="line">       searchParam.set_queryString(request.getQueryString());</span><br><span class="line">       SearchResult result=searchService.getSearchResult(searchParam);</span><br><span class="line">       model.addAttribute(<span class="string">&quot;result&quot;</span>, result);</span><br><span class="line">       <span class="keyword">return</span> <span class="string">&quot;search&quot;</span>;</span><br><span class="line">   &#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> SearchResult <span class="title function_">getSearchResult</span><span class="params">(SearchParam searchParam)</span> &#123;</span><br><span class="line">       SearchResult searchResult= <span class="literal">null</span>;</span><br><span class="line">       <span class="comment">//通过请求参数构建查询请求</span></span><br><span class="line">       <span class="type">SearchRequest</span> <span class="variable">request</span> <span class="operator">=</span> bulidSearchRequest(searchParam);</span><br><span class="line">       <span class="keyword">try</span> &#123;</span><br><span class="line">           <span class="type">SearchResponse</span> <span class="variable">searchResponse</span> <span class="operator">=</span> restHighLevelClient.search(request, GulimallElasticSearchConfig.COMMON_OPTIONS);</span><br><span class="line">           <span class="comment">//将es响应数据封装成结果</span></span><br><span class="line">           searchResult = bulidSearchResult(searchParam,searchResponse);</span><br><span class="line">       &#125; <span class="keyword">catch</span> (IOException e) &#123;</span><br><span class="line">           e.printStackTrace();</span><br><span class="line">       &#125;</span><br><span class="line">       <span class="keyword">return</span> searchResult;</span><br><span class="line">   &#125;</span><br></pre></td></tr></table></figure><h3 id="3-构建查询条件"><a href="#3-构建查询条件" class="headerlink" title="3)  构建查询条件"></a>3)  构建查询条件</h3><p>这一部分就是对着前面分析的DSL，将每个条件封装进请求中</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">private</span> SearchRequest <span class="title function_">bulidSearchRequest</span><span class="params">(SearchParam searchParam)</span> &#123;</span><br><span class="line">        <span class="type">SearchSourceBuilder</span> <span class="variable">searchSourceBuilder</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">SearchSourceBuilder</span>();</span><br><span class="line">        <span class="comment">//1. 构建bool query</span></span><br><span class="line">        <span class="type">BoolQueryBuilder</span> <span class="variable">boolQueryBuilder</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">BoolQueryBuilder</span>();</span><br><span class="line">        <span class="comment">//1.1 bool must</span></span><br><span class="line">        <span class="keyword">if</span> (!StringUtils.isEmpty(searchParam.getKeyword())) &#123;</span><br><span class="line">            boolQueryBuilder.must(QueryBuilders.matchQuery(<span class="string">&quot;skuTitle&quot;</span>, searchParam.getKeyword()));</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        <span class="comment">//1.2 bool filter</span></span><br><span class="line">        <span class="comment">//1.2.1 catalog</span></span><br><span class="line">        <span class="keyword">if</span> (searchParam.getCatalog3Id()!=<span class="literal">null</span>)&#123;</span><br><span class="line">            boolQueryBuilder.filter(QueryBuilders.termQuery(<span class="string">&quot;catalogId&quot;</span>, searchParam.getCatalog3Id()));</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="comment">//1.2.2 brand</span></span><br><span class="line">        <span class="keyword">if</span> (searchParam.getBrandId()!=<span class="literal">null</span>&amp;&amp;searchParam.getBrandId().size()&gt;<span class="number">0</span>) &#123;</span><br><span class="line">            boolQueryBuilder.filter(QueryBuilders.termsQuery(<span class="string">&quot;brandId&quot;</span>,searchParam.getBrandId()));</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="comment">//1.2.3 hasStock</span></span><br><span class="line">        <span class="keyword">if</span> (searchParam.getHasStock() != <span class="literal">null</span>) &#123;</span><br><span class="line">            boolQueryBuilder.filter(QueryBuilders.termQuery(<span class="string">&quot;hasStock&quot;</span>, searchParam.getHasStock() == <span class="number">1</span>));</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="comment">//1.2.4 priceRange</span></span><br><span class="line">        <span class="type">RangeQueryBuilder</span> <span class="variable">rangeQueryBuilder</span> <span class="operator">=</span> QueryBuilders.rangeQuery(<span class="string">&quot;skuPrice&quot;</span>);</span><br><span class="line">        <span class="keyword">if</span> (!StringUtils.isEmpty(searchParam.getSkuPrice())) &#123;</span><br><span class="line">            String[] prices = searchParam.getSkuPrice().split(<span class="string">&quot;_&quot;</span>);</span><br><span class="line">            <span class="keyword">if</span> (prices.length == <span class="number">1</span>) &#123;</span><br><span class="line">                <span class="keyword">if</span> (searchParam.getSkuPrice().startsWith(<span class="string">&quot;_&quot;</span>)) &#123;</span><br><span class="line">                    rangeQueryBuilder.lte(Integer.parseInt(prices[<span class="number">0</span>]));</span><br><span class="line">                &#125;<span class="keyword">else</span> &#123;</span><br><span class="line">                    rangeQueryBuilder.gte(Integer.parseInt(prices[<span class="number">0</span>]));</span><br><span class="line">                &#125;</span><br><span class="line">            &#125; <span class="keyword">else</span> <span class="keyword">if</span> (prices.length == <span class="number">2</span>) &#123;</span><br><span class="line">                <span class="comment">//_6000会截取成[&quot;&quot;,&quot;6000&quot;]</span></span><br><span class="line">                <span class="keyword">if</span> (!prices[<span class="number">0</span>].isEmpty()) &#123;</span><br><span class="line">                    rangeQueryBuilder.gte(Integer.parseInt(prices[<span class="number">0</span>]));</span><br><span class="line">                &#125;</span><br><span class="line">                rangeQueryBuilder.lte(Integer.parseInt(prices[<span class="number">1</span>]));</span><br><span class="line">            &#125;</span><br><span class="line">            boolQueryBuilder.filter(rangeQueryBuilder);</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="comment">//1.2.5 attrs-nested</span></span><br><span class="line">        <span class="comment">//attrs=1_5寸:8寸&amp;2_16G:8G</span></span><br><span class="line">        List&lt;String&gt; attrs = searchParam.getAttrs();</span><br><span class="line">        <span class="type">BoolQueryBuilder</span> <span class="variable">queryBuilder</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">BoolQueryBuilder</span>();</span><br><span class="line">        <span class="keyword">if</span> (attrs!=<span class="literal">null</span>&amp;&amp;attrs.size() &gt; <span class="number">0</span>) &#123;</span><br><span class="line">            attrs.forEach(attr-&gt;&#123;</span><br><span class="line">                String[] attrSplit = attr.split(<span class="string">&quot;_&quot;</span>);</span><br><span class="line">                queryBuilder.must(QueryBuilders.termQuery(<span class="string">&quot;attrs.attrId&quot;</span>, attrSplit[<span class="number">0</span>]));</span><br><span class="line">                String[] attrValues = attrSplit[<span class="number">1</span>].split(<span class="string">&quot;:&quot;</span>);</span><br><span class="line">                queryBuilder.must(QueryBuilders.termsQuery(<span class="string">&quot;attrs.attrValue&quot;</span>, attrValues));</span><br><span class="line">            &#125;);</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="type">NestedQueryBuilder</span> <span class="variable">nestedQueryBuilder</span> <span class="operator">=</span> QueryBuilders.nestedQuery(<span class="string">&quot;attrs&quot;</span>, queryBuilder, ScoreMode.None);</span><br><span class="line">        boolQueryBuilder.filter(nestedQueryBuilder);</span><br><span class="line">        <span class="comment">//1. bool query构建完成</span></span><br><span class="line">        searchSourceBuilder.query(boolQueryBuilder);</span><br><span class="line"></span><br><span class="line">        <span class="comment">//2. sort  eg:sort=saleCount_desc/asc</span></span><br><span class="line">        <span class="keyword">if</span> (!StringUtils.isEmpty(searchParam.getSort())) &#123;</span><br><span class="line">            String[] sortSplit = searchParam.getSort().split(<span class="string">&quot;_&quot;</span>);</span><br><span class="line">            searchSourceBuilder.sort(sortSplit[<span class="number">0</span>], sortSplit[<span class="number">1</span>].equalsIgnoreCase(<span class="string">&quot;asc&quot;</span>) ? SortOrder.ASC : SortOrder.DESC);</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        <span class="comment">//3. 分页</span></span><br><span class="line">        searchSourceBuilder.from((searchParam.getPageNum() - <span class="number">1</span>) * EsConstant.PRODUCT_PAGESIZE);</span><br><span class="line">        searchSourceBuilder.size(EsConstant.PRODUCT_PAGESIZE);</span><br><span class="line"></span><br><span class="line">        <span class="comment">//4. 高亮highlight</span></span><br><span class="line">        <span class="keyword">if</span> (!StringUtils.isEmpty(searchParam.getKeyword())) &#123;</span><br><span class="line">            <span class="type">HighlightBuilder</span> <span class="variable">highlightBuilder</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">HighlightBuilder</span>();</span><br><span class="line">            highlightBuilder.field(<span class="string">&quot;skuTitle&quot;</span>);</span><br><span class="line">            highlightBuilder.preTags(<span class="string">&quot;&lt;b style=&#x27;color:red&#x27;&gt;&quot;</span>);</span><br><span class="line">            highlightBuilder.postTags(<span class="string">&quot;&lt;/b&gt;&quot;</span>);</span><br><span class="line">            searchSourceBuilder.highlighter(highlightBuilder);</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        <span class="comment">//5. 聚合</span></span><br><span class="line">        <span class="comment">//5.1 按照brand聚合</span></span><br><span class="line">        <span class="type">TermsAggregationBuilder</span> <span class="variable">brandAgg</span> <span class="operator">=</span> AggregationBuilders.terms(<span class="string">&quot;brandAgg&quot;</span>).field(<span class="string">&quot;brandId&quot;</span>);</span><br><span class="line">        <span class="type">TermsAggregationBuilder</span> <span class="variable">brandNameAgg</span> <span class="operator">=</span> AggregationBuilders.terms(<span class="string">&quot;brandNameAgg&quot;</span>).field(<span class="string">&quot;brandName&quot;</span>);</span><br><span class="line">        <span class="type">TermsAggregationBuilder</span> <span class="variable">brandImgAgg</span> <span class="operator">=</span> AggregationBuilders.terms(<span class="string">&quot;brandImgAgg&quot;</span>).field(<span class="string">&quot;brandImg&quot;</span>);</span><br><span class="line">        brandAgg.subAggregation(brandNameAgg);</span><br><span class="line">        brandAgg.subAggregation(brandImgAgg);</span><br><span class="line">        searchSourceBuilder.aggregation(brandAgg);</span><br><span class="line"></span><br><span class="line">        <span class="comment">//5.2 按照catalog聚合</span></span><br><span class="line">        <span class="type">TermsAggregationBuilder</span> <span class="variable">catalogAgg</span> <span class="operator">=</span> AggregationBuilders.terms(<span class="string">&quot;catalogAgg&quot;</span>).field(<span class="string">&quot;catalogId&quot;</span>);</span><br><span class="line">        <span class="type">TermsAggregationBuilder</span> <span class="variable">catalogNameAgg</span> <span class="operator">=</span> AggregationBuilders.terms(<span class="string">&quot;catalogNameAgg&quot;</span>).field(<span class="string">&quot;catalogName&quot;</span>);</span><br><span class="line">        catalogAgg.subAggregation(catalogNameAgg);</span><br><span class="line">        searchSourceBuilder.aggregation(catalogAgg);</span><br><span class="line"></span><br><span class="line">        <span class="comment">//5.3 按照attrs聚合</span></span><br><span class="line">        <span class="type">NestedAggregationBuilder</span> <span class="variable">nestedAggregationBuilder</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">NestedAggregationBuilder</span>(<span class="string">&quot;attrs&quot;</span>, <span class="string">&quot;attrs&quot;</span>);</span><br><span class="line">        <span class="comment">//按照attrId聚合</span></span><br><span class="line">        <span class="type">TermsAggregationBuilder</span> <span class="variable">attrIdAgg</span> <span class="operator">=</span> AggregationBuilders.terms(<span class="string">&quot;attrIdAgg&quot;</span>).field(<span class="string">&quot;attrs.attrId&quot;</span>);</span><br><span class="line">        <span class="comment">//按照attrId聚合之后再按照attrName和attrValue聚合</span></span><br><span class="line">        <span class="type">TermsAggregationBuilder</span> <span class="variable">attrNameAgg</span> <span class="operator">=</span> AggregationBuilders.terms(<span class="string">&quot;attrNameAgg&quot;</span>).field(<span class="string">&quot;attrs.attrName&quot;</span>);</span><br><span class="line">        <span class="type">TermsAggregationBuilder</span> <span class="variable">attrValueAgg</span> <span class="operator">=</span> AggregationBuilders.terms(<span class="string">&quot;attrValueAgg&quot;</span>).field(<span class="string">&quot;attrs.attrValue&quot;</span>);</span><br><span class="line">        attrIdAgg.subAggregation(attrNameAgg);</span><br><span class="line">        attrIdAgg.subAggregation(attrValueAgg);</span><br><span class="line"></span><br><span class="line">        nestedAggregationBuilder.subAggregation(attrIdAgg);</span><br><span class="line">        searchSourceBuilder.aggregation(nestedAggregationBuilder);</span><br><span class="line"></span><br><span class="line">        log.debug(<span class="string">&quot;构建的DSL语句 &#123;&#125;&quot;</span>,searchSourceBuilder.toString());</span><br><span class="line"></span><br><span class="line">        <span class="type">SearchRequest</span> <span class="variable">request</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">SearchRequest</span>(<span class="keyword">new</span> <span class="title class_">String</span>[]&#123;EsConstant.PRODUCT_INDEX&#125;, searchSourceBuilder);</span><br><span class="line">        <span class="keyword">return</span> request;</span><br><span class="line">    &#125;</span><br></pre></td></tr></table></figure><h3 id="4-封装响应结果"><a href="#4-封装响应结果" class="headerlink" title="4) 封装响应结果"></a>4) 封装响应结果</h3><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br><span class="line">116</span><br><span class="line">117</span><br><span class="line">118</span><br><span class="line">119</span><br><span class="line">120</span><br><span class="line">121</span><br><span class="line">122</span><br><span class="line">123</span><br><span class="line">124</span><br><span class="line">125</span><br><span class="line">126</span><br><span class="line">127</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">private</span> SearchResult <span class="title function_">bulidSearchResult</span><span class="params">(SearchParam searchParam, SearchResponse searchResponse)</span> &#123;</span><br><span class="line">    <span class="type">SearchResult</span> <span class="variable">result</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">SearchResult</span>();</span><br><span class="line">    <span class="type">SearchHits</span> <span class="variable">hits</span> <span class="operator">=</span> searchResponse.getHits();</span><br><span class="line">    <span class="comment">//1. 封装查询到的商品信息</span></span><br><span class="line">    <span class="keyword">if</span> (hits.getHits()!=<span class="literal">null</span>&amp;&amp;hits.getHits().length&gt;<span class="number">0</span>)&#123;</span><br><span class="line">        List&lt;SkuEsModel&gt; skuEsModels = <span class="keyword">new</span> <span class="title class_">ArrayList</span>&lt;&gt;();</span><br><span class="line">        <span class="keyword">for</span> (SearchHit hit : hits) &#123;</span><br><span class="line">            <span class="type">String</span> <span class="variable">sourceAsString</span> <span class="operator">=</span> hit.getSourceAsString();</span><br><span class="line">            <span class="type">SkuEsModel</span> <span class="variable">skuEsModel</span> <span class="operator">=</span> JSON.parseObject(sourceAsString, SkuEsModel.class);</span><br><span class="line">            <span class="comment">//设置高亮属性</span></span><br><span class="line">            <span class="keyword">if</span> (!StringUtils.isEmpty(searchParam.getKeyword())) &#123;</span><br><span class="line">                <span class="type">HighlightField</span> <span class="variable">skuTitle</span> <span class="operator">=</span> hit.getHighlightFields().get(<span class="string">&quot;skuTitle&quot;</span>);</span><br><span class="line">                <span class="type">String</span> <span class="variable">highLight</span> <span class="operator">=</span> skuTitle.getFragments()[<span class="number">0</span>].string();</span><br><span class="line">                skuEsModel.setSkuTitle(highLight);</span><br><span class="line">            &#125;</span><br><span class="line">            skuEsModels.add(skuEsModel);</span><br><span class="line">        &#125;</span><br><span class="line">        result.setProduct(skuEsModels);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">//2. 封装分页信息</span></span><br><span class="line">    <span class="comment">//2.1 当前页码</span></span><br><span class="line">    result.setPageNum(searchParam.getPageNum());</span><br><span class="line">    <span class="comment">//2.2 总记录数</span></span><br><span class="line">    <span class="type">long</span> <span class="variable">total</span> <span class="operator">=</span> hits.getTotalHits().value;</span><br><span class="line">    result.setTotal(total);</span><br><span class="line">    <span class="comment">//2.3 总页码</span></span><br><span class="line">    <span class="type">Integer</span> <span class="variable">totalPages</span> <span class="operator">=</span> (<span class="type">int</span>)total % EsConstant.PRODUCT_PAGESIZE == <span class="number">0</span> ?</span><br><span class="line">            (<span class="type">int</span>)total / EsConstant.PRODUCT_PAGESIZE : (<span class="type">int</span>)total / EsConstant.PRODUCT_PAGESIZE + <span class="number">1</span>;</span><br><span class="line">    result.setTotalPages(totalPages);</span><br><span class="line">    List&lt;Integer&gt; pageNavs = <span class="keyword">new</span> <span class="title class_">ArrayList</span>&lt;&gt;();</span><br><span class="line">    <span class="keyword">for</span> (<span class="type">int</span> <span class="variable">i</span> <span class="operator">=</span> <span class="number">1</span>; i &lt;= totalPages; i++) &#123;</span><br><span class="line">        pageNavs.add(i);</span><br><span class="line">    &#125;</span><br><span class="line">    result.setPageNavs(pageNavs);</span><br><span class="line"></span><br><span class="line">    <span class="comment">//3. 查询结果涉及到的品牌</span></span><br><span class="line">    List&lt;SearchResult.BrandVo&gt; brandVos = <span class="keyword">new</span> <span class="title class_">ArrayList</span>&lt;&gt;();</span><br><span class="line">    <span class="type">Aggregations</span> <span class="variable">aggregations</span> <span class="operator">=</span> searchResponse.getAggregations();</span><br><span class="line">    <span class="comment">//ParsedLongTerms用于接收terms聚合的结果，并且可以把key转化为Long类型的数据</span></span><br><span class="line">    <span class="type">ParsedLongTerms</span> <span class="variable">brandAgg</span> <span class="operator">=</span> aggregations.get(<span class="string">&quot;brandAgg&quot;</span>);</span><br><span class="line">    <span class="keyword">for</span> (Terms.Bucket bucket : brandAgg.getBuckets()) &#123;</span><br><span class="line">        <span class="comment">//3.1 得到品牌id</span></span><br><span class="line">        <span class="type">Long</span> <span class="variable">brandId</span> <span class="operator">=</span> bucket.getKeyAsNumber().longValue();</span><br><span class="line"></span><br><span class="line">        <span class="type">Aggregations</span> <span class="variable">subBrandAggs</span> <span class="operator">=</span> bucket.getAggregations();</span><br><span class="line">        <span class="comment">//3.2 得到品牌图片</span></span><br><span class="line">        ParsedStringTerms brandImgAgg=subBrandAggs.get(<span class="string">&quot;brandImgAgg&quot;</span>);</span><br><span class="line">        <span class="type">String</span> <span class="variable">brandImg</span> <span class="operator">=</span> brandImgAgg.getBuckets().get(<span class="number">0</span>).getKeyAsString();</span><br><span class="line">        <span class="comment">//3.3 得到品牌名字</span></span><br><span class="line">        Terms brandNameAgg=subBrandAggs.get(<span class="string">&quot;brandNameAgg&quot;</span>);</span><br><span class="line">        <span class="type">String</span> <span class="variable">brandName</span> <span class="operator">=</span> brandNameAgg.getBuckets().get(<span class="number">0</span>).getKeyAsString();</span><br><span class="line">        SearchResult.<span class="type">BrandVo</span> <span class="variable">brandVo</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">SearchResult</span>.BrandVo(brandId, brandName, brandImg);</span><br><span class="line">        brandVos.add(brandVo);</span><br><span class="line">    &#125;</span><br><span class="line">    result.setBrands(brandVos);</span><br><span class="line"></span><br><span class="line">    <span class="comment">//4. 查询涉及到的所有分类</span></span><br><span class="line">    List&lt;SearchResult.CatalogVo&gt; catalogVos = <span class="keyword">new</span> <span class="title class_">ArrayList</span>&lt;&gt;();</span><br><span class="line">    <span class="type">ParsedLongTerms</span> <span class="variable">catalogAgg</span> <span class="operator">=</span> aggregations.get(<span class="string">&quot;catalogAgg&quot;</span>);</span><br><span class="line">    <span class="keyword">for</span> (Terms.Bucket bucket : catalogAgg.getBuckets()) &#123;</span><br><span class="line">        <span class="comment">//4.1 获取分类id</span></span><br><span class="line">        <span class="type">Long</span> <span class="variable">catalogId</span> <span class="operator">=</span> bucket.getKeyAsNumber().longValue();</span><br><span class="line">        <span class="type">Aggregations</span> <span class="variable">subcatalogAggs</span> <span class="operator">=</span> bucket.getAggregations();</span><br><span class="line">        <span class="comment">//4.2 获取分类名</span></span><br><span class="line">        ParsedStringTerms catalogNameAgg=subcatalogAggs.get(<span class="string">&quot;catalogNameAgg&quot;</span>);</span><br><span class="line">        <span class="type">String</span> <span class="variable">catalogName</span> <span class="operator">=</span> catalogNameAgg.getBuckets().get(<span class="number">0</span>).getKeyAsString();</span><br><span class="line">        SearchResult.<span class="type">CatalogVo</span> <span class="variable">catalogVo</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">SearchResult</span>.CatalogVo(catalogId, catalogName);</span><br><span class="line">        catalogVos.add(catalogVo);</span><br><span class="line">    &#125;</span><br><span class="line">    result.setCatalogs(catalogVos);</span><br><span class="line"></span><br><span class="line">    <span class="comment">//5 查询涉及到的所有属性</span></span><br><span class="line">    List&lt;SearchResult.AttrVo&gt; attrVos = <span class="keyword">new</span> <span class="title class_">ArrayList</span>&lt;&gt;();</span><br><span class="line">    <span class="comment">//ParsedNested用于接收内置属性的聚合</span></span><br><span class="line">    ParsedNested parsedNested=aggregations.get(<span class="string">&quot;attrs&quot;</span>);</span><br><span class="line">    ParsedLongTerms attrIdAgg=parsedNested.getAggregations().get(<span class="string">&quot;attrIdAgg&quot;</span>);</span><br><span class="line">    <span class="keyword">for</span> (Terms.Bucket bucket : attrIdAgg.getBuckets()) &#123;</span><br><span class="line">        <span class="comment">//5.1 查询属性id</span></span><br><span class="line">        <span class="type">Long</span> <span class="variable">attrId</span> <span class="operator">=</span> bucket.getKeyAsNumber().longValue();</span><br><span class="line"></span><br><span class="line">        <span class="type">Aggregations</span> <span class="variable">subAttrAgg</span> <span class="operator">=</span> bucket.getAggregations();</span><br><span class="line">        <span class="comment">//5.2 查询属性名</span></span><br><span class="line">        ParsedStringTerms attrNameAgg=subAttrAgg.get(<span class="string">&quot;attrNameAgg&quot;</span>);</span><br><span class="line">        <span class="type">String</span> <span class="variable">attrName</span> <span class="operator">=</span> attrNameAgg.getBuckets().get(<span class="number">0</span>).getKeyAsString();</span><br><span class="line">        <span class="comment">//5.3 查询属性值</span></span><br><span class="line">        <span class="type">ParsedStringTerms</span> <span class="variable">attrValueAgg</span> <span class="operator">=</span> subAttrAgg.get(<span class="string">&quot;attrValueAgg&quot;</span>);</span><br><span class="line">        List&lt;String&gt; attrValues = <span class="keyword">new</span> <span class="title class_">ArrayList</span>&lt;&gt;();</span><br><span class="line">        <span class="keyword">for</span> (Terms.Bucket attrValueAggBucket : attrValueAgg.getBuckets()) &#123;</span><br><span class="line">            <span class="type">String</span> <span class="variable">attrValue</span> <span class="operator">=</span> attrValueAggBucket.getKeyAsString();</span><br><span class="line">            attrValues.add(attrValue);</span><br><span class="line">            List&lt;SearchResult.NavVo&gt; navVos = <span class="keyword">new</span> <span class="title class_">ArrayList</span>&lt;&gt;();</span><br><span class="line">        &#125;</span><br><span class="line">        SearchResult.<span class="type">AttrVo</span> <span class="variable">attrVo</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">SearchResult</span>.AttrVo(attrId, attrName, attrValues);</span><br><span class="line">        attrVos.add(attrVo);</span><br><span class="line">    &#125;</span><br><span class="line">    result.setAttrs(attrVos);</span><br><span class="line"></span><br><span class="line">    <span class="comment">// 6. 构建面包屑导航</span></span><br><span class="line">    List&lt;String&gt; attrs = searchParam.getAttrs();</span><br><span class="line">    <span class="keyword">if</span> (attrs != <span class="literal">null</span> &amp;&amp; attrs.size() &gt; <span class="number">0</span>) &#123;</span><br><span class="line">        List&lt;SearchResult.NavVo&gt; navVos = attrs.stream().map(attr -&gt; &#123;</span><br><span class="line">            String[] split = attr.split(<span class="string">&quot;_&quot;</span>);</span><br><span class="line">            SearchResult.<span class="type">NavVo</span> <span class="variable">navVo</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">SearchResult</span>.NavVo();</span><br><span class="line">            <span class="comment">//6.1 设置属性值</span></span><br><span class="line">            navVo.setNavValue(split[<span class="number">1</span>]);</span><br><span class="line">            <span class="comment">//6.2 查询并设置属性名</span></span><br><span class="line">            <span class="keyword">try</span> &#123;</span><br><span class="line">                <span class="type">R</span> <span class="variable">r</span> <span class="operator">=</span> productFeignService.info(Long.parseLong(split[<span class="number">0</span>]));</span><br><span class="line">                <span class="keyword">if</span> (r.getCode() == <span class="number">0</span>) &#123;</span><br><span class="line">                    <span class="type">AttrResponseVo</span> <span class="variable">attrResponseVo</span> <span class="operator">=</span> JSON.parseObject(JSON.toJSONString(r.get(<span class="string">&quot;attr&quot;</span>)), <span class="keyword">new</span> <span class="title class_">TypeReference</span>&lt;AttrResponseVo&gt;() &#123;</span><br><span class="line">                    &#125;);</span><br><span class="line">                    navVo.setNavName(attrResponseVo.getAttrName());</span><br><span class="line">                &#125;</span><br><span class="line">            &#125; <span class="keyword">catch</span> (Exception e) &#123;</span><br><span class="line">                log.error(<span class="string">&quot;远程调用商品服务查询属性失败&quot;</span>, e);</span><br><span class="line">            &#125;</span><br><span class="line">            <span class="comment">//6.3 设置面包屑跳转链接</span></span><br><span class="line">            <span class="type">String</span> <span class="variable">queryString</span> <span class="operator">=</span> searchParam.get_queryString();</span><br><span class="line">            <span class="type">String</span> <span class="variable">replace</span> <span class="operator">=</span> queryString.replace(<span class="string">&quot;&amp;attrs=&quot;</span> + attr, <span class="string">&quot;&quot;</span>).replace(<span class="string">&quot;attrs=&quot;</span> + attr+<span class="string">&quot;&amp;&quot;</span>, <span class="string">&quot;&quot;</span>).replace(<span class="string">&quot;attrs=&quot;</span> + attr, <span class="string">&quot;&quot;</span>);</span><br><span class="line">            navVo.setLink(<span class="string">&quot;http://search.gulimall.com/search.html&quot;</span> + (replace.isEmpty()?<span class="string">&quot;&quot;</span>:<span class="string">&quot;?&quot;</span>+replace));</span><br><span class="line">            <span class="keyword">return</span> navVo;</span><br><span class="line">        &#125;).collect(Collectors.toList());</span><br><span class="line">        result.setNavs(navVos);</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> result;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="4-页面效果"><a href="#4-页面效果" class="headerlink" title="4. 页面效果"></a>4. 页面效果</h2><h3 id="1-基本数据渲染"><a href="#1-基本数据渲染" class="headerlink" title="1)  基本数据渲染"></a>1)  基本数据渲染</h3><p>将商品的基本属性渲染出来</p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">&quot;rig_tab&quot;</span>&gt;</span></span><br><span class="line">    <span class="comment">&lt;!-- 遍历各个商品--&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">div</span> <span class="attr">th:each</span>=<span class="string">&quot;product : $&#123;result.getProduct()&#125;&quot;</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">&quot;ico&quot;</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">i</span> <span class="attr">class</span>=<span class="string">&quot;iconfont icon-weiguanzhu&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">i</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">a</span> <span class="attr">href</span>=<span class="string">&quot;/static/search/#&quot;</span>&gt;</span>关注<span class="tag">&lt;/<span class="name">a</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">p</span> <span class="attr">class</span>=<span class="string">&quot;da&quot;</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">a</span> <span class="attr">th:href</span>=<span class="string">&quot;|http://item.gulimall.com/$&#123;product.skuId&#125;.html|&quot;</span> &gt;</span></span><br><span class="line">                <span class="comment">&lt;!--图片 --&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">img</span>   <span class="attr">class</span>=<span class="string">&quot;dim&quot;</span> <span class="attr">th:src</span>=<span class="string">&quot;$&#123;product.skuImg&#125;&quot;</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;/<span class="name">a</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">p</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">ul</span> <span class="attr">class</span>=<span class="string">&quot;tab_im&quot;</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">li</span>&gt;</span><span class="tag">&lt;<span class="name">a</span> <span class="attr">href</span>=<span class="string">&quot;/static/search/#&quot;</span> <span class="attr">title</span>=<span class="string">&quot;黑色&quot;</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">img</span> <span class="attr">th:src</span>=<span class="string">&quot;$&#123;product.skuImg&#125;&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">a</span>&gt;</span><span class="tag">&lt;/<span class="name">li</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">ul</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">p</span> <span class="attr">class</span>=<span class="string">&quot;tab_R&quot;</span>&gt;</span></span><br><span class="line">              <span class="comment">&lt;!-- 价格 --&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">span</span> <span class="attr">th:text</span>=<span class="string">&quot;&#x27;￥&#x27; + $&#123;product.skuPrice&#125;&quot;</span>&gt;</span>¥5199.00<span class="tag">&lt;/<span class="name">span</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">p</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">p</span> <span class="attr">class</span>=<span class="string">&quot;tab_JE&quot;</span>&gt;</span></span><br><span class="line">            <span class="comment">&lt;!-- 标题 --&gt;</span></span><br><span class="line">            <span class="comment">&lt;!-- 使用utext标签,使检索时高亮不会被转义--&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">a</span> <span class="attr">href</span>=<span class="string">&quot;/static/search/#&quot;</span> <span class="attr">th:utext</span>=<span class="string">&quot;$&#123;product.skuTitle&#125;&quot;</span>&gt;</span></span><br><span class="line">                Apple iPhone 7 Plus (A1661) 32G 黑色 移动联通电信4G手机</span><br><span class="line">            <span class="tag">&lt;/<span class="name">a</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">p</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">p</span> <span class="attr">class</span>=<span class="string">&quot;tab_PI&quot;</span>&gt;</span>已有<span class="tag">&lt;<span class="name">span</span>&gt;</span>11万+<span class="tag">&lt;/<span class="name">span</span>&gt;</span>热门评价</span><br><span class="line">            <span class="tag">&lt;<span class="name">a</span> <span class="attr">href</span>=<span class="string">&quot;/static/search/#&quot;</span>&gt;</span>二手有售<span class="tag">&lt;/<span class="name">a</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">p</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">p</span> <span class="attr">class</span>=<span class="string">&quot;tab_CP&quot;</span>&gt;</span><span class="tag">&lt;<span class="name">a</span> <span class="attr">href</span>=<span class="string">&quot;/static/search/#&quot;</span> <span class="attr">title</span>=<span class="string">&quot;谷粒商城Apple产品专营店&quot;</span>&gt;</span>谷粒商城Apple产品...<span class="tag">&lt;/<span class="name">a</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">a</span> <span class="attr">href</span>=<span class="string">&#x27;#&#x27;</span> <span class="attr">title</span>=<span class="string">&quot;联系供应商进行咨询&quot;</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">img</span> <span class="attr">src</span>=<span class="string">&quot;/static/search/img/xcxc.png&quot;</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;/<span class="name">a</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">p</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">&quot;tab_FO&quot;</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">&quot;FO_one&quot;</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">p</span>&gt;</span>自营</span><br><span class="line">                    <span class="tag">&lt;<span class="name">span</span>&gt;</span>谷粒商城自营,品质保证<span class="tag">&lt;/<span class="name">span</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;/<span class="name">p</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">p</span>&gt;</span>满赠</span><br><span class="line">                    <span class="tag">&lt;<span class="name">span</span>&gt;</span>该商品参加满赠活动<span class="tag">&lt;/<span class="name">span</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;/<span class="name">p</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br></pre></td></tr></table></figure><h3 id="2-筛选条件渲染"><a href="#2-筛选条件渲染" class="headerlink" title="2) 筛选条件渲染"></a>2) 筛选条件渲染</h3><p>将结果的品牌、分类、商品属性进行遍历显示，并且点击某个属性值时可以通过拼接url进行跳转</p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">&quot;JD_nav_logo&quot;</span>&gt;</span></span><br><span class="line">    <span class="comment">&lt;!--品牌--&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">&quot;JD_nav_wrap&quot;</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">&quot;sl_key&quot;</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">span</span>&gt;</span>品牌：<span class="tag">&lt;/<span class="name">span</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">&quot;sl_value&quot;</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">&quot;sl_value_logo&quot;</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">ul</span>&gt;</span></span><br><span class="line">                    <span class="tag">&lt;<span class="name">li</span> <span class="attr">th:each</span>=<span class="string">&quot;brand: $&#123;result.getBrands()&#125;&quot;</span>&gt;</span></span><br><span class="line">                        <span class="comment">&lt;!--替换url--&gt;</span></span><br><span class="line">                        <span class="tag">&lt;<span class="name">a</span> <span class="attr">href</span>=<span class="string">&quot;#&quot;</span>  <span class="attr">th:href</span>=<span class="string">&quot;$&#123;&#x27;javascript:searchProducts(<span class="symbol">&amp;quot;</span>brandId<span class="symbol">&amp;quot;</span>,&#x27;+brand.brandId+&#x27;)&#x27;&#125;&quot;</span>&gt;</span></span><br><span class="line">                            <span class="tag">&lt;<span class="name">img</span> <span class="attr">src</span>=<span class="string">&quot;/static/search/img/598033b4nd6055897.jpg&quot;</span> <span class="attr">alt</span>=<span class="string">&quot;&quot;</span> <span class="attr">th:src</span>=<span class="string">&quot;$&#123;brand.brandImg&#125;&quot;</span>&gt;</span></span><br><span class="line">                            <span class="tag">&lt;<span class="name">div</span> <span class="attr">th:text</span>=<span class="string">&quot;$&#123;brand.brandName&#125;&quot;</span>&gt;</span></span><br><span class="line">                                华为(HUAWEI)</span><br><span class="line">                            <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">                        <span class="tag">&lt;/<span class="name">a</span>&gt;</span></span><br><span class="line">                    <span class="tag">&lt;/<span class="name">li</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;/<span class="name">ul</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">&quot;sl_ext&quot;</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">a</span> <span class="attr">href</span>=<span class="string">&quot;#&quot;</span>&gt;</span></span><br><span class="line">                更多</span><br><span class="line">                <span class="tag">&lt;<span class="name">i</span> <span class="attr">style</span>=<span class="string">&#x27;background: url(&quot;image/search.ele.png&quot;)no-repeat 3px 7px&#x27;</span>&gt;</span><span class="tag">&lt;/<span class="name">i</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">b</span> <span class="attr">style</span>=<span class="string">&#x27;background: url(&quot;image/search.ele.png&quot;)no-repeat 3px -44px&#x27;</span>&gt;</span><span class="tag">&lt;/<span class="name">b</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;/<span class="name">a</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">a</span> <span class="attr">href</span>=<span class="string">&quot;#&quot;</span>&gt;</span></span><br><span class="line">                多选</span><br><span class="line">                <span class="tag">&lt;<span class="name">i</span>&gt;</span>+<span class="tag">&lt;/<span class="name">i</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">span</span>&gt;</span>+<span class="tag">&lt;/<span class="name">span</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;/<span class="name">a</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">    <span class="comment">&lt;!--分类--&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">&quot;JD_pre&quot;</span> <span class="attr">th:each</span>=<span class="string">&quot;catalog: $&#123;result.getCatalogs()&#125;&quot;</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">&quot;sl_key&quot;</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">span</span>&gt;</span>分类：<span class="tag">&lt;/<span class="name">span</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">&quot;sl_value&quot;</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">ul</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">li</span>&gt;</span><span class="tag">&lt;<span class="name">a</span> <span class="attr">href</span>=<span class="string">&quot;#&quot;</span> <span class="attr">th:text</span>=<span class="string">&quot;$&#123;catalog.getCatalogName()&#125;&quot;</span> <span class="attr">th:href</span>=<span class="string">&quot;$&#123;&#x27;javascript:searchProducts(<span class="symbol">&amp;quot;</span>catalogId<span class="symbol">&amp;quot;</span>,&#x27;+catalog.catalogId+&#x27;)&#x27;&#125;&quot;</span>&gt;</span>0-安卓（Android）<span class="tag">&lt;/<span class="name">a</span>&gt;</span><span class="tag">&lt;/<span class="name">li</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;/<span class="name">ul</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">    <span class="comment">&lt;!--价格--&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">&quot;JD_pre&quot;</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">&quot;sl_key&quot;</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">span</span>&gt;</span>价格：<span class="tag">&lt;/<span class="name">span</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">&quot;sl_value&quot;</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">ul</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">li</span>&gt;</span><span class="tag">&lt;<span class="name">a</span> <span class="attr">href</span>=<span class="string">&quot;#&quot;</span>&gt;</span>0-499<span class="tag">&lt;/<span class="name">a</span>&gt;</span><span class="tag">&lt;/<span class="name">li</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">li</span>&gt;</span><span class="tag">&lt;<span class="name">a</span> <span class="attr">href</span>=<span class="string">&quot;#&quot;</span>&gt;</span>500-999<span class="tag">&lt;/<span class="name">a</span>&gt;</span><span class="tag">&lt;/<span class="name">li</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">li</span>&gt;</span><span class="tag">&lt;<span class="name">a</span> <span class="attr">href</span>=<span class="string">&quot;#&quot;</span>&gt;</span>1000-1699<span class="tag">&lt;/<span class="name">a</span>&gt;</span><span class="tag">&lt;/<span class="name">li</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">li</span>&gt;</span><span class="tag">&lt;<span class="name">a</span> <span class="attr">href</span>=<span class="string">&quot;#&quot;</span>&gt;</span>1700-2799<span class="tag">&lt;/<span class="name">a</span>&gt;</span><span class="tag">&lt;/<span class="name">li</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">li</span>&gt;</span><span class="tag">&lt;<span class="name">a</span> <span class="attr">href</span>=<span class="string">&quot;#&quot;</span>&gt;</span>2800-4499<span class="tag">&lt;/<span class="name">a</span>&gt;</span><span class="tag">&lt;/<span class="name">li</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">li</span>&gt;</span><span class="tag">&lt;<span class="name">a</span> <span class="attr">href</span>=<span class="string">&quot;#&quot;</span>&gt;</span>4500-11999<span class="tag">&lt;/<span class="name">a</span>&gt;</span><span class="tag">&lt;/<span class="name">li</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">li</span>&gt;</span><span class="tag">&lt;<span class="name">a</span> <span class="attr">href</span>=<span class="string">&quot;#&quot;</span>&gt;</span>12000以上<span class="tag">&lt;/<span class="name">a</span>&gt;</span><span class="tag">&lt;/<span class="name">li</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">li</span> <span class="attr">class</span>=<span class="string">&quot;sl_value_li&quot;</span>&gt;</span></span><br><span class="line">                    <span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">&quot;text&quot;</span>&gt;</span></span><br><span class="line">                    <span class="tag">&lt;<span class="name">p</span>&gt;</span>-<span class="tag">&lt;/<span class="name">p</span>&gt;</span></span><br><span class="line">                    <span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">&quot;text&quot;</span>&gt;</span></span><br><span class="line">                    <span class="tag">&lt;<span class="name">a</span> <span class="attr">href</span>=<span class="string">&quot;#&quot;</span>&gt;</span>确定<span class="tag">&lt;/<span class="name">a</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;/<span class="name">li</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;/<span class="name">ul</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">    <span class="comment">&lt;!--商品属性--&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">&quot;JD_pre&quot;</span> <span class="attr">th:each</span>=<span class="string">&quot;attr: $&#123;result.getAttrs()&#125;&quot;</span> &gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">&quot;sl_key&quot;</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">span</span> <span class="attr">th:text</span>=<span class="string">&quot;$&#123;attr.getAttrName()&#125;&quot;</span>&gt;</span>系统：<span class="tag">&lt;/<span class="name">span</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">&quot;sl_value&quot;</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">ul</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">li</span> <span class="attr">th:each</span>=<span class="string">&quot;val: $&#123;attr.getAttrValue()&#125;&quot;</span>&gt;</span></span><br><span class="line">                    <span class="tag">&lt;<span class="name">a</span> <span class="attr">href</span>=<span class="string">&quot;#&quot;</span></span></span><br><span class="line"><span class="tag">                       <span class="attr">th:text</span>=<span class="string">&quot;$&#123;val&#125;&quot;</span></span></span><br><span class="line"><span class="tag">                       <span class="attr">th:href</span>=<span class="string">&quot;$&#123;&#x27;javascript:searchProducts(<span class="symbol">&amp;quot;</span>attrs<span class="symbol">&amp;quot;</span>,<span class="symbol">&amp;quot;</span>&#x27;+attr.attrId+&#x27;_&#x27;+val+&#x27;<span class="symbol">&amp;quot;</span>)&#x27;&#125;&quot;</span>&gt;</span>0-安卓（Android）<span class="tag">&lt;/<span class="name">a</span>&gt;</span><span class="tag">&lt;/<span class="name">li</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;/<span class="name">ul</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br></pre></td></tr></table></figure><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">function</span> <span class="title function_">searchProducts</span>(<span class="params">name, value</span>) &#123;</span><br><span class="line">    <span class="comment">//原來的页面</span></span><br><span class="line">    location.<span class="property">href</span> = <span class="title function_">replaceParamVal</span>(location.<span class="property">href</span>,name,value,<span class="literal">true</span>)</span><br><span class="line">&#125;;</span><br><span class="line"></span><br><span class="line">   <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@param</span> url 目前的url</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@param</span> paramName 需要替换的参数属性名</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@param</span> replaceVal 需要替换的参数的新属性值</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@param</span> forceAdd 该参数是否可以重复查询(attrs=1_3G:4G:5G&amp;attrs=2_骁龙845&amp;attrs=4_高清屏)</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@returns</span> &#123;<span class="type">string</span>&#125; 替换或添加后的url</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line"><span class="keyword">function</span> <span class="title function_">replaceParamVal</span>(<span class="params">url, paramName, replaceVal,forceAdd</span>) &#123;</span><br><span class="line">    <span class="keyword">var</span> oUrl = url.<span class="title function_">toString</span>();</span><br><span class="line">    <span class="keyword">var</span> nUrl;</span><br><span class="line">    <span class="keyword">if</span> (oUrl.<span class="title function_">indexOf</span>(paramName) != -<span class="number">1</span>) &#123;</span><br><span class="line">        <span class="keyword">if</span>( forceAdd &amp;&amp; oUrl.<span class="title function_">indexOf</span>(paramName+<span class="string">&quot;=&quot;</span>+replaceVal)==-<span class="number">1</span>) &#123;</span><br><span class="line">            <span class="keyword">if</span> (oUrl.<span class="title function_">indexOf</span>(<span class="string">&quot;?&quot;</span>) != -<span class="number">1</span>) &#123;</span><br><span class="line">                nUrl = oUrl + <span class="string">&quot;&amp;&quot;</span> + paramName + <span class="string">&quot;=&quot;</span> + replaceVal;</span><br><span class="line">            &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">                nUrl = oUrl + <span class="string">&quot;?&quot;</span> + paramName + <span class="string">&quot;=&quot;</span> + replaceVal;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">            <span class="keyword">var</span> re = <span class="built_in">eval</span>(<span class="string">&#x27;/(&#x27;</span> + paramName + <span class="string">&#x27;=)([^&amp;]*)/gi&#x27;</span>);</span><br><span class="line">            nUrl = oUrl.<span class="title function_">replace</span>(re, paramName + <span class="string">&#x27;=&#x27;</span> + replaceVal);</span><br><span class="line">        &#125;</span><br><span class="line">    &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">        <span class="keyword">if</span> (oUrl.<span class="title function_">indexOf</span>(<span class="string">&quot;?&quot;</span>) != -<span class="number">1</span>) &#123;</span><br><span class="line">            nUrl = oUrl + <span class="string">&quot;&amp;&quot;</span> + paramName + <span class="string">&quot;=&quot;</span> + replaceVal;</span><br><span class="line">        &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">            nUrl = oUrl + <span class="string">&quot;?&quot;</span> + paramName + <span class="string">&quot;=&quot;</span> + replaceVal;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> nUrl;</span><br><span class="line">&#125;;</span><br></pre></td></tr></table></figure><h3 id="3-分页数据渲染"><a href="#3-分页数据渲染" class="headerlink" title="3) 分页数据渲染"></a>3) 分页数据渲染</h3><p>将页码绑定至属性pn，当点击某页码时，通过获取pn值进行url拼接跳转页面</p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">&quot;filter_page&quot;</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">&quot;page_wrap&quot;</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">span</span> <span class="attr">class</span>=<span class="string">&quot;page_span1&quot;</span>&gt;</span></span><br><span class="line">               <span class="comment">&lt;!-- 不是第一页时显示上一页 --&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">a</span> <span class="attr">class</span>=<span class="string">&quot;page_a&quot;</span> <span class="attr">href</span>=<span class="string">&quot;#&quot;</span> <span class="attr">th:if</span>=<span class="string">&quot;$&#123;result.pageNum&gt;1&#125;&quot;</span> <span class="attr">th:attr</span>=<span class="string">&quot;pn=$&#123;result.getPageNum()-1&#125;&quot;</span>&gt;</span></span><br><span class="line">                &lt; 上一页</span><br><span class="line">            <span class="tag">&lt;/<span class="name">a</span>&gt;</span></span><br><span class="line">             <span class="comment">&lt;!-- 将各个页码遍历显示，并将当前页码绑定至属性pn --&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">a</span> <span class="attr">href</span>=<span class="string">&quot;#&quot;</span> <span class="attr">class</span>=<span class="string">&quot;page_a&quot;</span></span></span><br><span class="line"><span class="tag">               <span class="attr">th:each</span>=<span class="string">&quot;page: $&#123;result.pageNavs&#125;&quot;</span></span></span><br><span class="line"><span class="tag">               <span class="attr">th:text</span>=<span class="string">&quot;$&#123;page&#125;&quot;</span></span></span><br><span class="line"><span class="tag">               <span class="attr">th:style</span>=<span class="string">&quot;$&#123;page==result.pageNum?&#x27;border: 0;color:#ee2222;background: #fff&#x27;:&#x27;&#x27;&#125;&quot;</span></span></span><br><span class="line"><span class="tag">               <span class="attr">th:attr</span>=<span class="string">&quot;pn=$&#123;page&#125;&quot;</span></span></span><br><span class="line"><span class="tag">            &gt;</span>1<span class="tag">&lt;/<span class="name">a</span>&gt;</span></span><br><span class="line">              <span class="comment">&lt;!-- 不是最后一页时显示下一页 --&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">a</span> <span class="attr">href</span>=<span class="string">&quot;#&quot;</span> <span class="attr">class</span>=<span class="string">&quot;page_a&quot;</span> <span class="attr">th:if</span>=<span class="string">&quot;$&#123;result.pageNum&lt;result.totalPages&#125;&quot;</span> <span class="attr">th:attr</span>=<span class="string">&quot;pn=$&#123;result.getPageNum()+1&#125;&quot;</span>&gt;</span></span><br><span class="line">                下一页 &gt;</span><br><span class="line">            <span class="tag">&lt;/<span class="name">a</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">span</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">span</span> <span class="attr">class</span>=<span class="string">&quot;page_span2&quot;</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">em</span>&gt;</span>共<span class="tag">&lt;<span class="name">b</span> <span class="attr">th:text</span>=<span class="string">&quot;$&#123;result.totalPages&#125;&quot;</span>&gt;</span>169<span class="tag">&lt;/<span class="name">b</span>&gt;</span>页<span class="symbol">&amp;nbsp;</span><span class="symbol">&amp;nbsp;</span>到第<span class="tag">&lt;/<span class="name">em</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">&quot;number&quot;</span> <span class="attr">value</span>=<span class="string">&quot;1&quot;</span> <span class="attr">class</span>=<span class="string">&quot;page_input&quot;</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">em</span>&gt;</span>页<span class="tag">&lt;/<span class="name">em</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">a</span> <span class="attr">href</span>=<span class="string">&quot;#&quot;</span>&gt;</span>确定<span class="tag">&lt;/<span class="name">a</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">span</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br></pre></td></tr></table></figure><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">$(<span class="string">&quot;.page_a&quot;</span>).<span class="title function_">click</span>(<span class="keyword">function</span> (<span class="params"></span>) &#123;</span><br><span class="line">    <span class="keyword">var</span> pn=$(<span class="variable language_">this</span>).<span class="title function_">attr</span>(<span class="string">&quot;pn&quot;</span>);</span><br><span class="line">    location.<span class="property">href</span>=<span class="title function_">replaceParamVal</span>(location.<span class="property">href</span>,<span class="string">&quot;pageNum&quot;</span>,pn,<span class="literal">false</span>);</span><br><span class="line">    <span class="variable language_">console</span>.<span class="title function_">log</span>(<span class="title function_">replaceParamVal</span>(location.<span class="property">href</span>,<span class="string">&quot;pageNum&quot;</span>,pn,<span class="literal">false</span>))</span><br><span class="line">&#125;)</span><br></pre></td></tr></table></figure><h3 id="4-页面排序和价格区间"><a href="#4-页面排序和价格区间" class="headerlink" title="4) 页面排序和价格区间"></a>4) 页面排序和价格区间</h3><p>页面排序功能需要保证，点击某个按钮时，样式会变红，并且其他的样式保持最初的样子；</p><p>点击某个排序时首先按升序显示，再次点击再变为降序，并且还会显示上升或下降箭头</p><p>页面排序跳转的思路是通过点击某个按钮时会向其<code>class</code>属性添加/去除<code>desc</code>，并根据属性值进行url拼接</p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">&quot;filter_top&quot;</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">&quot;filter_top_left&quot;</span> <span class="attr">th:with</span>=<span class="string">&quot;p = $&#123;param.sort&#125;, priceRange = $&#123;param.skuPrice&#125;&quot;</span>&gt;</span></span><br><span class="line">        <span class="comment">&lt;!-- 通过判断当前class是否有desc来进行样式的渲染和箭头的显示--&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">a</span> <span class="attr">sort</span>=<span class="string">&quot;hotScore&quot;</span></span></span><br><span class="line"><span class="tag">           <span class="attr">th:class</span>=<span class="string">&quot;$&#123;(!#strings.isEmpty(p) &amp;&amp; #strings.startsWith(p,&#x27;hotScore&#x27;) &amp;&amp; #strings.endsWith(p,&#x27;desc&#x27;)) ? &#x27;sort_a desc&#x27; : &#x27;sort_a&#x27;&#125;&quot;</span></span></span><br><span class="line"><span class="tag">           <span class="attr">th:attr</span>=<span class="string">&quot;style=$&#123;(#strings.isEmpty(p) || #strings.startsWith(p,&#x27;hotScore&#x27;)) ?</span></span></span><br><span class="line"><span class="string"><span class="tag">               &#x27;color: #fff; border-color: #e4393c; background: #e4393c;&#x27;:&#x27;color: #333; border-color: #ccc; background: #fff;&#x27; &#125;&quot;</span>&gt;</span></span><br><span class="line">            综合排序[[$&#123;(!#strings.isEmpty(p) &amp;&amp; #strings.startsWith(p,&#x27;hotScore&#x27;) &amp;&amp;</span><br><span class="line">            #strings.endsWith(p,&#x27;desc&#x27;)) ?&#x27;↓&#x27;:&#x27;↑&#x27; &#125;]]<span class="tag">&lt;/<span class="name">a</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">a</span> <span class="attr">sort</span>=<span class="string">&quot;saleCount&quot;</span></span></span><br><span class="line"><span class="tag">           <span class="attr">th:class</span>=<span class="string">&quot;$&#123;(!#strings.isEmpty(p) &amp;&amp; #strings.startsWith(p,&#x27;saleCount&#x27;) &amp;&amp; #strings.endsWith(p,&#x27;desc&#x27;)) ? &#x27;sort_a desc&#x27; : &#x27;sort_a&#x27;&#125;&quot;</span></span></span><br><span class="line"><span class="tag">           <span class="attr">th:attr</span>=<span class="string">&quot;style=$&#123;(!#strings.isEmpty(p) &amp;&amp; #strings.startsWith(p,&#x27;saleCount&#x27;)) ?</span></span></span><br><span class="line"><span class="string"><span class="tag">               &#x27;color: #fff; border-color: #e4393c; background: #e4393c;&#x27;:&#x27;color: #333; border-color: #ccc; background: #fff;&#x27; &#125;&quot;</span>&gt;</span></span><br><span class="line">            销量[[$&#123;(!#strings.isEmpty(p) &amp;&amp; #strings.startsWith(p,&#x27;saleCount&#x27;) &amp;&amp;</span><br><span class="line">            #strings.endsWith(p,&#x27;desc&#x27;))?&#x27;↓&#x27;:&#x27;↑&#x27;  &#125;]]<span class="tag">&lt;/<span class="name">a</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">a</span> <span class="attr">sort</span>=<span class="string">&quot;skuPrice&quot;</span></span></span><br><span class="line"><span class="tag">           <span class="attr">th:class</span>=<span class="string">&quot;$&#123;(!#strings.isEmpty(p) &amp;&amp; #strings.startsWith(p,&#x27;skuPrice&#x27;) &amp;&amp; #strings.endsWith(p,&#x27;desc&#x27;)) ? &#x27;sort_a desc&#x27; : &#x27;sort_a&#x27;&#125;&quot;</span></span></span><br><span class="line"><span class="tag">           <span class="attr">th:attr</span>=<span class="string">&quot;style=$&#123;(!#strings.isEmpty(p) &amp;&amp; #strings.startsWith(p,&#x27;skuPrice&#x27;)) ?</span></span></span><br><span class="line"><span class="string"><span class="tag">               &#x27;color: #fff; border-color: #e4393c; background: #e4393c;&#x27;:&#x27;color: #333; border-color: #ccc; background: #fff;&#x27; &#125;&quot;</span>&gt;</span></span><br><span class="line">            价格[[$&#123;(!#strings.isEmpty(p) &amp;&amp; #strings.startsWith(p,&#x27;skuPrice&#x27;) &amp;&amp;</span><br><span class="line">            #strings.endsWith(p,&#x27;desc&#x27;))?&#x27;↓&#x27;:&#x27;↑&#x27;  &#125;]]<span class="tag">&lt;/<span class="name">a</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">a</span> <span class="attr">sort</span>=<span class="string">&quot;hotScore&quot;</span> <span class="attr">class</span>=<span class="string">&quot;sort_a&quot;</span>&gt;</span>评论分<span class="tag">&lt;/<span class="name">a</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">a</span> <span class="attr">sort</span>=<span class="string">&quot;hotScore&quot;</span> <span class="attr">class</span>=<span class="string">&quot;sort_a&quot;</span>&gt;</span>上架时间<span class="tag">&lt;/<span class="name">a</span>&gt;</span></span><br><span class="line">        <span class="comment">&lt;!--价格区间搜索--&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">input</span> <span class="attr">id</span>=<span class="string">&quot;skuPriceFrom&quot;</span> <span class="attr">type</span>=<span class="string">&quot;number&quot;</span></span></span><br><span class="line"><span class="tag">               <span class="attr">th:value</span>=<span class="string">&quot;$&#123;#strings.isEmpty(priceRange)?&#x27;&#x27;:#strings.substringBefore(priceRange,&#x27;_&#x27;)&#125;&quot;</span></span></span><br><span class="line"><span class="tag">               <span class="attr">style</span>=<span class="string">&quot;width: 100px; margin-left: 30px&quot;</span>&gt;</span></span><br><span class="line">        -</span><br><span class="line">        <span class="tag">&lt;<span class="name">input</span> <span class="attr">id</span>=<span class="string">&quot;skuPriceTo&quot;</span> <span class="attr">type</span>=<span class="string">&quot;number&quot;</span></span></span><br><span class="line"><span class="tag">               <span class="attr">th:value</span>=<span class="string">&quot;$&#123;#strings.isEmpty(priceRange)?&#x27;&#x27;:#strings.substringAfter(priceRange,&#x27;_&#x27;)&#125;&quot;</span></span></span><br><span class="line"><span class="tag">               <span class="attr">style</span>=<span class="string">&quot;width: 100px&quot;</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">button</span> <span class="attr">id</span>=<span class="string">&quot;skuPriceSearchBtn&quot;</span>&gt;</span>确定<span class="tag">&lt;/<span class="name">button</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">&quot;filter_top_right&quot;</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">span</span> <span class="attr">class</span>=<span class="string">&quot;fp-text&quot;</span>&gt;</span></span><br><span class="line">           <span class="tag">&lt;<span class="name">b</span>&gt;</span>1<span class="tag">&lt;/<span class="name">b</span>&gt;</span><span class="tag">&lt;<span class="name">em</span>&gt;</span>/<span class="tag">&lt;/<span class="name">em</span>&gt;</span><span class="tag">&lt;<span class="name">i</span>&gt;</span>169<span class="tag">&lt;/<span class="name">i</span>&gt;</span></span><br><span class="line">       <span class="tag">&lt;/<span class="name">span</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">a</span> <span class="attr">href</span>=<span class="string">&quot;#&quot;</span> <span class="attr">class</span>=<span class="string">&quot;prev&quot;</span>&gt;</span>&lt;<span class="tag">&lt;/<span class="name">a</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">a</span> <span class="attr">href</span>=<span class="string">&quot;#&quot;</span> <span class="attr">class</span>=<span class="string">&quot;next&quot;</span>&gt;</span> &gt; <span class="tag">&lt;/<span class="name">a</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br></pre></td></tr></table></figure><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line">$(<span class="string">&quot;.sort_a&quot;</span>).<span class="title function_">click</span>(<span class="keyword">function</span> (<span class="params"></span>) &#123;</span><br><span class="line">    <span class="comment">//添加、剔除desc</span></span><br><span class="line">        $(<span class="variable language_">this</span>).<span class="title function_">toggleClass</span>(<span class="string">&quot;desc&quot;</span>);</span><br><span class="line">    <span class="comment">//获取sort属性值并进行url跳转</span></span><br><span class="line">        <span class="keyword">let</span> sort = $(<span class="variable language_">this</span>).<span class="title function_">attr</span>(<span class="string">&quot;sort&quot;</span>);</span><br><span class="line">        sort = $(<span class="variable language_">this</span>).<span class="title function_">hasClass</span>(<span class="string">&quot;desc&quot;</span>) ? sort + <span class="string">&quot;_desc&quot;</span> : sort + <span class="string">&quot;_asc&quot;</span>;</span><br><span class="line">        location.<span class="property">href</span> = <span class="title function_">replaceParamVal</span>(location.<span class="property">href</span>, <span class="string">&quot;sort&quot;</span>, sort,<span class="literal">false</span>);</span><br><span class="line">        <span class="keyword">return</span> <span class="literal">false</span>;</span><br><span class="line">    &#125;);</span><br></pre></td></tr></table></figure><p>价格区间搜索函数</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">$(<span class="string">&quot;#skuPriceSearchBtn&quot;</span>).<span class="title function_">click</span>(<span class="keyword">function</span> (<span class="params"></span>) &#123;</span><br><span class="line">    <span class="keyword">var</span> skuPriceFrom = $(<span class="string">&quot;#skuPriceFrom&quot;</span>).<span class="title function_">val</span>();</span><br><span class="line">    <span class="keyword">var</span> skuPriceTo = $(<span class="string">&quot;#skuPriceTo&quot;</span>).<span class="title function_">val</span>();</span><br><span class="line">    location.<span class="property">href</span> = <span class="title function_">replaceParamVal</span>(location.<span class="property">href</span>, <span class="string">&quot;skuPrice&quot;</span>, skuPriceFrom + <span class="string">&quot;_&quot;</span> + skuPriceTo, <span class="literal">false</span>);</span><br><span class="line">&#125;)</span><br></pre></td></tr></table></figure><h3 id="5-面包屑导航"><a href="#5-面包屑导航" class="headerlink" title="5) 面包屑导航"></a>5) 面包屑导航</h3><p>在封装结果时，将查询的属性值进行封装</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// 6. 构建面包屑导航</span></span><br><span class="line">     List&lt;String&gt; attrs = searchParam.getAttrs();</span><br><span class="line">     <span class="keyword">if</span> (attrs != <span class="literal">null</span> &amp;&amp; attrs.size() &gt; <span class="number">0</span>) &#123;</span><br><span class="line">         List&lt;SearchResult.NavVo&gt; navVos = attrs.stream().map(attr -&gt; &#123;</span><br><span class="line">             String[] split = attr.split(<span class="string">&quot;_&quot;</span>);</span><br><span class="line">             SearchResult.<span class="type">NavVo</span> <span class="variable">navVo</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">SearchResult</span>.NavVo();</span><br><span class="line">             <span class="comment">//6.1 设置属性值</span></span><br><span class="line">             navVo.setNavValue(split[<span class="number">1</span>]);</span><br><span class="line">             <span class="comment">//6.2 查询并设置属性名</span></span><br><span class="line">             <span class="keyword">try</span> &#123;</span><br><span class="line">                 <span class="type">R</span> <span class="variable">r</span> <span class="operator">=</span> productFeignService.info(Long.parseLong(split[<span class="number">0</span>]));</span><br><span class="line">                 <span class="keyword">if</span> (r.getCode() == <span class="number">0</span>) &#123;</span><br><span class="line">                     <span class="type">AttrResponseVo</span> <span class="variable">attrResponseVo</span> <span class="operator">=</span> JSON.parseObject(JSON.toJSONString(r.get(<span class="string">&quot;attr&quot;</span>)), <span class="keyword">new</span> <span class="title class_">TypeReference</span>&lt;AttrResponseVo&gt;() &#123;</span><br><span class="line">                     &#125;);</span><br><span class="line">                     navVo.setNavName(attrResponseVo.getAttrName());</span><br><span class="line">                 &#125;</span><br><span class="line">             &#125; <span class="keyword">catch</span> (Exception e) &#123;</span><br><span class="line">                 log.error(<span class="string">&quot;远程调用商品服务查询属性失败&quot;</span>, e);</span><br><span class="line">             &#125;</span><br><span class="line">             <span class="comment">//6.3 设置面包屑跳转链接(当点击该链接时剔除点击属性)</span></span><br><span class="line">             <span class="type">String</span> <span class="variable">queryString</span> <span class="operator">=</span> searchParam.get_queryString();</span><br><span class="line">             <span class="type">String</span> <span class="variable">replace</span> <span class="operator">=</span> queryString.replace(<span class="string">&quot;&amp;attrs=&quot;</span> + attr, <span class="string">&quot;&quot;</span>).replace(<span class="string">&quot;attrs=&quot;</span> + attr+<span class="string">&quot;&amp;&quot;</span>, <span class="string">&quot;&quot;</span>).replace(<span class="string">&quot;attrs=&quot;</span> + attr, <span class="string">&quot;&quot;</span>);</span><br><span class="line">             navVo.setLink(<span class="string">&quot;http://search.gulimall.com/search.html&quot;</span> + (replace.isEmpty()?<span class="string">&quot;&quot;</span>:<span class="string">&quot;?&quot;</span>+replace));</span><br><span class="line">             <span class="keyword">return</span> navVo;</span><br><span class="line">         &#125;).collect(Collectors.toList());</span><br><span class="line">         result.setNavs(navVos);</span><br><span class="line">     &#125;</span><br></pre></td></tr></table></figure><p>页面渲染</p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">&quot;JD_ipone_one c&quot;</span>&gt;</span></span><br><span class="line">    <span class="comment">&lt;!-- 遍历面包屑功能 --&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">a</span> <span class="attr">th:href</span>=<span class="string">&quot;$&#123;nav.link&#125;&quot;</span> <span class="attr">th:each</span>=<span class="string">&quot;nav:$&#123;result.navs&#125;&quot;</span>&gt;</span><span class="tag">&lt;<span class="name">span</span> <span class="attr">th:text</span>=<span class="string">&quot;$&#123;nav.navName&#125;&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">span</span>&gt;</span>：<span class="tag">&lt;<span class="name">span</span> <span class="attr">th:text</span>=<span class="string">&quot;$&#123;nav.navValue&#125;&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">span</span>&gt;</span> x<span class="tag">&lt;/<span class="name">a</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br></pre></td></tr></table></figure><h3 id="6-条件筛选联动"><a href="#6-条件筛选联动" class="headerlink" title="6) 条件筛选联动"></a>6) 条件筛选联动</h3><p>就是将品牌和分类也封装进面包屑数据中，并且在页面进行th:if的判断，当url有该属性的查询条件时就不进行显示了</p><h1 id="异步"><a href="#异步" class="headerlink" title="异步"></a>异步</h1><h2 id="1-线程"><a href="#1-线程" class="headerlink" title="1. 线程"></a>1. 线程</h2><h3 id="1-初始化线程的4-种方式"><a href="#1-初始化线程的4-种方式" class="headerlink" title="1) 初始化线程的4 种方式"></a>1) 初始化线程的4 种方式</h3><p>1）、继承 Thread<br>2）、实现 Runnable 接口<br>3）、实现 Callable 接口 + FutureTask （可以拿到返回结果，可以处理异常）<br>4）    、线程池</p><p>方式 1 和方式 2：主进程无法获取线程的运算结果。不适合当前场景<br>方式 3：主进程可以获取线程的运算结果，但是不利于控制服务器中的线程资源。可以导致服务器资源耗尽。</p><p>方式 4：通过如下两种方式初始化线程池</p><figure class="highlight reasonml"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="module-access"><span class="module"><span class="identifier">Executors</span>.</span></span><span class="keyword">new</span><span class="constructor">FiexedThreadPool(3)</span>;</span><br></pre></td></tr></table></figure><p> 或者</p><figure class="highlight reasonml"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">new</span> <span class="constructor">ThreadPoolExecutor(<span class="params">corePoolSize</span>, <span class="params">maximumPoolSize</span>, <span class="params">keepAliveTime</span>, TimeUnit <span class="params">unit</span>, <span class="params">workQueue</span>, <span class="params">threadFactory</span>, <span class="params">handler</span>)</span>;</span><br></pre></td></tr></table></figure><p><strong>通过线程池性能稳定，也可以获取执行结果，并捕获异常。但是，在业务复杂情况下，一个异步调用可能会依赖于另一个异步调用的执行结果。</strong></p><h3 id="2-线程池的七大参数"><a href="#2-线程池的七大参数" class="headerlink" title="2) 线程池的七大参数"></a>2) 线程池的七大参数</h3><p><img src="https://cdn.jsdelivr.net/gh/zsxfa/CDN/img/md/2022/04/18/1650252557.png" alt="desc"></p><p><img src="https://cdn.jsdelivr.net/gh/zsxfa/CDN/img/md/2022/04/18/1650252575.png" alt="desc"></p><p>运行流程：<br>1、线程池创建，准备好 core 数量的核心线程，准备接受任务</p><p>2、新的任务进来，用 core 准备好的空闲线程执行。</p><p>​    (1)core 满了，就将再进来的任务放入阻塞队列中。空闲的 core 就会自己去阻塞队列获取任务执行<br>​    (2)阻塞队列满了，就直接开新线程执行，最大只能开到 max 指定的数量<br>​    (3)max 都执行好了。Max-core 数量空闲的线程会在 keepAliveTime 指定的时间后自动销毁。最终保持到 core 大小<br>​    (4)如果线程数开到了 max 的数量，还有新任务进来，就会使用 reject 指定的拒绝策略进行处理</p><p>3、所有的线程创建都是由指定的 factory 创建的。</p><h3 id="3-常见的4-种线程池"><a href="#3-常见的4-种线程池" class="headerlink" title="3) 常见的4 种线程池"></a>3) 常见的4 种线程池</h3><ul><li><p>newCachedThreadPool</p><ul><li>创建一个可缓存线程池，如果线程池长度超过处理需要，可灵活回收空闲线程，若无可回收，则新建线程</li></ul></li><li><p>newFixedThreadPool</p><ul><li>创建一个定长线程池，可控制线程最大并发数，超出的线程会在队列中等待。</li></ul></li><li><p>newScheduledThreadPool</p><ul><li>创建一个定长线程池，支持定时及周期性任务执行。</li></ul></li><li><p>newSingleThreadExecutor</p><ul><li>创建一个单线程化的线程池，它只会用唯一的工作线程来执行任务，保证所有任务按照指定顺序(FIFO, LIFO, 优先级)执行。</li></ul></li></ul><h3 id="4-开发中为什么使用线程池"><a href="#4-开发中为什么使用线程池" class="headerlink" title="4) 开发中为什么使用线程池"></a>4) 开发中为什么使用线程池</h3><ul><li>降低资源的消耗<ul><li>通过重复利用已经创建好的线程降低线程的创建和销毁带来的损耗</li></ul></li><li>提高响应速度<ul><li>因为线程池中的线程数没有超过线程池的最大上限时，有的线程处于等待分配任务的状态，当任务来时无需创建新的线程就能执行</li></ul></li><li>提高线程的可管理性<ul><li>线程池会根据当前系统特点对池内的线程进行优化处理，减少创建和销毁线程带来的系统开销。无限的创建和销毁线程不仅消耗系统资源，还降低系统的稳定性，使用线程池进行统一分配</li></ul></li></ul><h2 id="2-CompletableFuture组合式异步编程"><a href="#2-CompletableFuture组合式异步编程" class="headerlink" title="2.CompletableFuture组合式异步编程"></a>2.CompletableFuture组合式异步编程</h2><h3 id="1-runAsync-和-supplyAsync方法"><a href="#1-runAsync-和-supplyAsync方法" class="headerlink" title="(1)  runAsync 和 supplyAsync方法"></a>(1)  runAsync 和 supplyAsync方法</h3><p>CompletableFuture 提供了四个静态方法来创建一个异步操作。</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="keyword">static</span> CompletableFuture&lt;Void&gt; <span class="title function_">runAsync</span><span class="params">(Runnable runnable)</span></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">static</span> CompletableFuture&lt;Void&gt; <span class="title function_">runAsync</span><span class="params">(Runnable runnable, Executor executor)</span></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">static</span> &lt;U&gt; CompletableFuture&lt;U&gt; <span class="title function_">supplyAsync</span><span class="params">(Supplier&lt;U&gt; supplier)</span></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">static</span> &lt;U&gt; CompletableFuture&lt;U&gt; <span class="title function_">supplyAsync</span><span class="params">(Supplier&lt;U&gt; supplier, Executor executor)</span></span><br></pre></td></tr></table></figure><p>没有指定Executor的方法会使用ForkJoinPool.commonPool() 作为它的线程池执行异步代码。如果指定线程池，则使用指定的线程池运行。以下所有的方法都类同。</p><ul><li>runAsync方法不支持返回值。</li><li>supplyAsync可以支持返回值。</li></ul><h3 id="2-计算结果完成时的回调方法"><a href="#2-计算结果完成时的回调方法" class="headerlink" title="(2) 计算结果完成时的回调方法"></a>(2) 计算结果完成时的回调方法</h3><p>当CompletableFuture的计算结果完成，或者抛出异常的时候，可以执行特定的Action。主要是下面的方法：</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//可以处理异常，无返回值</span></span><br><span class="line"><span class="keyword">public</span> CompletableFuture&lt;T&gt; <span class="title function_">whenComplete</span><span class="params">(BiConsumer&lt;? <span class="built_in">super</span> T,? <span class="built_in">super</span> Throwable&gt; action)</span></span><br><span class="line"><span class="keyword">public</span> CompletableFuture&lt;T&gt; <span class="title function_">whenCompleteAsync</span><span class="params">(BiConsumer&lt;? <span class="built_in">super</span> T,? <span class="built_in">super</span> Throwable&gt; action)</span></span><br><span class="line"><span class="keyword">public</span> CompletableFuture&lt;T&gt; <span class="title function_">whenCompleteAsync</span><span class="params">(BiConsumer&lt;? <span class="built_in">super</span> T,? <span class="built_in">super</span> Throwable&gt; action, Executor executor)</span></span><br><span class="line"><span class="comment">//可以处理异常，有返回值</span></span><br><span class="line"><span class="keyword">public</span> CompletableFuture&lt;T&gt; <span class="title function_">exceptionally</span><span class="params">(Function&lt;Throwable,? extends T&gt; fn)</span></span><br></pre></td></tr></table></figure><p>可以看到Action的类型是BiConsumer&lt;? super T,? super Throwable&gt;它可以处理正常的计算结果，或者异常情况。</p><p>whenComplete 可以处理正常和异常的计算结果，exceptionally 处理异常情况。 whenComplete 和 whenCompleteAsync 的区别：</p><ul><li>whenComplete：是执行当前任务的线程执行继续执whenComplete 的任务。 </li><li>whenCompleteAsync：是执行把 whenCompleteAsync 这个任务继续提交给线程池来进行执行。</li></ul><p>方法不以 Async 结尾，意味着 Action 使用相同的线程执行，而 Async 可能会使用其他线程执行（如果是使用相同的线程池，也可能会被同一个线程选中执行）</p><h3 id="3-handle-方法"><a href="#3-handle-方法" class="headerlink" title="(3) handle 方法"></a>(3) handle 方法</h3><p>handle 是执行任务完成时对结果的处理。<br> handle 方法和 thenApply 方法处理方式基本一样。不同的是 handle 是在任务完成后再执行，还可以处理异常的任务。thenApply 只可以执行正常的任务，任务出现异常则不执行 thenApply 方法。</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">public</span> &lt;U&gt; CompletionStage&lt;U&gt; <span class="title function_">handle</span><span class="params">(BiFunction&lt;? <span class="built_in">super</span> T, Throwable, ? extends U&gt; fn)</span>;</span><br><span class="line"><span class="keyword">public</span> &lt;U&gt; CompletionStage&lt;U&gt; <span class="title function_">handleAsync</span><span class="params">(BiFunction&lt;? <span class="built_in">super</span> T, Throwable, ? extends U&gt; fn)</span>;</span><br><span class="line"><span class="keyword">public</span> &lt;U&gt; CompletionStage&lt;U&gt; <span class="title function_">handleAsync</span><span class="params">(BiFunction&lt;? <span class="built_in">super</span> T, Throwable, ? extends U&gt; fn,Execut</span></span><br></pre></td></tr></table></figure><p>和 complete 一样，可对结果做最后的处理（可处理异常），可改变返回值。</p><h3 id="4-线程串行化"><a href="#4-线程串行化" class="headerlink" title="(4)  线程串行化"></a>(4)  线程串行化</h3><p><img src="https://cdn.jsdelivr.net/gh/zsxfa/CDN/img/md/2022/04/18/1650274901.png" alt="desc"></p><p>thenApply 方法：当一个线程依赖另一个线程时，获取上一个任务返回的结果，并返回当前任务的返回值。</p><p>thenAccept 方法：消费处理结果。接收任务的处理结果，并消费处理，无返回结果。 </p><p>thenRun 方法：只要上面的任务执行完成，就开始执行 thenRun，只是处理完任务后，执行thenRun 的后续操作</p><p>带有 Async 默认是异步执行的。同之前。</p><p>以上都要前置任务成功完成。<br>Function&lt;? super T,? extends U&gt;</p><ul><li>T：上一个任务返回结果的类型</li><li>U：当前任务的返回值类型</li></ul><ul><li>thenRun：不能获取上一步的执行结果</li><li>thenAcceptAsync：能接受上一步结果，但是无返回值</li><li>thenApplyAsync：能接受上一步结果，有返回值</li></ul><h3 id="5-两任务组合-都要完成"><a href="#5-两任务组合-都要完成" class="headerlink" title="(5) 两任务组合 - 都要完成"></a>(5) 两任务组合 - 都要完成</h3><p><img src="https://cdn.jsdelivr.net/gh/zsxfa/CDN/img/md/2022/04/18/1650276475.png" alt="desc"></p><p><img src="https://cdn.jsdelivr.net/gh/zsxfa/CDN/img/md/2022/04/18/1650276490.png" alt="desc"></p><p>两个任务必须都完成，触发该任务。</p><p>thenCombine：组合两个 future，获取两个 future 的返回结果，并返回当前任务的返回值thenAcceptBoth：组合两个 future，获取两个 future 任务的返回结果，然后处理任务，没有返回值。<br>runAfterBoth：组合两个 future，不需要获取 future 的结果，只需两个 future 处理完任务后，处理该任务。</p><h3 id="6-两任务组合-一个完成"><a href="#6-两任务组合-一个完成" class="headerlink" title="(6) 两任务组合 - 一个完成"></a>(6) 两任务组合 - 一个完成</h3><p><img src="https://cdn.jsdelivr.net/gh/zsxfa/CDN/img/md/2022/04/18/1650276784.png" alt="desc"></p><p><img src="https://cdn.jsdelivr.net/gh/zsxfa/CDN/img/md/2022/04/18/1650276799.png" alt="desc"></p><p>当两个任务中，任意一个 future 任务完成的时候，执行任务。</p><p>applyToEither：两个任务有一个执行完成，获取它的返回值，处理任务并有新的返回值。 acceptEither：两个任务有一个执行完成，获取它的返回值，处理任务，没有新的返回值。 runAfterEither：两个任务有一个执行完成，不需要获取 future 的结果，处理任务，也没有返回值。</p><h3 id="7-多任务组合"><a href="#7-多任务组合" class="headerlink" title="(7) 多任务组合"></a>(7) 多任务组合</h3><p><img src="https://cdn.jsdelivr.net/gh/zsxfa/CDN/img/md/2022/04/18/1650276868.png" alt="desc"></p><p>allOf：等待所有任务完成</p><p>anyOf：只要有一个任务完成</p><h1 id="商品详情"><a href="#商品详情" class="headerlink" title="商品详情"></a>商品详情</h1><h2 id="1-模型抽取"><a href="#1-模型抽取" class="headerlink" title="1. 模型抽取"></a>1. 模型抽取</h2><p>模仿京东商品详情页，如下图所示，包括sku基本信息，图片信息，销售属性，图片介绍和规格参数</p><p>因此建立以下vo</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">@ToString</span></span><br><span class="line"><span class="meta">@Data</span></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">SkuItemVo</span> &#123;</span><br><span class="line"></span><br><span class="line">    <span class="comment">//1、sku基本信息的获取  pms_sku_info</span></span><br><span class="line">    <span class="keyword">private</span> SkuInfoEntity info;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">private</span> <span class="type">boolean</span> <span class="variable">hasStock</span> <span class="operator">=</span> <span class="literal">true</span>;</span><br><span class="line"></span><br><span class="line">    <span class="comment">//2、sku的图片信息    pms_sku_images</span></span><br><span class="line">    <span class="keyword">private</span> List&lt;SkuImagesEntity&gt; images;</span><br><span class="line"></span><br><span class="line">    <span class="comment">//3、获取spu的销售属性组合</span></span><br><span class="line">    <span class="keyword">private</span> List&lt;SkuItemSaleAttrVo&gt; saleAttr;</span><br><span class="line"></span><br><span class="line">    <span class="comment">//4、获取spu的介绍</span></span><br><span class="line">    <span class="keyword">private</span> SpuInfoDescEntity desc;</span><br><span class="line"></span><br><span class="line">    <span class="comment">//5、获取spu的规格参数信息</span></span><br><span class="line">    <span class="keyword">private</span> List&lt;SpuItemAttrGroupVo&gt; groupAttrs;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="meta">@Data</span></span><br><span class="line"><span class="meta">@ToString</span></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">SkuItemSaleAttrVo</span> &#123;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">private</span> Long attrId;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">private</span> String attrName;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">private</span> List&lt;AttrValueWithSkuIdVo&gt; attrValues;</span><br><span class="line"><span class="comment">//private String attrValue 属性值</span></span><br><span class="line">    <span class="comment">//private String skuIds 该属性值对应的skuId的集合</span></span><br><span class="line">    </span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="meta">@Data</span></span><br><span class="line"><span class="meta">@ToString</span></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">SpuItemAttrGroupVo</span> &#123;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">private</span> String groupName;</span><br><span class="line"></span><br><span class="line">    <span class="comment">//attrId,attrName,attrValue</span></span><br><span class="line">    <span class="keyword">private</span> List&lt;Attr&gt; attrs;</span><br><span class="line"></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="2-封装商品属性"><a href="#2-封装商品属性" class="headerlink" title="2. 封装商品属性"></a>2. 封装商品属性</h2><h3 id="1-总体思路"><a href="#1-总体思路" class="headerlink" title="(1) 总体思路"></a>(1) 总体思路</h3><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">@GetMapping(&quot;/&#123;skuId&#125;.html&quot;)</span></span><br><span class="line"><span class="keyword">public</span> String <span class="title function_">skuItem</span><span class="params">(<span class="meta">@PathVariable(&quot;skuId&quot;)</span> Long skuId, Model model)</span> &#123;</span><br><span class="line">    SkuItemVo skuItemVo=skuInfoService.item(skuId);</span><br><span class="line">    model.addAttribute(<span class="string">&quot;item&quot;</span>, skuItemVo);</span><br><span class="line">    <span class="keyword">return</span> <span class="string">&quot;item&quot;</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"> <span class="meta">@Override</span></span><br><span class="line">    <span class="keyword">public</span> SkuItemVo <span class="title function_">item</span><span class="params">(Long skuId)</span> &#123;</span><br><span class="line">        <span class="type">SkuItemVo</span> <span class="variable">skuItemVo</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">SkuItemVo</span>();</span><br><span class="line">        <span class="comment">//1、sku基本信息的获取  pms_sku_info</span></span><br><span class="line">        <span class="type">SkuInfoEntity</span> <span class="variable">skuInfoEntity</span> <span class="operator">=</span> <span class="built_in">this</span>.getById(skuId);</span><br><span class="line">        skuItemVo.setInfo(skuInfoEntity);</span><br><span class="line">        <span class="type">Long</span> <span class="variable">spuId</span> <span class="operator">=</span> skuInfoEntity.getSpuId();</span><br><span class="line">        <span class="type">Long</span> <span class="variable">catalogId</span> <span class="operator">=</span> skuInfoEntity.getCatalogId();</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">        <span class="comment">//2、sku的图片信息    pms_sku_images</span></span><br><span class="line">        List&lt;SkuImagesEntity&gt; skuImagesEntities = skuImagesService.list(<span class="keyword">new</span> <span class="title class_">QueryWrapper</span>&lt;SkuImagesEntity&gt;().eq(<span class="string">&quot;sku_id&quot;</span>, skuId));</span><br><span class="line">        skuItemVo.setImages(skuImagesEntities);</span><br><span class="line"></span><br><span class="line">        <span class="comment">//3、获取spu的销售属性组合-&gt; 依赖1 获取spuId</span></span><br><span class="line">        List&lt;SkuItemSaleAttrVo&gt; saleAttrVos=skuSaleAttrValueService.listSaleAttrs(spuId);</span><br><span class="line">        skuItemVo.setSaleAttr(saleAttrVos);</span><br><span class="line"></span><br><span class="line">        <span class="comment">//4、获取spu的介绍-&gt; 依赖1 获取spuId</span></span><br><span class="line">        <span class="type">SpuInfoDescEntity</span> <span class="variable">byId</span> <span class="operator">=</span> spuInfoDescService.getById(spuId);</span><br><span class="line">        skuItemVo.setDesc(byId);</span><br><span class="line"></span><br><span class="line">        <span class="comment">//5、获取spu的规格参数信息-&gt; 依赖1 获取spuId catalogId</span></span><br><span class="line">        List&lt;SpuItemAttrGroupVo&gt; spuItemAttrGroupVos=productAttrValueService.getProductGroupAttrsBySpuId(spuId, catalogId);</span><br><span class="line">        skuItemVo.setGroupAttrs(spuItemAttrGroupVos);</span><br><span class="line">        <span class="comment">//TODO 6、秒杀商品的优惠信息</span></span><br><span class="line"></span><br><span class="line">        <span class="keyword">return</span> skuItemVo;</span><br><span class="line">    &#125;</span><br></pre></td></tr></table></figure><h3 id="2-获取spu的销售属性"><a href="#2-获取spu的销售属性" class="headerlink" title="(2) 获取spu的销售属性"></a>(2) 获取spu的销售属性</h3><p>由于我们需要获取该spu下所有sku的销售属性，因此我们需要先从<code>pms_sku_info</code>查出该<code>spuId</code>对应的<code>skuId</code>，</p><p>再在<code>pms_sku_sale_attr_value</code>表中查出上述<code>skuId</code>对应的属性</p><p>因此我们需要使用连表查询，并且通过分组将单个属性值对应的多个<code>spuId</code>组成集合，效果如下</p><p>==为什么要设计成这种模式呢？==</p><p>因为这样可以在页面显示切换属性时，快速得到对应skuId的值，比如白色对应的<code>sku_ids</code>为30,29，8+128GB对应的<code>sku_ids</code>为29,31,27，那么销售属性为<code>白色、8+128GB</code>的商品的<code>skuId</code>则为二者的交集29</p><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">resultMap</span> <span class="attr">id</span>=<span class="string">&quot;SkuItemSaleAttrMap&quot;</span> <span class="attr">type</span>=<span class="string">&quot;io.niceseason.gulimall.product.vo.SkuItemSaleAttrVo&quot;</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">result</span> <span class="attr">property</span>=<span class="string">&quot;attrId&quot;</span> <span class="attr">column</span>=<span class="string">&quot;attr_id&quot;</span>/&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">result</span> <span class="attr">property</span>=<span class="string">&quot;attrName&quot;</span> <span class="attr">column</span>=<span class="string">&quot;attr_name&quot;</span>/&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">collection</span> <span class="attr">property</span>=<span class="string">&quot;attrValues&quot;</span> <span class="attr">ofType</span>=<span class="string">&quot;io.niceseason.gulimall.product.vo.AttrValueWithSkuIdVo&quot;</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">result</span> <span class="attr">property</span>=<span class="string">&quot;attrValue&quot;</span> <span class="attr">column</span>=<span class="string">&quot;attr_value&quot;</span>/&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">result</span> <span class="attr">property</span>=<span class="string">&quot;skuIds&quot;</span> <span class="attr">column</span>=<span class="string">&quot;sku_ids&quot;</span>/&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">collection</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">resultMap</span>&gt;</span></span><br><span class="line"></span><br><span class="line">    <span class="tag">&lt;<span class="name">select</span> <span class="attr">id</span>=<span class="string">&quot;listSaleAttrs&quot;</span> <span class="attr">resultMap</span>=<span class="string">&quot;SkuItemSaleAttrMap&quot;</span>&gt;</span></span><br><span class="line">        SELECT attr_id,attr_name,attr_value,GROUP_CONCAT(info.sku_id) sku_ids FROM pms_sku_info info</span><br><span class="line">        LEFT JOIN pms_sku_sale_attr_value ssav ON info.sku_id=ssav.sku_id</span><br><span class="line">        WHERE info.spu_id=#&#123;spuId&#125;</span><br><span class="line">        GROUP BY ssav.attr_id,ssav.attr_name,ssav.attr_value</span><br><span class="line">    <span class="tag">&lt;/<span class="name">select</span>&gt;</span></span><br></pre></td></tr></table></figure><h3 id="3-获取spu的规格参数信息"><a href="#3-获取spu的规格参数信息" class="headerlink" title="(3) 获取spu的规格参数信息"></a>(3) 获取spu的规格参数信息</h3><p>由于需要通过<code>spuId</code>和<code>catalogId</code>查询对应规格参数，所以我们需要通过<code>pms_attr_group表</code>获得<code>catalogId</code>和<code>attrGroupName</code></p><p>然后通过<code> pms_attr_attrgroup_relation</code>获取分组对应属性id</p><p>再到<code>   pms_product_attr_value</code>查询spuId对应的属性</p><p>最终sql效果,联表含有需要的所有属性</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">@Mapper</span></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">interface</span> <span class="title class_">ProductAttrValueDao</span> <span class="keyword">extends</span> <span class="title class_">BaseMapper</span>&lt;ProductAttrValueEntity&gt; &#123;</span><br><span class="line"></span><br><span class="line">    List&lt;SpuItemAttrGroupVo&gt; <span class="title function_">getProductGroupAttrsBySpuId</span><span class="params">(<span class="meta">@Param(&quot;spuId&quot;)</span> Long spuId, <span class="meta">@Param(&quot;catalogId&quot;)</span> Long catalogId)</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">resultMap</span> <span class="attr">id</span>=<span class="string">&quot;ProductGroupAttrsMap&quot;</span> <span class="attr">type</span>=<span class="string">&quot;io.niceseason.gulimall.product.vo.SpuItemAttrGroupVo&quot;</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">result</span> <span class="attr">property</span>=<span class="string">&quot;groupName&quot;</span> <span class="attr">column</span>=<span class="string">&quot;attr_group_name&quot;</span>/&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">collection</span> <span class="attr">property</span>=<span class="string">&quot;attrs&quot;</span> <span class="attr">ofType</span>=<span class="string">&quot;io.niceseason.gulimall.product.vo.Attr&quot;</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">result</span> <span class="attr">property</span>=<span class="string">&quot;attrId&quot;</span> <span class="attr">column</span>=<span class="string">&quot;attr_id&quot;</span>/&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">result</span> <span class="attr">property</span>=<span class="string">&quot;attrName&quot;</span> <span class="attr">column</span>=<span class="string">&quot;attr_name&quot;</span>/&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">result</span> <span class="attr">property</span>=<span class="string">&quot;attrValue&quot;</span> <span class="attr">column</span>=<span class="string">&quot;attr_value&quot;</span>/&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">collection</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">resultMap</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;<span class="name">select</span> <span class="attr">id</span>=<span class="string">&quot;getProductGroupAttrsBySpuId&quot;</span> <span class="attr">resultMap</span>=<span class="string">&quot;ProductGroupAttrsMap&quot;</span>&gt;</span></span><br><span class="line">    SELECT ag.attr_group_name,attr.attr_id,attr.attr_name,attr.attr_value</span><br><span class="line">    FROM pms_attr_attrgroup_relation aar </span><br><span class="line">    LEFT JOIN pms_attr_group ag ON aar.attr_group_id=ag.attr_group_id</span><br><span class="line">    LEFT JOIN pms_product_attr_value attr ON aar.attr_id=attr.attr_id</span><br><span class="line">    WHERE attr.spu_id = #&#123;spuId&#125; AND ag.catelog_id = #&#123;catalogId&#125;</span><br><span class="line"><span class="tag">&lt;/<span class="name">select</span>&gt;</span></span><br></pre></td></tr></table></figure><h2 id="3-使用异步编排"><a href="#3-使用异步编排" class="headerlink" title="3. 使用异步编排"></a>3. 使用异步编排</h2><p>为了使我们的任务进行的更快，我们可以让查询的各个子任务多线程执行，但是由于各个任务之间可能有相互依赖的关系，因此就涉及到了异步编排。</p><p>在这次查询中spu的销售属性、介绍、规格参数信息都需要<code>spuId</code>,因此依赖sku基本信息的获取,所以我们要让这些任务在1之后运行。因为我们需要1运行的结果，因此调用<code>thenAcceptAsync()</code>可以接受上一步的结果且没有返回值。</p><p>最后时，我们需要调用<code>get()</code>方法使得所有方法都已经执行完成</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">public</span> SkuItemVo <span class="title function_">item</span><span class="params">(Long skuId)</span> &#123;</span><br><span class="line">    <span class="type">SkuItemVo</span> <span class="variable">skuItemVo</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">SkuItemVo</span>();</span><br><span class="line">    CompletableFuture&lt;SkuInfoEntity&gt; infoFuture = CompletableFuture.supplyAsync(() -&gt; &#123;</span><br><span class="line">        <span class="comment">//1、sku基本信息的获取  pms_sku_info</span></span><br><span class="line">        <span class="type">SkuInfoEntity</span> <span class="variable">skuInfoEntity</span> <span class="operator">=</span> <span class="built_in">this</span>.getById(skuId);</span><br><span class="line">        skuItemVo.setInfo(skuInfoEntity);</span><br><span class="line">        <span class="keyword">return</span> skuInfoEntity;</span><br><span class="line">    &#125;, executor);</span><br><span class="line"></span><br><span class="line">    <span class="comment">//2、sku的图片信息    pms_sku_images</span></span><br><span class="line">    CompletableFuture&lt;Void&gt; imageFuture = CompletableFuture.runAsync(() -&gt; &#123;</span><br><span class="line">        List&lt;SkuImagesEntity&gt; skuImagesEntities = skuImagesService.list(<span class="keyword">new</span> <span class="title class_">QueryWrapper</span>&lt;SkuImagesEntity&gt;().eq(<span class="string">&quot;sku_id&quot;</span>, skuId));</span><br><span class="line">        skuItemVo.setImages(skuImagesEntities);</span><br><span class="line">    &#125;, executor);</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">    <span class="comment">//3、获取spu的销售属性组合-&gt; 依赖1 获取spuId</span></span><br><span class="line">    CompletableFuture&lt;Void&gt; saleFuture = infoFuture.thenAcceptAsync((info) -&gt; &#123;</span><br><span class="line">        List&lt;SkuItemSaleAttrVo&gt; saleAttrVos = skuSaleAttrValueService.listSaleAttrs(info.getSpuId());</span><br><span class="line">        skuItemVo.setSaleAttr(saleAttrVos);</span><br><span class="line">    &#125;, executor);</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">    <span class="comment">//4、获取spu的介绍-&gt; 依赖1 获取spuId</span></span><br><span class="line">    CompletableFuture&lt;Void&gt; descFuture = infoFuture.thenAcceptAsync((info) -&gt; &#123;</span><br><span class="line">        <span class="type">SpuInfoDescEntity</span> <span class="variable">byId</span> <span class="operator">=</span> spuInfoDescService.getById(info.getSpuId());</span><br><span class="line">        skuItemVo.setDesc(byId);</span><br><span class="line">    &#125;, executor);</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">    <span class="comment">//5、获取spu的规格参数信息-&gt; 依赖1 获取spuId catalogId</span></span><br><span class="line">    CompletableFuture&lt;Void&gt; attrFuture = infoFuture.thenAcceptAsync((info) -&gt; &#123;</span><br><span class="line">        List&lt;SpuItemAttrGroupVo&gt; spuItemAttrGroupVos=productAttrValueService.getProductGroupAttrsBySpuId(info.getSpuId(), info.getCatalogId());</span><br><span class="line">        skuItemVo.setGroupAttrs(spuItemAttrGroupVos);</span><br><span class="line">    &#125;, executor);</span><br><span class="line"></span><br><span class="line">    <span class="comment">//TODO 6、秒杀商品的优惠信息</span></span><br><span class="line"></span><br><span class="line">    <span class="comment">//等待所有任务执行完成</span></span><br><span class="line">    <span class="keyword">try</span> &#123;</span><br><span class="line">        CompletableFuture.allOf(imageFuture, saleFuture, descFuture, attrFuture).get();</span><br><span class="line">    &#125; <span class="keyword">catch</span> (InterruptedException e) &#123;</span><br><span class="line">        e.printStackTrace();</span><br><span class="line">    &#125; <span class="keyword">catch</span> (ExecutionException e) &#123;</span><br><span class="line">        e.printStackTrace();</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">return</span> skuItemVo;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="4-页面的sku切换"><a href="#4-页面的sku切换" class="headerlink" title="4. 页面的sku切换"></a>4. 页面的sku切换</h2><p>通过控制class中是否包换<code>checked</code>属性来控制显示样式，因此要根据<code>skuId</code>判断</p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">dd</span> <span class="attr">th:each</span>=<span class="string">&quot;val : $&#123;attr.attrValues&#125;&quot;</span>&gt;</span></span><br><span class="line">    <span class="comment">&lt;!--当前属性值的skuIds集合中是否含有当前商品的skuId,如果有说明是选中状态，加上checked--&gt;</span></span><br><span class="line">   <span class="tag">&lt;<span class="name">a</span> <span class="attr">th:attr</span>=<span class="string">&quot; class=$&#123;#lists.contains(#strings.listSplit(val.skuIds,&#x27;,&#x27;),item.info.skuId.toString())</span></span></span><br><span class="line"><span class="string"><span class="tag">                            ? &#x27;sku_attr_value checked&#x27;: &#x27;sku_attr_value&#x27;&#125;, skus=$&#123;val.skuIds&#125; &quot;</span></span></span><br><span class="line"><span class="tag">   &gt;</span></span><br><span class="line">      [[$&#123;val.attrValue&#125;]]</span><br><span class="line">   <span class="tag">&lt;/<span class="name">a</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">dd</span>&gt;</span></span><br></pre></td></tr></table></figure><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br></pre></td><td class="code"><pre><span class="line">$(<span class="string">&quot;.sku_attr_value&quot;</span>).<span class="title function_">click</span>(<span class="keyword">function</span> (<span class="params"></span>) &#123;</span><br><span class="line">    <span class="comment">//1、改变样式</span></span><br><span class="line">    <span class="keyword">let</span> curr = $(<span class="variable language_">this</span>).<span class="title function_">attr</span>(<span class="string">&quot;skus&quot;</span>).<span class="title function_">split</span>(<span class="string">&quot;,&quot;</span>);</span><br><span class="line">    <span class="comment">//1.1 给点击元素的兄弟节点去除checked</span></span><br><span class="line">    $(<span class="variable language_">this</span>).<span class="title function_">parent</span>().<span class="title function_">parent</span>().<span class="title function_">find</span>(<span class="string">&quot;.sku_attr_value&quot;</span>).<span class="title function_">removeClass</span>(<span class="string">&quot;checked&quot;</span>);</span><br><span class="line">    <span class="comment">//1.2 给点击元素加上checked</span></span><br><span class="line">    $(<span class="variable language_">this</span>).<span class="title function_">addClass</span>(<span class="string">&quot;checked&quot;</span>);</span><br><span class="line">    <span class="comment">//1.3 为sku_attr_value设置未选中样式，为sku_attr_value checked设置选中的样式</span></span><br><span class="line">    <span class="title function_">changeCheckedStyle</span>();</span><br><span class="line"></span><br><span class="line">    <span class="comment">//2. 切换spuId</span></span><br><span class="line">    <span class="keyword">let</span> skus = <span class="keyword">new</span> <span class="title class_">Array</span>();</span><br><span class="line">    <span class="comment">//2.1 将每个skuIds变成数组放入skus这个数组集合中</span></span><br><span class="line">    $(<span class="string">&quot;a[class=&#x27;sku_attr_value checked&#x27;]&quot;</span>).<span class="title function_">each</span>(<span class="keyword">function</span> (<span class="params"></span>) &#123;</span><br><span class="line">        skus.<span class="title function_">push</span>($(<span class="variable language_">this</span>).<span class="title function_">attr</span>(<span class="string">&quot;skus&quot;</span>).<span class="title function_">split</span>(<span class="string">&quot;,&quot;</span>));</span><br><span class="line">    &#125;);</span><br><span class="line"></span><br><span class="line">    <span class="keyword">let</span> filterEle = skus[<span class="number">0</span>];</span><br><span class="line">    <span class="keyword">for</span> (<span class="keyword">let</span> i = <span class="number">1</span>; i &lt; skus.<span class="property">length</span>; i++) &#123;</span><br><span class="line">        <span class="comment">//2.2 遍历每个属性的skuIds获取交集</span></span><br><span class="line">        <span class="comment">//比如sku[0]=&#123;1,3,5&#125;,sku[1]=&#123;4,5,6&#125; 那么 $(sku[0]).filter(sku[1])=5</span></span><br><span class="line">        filterEle = $(filterEle).<span class="title function_">filter</span>(skus[i])[<span class="number">0</span>];</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">//2.3 url 拼串</span></span><br><span class="line">    location.<span class="property">href</span> = <span class="string">&quot;http://item.gulimall.com/&quot;</span> + filterEle + <span class="string">&quot;.html&quot;</span>;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">return</span> <span class="literal">false</span>;</span><br><span class="line">&#125;);</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="keyword">function</span> <span class="title function_">changeCheckedStyle</span>(<span class="params"></span>) &#123;</span><br><span class="line">    $(<span class="string">&quot;.sku_attr_value&quot;</span>).<span class="title function_">parent</span>().<span class="title function_">css</span>(&#123;<span class="string">&quot;border&quot;</span>: <span class="string">&quot;solid 1px #ccc&quot;</span>&#125;);</span><br><span class="line">    $(<span class="string">&quot;a[class=&#x27;sku_attr_value checked&#x27;]&quot;</span>).<span class="title function_">parent</span>().<span class="title function_">css</span>(&#123;<span class="string">&quot;border&quot;</span>: <span class="string">&quot;solid 1px red&quot;</span>&#125;);</span><br><span class="line">&#125;;</span><br></pre></td></tr></table></figure><h1 id="认证服务"><a href="#认证服务" class="headerlink" title="认证服务"></a>认证服务</h1><h2 id="1-环境搭建-1"><a href="#1-环境搭建-1" class="headerlink" title="1. 环境搭建"></a>1. 环境搭建</h2><p>创建<code>gulimall-auth-server</code>模块，导依赖，引入<code>login.html</code>和<code>reg.html</code>，并把静态资源放到nginx的static目录下</p><h2 id="2-注册功能"><a href="#2-注册功能" class="headerlink" title="2.  注册功能"></a>2.  注册功能</h2><h3 id="1-验证码倒计时"><a href="#1-验证码倒计时" class="headerlink" title="(1) 验证码倒计时"></a>(1) 验证码倒计时</h3><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//点击发送验证码按钮触发下面函数</span></span><br><span class="line">$(<span class="string">&quot;#sendCode&quot;</span>).<span class="title function_">click</span>(<span class="keyword">function</span> (<span class="params"></span>) &#123;</span><br><span class="line"><span class="comment">//如果有disabled，说明最近已经点过，则什么都不做</span></span><br><span class="line"><span class="keyword">if</span>($(<span class="variable language_">this</span>).<span class="title function_">hasClass</span>(<span class="string">&quot;disabled&quot;</span>))&#123;</span><br><span class="line"></span><br><span class="line">&#125;<span class="keyword">else</span> &#123;</span><br><span class="line">            <span class="comment">//调用函数使得当前的文本进行倒计时功能</span></span><br><span class="line"><span class="title function_">timeOutChangeStyle</span>();</span><br><span class="line"><span class="comment">//发送验证码</span></span><br><span class="line"><span class="keyword">var</span> phone=$(<span class="string">&quot;#phoneNum&quot;</span>).<span class="title function_">val</span>();</span><br><span class="line">$.<span class="title function_">get</span>(<span class="string">&quot;/sms/sendCode?phone=&quot;</span>+phone,<span class="keyword">function</span> (<span class="params">data</span>)&#123;</span><br><span class="line"><span class="keyword">if</span> (data.<span class="property">code</span>!=<span class="number">0</span>)&#123;</span><br><span class="line"><span class="title function_">alert</span>(data.<span class="property">msg</span>);</span><br><span class="line">&#125;</span><br><span class="line">&#125;)</span><br><span class="line">&#125;</span><br><span class="line">&#125;)</span><br><span class="line"></span><br><span class="line"><span class="keyword">let</span> time = <span class="number">60</span>;</span><br><span class="line"><span class="keyword">function</span> <span class="title function_">timeOutChangeStyle</span>(<span class="params"></span>) &#123;</span><br><span class="line"><span class="comment">//开启倒计时后设置标志属性disable，使得该按钮不能再次被点击</span></span><br><span class="line">$(<span class="string">&quot;#sendCode&quot;</span>).<span class="title function_">attr</span>(<span class="string">&quot;class&quot;</span>, <span class="string">&quot;disabled&quot;</span>);</span><br><span class="line">        <span class="comment">//当时间为0时，说明倒计时完成，则重置</span></span><br><span class="line"><span class="keyword">if</span>(time==<span class="number">0</span>)&#123;</span><br><span class="line">$(<span class="string">&quot;#sendCode&quot;</span>).<span class="title function_">text</span>(<span class="string">&quot;点击发送验证码&quot;</span>);</span><br><span class="line">time=<span class="number">60</span>;</span><br><span class="line">$(<span class="string">&quot;#sendCode&quot;</span>).<span class="title function_">attr</span>(<span class="string">&quot;class&quot;</span>, <span class="string">&quot;&quot;</span>);</span><br><span class="line">&#125;<span class="keyword">else</span> &#123;</span><br><span class="line">            <span class="comment">//每秒调用一次当前函数，使得time--</span></span><br><span class="line">$(<span class="string">&quot;#sendCode&quot;</span>).<span class="title function_">text</span>(time+<span class="string">&quot;s后再次发送&quot;</span>);</span><br><span class="line">time--;</span><br><span class="line"><span class="built_in">setTimeout</span>(<span class="string">&quot;timeOutChangeStyle()&quot;</span>, <span class="number">1000</span>);</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="2-整合短信服务"><a href="#2-整合短信服务" class="headerlink" title="(2) 整合短信服务"></a>(2) 整合短信服务</h3><p>在阿里云网页购买试用的短信服务</p><p>在<code>gulimall-third-party</code>中编写发送短信组件,其中<code>host</code>、<code>path</code>、<code>appcode</code>可以在配置文件中使用前缀<code>spring.cloud.alicloud.sms</code>进行配置</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">@Data</span></span><br><span class="line"><span class="meta">@ConfigurationProperties(prefix = &quot;spring.cloud.alicloud.sms&quot;)</span></span><br><span class="line"><span class="meta">@Controller</span></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">SmsComponent</span> &#123;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">private</span> String host;</span><br><span class="line">    <span class="keyword">private</span> String path;</span><br><span class="line">    <span class="keyword">private</span> String appcode;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">sendCode</span><span class="params">(String phone,String code)</span> &#123;</span><br><span class="line"><span class="comment">//        String host = &quot;http://dingxin.market.alicloudapi.com&quot;;</span></span><br><span class="line"><span class="comment">//        String path = &quot;/dx/sendSms&quot;;</span></span><br><span class="line">        <span class="type">String</span> <span class="variable">method</span> <span class="operator">=</span> <span class="string">&quot;POST&quot;</span>;</span><br><span class="line"><span class="comment">//        String appcode = &quot;你自己的AppCode&quot;;</span></span><br><span class="line">        Map&lt;String, String&gt; headers = <span class="keyword">new</span> <span class="title class_">HashMap</span>&lt;String, String&gt;();</span><br><span class="line">        <span class="comment">//最后在header中的格式(中间是英文空格)为Authorization:APPCODE 83359fd73fe94948385f570e3c139105</span></span><br><span class="line">        headers.put(<span class="string">&quot;Authorization&quot;</span>, <span class="string">&quot;APPCODE &quot;</span> + appcode);</span><br><span class="line">        Map&lt;String, String&gt; querys = <span class="keyword">new</span> <span class="title class_">HashMap</span>&lt;String, String&gt;();</span><br><span class="line">        querys.put(<span class="string">&quot;mobile&quot;</span>,phone);</span><br><span class="line">        querys.put(<span class="string">&quot;param&quot;</span>, <span class="string">&quot;code:&quot;</span>+code);</span><br><span class="line">        querys.put(<span class="string">&quot;tpl_id&quot;</span>, <span class="string">&quot;TP1711063&quot;</span>);</span><br><span class="line">        Map&lt;String, String&gt; bodys = <span class="keyword">new</span> <span class="title class_">HashMap</span>&lt;String, String&gt;();</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">        <span class="keyword">try</span> &#123;</span><br><span class="line">            <span class="comment">/**</span></span><br><span class="line"><span class="comment">             * 重要提示如下:</span></span><br><span class="line"><span class="comment">             * HttpUtils请从</span></span><br><span class="line"><span class="comment">             * https://github.com/aliyun/api-gateway-demo-sign-java/blob/master/src/main/java/com/aliyun/api/gateway/demo/util/HttpUtils.java</span></span><br><span class="line"><span class="comment">             * 下载</span></span><br><span class="line"><span class="comment">             *</span></span><br><span class="line"><span class="comment">             * 相应的依赖请参照</span></span><br><span class="line"><span class="comment">             * https://github.com/aliyun/api-gateway-demo-sign-java/blob/master/pom.xml</span></span><br><span class="line"><span class="comment">             */</span></span><br><span class="line">            <span class="type">HttpResponse</span> <span class="variable">response</span> <span class="operator">=</span> HttpUtils.doPost(host, path, method, headers, querys, bodys);</span><br><span class="line">            System.out.println(response.toString());</span><br><span class="line">            <span class="comment">//获取response的body</span></span><br><span class="line">            <span class="comment">//System.out.println(EntityUtils.toString(response.getEntity()));</span></span><br><span class="line">        &#125; <span class="keyword">catch</span> (Exception e) &#123;</span><br><span class="line">            e.printStackTrace();</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>编写controller，给别的服务提供远程调用发送验证码的接口</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">@Controller</span></span><br><span class="line"><span class="meta">@RequestMapping(value = &quot;/sms&quot;)</span></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">SmsSendController</span> &#123;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Resource</span></span><br><span class="line">    <span class="keyword">private</span> SmsComponent smsComponent;</span><br><span class="line"></span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * 提供给别的服务进行调用</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@param</span> phone 电话号码</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@param</span> code 验证码</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@return</span></span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="meta">@ResponseBody</span></span><br><span class="line">    <span class="meta">@GetMapping(value = &quot;/sendCode&quot;)</span></span><br><span class="line">    <span class="keyword">public</span> R <span class="title function_">sendCode</span><span class="params">(<span class="meta">@RequestParam(&quot;phone&quot;)</span> String phone, <span class="meta">@RequestParam(&quot;code&quot;)</span> String code)</span> &#123;</span><br><span class="line"></span><br><span class="line">        <span class="comment">//发送验证码</span></span><br><span class="line">        smsComponent.sendCode(phone,code);</span><br><span class="line">        System.out.println(phone+code);</span><br><span class="line">        <span class="keyword">return</span> R.ok();</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="3-接口防刷"><a href="#3-接口防刷" class="headerlink" title="(3) 接口防刷"></a>(3) 接口防刷</h3><p>由于发送验证码的接口暴露，为了防止恶意攻击，我们不能随意让接口被调用。</p><ul><li>在redis中以<code>phone-code</code>将电话号码和验证码进行存储并将当前时间与code一起存储<ul><li>如果调用时以当前<code>phone</code>取出的v不为空且当前时间在存储时间的60s以内，说明60s内该号码已经调用过，返回错误信息</li><li>60s以后再次调用，需要删除之前存储的<code>phone-code</code></li><li>code存在一个过期时间，我们设置为10min，10min内验证该验证码有效</li></ul></li></ul><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">@GetMapping(&quot;/sms/sendCode&quot;)</span></span><br><span class="line"><span class="meta">@ResponseBody</span></span><br><span class="line"><span class="keyword">public</span> R <span class="title function_">sendCode</span><span class="params">(<span class="meta">@RequestParam(&quot;phone&quot;)</span>String phone)</span> &#123;</span><br><span class="line">   <span class="comment">//接口防刷,在redis中缓存phone-code</span></span><br><span class="line">    ValueOperations&lt;String, String&gt; ops = redisTemplate.opsForValue();</span><br><span class="line">    <span class="type">String</span> <span class="variable">prePhone</span> <span class="operator">=</span> AuthServerConstant.SMS_CODE_CACHE_PREFIX + phone;</span><br><span class="line">    <span class="type">String</span> <span class="variable">v</span> <span class="operator">=</span> ops.get(prePhone);</span><br><span class="line">    <span class="keyword">if</span> (!StringUtils.isEmpty(v)) &#123;</span><br><span class="line">        <span class="type">long</span> <span class="variable">pre</span> <span class="operator">=</span> Long.parseLong(v.split(<span class="string">&quot;_&quot;</span>)[<span class="number">1</span>]);</span><br><span class="line">        <span class="comment">//如果存储的时间小于60s，说明60s内发送过验证码</span></span><br><span class="line">        <span class="keyword">if</span> (System.currentTimeMillis() - pre &lt; <span class="number">60000</span>) &#123;</span><br><span class="line">            <span class="keyword">return</span> R.error(BizCodeEnum.SMS_CODE_EXCEPTION.getCode(), BizCodeEnum.SMS_CODE_EXCEPTION.getMsg());</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="comment">//如果存在的话，删除之前的验证码</span></span><br><span class="line">    redisTemplate.delete(prePhone);</span><br><span class="line">    <span class="comment">//获取到6位数字的验证码</span></span><br><span class="line">    <span class="type">String</span> <span class="variable">code</span> <span class="operator">=</span> String.valueOf((<span class="type">int</span>)((Math.random() + <span class="number">1</span>) * <span class="number">100000</span>));</span><br><span class="line">    <span class="comment">//在redis中进行存储并设置过期时间</span></span><br><span class="line">    ops.set(prePhone,code+<span class="string">&quot;_&quot;</span>+System.currentTimeMillis(),<span class="number">10</span>, TimeUnit.MINUTES);</span><br><span class="line">    thirdPartFeignService.sendCode(phone, code);</span><br><span class="line">    <span class="keyword">return</span> R.ok();</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="4-注册接口编写"><a href="#4-注册接口编写" class="headerlink" title="(4) 注册接口编写"></a>(4) 注册接口编写</h3><p>在<code>gulimall-auth-server</code>服务中编写注册的主体逻辑</p><ul><li>若JSR303校验未通过，则通过<code>BindingResult</code>封装错误信息，并重定向至注册页面</li><li>若通过JSR303校验，则需要从<code>redis</code>中取值判断验证码是否正确，正确的话通过会员服务注册</li><li>会员服务调用成功则重定向至登录页，否则封装远程服务返回的错误信息返回至注册页面</li></ul><p>注： <code>RedirectAttributes</code>可以通过session保存信息并在重定向的时候携带过去</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">@PostMapping(&quot;/register&quot;)</span></span><br><span class="line">   <span class="keyword">public</span> String <span class="title function_">register</span><span class="params">(<span class="meta">@Valid</span> UserRegisterVo registerVo, BindingResult result, RedirectAttributes attributes)</span> &#123;</span><br><span class="line">       <span class="comment">//1.判断校验是否通过</span></span><br><span class="line">       Map&lt;String, String&gt; errors = <span class="keyword">new</span> <span class="title class_">HashMap</span>&lt;&gt;();</span><br><span class="line">       <span class="keyword">if</span> (result.hasErrors())&#123;</span><br><span class="line">           <span class="comment">//1.1 如果校验不通过，则封装校验结果</span></span><br><span class="line">           result.getFieldErrors().forEach(item-&gt;&#123;</span><br><span class="line">               errors.put(item.getField(), item.getDefaultMessage());</span><br><span class="line">               <span class="comment">//1.2 将错误信息封装到session中</span></span><br><span class="line">               attributes.addFlashAttribute(<span class="string">&quot;errors&quot;</span>, errors);</span><br><span class="line">           &#125;);</span><br><span class="line">           <span class="comment">//1.2 重定向到注册页</span></span><br><span class="line">           <span class="keyword">return</span> <span class="string">&quot;redirect:http://auth.gulimall.com/reg.html&quot;</span>;</span><br><span class="line">       &#125;<span class="keyword">else</span> &#123;</span><br><span class="line">           <span class="comment">//2.若JSR303校验通过</span></span><br><span class="line">           <span class="comment">//判断验证码是否正确</span></span><br><span class="line">           <span class="type">String</span> <span class="variable">code</span> <span class="operator">=</span> redisTemplate.opsForValue().get(AuthServerConstant.SMS_CODE_CACHE_PREFIX + registerVo.getPhone());</span><br><span class="line">           <span class="comment">//2.1 如果对应手机的验证码不为空且与提交上的相等-》验证码正确</span></span><br><span class="line">           <span class="keyword">if</span> (!StringUtils.isEmpty(code) &amp;&amp; registerVo.getCode().equals(code.split(<span class="string">&quot;_&quot;</span>)[<span class="number">0</span>])) &#123;</span><br><span class="line">               <span class="comment">//2.1.1 使得验证后的验证码失效</span></span><br><span class="line">               redisTemplate.delete(AuthServerConstant.SMS_CODE_CACHE_PREFIX + registerVo.getPhone());</span><br><span class="line"></span><br><span class="line">               <span class="comment">//2.1.2 远程调用会员服务注册</span></span><br><span class="line">               <span class="type">R</span> <span class="variable">r</span> <span class="operator">=</span> memberFeignService.register(registerVo);</span><br><span class="line">               <span class="keyword">if</span> (r.getCode() == <span class="number">0</span>) &#123;</span><br><span class="line">                   <span class="comment">//调用成功，重定向登录页</span></span><br><span class="line">                   <span class="keyword">return</span> <span class="string">&quot;redirect:http://auth.gulimall.com/login.html&quot;</span>;</span><br><span class="line">               &#125;<span class="keyword">else</span> &#123;</span><br><span class="line">                   <span class="comment">//调用失败，返回注册页并显示错误信息</span></span><br><span class="line">                   <span class="type">String</span> <span class="variable">msg</span> <span class="operator">=</span> (String) r.get(<span class="string">&quot;msg&quot;</span>);</span><br><span class="line">                   errors.put(<span class="string">&quot;msg&quot;</span>, msg);</span><br><span class="line">                   attributes.addFlashAttribute(<span class="string">&quot;errors&quot;</span>, errors);</span><br><span class="line">                   <span class="keyword">return</span> <span class="string">&quot;redirect:http://auth.gulimall.com/reg.html&quot;</span>;</span><br><span class="line">               &#125;</span><br><span class="line">           &#125;<span class="keyword">else</span> &#123;</span><br><span class="line">               <span class="comment">//2.2 验证码错误</span></span><br><span class="line">               errors.put(<span class="string">&quot;code&quot;</span>, <span class="string">&quot;验证码错误&quot;</span>);</span><br><span class="line">               attributes.addFlashAttribute(<span class="string">&quot;errors&quot;</span>, errors);</span><br><span class="line">               <span class="keyword">return</span> <span class="string">&quot;redirect:http://auth.gulimall.com/reg.html&quot;</span>;</span><br><span class="line">           &#125;</span><br><span class="line">       &#125;</span><br><span class="line">   &#125;</span><br></pre></td></tr></table></figure><p>通过<code>gulimall-member</code>会员服务注册逻辑</p><ul><li>通过异常机制判断当前注册会员名和电话号码是否已经注册，如果已经注册，则抛出对应的自定义异常，并在返回时封装对应的错误信息</li><li>如果没有注册，则封装传递过来的会员信息，并设置默认的会员等级、创建时间</li></ul><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">@RequestMapping(&quot;/register&quot;)</span></span><br><span class="line">   <span class="keyword">public</span> R <span class="title function_">register</span><span class="params">(<span class="meta">@RequestBody</span> MemberRegisterVo registerVo)</span> &#123;</span><br><span class="line">       <span class="keyword">try</span> &#123;</span><br><span class="line">           memberService.register(registerVo);</span><br><span class="line">           <span class="comment">//异常机制：通过捕获对应的自定义异常判断出现何种错误并封装错误信息</span></span><br><span class="line">       &#125; <span class="keyword">catch</span> (UserExistException userException) &#123;</span><br><span class="line">           <span class="keyword">return</span> R.error(BizCodeEnum.USER_EXIST_EXCEPTION.getCode(), BizCodeEnum.USER_EXIST_EXCEPTION.getMsg());</span><br><span class="line">       &#125; <span class="keyword">catch</span> (PhoneNumExistException phoneException) &#123;</span><br><span class="line">           <span class="keyword">return</span> R.error(BizCodeEnum.PHONE_EXIST_EXCEPTION.getCode(), BizCodeEnum.PHONE_EXIST_EXCEPTION.getMsg());</span><br><span class="line">       &#125;</span><br><span class="line">       <span class="keyword">return</span> R.ok();</span><br><span class="line">   &#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">register</span><span class="params">(MemberRegisterVo registerVo)</span> &#123;</span><br><span class="line">    <span class="comment">//1 检查电话号是否唯一</span></span><br><span class="line">    checkPhoneUnique(registerVo.getPhone());</span><br><span class="line">    <span class="comment">//2 检查用户名是否唯一</span></span><br><span class="line">    checkUserNameUnique(registerVo.getUserName());</span><br><span class="line">    <span class="comment">//3 该用户信息唯一，进行插入</span></span><br><span class="line">    <span class="type">MemberEntity</span> <span class="variable">entity</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">MemberEntity</span>();</span><br><span class="line">    <span class="comment">//3.1 保存基本信息</span></span><br><span class="line">    entity.setUsername(registerVo.getUserName());</span><br><span class="line">    entity.setMobile(registerVo.getPhone());</span><br><span class="line">    entity.setCreateTime(<span class="keyword">new</span> <span class="title class_">Date</span>());</span><br><span class="line">    <span class="comment">//3.2 使用加密保存密码</span></span><br><span class="line">    <span class="type">BCryptPasswordEncoder</span> <span class="variable">passwordEncoder</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">BCryptPasswordEncoder</span>();</span><br><span class="line">    <span class="type">String</span> <span class="variable">encodePassword</span> <span class="operator">=</span> passwordEncoder.encode(registerVo.getPassword());</span><br><span class="line">    entity.setPassword(encodePassword);</span><br><span class="line">    <span class="comment">//3.3 设置会员默认等级</span></span><br><span class="line">    <span class="comment">//3.3.1 找到会员默认登记</span></span><br><span class="line">    <span class="type">MemberLevelEntity</span> <span class="variable">defaultLevel</span> <span class="operator">=</span> memberLevelService.getOne(<span class="keyword">new</span> <span class="title class_">QueryWrapper</span>&lt;MemberLevelEntity&gt;().eq(<span class="string">&quot;default_status&quot;</span>, <span class="number">1</span>));</span><br><span class="line">    <span class="comment">//3.3.2 设置会员等级为默认</span></span><br><span class="line">    entity.setLevelId(defaultLevel.getId());</span><br><span class="line"></span><br><span class="line">    <span class="comment">// 4 保存用户信息</span></span><br><span class="line">    <span class="built_in">this</span>.save(entity);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">private</span> <span class="keyword">void</span> <span class="title function_">checkUserNameUnique</span><span class="params">(String userName)</span> &#123;</span><br><span class="line">    <span class="type">Integer</span> <span class="variable">count</span> <span class="operator">=</span> baseMapper.selectCount(<span class="keyword">new</span> <span class="title class_">QueryWrapper</span>&lt;MemberEntity&gt;().eq(<span class="string">&quot;username&quot;</span>, userName));</span><br><span class="line">    <span class="keyword">if</span> (count &gt; <span class="number">0</span>) &#123;</span><br><span class="line">        <span class="keyword">throw</span> <span class="keyword">new</span> <span class="title class_">UserExistException</span>();</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">private</span> <span class="keyword">void</span> <span class="title function_">checkPhoneUnique</span><span class="params">(String phone)</span> &#123;</span><br><span class="line">    <span class="type">Integer</span> <span class="variable">count</span> <span class="operator">=</span> baseMapper.selectCount(<span class="keyword">new</span> <span class="title class_">QueryWrapper</span>&lt;MemberEntity&gt;().eq(<span class="string">&quot;mobile&quot;</span>, phone));</span><br><span class="line">    <span class="keyword">if</span> (count &gt; <span class="number">0</span>) &#123;</span><br><span class="line">        <span class="keyword">throw</span> <span class="keyword">new</span> <span class="title class_">PhoneNumExistException</span>();</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="3-用户名密码登录"><a href="#3-用户名密码登录" class="headerlink" title="3. 用户名密码登录"></a>3. 用户名密码登录</h2><p>在<code>gulimall-auth-server</code>模块中的主体逻辑</p><ul><li>通过会员服务远程调用登录接口<ul><li>如果调用成功，重定向至首页</li><li>如果调用失败，则封装错误信息并携带错误信息重定向至登录页</li></ul></li></ul><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">@RequestMapping(&quot;/login&quot;)</span></span><br><span class="line"><span class="keyword">public</span> String <span class="title function_">login</span><span class="params">(UserLoginVo vo,RedirectAttributes attributes)</span>&#123;</span><br><span class="line">    <span class="type">R</span> <span class="variable">r</span> <span class="operator">=</span> memberFeignService.login(vo);</span><br><span class="line">    <span class="keyword">if</span> (r.getCode() == <span class="number">0</span>) &#123;</span><br><span class="line">        <span class="keyword">return</span> <span class="string">&quot;redirect:http://gulimall.com/&quot;</span>;</span><br><span class="line">    &#125;<span class="keyword">else</span> &#123;</span><br><span class="line">        <span class="type">String</span> <span class="variable">msg</span> <span class="operator">=</span> (String) r.get(<span class="string">&quot;msg&quot;</span>);</span><br><span class="line">        Map&lt;String, String&gt; errors = <span class="keyword">new</span> <span class="title class_">HashMap</span>&lt;&gt;();</span><br><span class="line">        errors.put(<span class="string">&quot;msg&quot;</span>, msg);</span><br><span class="line">        attributes.addFlashAttribute(<span class="string">&quot;errors&quot;</span>, errors);</span><br><span class="line">        <span class="keyword">return</span> <span class="string">&quot;redirect:http://auth.gulimall.com/login.html&quot;</span>;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>在<code>gulimall-member</code>模块中完成登录</p><ul><li>当数据库中含有以当前登录名为用户名或电话号且密码匹配时，验证通过，返回查询到的实体</li><li>否则返回null，并在controller返回<code>用户名或密码错误</code></li></ul><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">@RequestMapping(&quot;/login&quot;)</span></span><br><span class="line"><span class="keyword">public</span> R <span class="title function_">login</span><span class="params">(<span class="meta">@RequestBody</span> MemberLoginVo loginVo)</span> &#123;</span><br><span class="line">    MemberEntity entity=memberService.login(loginVo);</span><br><span class="line">    <span class="keyword">if</span> (entity!=<span class="literal">null</span>)&#123;</span><br><span class="line">        <span class="keyword">return</span> R.ok();</span><br><span class="line">    &#125;<span class="keyword">else</span> &#123;</span><br><span class="line">        <span class="keyword">return</span> R.error(BizCodeEnum.LOGINACCT_PASSWORD_EXCEPTION.getCode(), BizCodeEnum.LOGINACCT_PASSWORD_EXCEPTION.getMsg());</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="meta">@Override</span></span><br><span class="line">    <span class="keyword">public</span> MemberEntity <span class="title function_">login</span><span class="params">(MemberLoginVo loginVo)</span> &#123;</span><br><span class="line">        <span class="type">String</span> <span class="variable">loginAccount</span> <span class="operator">=</span> loginVo.getLoginAccount();</span><br><span class="line">        <span class="comment">//以用户名或电话号登录的进行查询</span></span><br><span class="line">        <span class="type">MemberEntity</span> <span class="variable">entity</span> <span class="operator">=</span> <span class="built_in">this</span>.getOne(<span class="keyword">new</span> <span class="title class_">QueryWrapper</span>&lt;MemberEntity&gt;().eq(<span class="string">&quot;username&quot;</span>, loginAccount).or().eq(<span class="string">&quot;mobile&quot;</span>, loginAccount));</span><br><span class="line">        <span class="keyword">if</span> (entity!=<span class="literal">null</span>)&#123;</span><br><span class="line">            <span class="type">BCryptPasswordEncoder</span> <span class="variable">bCryptPasswordEncoder</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">BCryptPasswordEncoder</span>();</span><br><span class="line">            <span class="type">boolean</span> <span class="variable">matches</span> <span class="operator">=</span> bCryptPasswordEncoder.matches(loginVo.getPassword(), entity.getPassword());</span><br><span class="line">            <span class="keyword">if</span> (matches)&#123;</span><br><span class="line">                entity.setPassword(<span class="string">&quot;&quot;</span>);</span><br><span class="line">                <span class="keyword">return</span> entity;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">return</span> <span class="literal">null</span>;</span><br><span class="line">    &#125;</span><br></pre></td></tr></table></figure><h2 id="4-社交登录"><a href="#4-社交登录" class="headerlink" title="4. 社交登录"></a>4. 社交登录</h2><h3 id="1-oauth2-0"><a href="#1-oauth2-0" class="headerlink" title="(1) oauth2.0"></a>(1) oauth2.0</h3><p><img src="https://cdn.jsdelivr.net/gh/zsxfa/CDN/img/md/2022/04/21/1650504286.png" alt="desc"></p><h3 id="2-在微博开放平台创建应用"><a href="#2-在微博开放平台创建应用" class="headerlink" title="(2) 在微博开放平台创建应用"></a>(2) 在微博开放平台创建应用</h3><h3 id="3-在登录页引导用户至授权页"><a href="#3-在登录页引导用户至授权页" class="headerlink" title="(3) 在登录页引导用户至授权页"></a>(3) 在登录页引导用户至授权页</h3><figure class="highlight awk"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">GET</span><br><span class="line">https:<span class="regexp">//</span>api.weibo.com<span class="regexp">/oauth2/</span>authorize?client_id=YOUR_CLIENT_ID&amp;response_type=code&amp;redirect_uri=YOUR_REGISTERED_REDIRECT_URI</span><br></pre></td></tr></table></figure><ul><li><code>client_id</code>: 创建网站应用时的<code>app key</code> </li><li><code>YOUR_REGISTERED_REDIRECT_URI</code>: 认证完成后的跳转链接(需要和平台高级设置一致)</li></ul><p>如果用户同意授权，页面跳转至 YOUR_REGISTERED_REDIRECT_URI/?code=CODE</p><p>code是我们用来换取令牌的参数</p><h3 id="4-换取token"><a href="#4-换取token" class="headerlink" title="(4) 换取token"></a>(4) 换取token</h3><figure class="highlight awk"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">POST</span><br><span class="line">https:<span class="regexp">//</span>api.weibo.com<span class="regexp">/oauth2/</span>access_token?client_id=YOUR_CLIENT_ID&amp;client_secret=YOUR_CLIENT_SECRET&amp;grant_type=authorization_code&amp;redirect_uri=YOUR_REGISTERED_REDIRECT_URI&amp;code=CODE</span><br></pre></td></tr></table></figure><ul><li><code>client_id</code>: 创建网站应用时的<code>app key</code> </li><li><code>client_secret</code>: 创建网站应用时的<code>app secret</code> </li><li><code>YOUR_REGISTERED_REDIRECT_URI</code>: 认证完成后的跳转链接(需要和平台高级设置一致)</li><li><code>code</code>：换取令牌的认证码</li></ul><p>返回数据如下</p><p><img src="https://cdn.jsdelivr.net/gh/zsxfa/CDN/img/md/2022/04/21/1650504363.png" alt="desc"></p><h3 id="5-获取用户信息"><a href="#5-获取用户信息" class="headerlink" title="(5) 获取用户信息"></a>(5) 获取用户信息</h3><p><a href="https://open.weibo.com/wiki/2/users/show">https://open.weibo.com/wiki/2/users/show</a></p><p>结果返回json</p><h3 id="6-代码编写"><a href="#6-代码编写" class="headerlink" title="(6) 代码编写"></a>(6) 代码编写</h3><p><strong>认证接口</strong></p><ul><li>通过<code>HttpUtils</code>发送请求获取<code>token</code>,并将<code>token</code>等信息交给<code>member</code>服务进行社交登录</li><li>若获取<code>token</code>失败或远程调用服务失败，则封装错误信息重新转回登录页</li></ul><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">@Controller</span></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">OauthController</span> &#123;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Autowired</span></span><br><span class="line">    <span class="keyword">private</span> MemberFeignService memberFeignService;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@RequestMapping(&quot;/oauth2.0/weibo/success&quot;)</span></span><br><span class="line">    <span class="keyword">public</span> String <span class="title function_">authorize</span><span class="params">(String code, RedirectAttributes attributes)</span> <span class="keyword">throws</span> Exception &#123;</span><br><span class="line">        <span class="comment">//1. 使用code换取token，换取成功则继续2，否则重定向至登录页</span></span><br><span class="line">        Map&lt;String, String&gt; query = <span class="keyword">new</span> <span class="title class_">HashMap</span>&lt;&gt;();</span><br><span class="line">        query.put(<span class="string">&quot;client_id&quot;</span>, <span class="string">&quot;2144***074&quot;</span>);</span><br><span class="line">        query.put(<span class="string">&quot;client_secret&quot;</span>, <span class="string">&quot;ff63a0d8d5*****29a19492817316ab&quot;</span>);</span><br><span class="line">        query.put(<span class="string">&quot;grant_type&quot;</span>, <span class="string">&quot;authorization_code&quot;</span>);</span><br><span class="line">        query.put(<span class="string">&quot;redirect_uri&quot;</span>, <span class="string">&quot;http://auth.gulimall.com/oauth2.0/weibo/success&quot;</span>);</span><br><span class="line">        query.put(<span class="string">&quot;code&quot;</span>, code);</span><br><span class="line">        <span class="comment">//发送post请求换取token</span></span><br><span class="line">        <span class="type">HttpResponse</span> <span class="variable">response</span> <span class="operator">=</span> HttpUtils.doPost(<span class="string">&quot;https://api.weibo.com&quot;</span>, <span class="string">&quot;/oauth2/access_token&quot;</span>, <span class="string">&quot;post&quot;</span>, <span class="keyword">new</span> <span class="title class_">HashMap</span>&lt;String, String&gt;(), query, <span class="keyword">new</span> <span class="title class_">HashMap</span>&lt;String, String&gt;());</span><br><span class="line">        Map&lt;String, String&gt; errors = <span class="keyword">new</span> <span class="title class_">HashMap</span>&lt;&gt;();</span><br><span class="line">        <span class="keyword">if</span> (response.getStatusLine().getStatusCode() == <span class="number">200</span>) &#123;</span><br><span class="line">            <span class="comment">//2. 调用member远程接口进行oauth登录，登录成功则转发至首页并携带返回用户信息，否则转发至登录页</span></span><br><span class="line">            <span class="type">String</span> <span class="variable">json</span> <span class="operator">=</span> EntityUtils.toString(response.getEntity());</span><br><span class="line">            <span class="type">SocialUser</span> <span class="variable">socialUser</span> <span class="operator">=</span> JSON.parseObject(json, <span class="keyword">new</span> <span class="title class_">TypeReference</span>&lt;SocialUser&gt;() &#123;</span><br><span class="line">            &#125;);</span><br><span class="line">            <span class="type">R</span> <span class="variable">login</span> <span class="operator">=</span> memberFeignService.login(socialUser);</span><br><span class="line">            <span class="comment">//2.1 远程调用成功，返回首页并携带用户信息</span></span><br><span class="line">            <span class="keyword">if</span> (login.getCode() == <span class="number">0</span>) &#123;</span><br><span class="line">                <span class="type">String</span> <span class="variable">jsonString</span> <span class="operator">=</span> JSON.toJSONString(login.get(<span class="string">&quot;memberEntity&quot;</span>));</span><br><span class="line">                <span class="type">MemberResponseVo</span> <span class="variable">memberResponseVo</span> <span class="operator">=</span> JSON.parseObject(jsonString, <span class="keyword">new</span> <span class="title class_">TypeReference</span>&lt;MemberResponseVo&gt;() &#123;</span><br><span class="line">                &#125;);</span><br><span class="line">                attributes.addFlashAttribute(<span class="string">&quot;user&quot;</span>, memberResponseVo);</span><br><span class="line">                <span class="keyword">return</span> <span class="string">&quot;redirect:http://gulimall.com&quot;</span>;</span><br><span class="line">            &#125;<span class="keyword">else</span> &#123;</span><br><span class="line">                <span class="comment">//2.2 否则返回登录页</span></span><br><span class="line">                errors.put(<span class="string">&quot;msg&quot;</span>, <span class="string">&quot;登录失败，请重试&quot;</span>);</span><br><span class="line">                attributes.addFlashAttribute(<span class="string">&quot;errors&quot;</span>, errors);</span><br><span class="line">                <span class="keyword">return</span> <span class="string">&quot;redirect:http://auth.gulimall.com/login.html&quot;</span>;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;<span class="keyword">else</span> &#123;</span><br><span class="line">            errors.put(<span class="string">&quot;msg&quot;</span>, <span class="string">&quot;获得第三方授权失败，请重试&quot;</span>);</span><br><span class="line">            attributes.addFlashAttribute(<span class="string">&quot;errors&quot;</span>, errors);</span><br><span class="line">            <span class="keyword">return</span> <span class="string">&quot;redirect:http://auth.gulimall.com/login.html&quot;</span>;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br></pre></td></tr></table></figure><p><strong>登录接口</strong></p><ul><li>登录包含两种流程，实际上包括了注册和登录</li><li>如果之前未使用该社交账号登录，则使用<code>token</code>调用开放api获取社交账号相关信息，注册并将结果返回</li><li>如果之前已经使用该社交账号登录，则更新<code>token</code>并将结果返回</li></ul><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">@RequestMapping(&quot;/oauth2/login&quot;)</span></span><br><span class="line"><span class="keyword">public</span> R <span class="title function_">login</span><span class="params">(<span class="meta">@RequestBody</span> SocialUser socialUser)</span> &#123;</span><br><span class="line">    MemberEntity entity=memberService.login(socialUser);</span><br><span class="line">    <span class="keyword">if</span> (entity!=<span class="literal">null</span>)&#123;</span><br><span class="line">        <span class="keyword">return</span> R.ok().put(<span class="string">&quot;memberEntity&quot;</span>,entity);</span><br><span class="line">    &#125;<span class="keyword">else</span> &#123;</span><br><span class="line">        <span class="keyword">return</span> R.error();</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"> <span class="meta">@Override</span></span><br><span class="line">    <span class="keyword">public</span> MemberEntity <span class="title function_">login</span><span class="params">(SocialUser socialUser)</span>&#123;</span><br><span class="line">        <span class="type">MemberEntity</span> <span class="variable">uid</span> <span class="operator">=</span> <span class="built_in">this</span>.getOne(<span class="keyword">new</span> <span class="title class_">QueryWrapper</span>&lt;MemberEntity&gt;().eq(<span class="string">&quot;uid&quot;</span>, socialUser.getUid()));</span><br><span class="line">        <span class="comment">//1 如果之前未登陆过，则查询其社交信息进行注册</span></span><br><span class="line">        <span class="keyword">if</span> (uid == <span class="literal">null</span>) &#123;</span><br><span class="line">            Map&lt;String, String&gt; query = <span class="keyword">new</span> <span class="title class_">HashMap</span>&lt;&gt;();</span><br><span class="line">            query.put(<span class="string">&quot;access_token&quot;</span>,socialUser.getAccess_token());</span><br><span class="line">            query.put(<span class="string">&quot;uid&quot;</span>, socialUser.getUid());</span><br><span class="line">            <span class="comment">//调用微博api接口获取用户信息</span></span><br><span class="line">            <span class="type">String</span> <span class="variable">json</span> <span class="operator">=</span> <span class="literal">null</span>;</span><br><span class="line">            <span class="keyword">try</span> &#123;</span><br><span class="line">                <span class="type">HttpResponse</span> <span class="variable">response</span> <span class="operator">=</span> HttpUtils.doGet(<span class="string">&quot;https://api.weibo.com&quot;</span>, <span class="string">&quot;/2/users/show.json&quot;</span>, <span class="string">&quot;get&quot;</span>, <span class="keyword">new</span> <span class="title class_">HashMap</span>&lt;&gt;(), query);</span><br><span class="line">                json = EntityUtils.toString(response.getEntity());</span><br><span class="line">            &#125; <span class="keyword">catch</span> (Exception e) &#123;</span><br><span class="line">                e.printStackTrace();</span><br><span class="line">            &#125;</span><br><span class="line">            <span class="type">JSONObject</span> <span class="variable">jsonObject</span> <span class="operator">=</span> JSON.parseObject(json);</span><br><span class="line">            <span class="comment">//获得昵称，性别，头像</span></span><br><span class="line">            <span class="type">String</span> <span class="variable">name</span> <span class="operator">=</span> jsonObject.getString(<span class="string">&quot;name&quot;</span>);</span><br><span class="line">            <span class="type">String</span> <span class="variable">gender</span> <span class="operator">=</span> jsonObject.getString(<span class="string">&quot;gender&quot;</span>);</span><br><span class="line">            <span class="type">String</span> <span class="variable">profile_image_url</span> <span class="operator">=</span> jsonObject.getString(<span class="string">&quot;profile_image_url&quot;</span>);</span><br><span class="line">            <span class="comment">//封装用户信息并保存</span></span><br><span class="line">            uid = <span class="keyword">new</span> <span class="title class_">MemberEntity</span>();</span><br><span class="line">            <span class="type">MemberLevelEntity</span> <span class="variable">defaultLevel</span> <span class="operator">=</span> memberLevelService.getOne(<span class="keyword">new</span> <span class="title class_">QueryWrapper</span>&lt;MemberLevelEntity&gt;().eq(<span class="string">&quot;default_status&quot;</span>, <span class="number">1</span>));</span><br><span class="line">            uid.setLevelId(defaultLevel.getId());</span><br><span class="line">            uid.setNickname(name);</span><br><span class="line">            uid.setGender(<span class="string">&quot;m&quot;</span>.equals(gender)?<span class="number">0</span>:<span class="number">1</span>);</span><br><span class="line">            uid.setHeader(profile_image_url);</span><br><span class="line">            uid.setAccessToken(socialUser.getAccess_token());</span><br><span class="line">            uid.setUid(socialUser.getUid());</span><br><span class="line">            uid.setExpiresIn(socialUser.getExpires_in());</span><br><span class="line">            <span class="built_in">this</span>.save(uid);</span><br><span class="line">        &#125;<span class="keyword">else</span> &#123;</span><br><span class="line">            <span class="comment">//2 否则更新令牌等信息并返回</span></span><br><span class="line">            uid.setAccessToken(socialUser.getAccess_token());</span><br><span class="line">            uid.setUid(socialUser.getUid());</span><br><span class="line">            uid.setExpiresIn(socialUser.getExpires_in());</span><br><span class="line">            <span class="built_in">this</span>.updateById(uid);</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">return</span> uid;</span><br><span class="line">    &#125;</span><br></pre></td></tr></table></figure><h2 id="5-SpringSession"><a href="#5-SpringSession" class="headerlink" title="5. SpringSession"></a>5. SpringSession</h2><h3 id="1-session-原理"><a href="#1-session-原理" class="headerlink" title="(1) session 原理"></a>(1) session 原理</h3><p><code>jsessionid</code>相当于银行卡，存在服务器的<code>session</code>相当于存储的现金，每次通过<code>jsessionid</code>取出保存的数据</p><p>问题：但是正常情况下<code>session</code>不可跨域，它有自己的作用范围</p><p><img src="https://cdn.jsdelivr.net/gh/zsxfa/CDN/img/md/2022/04/21/1650504437.png" alt="desc"></p><h3 id="2-分布式下session共享问题"><a href="#2-分布式下session共享问题" class="headerlink" title="(2) 分布式下session共享问题"></a>(2) 分布式下session共享问题</h3><p><img src="https://cdn.jsdelivr.net/gh/zsxfa/CDN/img/md/2022/04/21/1650504492.png" alt="desc"></p><h3 id="3-解决方案-1"><a href="#3-解决方案-1" class="headerlink" title="(3) 解决方案"></a>(3) 解决方案</h3><h4 id="1-session复制"><a href="#1-session复制" class="headerlink" title="1) session复制"></a>1) session复制</h4><p><img src="https://cdn.jsdelivr.net/gh/zsxfa/CDN/img/md/2022/04/21/1650504522.png" alt="desc"></p><h4 id="2-客户端存储"><a href="#2-客户端存储" class="headerlink" title="2) 客户端存储"></a>2) 客户端存储</h4><p><img src="https://cdn.jsdelivr.net/gh/zsxfa/CDN/img/md/2022/04/21/1650504547.png" alt="desc"></p><h4 id="3-hash一致性"><a href="#3-hash一致性" class="headerlink" title="3) hash一致性"></a>3) hash一致性</h4><p><img src="https://cdn.jsdelivr.net/gh/zsxfa/CDN/img/md/2022/04/21/1650504570.png" alt="desc"></p><h4 id="4-统一存储"><a href="#4-统一存储" class="headerlink" title="4) 统一存储"></a>4) 统一存储</h4><p><img src="https://cdn.jsdelivr.net/gh/zsxfa/CDN/img/md/2022/04/21/1650504593.png" alt="desc"></p><h3 id="4-SpringSession整合redis"><a href="#4-SpringSession整合redis" class="headerlink" title="(4) SpringSession整合redis"></a>(4) SpringSession整合redis</h3><p>通过<code>SpringSession</code>修改<code>session</code>的作用域</p><p><img src="https://cdn.jsdelivr.net/gh/zsxfa/CDN/img/md/2022/04/21/1650504634.png" alt="desc"></p><h4 id="1-环境搭建-2"><a href="#1-环境搭建-2" class="headerlink" title="1) 环境搭建"></a>1) 环境搭建</h4><p>导入依赖</p><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>org.springframework.session<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>spring-session-data-redis<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>org.springframework.boot<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>spring-boot-starter-data-redis<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br></pre></td></tr></table></figure><p>修改配置</p><figure class="highlight yaml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="attr">spring:</span></span><br><span class="line">  <span class="attr">redis:</span></span><br><span class="line">    <span class="attr">host:</span> <span class="number">192.168</span><span class="number">.56</span><span class="number">.10</span></span><br><span class="line">  <span class="attr">session:</span></span><br><span class="line">    <span class="attr">store-type:</span> <span class="string">redis</span></span><br></pre></td></tr></table></figure><p>添加注解</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">@EnableRedisHttpSession</span></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">GulimallAuthServerApplication</span> &#123;</span><br></pre></td></tr></table></figure><h4 id="2-自定义配置-1"><a href="#2-自定义配置-1" class="headerlink" title="2) 自定义配置"></a>2) 自定义配置</h4><ul><li><p>由于默认使用jdk进行序列化，通过导入<code>RedisSerializer</code>修改为json序列化</p></li><li><p>并且通过修改<code>CookieSerializer</code>扩大<code>session</code>的作用域至<code>**.gulimall.com</code></p></li></ul><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">@Configuration</span></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">GulimallSessionConfig</span> &#123;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Bean</span></span><br><span class="line">    <span class="keyword">public</span> RedisSerializer&lt;Object&gt; <span class="title function_">springSessionDefaultRedisSerializer</span><span class="params">()</span> &#123;</span><br><span class="line">        <span class="keyword">return</span> <span class="keyword">new</span> <span class="title class_">GenericJackson2JsonRedisSerializer</span>();</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Bean</span></span><br><span class="line">    <span class="keyword">public</span> CookieSerializer <span class="title function_">cookieSerializer</span><span class="params">()</span> &#123;</span><br><span class="line">        <span class="type">DefaultCookieSerializer</span> <span class="variable">serializer</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">DefaultCookieSerializer</span>();</span><br><span class="line">        serializer.setCookieName(<span class="string">&quot;GULISESSIONID&quot;</span>);</span><br><span class="line">        serializer.setDomainName(<span class="string">&quot;gulimall.com&quot;</span>);</span><br><span class="line">        <span class="keyword">return</span> serializer;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="5-SpringSession核心原理-装饰者模式"><a href="#5-SpringSession核心原理-装饰者模式" class="headerlink" title="(5) SpringSession核心原理 - 装饰者模式"></a>(5) SpringSession核心原理 - 装饰者模式</h3><ul><li>原生的获取<code>session</code>时是通过<code>HttpServletRequest</code>获取的</li><li>这里对request进行包装，并且重写了包装request的<code>getSession()</code>方法</li></ul><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">@Override</span></span><br><span class="line"><span class="keyword">protected</span> <span class="keyword">void</span> <span class="title function_">doFilterInternal</span><span class="params">(HttpServletRequest request,</span></span><br><span class="line"><span class="params">      HttpServletResponse response, FilterChain filterChain)</span></span><br><span class="line">      <span class="keyword">throws</span> ServletException, IOException &#123;</span><br><span class="line">   request.setAttribute(SESSION_REPOSITORY_ATTR, <span class="built_in">this</span>.sessionRepository);</span><br><span class="line"></span><br><span class="line">    <span class="comment">//对原生的request、response进行包装</span></span><br><span class="line">   <span class="type">SessionRepositoryRequestWrapper</span> <span class="variable">wrappedRequest</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">SessionRepositoryRequestWrapper</span>(</span><br><span class="line">         request, response, <span class="built_in">this</span>.servletContext);</span><br><span class="line">   <span class="type">SessionRepositoryResponseWrapper</span> <span class="variable">wrappedResponse</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">SessionRepositoryResponseWrapper</span>(</span><br><span class="line">         wrappedRequest, response);</span><br><span class="line"></span><br><span class="line">   <span class="keyword">try</span> &#123;</span><br><span class="line">      filterChain.doFilter(wrappedRequest, wrappedResponse);</span><br><span class="line">   &#125;</span><br><span class="line">   <span class="keyword">finally</span> &#123;</span><br><span class="line">      wrappedRequest.commitSession();</span><br><span class="line">   &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p><img src="https://cdn.jsdelivr.net/gh/zsxfa/CDN/img/md/2022/04/21/1650510939.png" alt="desc"> </p><h1 id="购物车"><a href="#购物车" class="headerlink" title="购物车"></a>购物车</h1><h2 id="1-数据模型分析"><a href="#1-数据模型分析" class="headerlink" title="1. 数据模型分析"></a>1. 数据模型分析</h2><h3 id="1-数据存储"><a href="#1-数据存储" class="headerlink" title="(1) 数据存储"></a>(1) 数据存储</h3><p>购物车是一个读多写多的场景，因此放入数据库并不合适，但购物车又是需要持久化，因此这里我们选用redis存储购物车数据。</p><h3 id="2-数据结构"><a href="#2-数据结构" class="headerlink" title="(2) 数据结构"></a>(2) 数据结构</h3><p>一个购物车是由各个购物项组成的，但是我们用<code>List</code>进行存储并不合适，因为使用<code>List</code>查找某个购物项时需要挨个遍历每个购物项，会造成大量时间损耗，为保证查找速度，我们使用<code>hash</code>进行存储</p><p><img src="https://cdn.jsdelivr.net/gh/zsxfa/CDN/img/md/2022/04/30/1651285444.png" alt="desc"></p><h3 id="3-VO编写"><a href="#3-VO编写" class="headerlink" title="(3) VO编写"></a>(3) VO编写</h3><p>购物项vo</p><p><img src="https://cdn.jsdelivr.net/gh/zsxfa/CDN/img/md/2022/04/30/1651310436.png" alt="desc"></p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">CartItemVo</span> &#123;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">private</span> Long skuId;</span><br><span class="line"></span><br><span class="line">    <span class="comment">//是否选中</span></span><br><span class="line">    <span class="keyword">private</span> <span class="type">Boolean</span> <span class="variable">check</span> <span class="operator">=</span> <span class="literal">true</span>;</span><br><span class="line"></span><br><span class="line">    <span class="comment">//标题</span></span><br><span class="line">    <span class="keyword">private</span> String title;</span><br><span class="line"></span><br><span class="line">    <span class="comment">//图片</span></span><br><span class="line">    <span class="keyword">private</span> String image;</span><br><span class="line"></span><br><span class="line">    <span class="comment">//商品套餐属性</span></span><br><span class="line">    <span class="keyword">private</span> List&lt;String&gt; skuAttrValues;</span><br><span class="line"></span><br><span class="line">    <span class="comment">//价格</span></span><br><span class="line">    <span class="keyword">private</span> BigDecimal price;</span><br><span class="line"></span><br><span class="line">    <span class="comment">//数量</span></span><br><span class="line">    <span class="keyword">private</span> Integer count;</span><br><span class="line"></span><br><span class="line">    <span class="comment">//总价</span></span><br><span class="line">    <span class="keyword">private</span> BigDecimal totalPrice;</span><br><span class="line">    </span><br><span class="line">      <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * 当前购物车项总价等于单价x数量</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@return</span></span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="keyword">public</span> BigDecimal <span class="title function_">getTotalPrice</span><span class="params">()</span> &#123;</span><br><span class="line">        <span class="keyword">return</span> price.multiply(<span class="keyword">new</span> <span class="title class_">BigDecimal</span>(count));</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">setTotalPrice</span><span class="params">(BigDecimal totalPrice)</span> &#123;</span><br><span class="line">        <span class="built_in">this</span>.totalPrice = totalPrice;</span><br><span class="line">    &#125;</span><br></pre></td></tr></table></figure><p>购物车vo</p><p><img src="https://cdn.jsdelivr.net/gh/zsxfa/CDN/img/md/2022/04/30/1651310583.png" alt="desc"></p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">CartVo</span> &#123;</span><br><span class="line"></span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * 购物车子项信息</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    List&lt;CartItemVo&gt; items;</span><br><span class="line"></span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * 商品数量</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="keyword">private</span> Integer countNum;</span><br><span class="line"></span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * 商品类型数量</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="keyword">private</span> Integer countType;</span><br><span class="line"></span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * 商品总价</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="keyword">private</span> BigDecimal totalAmount;</span><br><span class="line"></span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * 减免价格</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="keyword">private</span> <span class="type">BigDecimal</span> <span class="variable">reduce</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">BigDecimal</span>(<span class="string">&quot;0.00&quot;</span>);</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> List&lt;CartItemVo&gt; <span class="title function_">getItems</span><span class="params">()</span> &#123;</span><br><span class="line">        <span class="keyword">return</span> items;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">setItems</span><span class="params">(List&lt;CartItemVo&gt; items)</span> &#123;</span><br><span class="line">        <span class="built_in">this</span>.items = items;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">//总数量=遍历每个购物项总和</span></span><br><span class="line">    <span class="keyword">public</span> Integer <span class="title function_">getCountNum</span><span class="params">()</span> &#123;</span><br><span class="line">        <span class="type">int</span> count=<span class="number">0</span>;</span><br><span class="line">        <span class="keyword">if</span> (items != <span class="literal">null</span> &amp;&amp; items.size() &gt; <span class="number">0</span>) &#123;</span><br><span class="line">            <span class="keyword">for</span> (CartItemVo item : items) &#123;</span><br><span class="line">                count += item.getCount();</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">return</span> count;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">setCountNum</span><span class="params">(Integer countNum)</span> &#123;</span><br><span class="line">        <span class="built_in">this</span>.countNum = countNum;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">//商品类型数量=遍历所有商品类型和</span></span><br><span class="line">    <span class="keyword">public</span> Integer <span class="title function_">getCountType</span><span class="params">()</span> &#123;</span><br><span class="line">        <span class="type">int</span> count=<span class="number">0</span>;</span><br><span class="line">        <span class="keyword">if</span> (items != <span class="literal">null</span> &amp;&amp; items.size() &gt; <span class="number">0</span>) &#123;</span><br><span class="line">            <span class="keyword">for</span> (CartItemVo item : items) &#123;</span><br><span class="line">                count += <span class="number">1</span>;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">return</span> count;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">setCountType</span><span class="params">(Integer countType)</span> &#123;</span><br><span class="line">        <span class="built_in">this</span>.countType = countType;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">//总价为单个购物项总价-优惠</span></span><br><span class="line">    <span class="keyword">public</span> BigDecimal <span class="title function_">getTotalAmount</span><span class="params">()</span> &#123;</span><br><span class="line">        <span class="type">BigDecimal</span> <span class="variable">total</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">BigDecimal</span>(<span class="number">0</span>);</span><br><span class="line">        <span class="keyword">if</span> (items != <span class="literal">null</span> &amp;&amp; items.size() &gt; <span class="number">0</span>) &#123;</span><br><span class="line">            <span class="keyword">for</span> (CartItemVo item : items) &#123;</span><br><span class="line">                total.add(item.getTotalPrice());</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">        total.subtract(reduce);</span><br><span class="line">        <span class="keyword">return</span> total;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">setTotalAmount</span><span class="params">(BigDecimal totalAmount)</span> &#123;</span><br><span class="line">        <span class="built_in">this</span>.totalAmount = totalAmount;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> BigDecimal <span class="title function_">getReduce</span><span class="params">()</span> &#123;</span><br><span class="line">        <span class="keyword">return</span> reduce;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">setReduce</span><span class="params">(BigDecimal reduce)</span> &#123;</span><br><span class="line">        <span class="built_in">this</span>.reduce = reduce;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="2-ThreadLocal用户身份鉴别"><a href="#2-ThreadLocal用户身份鉴别" class="headerlink" title="2. ThreadLocal用户身份鉴别"></a>2. ThreadLocal用户身份鉴别</h2><h3 id="1-用户身份鉴别方式"><a href="#1-用户身份鉴别方式" class="headerlink" title="(1) 用户身份鉴别方式"></a>(1) 用户身份鉴别方式</h3><p>参考京东，在点击购物车时，会为临时用户生成一个<code>name</code>为<code>user-key</code>的<code>cookie</code>临时标识，过期时间为一个月，如果手动清除<code>user-key</code>，那么临时购物车的购物项也被清除，所以<code>user-key</code>是用来标识和存储临时购物车数据的</p><h3 id="2-使用ThreadLocal进行用户身份鉴别信息传递"><a href="#2-使用ThreadLocal进行用户身份鉴别信息传递" class="headerlink" title="(2) 使用ThreadLocal进行用户身份鉴别信息传递"></a>(2) 使用ThreadLocal进行用户身份鉴别信息传递</h3><ul><li>在调用购物车的接口前，先通过session信息判断是否登录，并分别进行用户身份信息的封装，并把<code>user-key</code>放在cookie中</li><li>这个功能使用拦截器进行完成</li></ul><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">@Configuration</span></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">GulimallWebConfig</span> <span class="keyword">implements</span> <span class="title class_">WebMvcConfigurer</span> &#123;</span><br><span class="line">    <span class="comment">//拦截所有请求</span></span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">addInterceptors</span><span class="params">(InterceptorRegistry registry)</span> &#123;</span><br><span class="line">        registry.addInterceptor(<span class="keyword">new</span> <span class="title class_">CartInterceptor</span>()).addPathPatterns(<span class="string">&quot;/**&quot;</span>);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">CartInterceptor</span> <span class="keyword">implements</span> <span class="title class_">HandlerInterceptor</span> &#123;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> ThreadLocal&lt;UserInfoTo&gt; threadLocal=<span class="keyword">new</span> <span class="title class_">ThreadLocal</span>&lt;&gt;();</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="keyword">public</span> <span class="type">boolean</span> <span class="title function_">preHandle</span><span class="params">(HttpServletRequest request, HttpServletResponse response, Object handler)</span> <span class="keyword">throws</span> Exception &#123;</span><br><span class="line">        <span class="type">HttpSession</span> <span class="variable">session</span> <span class="operator">=</span> request.getSession();</span><br><span class="line">        <span class="type">MemberResponseVo</span> <span class="variable">memberResponseVo</span> <span class="operator">=</span> (MemberResponseVo) session.getAttribute(AuthServerConstant.LOGIN_USER);</span><br><span class="line">        <span class="type">UserInfoTo</span> <span class="variable">userInfoTo</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">UserInfoTo</span>();</span><br><span class="line">        <span class="comment">//1 用户已经登录，设置userId</span></span><br><span class="line">        <span class="keyword">if</span> (memberResponseVo!=<span class="literal">null</span>)&#123;</span><br><span class="line">            userInfoTo.setUserId(memberResponseVo.getId());</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        Cookie[] cookies = request.getCookies();</span><br><span class="line">        <span class="keyword">for</span> (Cookie cookie : cookies) &#123;</span><br><span class="line">            <span class="comment">//2 如果cookie中已经有user-Key，则直接设置</span></span><br><span class="line">            <span class="keyword">if</span> (cookie.getName().equals(CartConstant.TEMP_USER_COOKIE_NAME)) &#123;</span><br><span class="line">                userInfoTo.setUserKey(cookie.getValue());</span><br><span class="line">                userInfoTo.setTempUser(<span class="literal">true</span>);</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        <span class="comment">//3 如果cookie没有user-key，我们通过uuid生成user-key</span></span><br><span class="line">        <span class="keyword">if</span> (StringUtils.isEmpty(userInfoTo.getUserKey())) &#123;</span><br><span class="line">            <span class="type">String</span> <span class="variable">uuid</span> <span class="operator">=</span> UUID.randomUUID().toString();</span><br><span class="line">            userInfoTo.setUserKey(uuid);</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        <span class="comment">//4 将用户身份认证信息放入threadlocal进行传递</span></span><br><span class="line">        threadLocal.set(userInfoTo);</span><br><span class="line">        <span class="keyword">return</span> <span class="literal">true</span>;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">postHandle</span><span class="params">(HttpServletRequest request, HttpServletResponse response, Object handler, ModelAndView modelAndView)</span> <span class="keyword">throws</span> Exception &#123;</span><br><span class="line">        <span class="type">UserInfoTo</span> <span class="variable">userInfoTo</span> <span class="operator">=</span> threadLocal.get();</span><br><span class="line">        <span class="comment">//如果cookie中没有user-key，我们为其生成</span></span><br><span class="line">        <span class="keyword">if</span> (!userInfoTo.getTempUser()) &#123;</span><br><span class="line">            <span class="type">Cookie</span> <span class="variable">cookie</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">Cookie</span>(CartConstant.TEMP_USER_COOKIE_NAME, userInfoTo.getUserKey());</span><br><span class="line">            cookie.setDomain(<span class="string">&quot;gulimall.com&quot;</span>);</span><br><span class="line">            cookie.setMaxAge(CartConstant.TEMP_USER_COOKIE_TIMEOUT);</span><br><span class="line">            response.addCookie(cookie);</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="3-添加商品到购物车"><a href="#3-添加商品到购物车" class="headerlink" title="3. 添加商品到购物车"></a>3. 添加商品到购物车</h2><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * 添加商品到购物车</span></span><br><span class="line"><span class="comment"> * RedirectAttributes.addFlashAttribute():将数据放在session中，可以在页面中取出，但是只能取一次</span></span><br><span class="line"><span class="comment"> * RedirectAttributes.addAttribute():将数据拼接在url后面，?skuId=xxx</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@return</span></span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="meta">@RequestMapping(&quot;/addCartItem&quot;)</span></span><br><span class="line"><span class="keyword">public</span> String <span class="title function_">addCartItem</span><span class="params">(<span class="meta">@RequestParam(&quot;skuId&quot;)</span> Long skuId, <span class="meta">@RequestParam(&quot;num&quot;)</span> Integer num, RedirectAttributes attributes)</span> &#123;</span><br><span class="line">    cartService.addCartItem(skuId, num);</span><br><span class="line">    attributes.addAttribute(<span class="string">&quot;skuId&quot;</span>, skuId);</span><br><span class="line">    <span class="comment">//为了防止成功页刷新可以重复提交添加商品，我们不直接转到成功页</span></span><br><span class="line">    <span class="keyword">return</span> <span class="string">&quot;redirect:http://cart.gulimall.com/addCartItemSuccess&quot;</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"> <span class="meta">@RequestMapping(&quot;/addCartItemSuccess&quot;)</span></span><br><span class="line">    <span class="keyword">public</span> String <span class="title function_">addCartItemSuccess</span><span class="params">(<span class="meta">@RequestParam(&quot;skuId&quot;)</span> Long skuId,Model model)</span> &#123;</span><br><span class="line">        <span class="type">CartItemVo</span> <span class="variable">cartItemVo</span> <span class="operator">=</span> cartService.getCartItem(skuId);</span><br><span class="line">        model.addAttribute(<span class="string">&quot;cartItem&quot;</span>, cartItemVo);</span><br><span class="line">        <span class="keyword">return</span> <span class="string">&quot;success&quot;</span>;</span><br><span class="line">    &#125;</span><br></pre></td></tr></table></figure><ul><li>若当前商品已经存在购物车，只需增添数量</li><li>否则需要查询商品购物项所需信息，并添加新商品至购物车</li></ul><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">public</span> CartItemVo <span class="title function_">addCartItem</span><span class="params">(Long skuId, Integer num)</span> &#123;</span><br><span class="line">    <span class="comment">//获取当前以当前用户标识为key的hash的操作</span></span><br><span class="line">    BoundHashOperations&lt;String, Object, Object&gt; ops = getCartItemOps();</span><br><span class="line">    <span class="comment">// 判断当前商品是否已经存在购物车</span></span><br><span class="line">    <span class="type">String</span> <span class="variable">cartJson</span> <span class="operator">=</span> (String) ops.get(skuId.toString());</span><br><span class="line">    <span class="comment">// 1 已经存在购物车，将数据取出并添加商品数量</span></span><br><span class="line">    <span class="keyword">if</span> (!StringUtils.isEmpty(cartJson)) &#123;</span><br><span class="line">        <span class="comment">//1.1 将json转为对象并将count+</span></span><br><span class="line">        <span class="type">CartItemVo</span> <span class="variable">cartItemVo</span> <span class="operator">=</span> JSON.parseObject(cartJson, CartItemVo.class);</span><br><span class="line">        cartItemVo.setCount(cartItemVo.getCount() + num);</span><br><span class="line">        <span class="comment">//1.2 将更新后的对象转为json并存入redis</span></span><br><span class="line">        <span class="type">String</span> <span class="variable">jsonString</span> <span class="operator">=</span> JSON.toJSONString(cartItemVo);</span><br><span class="line">        ops.put(skuId.toString(), jsonString);</span><br><span class="line">        <span class="keyword">return</span> cartItemVo;</span><br><span class="line">    &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">        <span class="type">CartItemVo</span> <span class="variable">cartItemVo</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">CartItemVo</span>();</span><br><span class="line">        <span class="comment">// 2 未存在购物车，则添加新商品</span></span><br><span class="line">        CompletableFuture&lt;Void&gt; future1 = CompletableFuture.runAsync(() -&gt; &#123;</span><br><span class="line">            <span class="comment">//2.1 远程查询sku基本信息</span></span><br><span class="line">            <span class="type">R</span> <span class="variable">info</span> <span class="operator">=</span> productFeignService.info(skuId);</span><br><span class="line">            <span class="type">SkuInfoVo</span> <span class="variable">skuInfo</span> <span class="operator">=</span> info.getData(<span class="string">&quot;skuInfo&quot;</span>, <span class="keyword">new</span> <span class="title class_">TypeReference</span>&lt;SkuInfoVo&gt;() &#123;</span><br><span class="line">            &#125;);</span><br><span class="line">            cartItemVo.setCheck(<span class="literal">true</span>);</span><br><span class="line">            cartItemVo.setCount(num);</span><br><span class="line">            cartItemVo.setImage(skuInfo.getSkuDefaultImg());</span><br><span class="line">            cartItemVo.setPrice(skuInfo.getPrice());</span><br><span class="line">            cartItemVo.setSkuId(skuId);</span><br><span class="line">            cartItemVo.setTitle(skuInfo.getSkuTitle());</span><br><span class="line">        &#125;, executor);</span><br><span class="line"></span><br><span class="line">        <span class="comment">//2.2 远程查询sku属性组合信息</span></span><br><span class="line">        CompletableFuture&lt;Void&gt; future2 = CompletableFuture.runAsync(() -&gt; &#123;</span><br><span class="line">            List&lt;String&gt; attrValuesAsString = productFeignService.getSkuSaleAttrValuesAsString(skuId);</span><br><span class="line">            cartItemVo.setSkuAttrValues(attrValuesAsString);</span><br><span class="line">        &#125;, executor);</span><br><span class="line"></span><br><span class="line">        <span class="keyword">try</span> &#123;</span><br><span class="line">            CompletableFuture.allOf(future1, future2).get();</span><br><span class="line">        &#125; <span class="keyword">catch</span> (InterruptedException e) &#123;</span><br><span class="line">            e.printStackTrace();</span><br><span class="line">        &#125; <span class="keyword">catch</span> (ExecutionException e) &#123;</span><br><span class="line">            e.printStackTrace();</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="comment">//2.3 将该属性封装并存入redis,登录用户使用userId为key,否则使用user-key</span></span><br><span class="line">        <span class="type">String</span> <span class="variable">toJSONString</span> <span class="operator">=</span> JSON.toJSONString(cartItemVo);</span><br><span class="line">        ops.put(skuId.toString(), toJSONString);</span><br><span class="line">        <span class="keyword">return</span> cartItemVo;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="4-获取购物车"><a href="#4-获取购物车" class="headerlink" title="4. 获取购物车"></a>4. 获取购物车</h2><ul><li>若用户未登录，则直接使用<code>user-key</code>获取购物车数据</li><li>否则使用<code>userId</code>获取购物车数据，并将<code>user-key</code>对应临时购物车数据与用户购物车数据合并，并删除临时购物车</li></ul><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">@RequestMapping(&quot;/cart.html&quot;)</span></span><br><span class="line"><span class="keyword">public</span> String <span class="title function_">getCartList</span><span class="params">(Model model)</span> &#123;</span><br><span class="line">    CartVo cartVo=cartService.getCart();</span><br><span class="line">    model.addAttribute(<span class="string">&quot;cart&quot;</span>, cartVo);</span><br><span class="line">    <span class="keyword">return</span> <span class="string">&quot;cartList&quot;</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"> <span class="meta">@Override</span></span><br><span class="line">    <span class="keyword">public</span> CartVo <span class="title function_">getCart</span><span class="params">()</span> &#123;</span><br><span class="line">        <span class="type">CartVo</span> <span class="variable">cartVo</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">CartVo</span>();</span><br><span class="line">        <span class="type">UserInfoTo</span> <span class="variable">userInfoTo</span> <span class="operator">=</span> CartInterceptor.threadLocal.get();</span><br><span class="line">        <span class="comment">//1 用户未登录，直接通过user-key获取临时购物车</span></span><br><span class="line">        List&lt;CartItemVo&gt; tempCart = getCartByKey(CartConstant.CART_PREFIX + userInfoTo.getUserKey());</span><br><span class="line">        <span class="keyword">if</span> (StringUtils.isEmpty(userInfoTo.getUserId())) &#123;</span><br><span class="line">            List&lt;CartItemVo&gt; cartItemVos = tempCart;</span><br><span class="line">            cartVo.setItems(cartItemVos);</span><br><span class="line">        &#125;<span class="keyword">else</span> &#123;</span><br><span class="line">            <span class="comment">//2 用户登录</span></span><br><span class="line">            <span class="comment">//2.1 查询userId对应的购物车</span></span><br><span class="line">            List&lt;CartItemVo&gt; userCart = getCartByKey(CartConstant.CART_PREFIX + userInfoTo.getUserId());</span><br><span class="line">            <span class="comment">//2.2 查询user-key对应的临时购物车，并和用户购物车合并</span></span><br><span class="line">            <span class="keyword">if</span> (tempCart!=<span class="literal">null</span>&amp;&amp;tempCart.size()&gt;<span class="number">0</span>)&#123;</span><br><span class="line">                BoundHashOperations&lt;String, Object, Object&gt; ops = redisTemplate.boundHashOps(CartConstant.CART_PREFIX + userInfoTo.getUserId());</span><br><span class="line">                <span class="keyword">for</span> (CartItemVo cartItemVo : tempCart) &#123;</span><br><span class="line">                    userCart.add(cartItemVo);</span><br><span class="line">                    <span class="comment">//2.3 在redis中更新数据</span></span><br><span class="line">                    addCartItem(cartItemVo.getSkuId(), cartItemVo.getCount());</span><br><span class="line">                &#125;</span><br><span class="line">            &#125;</span><br><span class="line">            cartVo.setItems(userCart);</span><br><span class="line">            <span class="comment">//2.4 删除临时购物车数据</span></span><br><span class="line">            redisTemplate.delete(CartConstant.CART_PREFIX + userInfoTo.getUserKey());</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        <span class="keyword">return</span> cartVo;</span><br><span class="line">    &#125;</span><br></pre></td></tr></table></figure><h2 id="5-选中购物车项"><a href="#5-选中购物车项" class="headerlink" title="5. 选中购物车项"></a>5. 选中购物车项</h2><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">@RequestMapping(&quot;/checkCart&quot;)</span></span><br><span class="line"><span class="keyword">public</span> String <span class="title function_">checkCart</span><span class="params">(<span class="meta">@RequestParam(&quot;isChecked&quot;)</span> Integer isChecked,<span class="meta">@RequestParam(&quot;skuId&quot;)</span>Long skuId)</span> &#123;</span><br><span class="line">    cartService.checkCart(skuId, isChecked);</span><br><span class="line">    <span class="keyword">return</span> <span class="string">&quot;redirect:http://cart.gulimall.com/cart.html&quot;</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">//修改skuId对应购物车项的选中状态</span></span><br><span class="line"><span class="meta">@Override</span></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">checkCart</span><span class="params">(Long skuId, Integer isChecked)</span> &#123;</span><br><span class="line">    BoundHashOperations&lt;String, Object, Object&gt; ops = getCartItemOps();</span><br><span class="line">    <span class="type">String</span> <span class="variable">cartJson</span> <span class="operator">=</span> (String) ops.get(skuId.toString());</span><br><span class="line">    <span class="type">CartItemVo</span> <span class="variable">cartItemVo</span> <span class="operator">=</span> JSON.parseObject(cartJson, CartItemVo.class);</span><br><span class="line">    cartItemVo.setCheck(isChecked==<span class="number">1</span>);</span><br><span class="line">    ops.put(skuId.toString(),JSON.toJSONString(cartItemVo));</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="6-修改购物项数量"><a href="#6-修改购物项数量" class="headerlink" title="6. 修改购物项数量"></a>6. 修改购物项数量</h2><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">@RequestMapping(&quot;/countItem&quot;)</span></span><br><span class="line"><span class="keyword">public</span> String <span class="title function_">changeItemCount</span><span class="params">(<span class="meta">@RequestParam(&quot;skuId&quot;)</span> Long skuId, <span class="meta">@RequestParam(&quot;num&quot;)</span> Integer num)</span> &#123;</span><br><span class="line">    cartService.changeItemCount(skuId, num);</span><br><span class="line">    <span class="keyword">return</span> <span class="string">&quot;redirect:http://cart.gulimall.com/cart.html&quot;</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="meta">@Override</span></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">changeItemCount</span><span class="params">(Long skuId, Integer num)</span> &#123;</span><br><span class="line">    BoundHashOperations&lt;String, Object, Object&gt; ops = getCartItemOps();</span><br><span class="line">    <span class="type">String</span> <span class="variable">cartJson</span> <span class="operator">=</span> (String) ops.get(skuId.toString());</span><br><span class="line">    <span class="type">CartItemVo</span> <span class="variable">cartItemVo</span> <span class="operator">=</span> JSON.parseObject(cartJson, CartItemVo.class);</span><br><span class="line">    cartItemVo.setCount(num);</span><br><span class="line">    ops.put(skuId.toString(),JSON.toJSONString(cartItemVo));</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="7-删除购物车项"><a href="#7-删除购物车项" class="headerlink" title="7. 删除购物车项"></a>7. 删除购物车项</h2><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">@RequestMapping(&quot;/deleteItem&quot;)</span></span><br><span class="line"><span class="keyword">public</span> String <span class="title function_">deleteItem</span><span class="params">(<span class="meta">@RequestParam(&quot;skuId&quot;)</span> Long skuId)</span> &#123;</span><br><span class="line">    cartService.deleteItem(skuId);</span><br><span class="line">    <span class="keyword">return</span> <span class="string">&quot;redirect:http://cart.gulimall.com/cart.html&quot;</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="meta">@Override</span></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">deleteItem</span><span class="params">(Long skuId)</span> &#123;</span><br><span class="line">    BoundHashOperations&lt;String, Object, Object&gt; ops = getCartItemOps();</span><br><span class="line">    ops.delete(skuId.toString());</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h1 id="消息队列"><a href="#消息队列" class="headerlink" title="消息队列"></a>消息队列</h1><h2 id="一、消息简介"><a href="#一、消息简介" class="headerlink" title="一、消息简介"></a>一、消息简介</h2><p><strong>消息代理规范</strong></p><ul><li>JMS（Java Message Service）JAVA消息服务<ul><li>基于JVM消息代理的规范。ActiveMQ、HornetMQ是JMS实现</li></ul></li><li>AMQP（Advanced Message Queuing Protocol）<ul><li>高级消息队列协议，也是一个消息代理的规范，兼容JMS</li><li>RabbitMQ是AMQP的实现</li></ul></li></ul><p><strong>作用</strong></p><p>通过消息服务中间件来提升系统异步通信、扩展解耦能力</p><p>当消息发送者发送消息以后，将由消息代理接管，消息代理保证消息传递到指定目的地</p><p><strong>应用场景</strong></p><ol><li>异步处理</li></ol><p>​    用户注册操作和消息处理并行，提高响应速度</p><img src="https://i.loli.net/2020/10/03/nbJN45z6D3uEs97.png" style="zoom:50%;" /><ol start="2"><li><p>应用解耦</p><p>在下单时库存系统不能正常使用。也不影响正常下单，因为下单后，订单系统写入消息队列就不再关心其他的后续操作了。实现订单系统与库存系统的应用解耦</p><img src="https://i.loli.net/2020/10/03/HMk4oKfBCsjm2cY.png" style="zoom:60%;" /></li><li><p>流量削峰</p><p>用户的请求，服务器接收后，首先写入消息队列。假如消息队列长度超过最大数量，则直接抛弃用户请求或跳转到错误页面</p><p>秒杀业务根据消息队列中的请求信息，再做后续处理</p><p><img src="https://i.loli.net/2020/10/03/qWTQo5azcxihAVU.png"></p></li></ol><h2 id="二、RabbitMQ"><a href="#二、RabbitMQ" class="headerlink" title="二、RabbitMQ"></a>二、RabbitMQ</h2><p>RabbitMQ是一个由erlang开发的AMQP(Advanved Message Queue Protocol)的开源实现。</p><h3 id="1-核心概念"><a href="#1-核心概念" class="headerlink" title="1. 核心概念"></a>1. 核心概念</h3><ul><li><p><strong>Message</strong></p><ul><li>消息，消息是不具名的，它由消息头和消息体组成</li><li>消息头，包括routing-key（路由键）、priority（相对于其他消息的优先权）、delivery-mode（指出该消息可能需要持久性存储）等</li></ul></li><li><p>Publisher</p><ul><li>消息的生产者，也是一个向交换器发布消息的客户端应用程序</li></ul></li><li><p><strong>Exchange</strong></p><ul><li>交换器，将生产者消息路由给服务器中的队列</li><li>类型有direct(默认)，fanout, topic, 和headers，具有不同转发策略</li></ul></li><li><p><strong>Queue</strong></p><ul><li>消息队列，保存消息直到发送给消费者</li></ul></li><li><p><strong>Binding</strong></p><ul><li>绑定，用于消息队列和交换器之间的关联</li></ul></li><li><p>Connection</p><ul><li>网络连接，比如一个TCP连接</li></ul></li><li><p>Consumer</p><ul><li>消息的消费者，表示一个从消息队列中取得消息的客户端应用程序</li></ul></li><li><p>Virtual Host</p><ul><li>虚拟主机，表示一批交换器、消息队列和相关对象。</li><li>vhost 是 AMQP 概念的基础，必须在连接时指定</li><li>RabbitMQ 默认的 vhost 是 / </li></ul></li><li><p>Broker</p><ul><li>消息队列服务器实体</li></ul></li></ul><p><img src="https://cdn.jsdelivr.net/gh/zsxfa/CDN/img/md/2022/05/01/1651373265.png" alt="desc"></p><h3 id="2-运行机制"><a href="#2-运行机制" class="headerlink" title="2. 运行机制"></a>2. 运行机制</h3><p><strong>消息路由</strong></p><p>AMQP 中增加了Exchange 和 Binding 的角色， Binding 决定交换器的消息应该发送到那个队列</p><p><img src="https://cdn.jsdelivr.net/gh/zsxfa/CDN/img/md/2022/05/01/1651375754.png" alt="desc"></p><p><strong>Exchange 类型</strong></p><ol><li><p>direct</p><p>点对点模式，消息中的路由键（routing key）如果和 Binding 中的 binding<br>key 一致， 交换器就将消息发到对应的队列中。</p><p><img src="https://cdn.jsdelivr.net/gh/zsxfa/CDN/img/md/2022/05/01/1651375792.png" alt="desc"></p></li><li><p>fanout</p><p>广播模式，每个发到 fanout 类型交换器的消息都会分到所有绑定的队列上去</p><p><img src="https://cdn.jsdelivr.net/gh/zsxfa/CDN/img/md/2022/05/01/1651375806.png" alt="desc"></p></li><li><p>topic</p><p>将路由键和某个模式进行匹配，此时队列需要绑定到一个模式上。它将路由键和绑定键的字符串切分成单词，这些单词之间用点隔开。<br>识别通配符： # 匹配 0 个或多个单词， *匹配一个单词</p><p><img src="https://cdn.jsdelivr.net/gh/zsxfa/CDN/img/md/2022/05/01/1651375826.png" alt="desc"></p></li></ol><h2 id="三、Docker安装RabbitMQ"><a href="#三、Docker安装RabbitMQ" class="headerlink" title="三、Docker安装RabbitMQ"></a>三、Docker安装RabbitMQ</h2><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">docker run -d --name rabbitmq -p 5671:5671 -p 5672:5672 -p 4369:4369 -p  25672:25672 -p 15671:15671 -p 15672:15672 rabbitmq:management</span><br><span class="line"></span><br><span class="line">4369, 25672 (Erlang发现&amp;集群端口)</span><br><span class="line">5672, 5671 (AMQP端口)</span><br><span class="line">15672 (web管理后台端口)</span><br><span class="line">61613, 61614 (STOMP协议端口)</span><br><span class="line">1883, 8883 (MQTT协议端口)</span><br><span class="line">https://www.rabbitmq.com/networking.html</span><br></pre></td></tr></table></figure><h2 id="四、-Springboot中的RabbitMQ"><a href="#四、-Springboot中的RabbitMQ" class="headerlink" title="四、 Springboot中的RabbitMQ"></a>四、 Springboot中的RabbitMQ</h2><h3 id="1-环境准备"><a href="#1-环境准备" class="headerlink" title="1. 环境准备"></a>1. 环境准备</h3><p>在docker中安装rabbitmq并运行</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta prompt_"># </span><span class="language-bash">5672为服务端口，15672为web控制台端口</span></span><br><span class="line">docker run -d -p 5672:5672 -p 15672:15672 38e57f281891</span><br></pre></td></tr></table></figure><p>如果要修改账号密码</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><span class="line">1、进入docker 的 RabbitMQ 容器中</span><br><span class="line">docker exec -it rabbitmq01 bash</span><br><span class="line"></span><br><span class="line">2、查看用户</span><br><span class="line">rabbitmqctl list_users</span><br><span class="line"></span><br><span class="line">3、修改密码</span><br><span class="line">rabbitmqctl change_password userName newPassword</span><br><span class="line"></span><br><span class="line">4、如果不想要guest的账号也可以新增账号</span><br><span class="line"> rabbitmqctl add_user userName newPassword</span><br><span class="line"> </span><br><span class="line">5、看guest不爽，你还可以delete它</span><br><span class="line">rabbitmqctl delete_user guest</span><br><span class="line"></span><br><span class="line">6、最后别忘了给自己添加的账号增加超级管理员权限</span><br><span class="line">rabbitmqctl set_user_tags userName administrator</span><br></pre></td></tr></table></figure><p>导入依赖</p><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>org.springframework.boot<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>spring-boot-starter-amqp<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br><span class="line"><span class="comment">&lt;!--自定义消息转化器Jackson2JsonMessageConverter所需依赖--&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>com.fasterxml.jackson.core<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>jackson-databind<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br></pre></td></tr></table></figure><p>配置文件</p><figure class="highlight properties"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 指定rebbitmq服务器主机</span></span><br><span class="line"><span class="attr">spring.rabbitmq.host</span>=<span class="string">192.168.138.*</span></span><br><span class="line"><span class="comment">#spring.rabbitmq.username=guest  默认值为guest</span></span><br><span class="line"><span class="comment">#spring.rabbitmq.password=guest 默认值为guest</span></span><br></pre></td></tr></table></figure><h3 id="2-RabbitMQ客户端API"><a href="#2-RabbitMQ客户端API" class="headerlink" title="2. RabbitMQ客户端API"></a>2. RabbitMQ客户端API</h3><p>RabbitAutoConfiguration中有内部类RabbitTemplateConfiguration,在该类中向容器中分别导入了<strong>RabbitTemplate</strong>和<strong>AmqpAdmin</strong></p><p>在测试类中分别注入</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">@Autowired</span></span><br><span class="line"><span class="keyword">private</span> RabbitTemplate rabbitTemplate;</span><br><span class="line"></span><br><span class="line"><span class="meta">@Autowired</span></span><br><span class="line"><span class="keyword">private</span> AmqpAdmin amqpAdmin;</span><br></pre></td></tr></table></figure><ul><li><p><strong>RabbitTemplate消息发送处理组件</strong></p><p>​    可用来发送和接收消息</p></li></ul><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//发送消息</span></span><br><span class="line">rabbitTemplate.convertAndSend(<span class="string">&quot;amq.direct&quot;</span>,<span class="string">&quot;ustc&quot;</span>,<span class="string">&quot;aaaa&quot;</span>);</span><br><span class="line">        <span class="type">Book</span> <span class="variable">book</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">Book</span>();</span><br><span class="line">        book.setName(<span class="string">&quot;西游记&quot;</span>);</span><br><span class="line">        book.setPrice(<span class="number">23.2f</span>);</span><br><span class="line"><span class="comment">//Book要实现Serializable接口</span></span><br><span class="line">        rabbitTemplate.convertAndSend(<span class="string">&quot;amq.direct&quot;</span>,<span class="string">&quot;ustc&quot;</span>,book);</span><br><span class="line"></span><br><span class="line"><span class="comment">//接收消息</span></span><br><span class="line"><span class="type">Object</span> <span class="variable">o</span> <span class="operator">=</span> rabbitTemplate.receiveAndConvert(<span class="string">&quot;ustc&quot;</span>);</span><br><span class="line">        System.out.println(o.getClass());  <span class="comment">//class cn.edu.ustc.springboot.bean.Book</span></span><br><span class="line">        System.out.println(o);<span class="comment">//Book&#123;name=&#x27;西游记&#x27;, price=23.2&#125;</span></span><br></pre></td></tr></table></figure><p>默认的消息转化器是SimpleMessageConverter，对于对象以jdk序列化方式存储，若要以Json方式存储对象，就要自定义消息转换器</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">@Configuration</span></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">AmqpConfig</span> &#123;</span><br><span class="line">    <span class="meta">@Bean</span></span><br><span class="line">    <span class="keyword">public</span> MessageConverter <span class="title function_">messageConverter</span><span class="params">()</span> &#123;</span><br><span class="line">        <span class="comment">//在容器中导入Json的消息转换器</span></span><br><span class="line">        <span class="keyword">return</span> <span class="keyword">new</span> <span class="title class_">Jackson2JsonMessageConverter</span>();</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><ul><li><p><strong>AmqpAdmin管理组件</strong></p><p>​    可用于创建和删除exchange、binding和queue</p></li></ul><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//创建Direct类型的Exchange</span></span><br><span class="line">amqpAdmin.declareExchange(<span class="keyword">new</span> <span class="title class_">DirectExchange</span>(<span class="string">&quot;admin.direct&quot;</span>));</span><br><span class="line"><span class="comment">//创建Queue</span></span><br><span class="line">amqpAdmin.declareQueue(<span class="keyword">new</span> <span class="title class_">Queue</span>(<span class="string">&quot;admin.test&quot;</span>));</span><br><span class="line"><span class="comment">//将创建的队列与Exchange绑定</span></span><br><span class="line">amqpAdmin.declareBinding(<span class="keyword">new</span> <span class="title class_">Binding</span>(<span class="string">&quot;admin.test&quot;</span>, Binding.DestinationType.QUEUE,<span class="string">&quot;admin.direct&quot;</span>,<span class="string">&quot;admin.test&quot;</span>,<span class="literal">null</span>));</span><br></pre></td></tr></table></figure><p><strong>消息的监听</strong></p><ul><li><p>在回调方法上标注@RabbitListener注解，并设置其属性queues，注册监听队列，当该队列收到消息时，标注方法遍会调用</p></li><li><p>可分别使用Message和保存消息所属对象进行消息接收，若使用Object对象进行消息接收，实际上接收到的也是Message</p></li><li><p>如果知道接收的消息是何种类型的对象，可在方法参数中直接加上该类型参数，也可接收到</p></li></ul><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">@Service</span></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">BookService</span> &#123;</span><br><span class="line">    <span class="meta">@RabbitListener(queues = &#123;&quot;admin.test&quot;&#125;)</span></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">receive1</span><span class="params">(Book book)</span>&#123;</span><br><span class="line">        System.out.println(<span class="string">&quot;收到消息：&quot;</span>+book);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@RabbitListener(queues = &#123;&quot;admin.test&quot;&#125;)</span></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">receive1</span><span class="params">(Object object)</span>&#123;</span><br><span class="line">        System.out.println(<span class="string">&quot;收到消息：&quot;</span>+object.getClass());</span><br><span class="line">        <span class="comment">//收到消息：class org.springframework.amqp.core.Message</span></span><br><span class="line">    &#125;</span><br><span class="line">    </span><br><span class="line">    <span class="meta">@RabbitListener(queues = &#123;&quot;admin.test&quot;&#125;)</span></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">receive2</span><span class="params">(Message message)</span>&#123;</span><br><span class="line">        System.out.println(<span class="string">&quot;收到消息&quot;</span>+message.getHeaders()+<span class="string">&quot;---&quot;</span>+message.getPayload());</span><br><span class="line">    &#125;</span><br><span class="line">    </span><br><span class="line">    <span class="meta">@RabbitListener(queues = &#123;&quot;admin.test&quot;&#125;)</span></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">receive3</span><span class="params">(Message message,Book book)</span>&#123;</span><br><span class="line">        System.out.println(<span class="string">&quot;3收到消息：book:&quot;</span>+book.getClass()+<span class="string">&quot;\n&quot;</span> +</span><br><span class="line">                <span class="string">&quot;message:&quot;</span>+message.getClass());</span><br><span class="line">        <span class="comment">//3收到消息：book:class cn.edu.ustc.springboot.bean.Book</span></span><br><span class="line"><span class="comment">//message: class org.springframework.amqp.core.Message</span></span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><ul><li>若消息中含有不同的对象，可以使用<code>@RabbitHandler</code>进行分别接收</li></ul><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">@RabbitListener(queues = &#123;&quot;admin.test&quot;&#125;)</span></span><br><span class="line"><span class="meta">@Service</span></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">BookService</span> &#123;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@RabbitHandler</span></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">receive4</span><span class="params">(Book book)</span>&#123;</span><br><span class="line">        System.out.println(<span class="string">&quot;4收到消息：book:&quot;</span> + book);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@RabbitHandler</span></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">receive5</span><span class="params">(Student student)</span>&#123;</span><br><span class="line">        System.out.println(<span class="string">&quot;5收到消息：student:&quot;</span> + student);</span><br><span class="line">    &#125;</span><br></pre></td></tr></table></figure><h3 id="3-消息的可靠投递"><a href="#3-消息的可靠投递" class="headerlink" title="3.  消息的可靠投递"></a>3.  消息的可靠投递</h3><p>为保证消息不丢失，可靠抵达，可以使用事务消息，但性能下降250倍，为此引入确认机制</p><ul><li><p><strong>publisher</strong> confirmCallback 确认模式</p></li><li><p><strong>publisher</strong> returnCallback 未投递到queue 退回模式(失败时触发回调)</p></li><li><p><strong>consumer</strong> ack(Acknowledgement)机制</p><p><img src="https://cdn.jsdelivr.net/gh/zsxfa/CDN/img/md/2022/05/01/1651395290.png" alt="desc"></p></li></ul><img src="https://i.loli.net/2020/10/03/VIEF9woJaGchQpW.png" style="zoom:38%;" /><h4 id="1-confirmCallback"><a href="#1-confirmCallback" class="headerlink" title="(1) confirmCallback"></a>(1) confirmCallback</h4><p>spring.rabbitmq.publisher-confirms=true</p><ul><li>在创建 connectionFactory 的时候设置 PublisherConfirms(true) 选项，开启</li></ul><p>confirmcallback 。</p><ul><li>CorrelationData：用来表示当前消息唯一性。</li><li>消息只要被 broker 接收到就会执行 confirmCallback，如果是 cluster 模式，需要所有broker 接收到才会调用 confirmCallback。</li><li>被 broker 接收到只能表示 message 已经到达服务器，并不能保证消息一定会被投递 到目标 queue 里。所以需要用到接下来的 returnCallback 。</li></ul><img src="https://i.loli.net/2020/10/03/mkn8LVQUiTxphsq.png" style="zoom: 50%;" /><p><code> CorrelationData</code>为消息的唯一标识，在发送消息时进行构建</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">@Configuration</span></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">AmqpConfig</span> &#123;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Autowired</span></span><br><span class="line">    <span class="keyword">private</span> RabbitTemplate rabbitTemplate;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Bean</span></span><br><span class="line">    <span class="keyword">public</span> MessageConverter <span class="title function_">messageConverter</span><span class="params">()</span> &#123;</span><br><span class="line">        <span class="keyword">return</span> <span class="keyword">new</span> <span class="title class_">Jackson2JsonMessageConverter</span>();</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@PostConstruct</span>  <span class="comment">//此类创建完成后调用此方法</span></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">initRabbitTemplate</span><span class="params">()</span> &#123;</span><br><span class="line">        rabbitTemplate.setConfirmCallback(<span class="keyword">new</span> <span class="title class_">RabbitTemplate</span>.ConfirmCallback() &#123;</span><br><span class="line">            <span class="meta">@Override</span></span><br><span class="line">            <span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">confirm</span><span class="params">(CorrelationData correlationData, <span class="type">boolean</span> ack, String cause)</span> &#123;</span><br><span class="line">                System.out.println(<span class="string">&quot;confirm CorrelationData:&quot;</span>+correlationData+<span class="string">&quot;===&gt;ack:&quot;</span>+ack+<span class="string">&quot;====&gt;cause:&quot;</span>+cause);</span><br><span class="line">            &#125;</span><br><span class="line"><span class="comment">//confirm CorrelationData:CorrelationData [id=e3812ddd-f9c3-4f11-9510-d130a8d8f4d6]===&gt;ack:true====&gt;cause:null</span></span><br><span class="line"><span class="comment">//confirm CorrelationData:CorrelationData [id=d9560acc-f745-4a62-87cf-b6420d58706d]===&gt;ack:true====&gt;cause:null</span></span><br><span class="line"><span class="comment">//confirm CorrelationData:CorrelationData [id=4cf4a709-62ac-4966-afb9-90ec6c62a35b]===&gt;ack:true====&gt;cause:null</span></span><br><span class="line"></span><br><span class="line">        &#125;);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h4 id="2-ReturnCallback"><a href="#2-ReturnCallback" class="headerlink" title="(2) ReturnCallback"></a>(2) ReturnCallback</h4><p>spring.rabbitmq.publisher-returns=true</p><p>spring.rabbitmq.template.mandatory=true</p><ul><li><p>confrim 模式只能保证消息到达 broker，不能保证消息准确投递到目标 queue 里。在有 些业务场景下，我们需要保证消息一定要投递到目标 queue 里，此时就需要用到return 退回模式。</p></li><li><p>这样如果未能投递到目标 queue 里将调用 returnCallback ，可以记录下详细到投递数 据，定期的巡检或者自动纠错都需要这些数据。</p></li></ul><figure class="highlight properties"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 开启发送端抵达队列的确认</span></span><br><span class="line"><span class="attr">spring.rabbitmq.publisher-returns</span>=<span class="string">true</span></span><br><span class="line"><span class="comment"># 只要抵达队列，以异步发送优先回调</span></span><br><span class="line"><span class="attr">spring.rabbitmq.template.mandatory</span>=<span class="string">true</span></span><br></pre></td></tr></table></figure><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">rabbitTemplate.setReturnCallback(<span class="keyword">new</span> <span class="title class_">RabbitTemplate</span>.ReturnCallback() &#123;</span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">returnedMessage</span><span class="params">(Message message, <span class="type">int</span> replyCode, String replyText, String exchange, String routingKey)</span> &#123;</span><br><span class="line">        System.out.println(<span class="string">&quot;return callback...message:&quot;</span>+message+<span class="string">&quot;===&gt;replycode:&quot;</span>+replyCode+<span class="string">&quot;===&gt;replyText:&quot;</span>+replyText+<span class="string">&quot;===&gt;exchange:&quot;</span>+exchange+<span class="string">&quot;===&gt;routingKey:&quot;</span>+routingKey);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;);</span><br></pre></td></tr></table></figure><figure class="highlight routeros"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">return callback<span class="built_in">..</span>.message:(Body:<span class="string">&#x27;&#123;&quot;name&quot;:&quot;水浒传&quot;,&quot;price&quot;:0.0&#125;&#x27;</span> MessageProperties [headers=&#123;<span class="attribute">spring_returned_message_correlation</span>=8f5d080c-35c8-42db-ac3d-0bf7509906aa, <span class="attribute">__TypeId__</span>=cn.edu.ustc.springboot.bean.Book&#125;, <span class="attribute">contentType</span>=application/json, <span class="attribute">contentEncoding</span>=UTF-8, <span class="attribute">contentLength</span>=0, <span class="attribute">receivedDeliveryMode</span>=PERSISTENT, <span class="attribute">priority</span>=0, <span class="attribute">deliveryTag</span>=0])===&gt;replycode:<span class="attribute">312</span>===&gt;replyText:NO_ROUTE===&gt;exchange:admin.direct===&gt;routingKey:admin.test0</span><br><span class="line"></span><br><span class="line">confirm CorrelationData:CorrelationData [<span class="attribute">id</span>=8f5d080c-35c8-42db-ac3d-0bf7509906aa]===&gt;ack:<span class="attribute">true</span>====&gt;causenull</span><br><span class="line"></span><br><span class="line">return callback<span class="built_in">..</span>.message:(Body:<span class="string">&#x27;&#123;&quot;name&quot;:&quot;mhs&quot;,&quot;age&quot;:1&#125;&#x27;</span> MessageProperties [headers=&#123;<span class="attribute">spring_returned_message_correlation</span>=2961a45c-19ee-4b94-8281-03e00fbdceea, <span class="attribute">__TypeId__</span>=cn.edu.ustc.springboot.bean.Student&#125;, <span class="attribute">contentType</span>=application/json, <span class="attribute">contentEncoding</span>=UTF-8, <span class="attribute">contentLength</span>=0, <span class="attribute">receivedDeliveryMode</span>=PERSISTENT, <span class="attribute">priority</span>=0, <span class="attribute">deliveryTag</span>=0])===&gt;replycode:<span class="attribute">312</span>===&gt;replyText:NO_ROUTE===&gt;exchange:admin.direct===&gt;routingKey:admin.test11</span><br><span class="line"></span><br></pre></td></tr></table></figure><h4 id="3-ack"><a href="#3-ack" class="headerlink" title="(3) ack"></a>(3) ack</h4><p>消费者获取到消息，成功处理，可以回复Ack给Broker</p><ul><li><p>basic.ack用于肯定确认；broker将移除此消息</p></li><li><p>basic.nack用于否定确认；可以指定broker是否丢弃此消息，可以批量</p></li><li><p>basic.reject用于否定确认；同上，但不能批量</p></li></ul><p>默认自动ack，消息被消费者收到，就会从broker的queue中移除</p><p>queue无消费者，消息依然会被存储，直到消费者消费</p><p>消费者收到消息，默认会自动ack。但是如果无法确定此消息是否被处理完成， 或者成功处理。我们可以开启手动ack模式</p><ul><li><p>消息处理成功，ack()，接受下一个消息，此消息broker就会移除</p></li><li><p>消息处理失败，nack()/reject()，重新发送给其他人进行处理，或者容错处理后ack</p></li><li><p>消息一直没有调用ack/nack方法，broker认为此消息正在被处理，不会投递给别人，此时客户端断开，消息不会被broker移除，会投递给别人</p></li></ul><img src="https://i.loli.net/2020/10/03/zcLPnRNXvq2uHoE.png" style="zoom:38%;" /><p>在默认情况下，消息如果消费到一半，服务器宕机，剩下的消息就会默认全部确认，会造成消息丢失，因此需要引入手动确认模式</p><figure class="highlight properties"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 消费端手动ack消息</span></span><br><span class="line"><span class="attr">spring.rabbitmq.listener.simple.acknowledge-mode</span>=<span class="string">manual</span></span><br></pre></td></tr></table></figure><p>只要没有明确通知服务器ack，消息就不会确认收货，可以通过<code>basicAck()</code>进行确认收货</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">@RabbitHandler</span></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">receive4</span><span class="params">(Book book, Message message,Channel channel)</span> <span class="keyword">throws</span> IOException &#123;</span><br><span class="line">    <span class="keyword">try</span> &#123;</span><br><span class="line">        Thread.sleep(<span class="number">100</span>);</span><br><span class="line">    &#125; <span class="keyword">catch</span> (InterruptedException e) &#123;</span><br><span class="line">        e.printStackTrace();</span><br><span class="line">    &#125;</span><br><span class="line">    System.out.println(<span class="string">&quot;4收到消息：book:&quot;</span> + book);</span><br><span class="line">    <span class="comment">//deliveryTag在通道内按顺序自增</span></span><br><span class="line">    <span class="type">long</span> <span class="variable">deliveryTag</span> <span class="operator">=</span> message.getMessageProperties().getDeliveryTag();</span><br><span class="line">    System.out.println(deliveryTag);</span><br><span class="line">    <span class="comment">//通过deliveryTag进行确认，false表示不批量确认</span></span><br><span class="line">    channel.basicAck(deliveryTag,<span class="literal">false</span>);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>此外还可以使用<code>basicNack()</code>和<code>basicReject()</code>进行拒绝收货</p><h1 id="订单服务"><a href="#订单服务" class="headerlink" title="订单服务"></a>订单服务</h1><h2 id="1-订单流程"><a href="#1-订单流程" class="headerlink" title="1. 订单流程"></a>1. 订单流程</h2><p>订单生成 -&gt; 支付订单 -&gt; 卖家发货 -&gt; 确认收货 -&gt; 交易成功</p><p><img src="https://cdn.jsdelivr.net/gh/zsxfa/CDN/img/md/2022/05/02/1651454564.png" alt="desc"></p><h2 id="2-订单登录拦截"><a href="#2-订单登录拦截" class="headerlink" title="2. 订单登录拦截"></a>2. 订单登录拦截</h2><p>因为订单系统必然涉及到用户信息，因此进入订单系统的请求必须是已经登录的，所以我们需要通过拦截器对未登录订单请求进行拦截</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">LoginInterceptor</span> <span class="keyword">implements</span> <span class="title class_">HandlerInterceptor</span> &#123;</span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> ThreadLocal&lt;MemberResponseVo&gt; loginUser = <span class="keyword">new</span> <span class="title class_">ThreadLocal</span>&lt;&gt;();</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="keyword">public</span> <span class="type">boolean</span> <span class="title function_">preHandle</span><span class="params">(HttpServletRequest request, HttpServletResponse response, Object handler)</span> <span class="keyword">throws</span> Exception &#123;</span><br><span class="line">        <span class="type">HttpSession</span> <span class="variable">session</span> <span class="operator">=</span> request.getSession();</span><br><span class="line">        <span class="type">MemberResponseVo</span> <span class="variable">memberResponseVo</span> <span class="operator">=</span> (MemberResponseVo) session.getAttribute(AuthServerConstant.LOGIN_USER);</span><br><span class="line">        <span class="keyword">if</span> (memberResponseVo != <span class="literal">null</span>) &#123;</span><br><span class="line">            loginUser.set(memberResponseVo);</span><br><span class="line">            <span class="keyword">return</span> <span class="literal">true</span>;</span><br><span class="line">        &#125;<span class="keyword">else</span> &#123;</span><br><span class="line">            session.setAttribute(<span class="string">&quot;msg&quot;</span>,<span class="string">&quot;请先登录&quot;</span>);</span><br><span class="line">            response.sendRedirect(<span class="string">&quot;http://auth.gulimall.com/login.html&quot;</span>);</span><br><span class="line">            <span class="keyword">return</span> <span class="literal">false</span>;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="meta">@Configuration</span></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">GulimallWebConfig</span> <span class="keyword">implements</span> <span class="title class_">WebMvcConfigurer</span> &#123;</span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">addInterceptors</span><span class="params">(InterceptorRegistry registry)</span> &#123;</span><br><span class="line">        registry.addInterceptor(<span class="keyword">new</span> <span class="title class_">LoginInterceptor</span>()).addPathPatterns(<span class="string">&quot;/**&quot;</span>);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="3-订单确认页"><a href="#3-订单确认页" class="headerlink" title="3. 订单确认页"></a>3. 订单确认页</h2><h3 id="（1）模型抽取"><a href="#（1）模型抽取" class="headerlink" title="（1）模型抽取"></a>（1）模型抽取</h3><p>跳转到确认页时需要携带的数据模型</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">OrderConfirmVo</span> &#123;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Getter</span></span><br><span class="line">    <span class="meta">@Setter</span></span><br><span class="line">    <span class="comment">/** 会员收获地址列表 **/</span></span><br><span class="line">    <span class="keyword">private</span> List&lt;MemberAddressVo&gt; memberAddressVos;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Getter</span> <span class="meta">@Setter</span></span><br><span class="line">    <span class="comment">/** 所有选中的购物项 **/</span></span><br><span class="line">    <span class="keyword">private</span> List&lt;OrderItemVo&gt; items;</span><br><span class="line"></span><br><span class="line">    <span class="comment">/** 发票记录 **/</span></span><br><span class="line">    <span class="meta">@Getter</span> <span class="meta">@Setter</span></span><br><span class="line">    <span class="comment">/** 优惠券（会员积分） **/</span></span><br><span class="line">    <span class="keyword">private</span> Integer integration;</span><br><span class="line"></span><br><span class="line">    <span class="comment">/** 防止重复提交的令牌 **/</span></span><br><span class="line">    <span class="meta">@Getter</span> <span class="meta">@Setter</span></span><br><span class="line">    <span class="keyword">private</span> String orderToken;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Getter</span> <span class="meta">@Setter</span></span><br><span class="line">    Map&lt;Long,Boolean&gt; stocks;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> Integer <span class="title function_">getCount</span><span class="params">()</span> &#123;</span><br><span class="line">        <span class="type">Integer</span> <span class="variable">count</span> <span class="operator">=</span> <span class="number">0</span>;</span><br><span class="line">        <span class="keyword">if</span> (items != <span class="literal">null</span> &amp;&amp; items.size() &gt; <span class="number">0</span>) &#123;</span><br><span class="line">            <span class="keyword">for</span> (OrderItemVo item : items) &#123;</span><br><span class="line">                count += item.getCount();</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">return</span> count;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">    <span class="comment">/** 订单总额 **/</span></span><br><span class="line">    <span class="comment">//BigDecimal total;</span></span><br><span class="line">    <span class="comment">//计算订单总额</span></span><br><span class="line">    <span class="keyword">public</span> BigDecimal <span class="title function_">getTotal</span><span class="params">()</span> &#123;</span><br><span class="line">        <span class="type">BigDecimal</span> <span class="variable">totalNum</span> <span class="operator">=</span> BigDecimal.ZERO;</span><br><span class="line">        <span class="keyword">if</span> (items != <span class="literal">null</span> &amp;&amp; items.size() &gt; <span class="number">0</span>) &#123;</span><br><span class="line">            <span class="keyword">for</span> (OrderItemVo item : items) &#123;</span><br><span class="line">                <span class="comment">//计算当前商品的总价格</span></span><br><span class="line">                <span class="type">BigDecimal</span> <span class="variable">itemPrice</span> <span class="operator">=</span> item.getPrice().multiply(<span class="keyword">new</span> <span class="title class_">BigDecimal</span>(item.getCount().toString()));</span><br><span class="line">                <span class="comment">//再计算全部商品的总价格</span></span><br><span class="line">                totalNum = totalNum.add(itemPrice);</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">return</span> totalNum;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">    <span class="comment">/** 应付价格 **/</span></span><br><span class="line">    <span class="comment">//BigDecimal payPrice;</span></span><br><span class="line">    <span class="keyword">public</span> BigDecimal <span class="title function_">getPayPrice</span><span class="params">()</span> &#123;</span><br><span class="line">        <span class="keyword">return</span> getTotal();</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="（2）数据获取"><a href="#（2）数据获取" class="headerlink" title="（2）数据获取"></a>（2）数据获取</h3><ul><li>查询购物项、库存和收货地址都要调用远程服务，串行会浪费大量时间，因此我们使用<code>CompletableFuture</code>进行异步编排</li><li>可能由于延迟，订单提交按钮可能被点击多次，为了防止重复提交的问题，我们在返回订单确认页时，在<code>redis</code>中生成一个随机的令牌，过期时间为30min，提交的订单会携带这个令牌，我们将会在订单提交的处理页面核验此令牌</li></ul><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">@RequestMapping(&quot;/toTrade&quot;)</span></span><br><span class="line"><span class="keyword">public</span> String <span class="title function_">toTrade</span><span class="params">(Model model)</span> &#123;</span><br><span class="line">    <span class="type">OrderConfirmVo</span> <span class="variable">confirmVo</span> <span class="operator">=</span> orderService.confirmOrder();</span><br><span class="line">    model.addAttribute(<span class="string">&quot;confirmOrder&quot;</span>, confirmVo);</span><br><span class="line">    <span class="keyword">return</span> <span class="string">&quot;confirm&quot;</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"> <span class="meta">@Override</span></span><br><span class="line">    <span class="keyword">public</span> OrderConfirmVo <span class="title function_">confirmOrder</span><span class="params">()</span> &#123;</span><br><span class="line">        <span class="type">MemberResponseVo</span> <span class="variable">memberResponseVo</span> <span class="operator">=</span> LoginInterceptor.loginUser.get();</span><br><span class="line">        <span class="type">OrderConfirmVo</span> <span class="variable">confirmVo</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">OrderConfirmVo</span>();</span><br><span class="line">        <span class="type">RequestAttributes</span> <span class="variable">requestAttributes</span> <span class="operator">=</span> RequestContextHolder.getRequestAttributes();</span><br><span class="line">        CompletableFuture&lt;Void&gt; itemAndStockFuture = CompletableFuture.supplyAsync(() -&gt; &#123;</span><br><span class="line">            RequestContextHolder.setRequestAttributes(requestAttributes);</span><br><span class="line">            <span class="comment">//1. 查出所有选中购物项</span></span><br><span class="line">            List&lt;OrderItemVo&gt; checkedItems = cartFeignService.getCheckedItems();</span><br><span class="line">            confirmVo.setItems(checkedItems);</span><br><span class="line">            <span class="keyword">return</span> checkedItems;</span><br><span class="line">        &#125;, executor).thenAcceptAsync((items) -&gt; &#123;</span><br><span class="line">            <span class="comment">//4. 库存</span></span><br><span class="line">            List&lt;Long&gt; skuIds = items.stream().map(OrderItemVo::getSkuId).collect(Collectors.toList());</span><br><span class="line">            <span class="comment">//skuId为key,是否有库存为value</span></span><br><span class="line">            Map&lt;Long, Boolean&gt; hasStockMap = wareFeignService.getSkuHasStocks(skuIds).stream().collect(Collectors.toMap(SkuHasStockVo::getSkuId, SkuHasStockVo::getHasStock));</span><br><span class="line">            confirmVo.setStocks(hasStockMap);</span><br><span class="line">        &#125;, executor);</span><br><span class="line"></span><br><span class="line">        <span class="comment">//2. 查出所有收货地址</span></span><br><span class="line">        CompletableFuture&lt;Void&gt; addressFuture = CompletableFuture.runAsync(() -&gt; &#123;</span><br><span class="line">            List&lt;MemberAddressVo&gt; addressByUserId = memberFeignService.getAddressByUserId(memberResponseVo.getId());</span><br><span class="line">            confirmVo.setMemberAddressVos(addressByUserId);</span><br><span class="line">        &#125;, executor);</span><br><span class="line"></span><br><span class="line">        <span class="comment">//3. 积分</span></span><br><span class="line">        confirmVo.setIntegration(memberResponseVo.getIntegration());</span><br><span class="line"></span><br><span class="line">        <span class="comment">//5. 总价自动计算</span></span><br><span class="line">        <span class="comment">//6. 防重令牌</span></span><br><span class="line">        <span class="type">String</span> <span class="variable">token</span> <span class="operator">=</span> UUID.randomUUID().toString().replace(<span class="string">&quot;-&quot;</span>, <span class="string">&quot;&quot;</span>);</span><br><span class="line">        redisTemplate.opsForValue().set(OrderConstant.USER_ORDER_TOKEN_PREFIX + memberResponseVo.getId(), token, <span class="number">30</span>, TimeUnit.MINUTES);</span><br><span class="line">        confirmVo.setOrderToken(token);</span><br><span class="line">        <span class="keyword">try</span> &#123;</span><br><span class="line">            CompletableFuture.allOf(itemAndStockFuture, addressFuture).get();</span><br><span class="line">        &#125; <span class="keyword">catch</span> (InterruptedException e) &#123;</span><br><span class="line">            e.printStackTrace();</span><br><span class="line">        &#125; <span class="keyword">catch</span> (ExecutionException e) &#123;</span><br><span class="line">            e.printStackTrace();</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">return</span> confirmVo;</span><br><span class="line">    &#125;</span><br></pre></td></tr></table></figure><h3 id="（3）Feign远程调用丢失请求头问题"><a href="#（3）Feign远程调用丢失请求头问题" class="headerlink" title="（3）Feign远程调用丢失请求头问题"></a>（3）Feign远程调用丢失请求头问题</h3><p><code>feign</code>远程调用的请求头中没有含有<code>JSESSIONID</code>的<code>cookie</code>，所以也就不能得到服务端的<code>session</code>数据，cart认为没登录，获取不了用户信息</p><p><img src="https://cdn.jsdelivr.net/gh/zsxfa/CDN/img/md/2022/05/02/1651489137.png" alt="desc"></p><p><img src="https://cdn.jsdelivr.net/gh/zsxfa/CDN/img/md/2022/05/02/1651489175.png" alt="desc"></p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">Request <span class="title function_">targetRequest</span><span class="params">(RequestTemplate template)</span> &#123;</span><br><span class="line">  <span class="keyword">for</span> (RequestInterceptor interceptor : requestInterceptors) &#123;</span><br><span class="line">    interceptor.apply(template);</span><br><span class="line">  &#125;</span><br><span class="line">  <span class="keyword">return</span> target.apply(template);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>但是在<code>feign</code>的调用过程中，会使用容器中的<code>RequestInterceptor</code>对<code>RequestTemplate</code>进行处理，因此我们可以通过向容器中导入定制的<code>RequestInterceptor</code>为请求加上<code>cookie</code>。</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">GuliFeignConfig</span> &#123;</span><br><span class="line">    <span class="meta">@Bean</span></span><br><span class="line">    <span class="keyword">public</span> RequestInterceptor <span class="title function_">requestInterceptor</span><span class="params">()</span> &#123;</span><br><span class="line">        <span class="keyword">return</span> <span class="keyword">new</span> <span class="title class_">RequestInterceptor</span>() &#123;</span><br><span class="line">            <span class="meta">@Override</span></span><br><span class="line">            <span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">apply</span><span class="params">(RequestTemplate template)</span> &#123;</span><br><span class="line">                <span class="comment">//1. 使用RequestContextHolder拿到老请求的请求数据</span></span><br><span class="line">                <span class="type">ServletRequestAttributes</span> <span class="variable">requestAttributes</span> <span class="operator">=</span> (ServletRequestAttributes) RequestContextHolder.getRequestAttributes();</span><br><span class="line">                <span class="keyword">if</span> (requestAttributes != <span class="literal">null</span>) &#123;</span><br><span class="line">                    <span class="type">HttpServletRequest</span> <span class="variable">request</span> <span class="operator">=</span> requestAttributes.getRequest();</span><br><span class="line">                    <span class="keyword">if</span> (request != <span class="literal">null</span>) &#123;</span><br><span class="line">                        <span class="comment">//2. 将老请求得到cookie信息放到feign请求上</span></span><br><span class="line">                        <span class="type">String</span> <span class="variable">cookie</span> <span class="operator">=</span> request.getHeader(<span class="string">&quot;Cookie&quot;</span>);</span><br><span class="line">                        template.header(<span class="string">&quot;Cookie&quot;</span>, cookie);</span><br><span class="line">                    &#125;</span><br><span class="line">                &#125;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><ul><li><code>RequestContextHolder</code>为SpingMVC中共享<code>request</code>数据的上下文，底层由<code>ThreadLocal</code>实现</li></ul><p>经过<code>RequestInterceptor</code>处理后的请求如下，已经加上了请求头的<code>Cookie</code>信息</p><p><img src="https://cdn.jsdelivr.net/gh/zsxfa/CDN/img/md/2022/05/02/1651489328.png" alt="desc"></p><h3 id="（4）Feign异步情况丢失上下文问题"><a href="#（4）Feign异步情况丢失上下文问题" class="headerlink" title="（4）Feign异步情况丢失上下文问题"></a>（4）Feign异步情况丢失上下文问题</h3><p><img src="https://cdn.jsdelivr.net/gh/zsxfa/CDN/img/md/2022/05/02/1651489224.png" alt="desc"></p><ul><li>由于<code>RequestContextHolder</code>使用<code>ThreadLocal</code>共享数据，所以在开启异步时获取不到老请求的信息，自然也就无法共享<code>cookie</code>了</li></ul><p>在这种情况下，我们需要在开启异步的时候将老请求的<code>RequestContextHolder</code>的数据设置进去</p><p><img src="https://cdn.jsdelivr.net/gh/zsxfa/CDN/img/md/2022/05/02/1651489251.png" alt="desc"></p><h3 id="（5）运费收件信息获取"><a href="#（5）运费收件信息获取" class="headerlink" title="（5）运费收件信息获取"></a>（5）运费收件信息获取</h3><p>数据封装</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">@Data</span></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">FareVo</span> &#123;</span><br><span class="line">    <span class="keyword">private</span> MemberAddressVo address;</span><br><span class="line">    <span class="keyword">private</span> BigDecimal fare;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>在页面将选中地址的id传给请求</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">@RequestMapping(&quot;/fare/&#123;addrId&#125;&quot;)</span></span><br><span class="line"><span class="keyword">public</span> FareVo <span class="title function_">getFare</span><span class="params">(<span class="meta">@PathVariable(&quot;addrId&quot;)</span> Long addrId)</span> &#123;</span><br><span class="line">    <span class="keyword">return</span> wareInfoService.getFare(addrId);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="meta">@Override</span></span><br><span class="line"><span class="keyword">public</span> FareVo <span class="title function_">getFare</span><span class="params">(Long addrId)</span> &#123;</span><br><span class="line">    <span class="type">FareVo</span> <span class="variable">fareVo</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">FareVo</span>();</span><br><span class="line">    <span class="type">R</span> <span class="variable">info</span> <span class="operator">=</span> memberFeignService.info(addrId);</span><br><span class="line">    <span class="keyword">if</span> (info.getCode() == <span class="number">0</span>) &#123;</span><br><span class="line">        <span class="type">MemberAddressVo</span> <span class="variable">address</span> <span class="operator">=</span> info.getData(<span class="string">&quot;memberReceiveAddress&quot;</span>, <span class="keyword">new</span> <span class="title class_">TypeReference</span>&lt;MemberAddressVo&gt;() &#123;</span><br><span class="line">        &#125;);</span><br><span class="line">        fareVo.setAddress(address);</span><br><span class="line">        <span class="type">String</span> <span class="variable">phone</span> <span class="operator">=</span> address.getPhone();</span><br><span class="line">        <span class="comment">//取电话号的最后两位作为邮费</span></span><br><span class="line">        <span class="type">String</span> <span class="variable">fare</span> <span class="operator">=</span> phone.substring(phone.length() - <span class="number">2</span>, phone.length());</span><br><span class="line">        fareVo.setFare(<span class="keyword">new</span> <span class="title class_">BigDecimal</span>(fare));</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> fareVo;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="4-订单提交"><a href="#4-订单提交" class="headerlink" title="4. 订单提交"></a>4. 订单提交</h2><h3 id="（1）模型抽取-1"><a href="#（1）模型抽取-1" class="headerlink" title="（1）模型抽取"></a>（1）模型抽取</h3><p>页面提交数据</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">@Data</span></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">OrderSubmitVo</span> &#123;</span><br><span class="line"></span><br><span class="line">    <span class="comment">/** 收获地址的id **/</span></span><br><span class="line">    <span class="keyword">private</span> Long addrId;</span><br><span class="line"></span><br><span class="line">    <span class="comment">/** 支付方式 **/</span></span><br><span class="line">    <span class="keyword">private</span> Integer payType;</span><br><span class="line">    <span class="comment">//无需提交要购买的商品，去购物车再获取一遍</span></span><br><span class="line">    <span class="comment">//优惠、发票</span></span><br><span class="line"></span><br><span class="line">    <span class="comment">/** 防重令牌 **/</span></span><br><span class="line">    <span class="keyword">private</span> String orderToken;</span><br><span class="line"></span><br><span class="line">    <span class="comment">/** 应付价格 **/</span></span><br><span class="line">    <span class="keyword">private</span> BigDecimal payPrice;</span><br><span class="line"></span><br><span class="line">    <span class="comment">/** 订单备注 **/</span></span><br><span class="line">    <span class="keyword">private</span> String remarks;</span><br><span class="line"></span><br><span class="line">    <span class="comment">//用户相关的信息，直接去session中取出即可</span></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>成功后转发至支付页面携带数据</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">@Data</span></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">SubmitOrderResponseVo</span> &#123;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">private</span> OrderEntity order;</span><br><span class="line"></span><br><span class="line">    <span class="comment">/** 错误状态码 **/</span></span><br><span class="line">    <span class="keyword">private</span> Integer code;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="（2）提交订单"><a href="#（2）提交订单" class="headerlink" title="（2）提交订单"></a>（2）提交订单</h3><ul><li>提交订单成功，则携带返回数据转发至支付页面</li><li>提交订单失败，则携带错误信息重定向至确认页</li></ul><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">@RequestMapping(&quot;/submitOrder&quot;)</span></span><br><span class="line"><span class="keyword">public</span> String <span class="title function_">submitOrder</span><span class="params">(OrderSubmitVo submitVo, Model model, RedirectAttributes attributes)</span> &#123;</span><br><span class="line">    <span class="keyword">try</span>&#123;</span><br><span class="line">        SubmitOrderResponseVo responseVo=orderService.submitOrder(submitVo);</span><br><span class="line">        <span class="type">Integer</span> <span class="variable">code</span> <span class="operator">=</span> responseVo.getCode();</span><br><span class="line">        <span class="keyword">if</span> (code==<span class="number">0</span>)&#123;</span><br><span class="line">            model.addAttribute(<span class="string">&quot;order&quot;</span>, responseVo.getOrder());</span><br><span class="line">            <span class="keyword">return</span> <span class="string">&quot;pay&quot;</span>;</span><br><span class="line">        &#125;<span class="keyword">else</span> &#123;</span><br><span class="line">            <span class="type">String</span> <span class="variable">msg</span> <span class="operator">=</span> <span class="string">&quot;下单失败;&quot;</span>;</span><br><span class="line">            <span class="keyword">switch</span> (code) &#123;</span><br><span class="line">                <span class="keyword">case</span> <span class="number">1</span>:</span><br><span class="line">                    msg += <span class="string">&quot;防重令牌校验失败&quot;</span>;</span><br><span class="line">                    <span class="keyword">break</span>;</span><br><span class="line">                <span class="keyword">case</span> <span class="number">2</span>:</span><br><span class="line">                    msg += <span class="string">&quot;商品价格发生变化&quot;</span>;</span><br><span class="line">                    <span class="keyword">break</span>;</span><br><span class="line">            &#125;</span><br><span class="line">            attributes.addFlashAttribute(<span class="string">&quot;msg&quot;</span>, msg);</span><br><span class="line">            <span class="keyword">return</span> <span class="string">&quot;redirect:http://order.gulimall.com/toTrade&quot;</span>;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;<span class="keyword">catch</span> (Exception e)&#123;</span><br><span class="line">        <span class="keyword">if</span> (e <span class="keyword">instanceof</span> NoStockException)&#123;</span><br><span class="line">            <span class="type">String</span> <span class="variable">msg</span> <span class="operator">=</span> <span class="string">&quot;下单失败，商品无库存&quot;</span>;</span><br><span class="line">            attributes.addFlashAttribute(<span class="string">&quot;msg&quot;</span>, msg);</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">return</span> <span class="string">&quot;redirect:http://order.gulimall.com/toTrade&quot;</span>;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br></pre></td><td class="code"><pre><span class="line">    <span class="meta">@Transactional</span></span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="keyword">public</span> SubmitOrderResponseVo <span class="title function_">submitOrder</span><span class="params">(OrderSubmitVo submitVo)</span> &#123;</span><br><span class="line">        <span class="type">SubmitOrderResponseVo</span> <span class="variable">responseVo</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">SubmitOrderResponseVo</span>();</span><br><span class="line">        responseVo.setCode(<span class="number">0</span>);</span><br><span class="line">        <span class="comment">//1. 验证防重令牌</span></span><br><span class="line">        <span class="type">MemberResponseVo</span> <span class="variable">memberResponseVo</span> <span class="operator">=</span> LoginInterceptor.loginUser.get();</span><br><span class="line">        String script= <span class="string">&quot;if redis.call(&#x27;get&#x27;, KEYS[1]) == ARGV[1] then return redis.call(&#x27;del&#x27;, KEYS[1]) else return 0 end&quot;</span>;</span><br><span class="line">        <span class="type">Long</span> <span class="variable">execute</span> <span class="operator">=</span> redisTemplate.execute(<span class="keyword">new</span> <span class="title class_">DefaultRedisScript</span>&lt;&gt;(script,Long.class), Arrays.asList(OrderConstant.USER_ORDER_TOKEN_PREFIX + memberResponseVo.getId()), submitVo.getOrderToken());</span><br><span class="line">        <span class="keyword">if</span> (execute == <span class="number">0L</span>) &#123;</span><br><span class="line">            <span class="comment">//1.1 防重令牌验证失败</span></span><br><span class="line">            responseVo.setCode(<span class="number">1</span>);</span><br><span class="line">            <span class="keyword">return</span> responseVo;</span><br><span class="line">        &#125;<span class="keyword">else</span> &#123;</span><br><span class="line">            <span class="comment">//2. 创建订单、订单项</span></span><br><span class="line">            <span class="type">OrderCreateTo</span> <span class="variable">order</span> <span class="operator">=</span>createOrderTo(memberResponseVo,submitVo);</span><br><span class="line"></span><br><span class="line">            <span class="comment">//3. 验价</span></span><br><span class="line">            <span class="type">BigDecimal</span> <span class="variable">payAmount</span> <span class="operator">=</span> order.getOrder().getPayAmount();</span><br><span class="line">            <span class="type">BigDecimal</span> <span class="variable">payPrice</span> <span class="operator">=</span> submitVo.getPayPrice();</span><br><span class="line">            <span class="keyword">if</span> (Math.abs(payAmount.subtract(payPrice).doubleValue()) &lt; <span class="number">0.01</span>) &#123;</span><br><span class="line">                <span class="comment">//4. 保存订单</span></span><br><span class="line">                saveOrder(order);</span><br><span class="line">                <span class="comment">//5. 锁定库存</span></span><br><span class="line">                List&lt;OrderItemVo&gt; orderItemVos = order.getOrderItems().stream().map((item) -&gt; &#123;</span><br><span class="line">                    <span class="type">OrderItemVo</span> <span class="variable">orderItemVo</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">OrderItemVo</span>();</span><br><span class="line">                    orderItemVo.setSkuId(item.getSkuId());</span><br><span class="line">                    orderItemVo.setCount(item.getSkuQuantity());</span><br><span class="line">                    <span class="keyword">return</span> orderItemVo;</span><br><span class="line">                &#125;).collect(Collectors.toList());</span><br><span class="line">                <span class="type">R</span> <span class="variable">r</span> <span class="operator">=</span> wareFeignService.orderLockStock(orderItemVos);</span><br><span class="line">                <span class="comment">//5.1 锁定库存成功</span></span><br><span class="line">                <span class="keyword">if</span> (r.getCode()==<span class="number">0</span>)&#123;</span><br><span class="line"><span class="comment">//                    int i = 10 / 0;</span></span><br><span class="line">                    responseVo.setOrder(order.getOrder());</span><br><span class="line">                    responseVo.setCode(<span class="number">0</span>);</span><br><span class="line">                    <span class="keyword">return</span> responseVo;</span><br><span class="line">                &#125;<span class="keyword">else</span> &#123;</span><br><span class="line">                    <span class="comment">//5.1 锁定库存失败</span></span><br><span class="line">                    <span class="type">String</span> <span class="variable">msg</span> <span class="operator">=</span> (String) r.get(<span class="string">&quot;msg&quot;</span>);</span><br><span class="line">                    <span class="keyword">throw</span> <span class="keyword">new</span> <span class="title class_">NoStockException</span>(msg);</span><br><span class="line">                &#125;</span><br><span class="line"></span><br><span class="line">            &#125;<span class="keyword">else</span> &#123;</span><br><span class="line">                <span class="comment">//验价失败</span></span><br><span class="line">                responseVo.setCode(<span class="number">2</span>);</span><br><span class="line">                <span class="keyword">return</span> responseVo;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br></pre></td></tr></table></figure><h4 id="1-验证防重令牌"><a href="#1-验证防重令牌" class="headerlink" title="1) 验证防重令牌"></a>1) 验证防重令牌</h4><p>为防止在获取令牌、对比值和删除令牌之间发生错误导入令牌校验出错，我们必须使用脚本保证原子性操作</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="type">MemberResponseVo</span> <span class="variable">memberResponseVo</span> <span class="operator">=</span> LoginInterceptor.loginUser.get();</span><br><span class="line">String script= <span class="string">&quot;if redis.call(&#x27;get&#x27;, KEYS[1]) == ARGV[1] then return redis.call(&#x27;del&#x27;, KEYS[1]) else return 0 end&quot;</span>;</span><br><span class="line"><span class="type">Long</span> <span class="variable">execute</span> <span class="operator">=</span> redisTemplate.execute(<span class="keyword">new</span> <span class="title class_">DefaultRedisScript</span>&lt;&gt;(script,Long.class), Arrays.asList(OrderConstant.USER_ORDER_TOKEN_PREFIX + memberResponseVo.getId()), submitVo.getOrderToken());</span><br><span class="line"><span class="keyword">if</span> (execute == <span class="number">0L</span>) &#123;</span><br><span class="line">    <span class="comment">//1.1 防重令牌验证失败</span></span><br><span class="line">    responseVo.setCode(<span class="number">1</span>);</span><br><span class="line">    <span class="keyword">return</span> responseVo;</span><br></pre></td></tr></table></figure><h4 id="2-创建订单、订单项"><a href="#2-创建订单、订单项" class="headerlink" title="2) 创建订单、订单项"></a>2) 创建订单、订单项</h4><p>抽取模型</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">@Data</span></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">OrderCreateTo</span> &#123;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">private</span> OrderEntity order;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">private</span> List&lt;OrderItemEntity&gt; orderItems;</span><br><span class="line"></span><br><span class="line">    <span class="comment">/** 订单计算的应付价格 **/</span></span><br><span class="line">    <span class="keyword">private</span> BigDecimal payPrice;</span><br><span class="line"></span><br><span class="line">    <span class="comment">/** 运费 **/</span></span><br><span class="line">    <span class="keyword">private</span> BigDecimal fare;</span><br><span class="line"></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>创建订单、订单项</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//2. 创建订单、订单项</span></span><br><span class="line"><span class="type">OrderCreateTo</span> <span class="variable">order</span> <span class="operator">=</span>createOrderTo(memberResponseVo,submitVo);</span><br><span class="line"></span><br><span class="line"><span class="keyword">private</span> OrderCreateTo <span class="title function_">createOrderTo</span><span class="params">(MemberResponseVo memberResponseVo, OrderSubmitVo submitVo)</span> &#123;</span><br><span class="line">    <span class="comment">//2.1 用IdWorker生成订单号</span></span><br><span class="line">    <span class="type">String</span> <span class="variable">orderSn</span> <span class="operator">=</span> IdWorker.getTimeId();</span><br><span class="line">    <span class="comment">//2.2 构建订单</span></span><br><span class="line">    <span class="type">OrderEntity</span> <span class="variable">entity</span> <span class="operator">=</span> buildOrder(memberResponseVo, submitVo,orderSn);</span><br><span class="line">    <span class="comment">//2.3 构建订单项</span></span><br><span class="line">    List&lt;OrderItemEntity&gt; orderItemEntities = buildOrderItems(orderSn);</span><br><span class="line">    <span class="comment">//2.4 计算价格</span></span><br><span class="line">    compute(entity, orderItemEntities);</span><br><span class="line">    <span class="type">OrderCreateTo</span> <span class="variable">createTo</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">OrderCreateTo</span>();</span><br><span class="line">    createTo.setOrder(entity);</span><br><span class="line">    createTo.setOrderItems(orderItemEntities);</span><br><span class="line">    <span class="keyword">return</span> createTo;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>构建订单</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">private</span> OrderEntity <span class="title function_">buildOrder</span><span class="params">(MemberResponseVo memberResponseVo, OrderSubmitVo submitVo, String orderSn)</span> &#123;</span><br><span class="line"></span><br><span class="line">        <span class="type">OrderEntity</span> <span class="variable">orderEntity</span> <span class="operator">=</span><span class="keyword">new</span> <span class="title class_">OrderEntity</span>();</span><br><span class="line"></span><br><span class="line">        orderEntity.setOrderSn(orderSn);</span><br><span class="line"></span><br><span class="line">        <span class="comment">//1) 设置用户信息</span></span><br><span class="line">        orderEntity.setMemberId(memberResponseVo.getId());</span><br><span class="line">        orderEntity.setMemberUsername(memberResponseVo.getUsername());</span><br><span class="line"></span><br><span class="line">        <span class="comment">//2) 获取邮费和收件人信息并设置</span></span><br><span class="line">        <span class="type">FareVo</span> <span class="variable">fareVo</span> <span class="operator">=</span> wareFeignService.getFare(submitVo.getAddrId());</span><br><span class="line">        <span class="type">BigDecimal</span> <span class="variable">fare</span> <span class="operator">=</span> fareVo.getFare();</span><br><span class="line">        orderEntity.setFreightAmount(fare);</span><br><span class="line">        <span class="type">MemberAddressVo</span> <span class="variable">address</span> <span class="operator">=</span> fareVo.getAddress();</span><br><span class="line">        orderEntity.setReceiverName(address.getName());</span><br><span class="line">        orderEntity.setReceiverPhone(address.getPhone());</span><br><span class="line">        orderEntity.setReceiverPostCode(address.getPostCode());</span><br><span class="line">        orderEntity.setReceiverProvince(address.getProvince());</span><br><span class="line">        orderEntity.setReceiverCity(address.getCity());</span><br><span class="line">        orderEntity.setReceiverRegion(address.getRegion());</span><br><span class="line">        orderEntity.setReceiverDetailAddress(address.getDetailAddress());</span><br><span class="line"></span><br><span class="line">        <span class="comment">//3) 设置订单相关的状态信息</span></span><br><span class="line">        orderEntity.setStatus(OrderStatusEnum.CREATE_NEW.getCode());</span><br><span class="line">        orderEntity.setConfirmStatus(<span class="number">0</span>);</span><br><span class="line">        orderEntity.setAutoConfirmDay(<span class="number">7</span>);</span><br><span class="line"></span><br><span class="line">        <span class="keyword">return</span> orderEntity;</span><br><span class="line">    &#125;</span><br></pre></td></tr></table></figure><p>构建订单项</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">private</span> OrderItemEntity <span class="title function_">buildOrderItem</span><span class="params">(OrderItemVo item)</span> &#123;</span><br><span class="line">        <span class="type">OrderItemEntity</span> <span class="variable">orderItemEntity</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">OrderItemEntity</span>();</span><br><span class="line">        <span class="type">Long</span> <span class="variable">skuId</span> <span class="operator">=</span> item.getSkuId();</span><br><span class="line">        <span class="comment">//1) 设置sku相关属性</span></span><br><span class="line">        orderItemEntity.setSkuId(skuId);</span><br><span class="line">        orderItemEntity.setSkuName(item.getTitle());</span><br><span class="line">        orderItemEntity.setSkuAttrsVals(StringUtils.collectionToDelimitedString(item.getSkuAttrValues(), <span class="string">&quot;;&quot;</span>));</span><br><span class="line">        orderItemEntity.setSkuPic(item.getImage());</span><br><span class="line">        orderItemEntity.setSkuPrice(item.getPrice());</span><br><span class="line">        orderItemEntity.setSkuQuantity(item.getCount());</span><br><span class="line">        <span class="comment">//2) 通过skuId查询spu相关属性并设置</span></span><br><span class="line">        <span class="type">R</span> <span class="variable">r</span> <span class="operator">=</span> productFeignService.getSpuBySkuId(skuId);</span><br><span class="line">        <span class="keyword">if</span> (r.getCode() == <span class="number">0</span>) &#123;</span><br><span class="line">            <span class="type">SpuInfoTo</span> <span class="variable">spuInfo</span> <span class="operator">=</span> r.getData(<span class="keyword">new</span> <span class="title class_">TypeReference</span>&lt;SpuInfoTo&gt;() &#123;</span><br><span class="line">            &#125;);</span><br><span class="line">            orderItemEntity.setSpuId(spuInfo.getId());</span><br><span class="line">            orderItemEntity.setSpuName(spuInfo.getSpuName());</span><br><span class="line">            orderItemEntity.setSpuBrand(spuInfo.getBrandName());</span><br><span class="line">            orderItemEntity.setCategoryId(spuInfo.getCatalogId());</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="comment">//3) 商品的优惠信息(不做)</span></span><br><span class="line"></span><br><span class="line">        <span class="comment">//4) 商品的积分成长，为价格x数量</span></span><br><span class="line">        orderItemEntity.setGiftGrowth(item.getPrice().multiply(<span class="keyword">new</span> <span class="title class_">BigDecimal</span>(item.getCount())).intValue());</span><br><span class="line">        orderItemEntity.setGiftIntegration(item.getPrice().multiply(<span class="keyword">new</span> <span class="title class_">BigDecimal</span>(item.getCount())).intValue());</span><br><span class="line"></span><br><span class="line">        <span class="comment">//5) 订单项订单价格信息</span></span><br><span class="line">        orderItemEntity.setPromotionAmount(BigDecimal.ZERO);</span><br><span class="line">        orderItemEntity.setCouponAmount(BigDecimal.ZERO);</span><br><span class="line">        orderItemEntity.setIntegrationAmount(BigDecimal.ZERO);</span><br><span class="line"></span><br><span class="line">        <span class="comment">//6) 实际价格</span></span><br><span class="line">        <span class="type">BigDecimal</span> <span class="variable">origin</span> <span class="operator">=</span> orderItemEntity.getSkuPrice().multiply(<span class="keyword">new</span> <span class="title class_">BigDecimal</span>(orderItemEntity.getSkuQuantity()));</span><br><span class="line">        <span class="type">BigDecimal</span> <span class="variable">realPrice</span> <span class="operator">=</span> origin.subtract(orderItemEntity.getPromotionAmount())</span><br><span class="line">                .subtract(orderItemEntity.getCouponAmount())</span><br><span class="line">                .subtract(orderItemEntity.getIntegrationAmount());</span><br><span class="line">        orderItemEntity.setRealAmount(realPrice);</span><br><span class="line"></span><br><span class="line">        <span class="keyword">return</span> orderItemEntity;</span><br><span class="line">    &#125;</span><br></pre></td></tr></table></figure><p>计算订单价格</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">private</span> <span class="keyword">void</span> <span class="title function_">compute</span><span class="params">(OrderEntity entity, List&lt;OrderItemEntity&gt; orderItemEntities)</span> &#123;</span><br><span class="line">        <span class="comment">//总价</span></span><br><span class="line">        <span class="type">BigDecimal</span> <span class="variable">total</span> <span class="operator">=</span> BigDecimal.ZERO;</span><br><span class="line">        <span class="comment">//优惠价格</span></span><br><span class="line">        BigDecimal promotion=<span class="keyword">new</span> <span class="title class_">BigDecimal</span>(<span class="string">&quot;0.0&quot;</span>);</span><br><span class="line">        BigDecimal integration=<span class="keyword">new</span> <span class="title class_">BigDecimal</span>(<span class="string">&quot;0.0&quot;</span>);</span><br><span class="line">        BigDecimal coupon=<span class="keyword">new</span> <span class="title class_">BigDecimal</span>(<span class="string">&quot;0.0&quot;</span>);</span><br><span class="line">        <span class="comment">//积分</span></span><br><span class="line">        <span class="type">Integer</span> <span class="variable">integrationTotal</span> <span class="operator">=</span> <span class="number">0</span>;</span><br><span class="line">        <span class="type">Integer</span> <span class="variable">growthTotal</span> <span class="operator">=</span> <span class="number">0</span>;</span><br><span class="line"></span><br><span class="line">        <span class="keyword">for</span> (OrderItemEntity orderItemEntity : orderItemEntities) &#123;</span><br><span class="line">            total=total.add(orderItemEntity.getRealAmount());</span><br><span class="line">            promotion=promotion.add(orderItemEntity.getPromotionAmount());</span><br><span class="line">            integration=integration.add(orderItemEntity.getIntegrationAmount());</span><br><span class="line">            coupon=coupon.add(orderItemEntity.getCouponAmount());</span><br><span class="line">            integrationTotal += orderItemEntity.getGiftIntegration();</span><br><span class="line">            growthTotal += orderItemEntity.getGiftGrowth();</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        entity.setTotalAmount(total);</span><br><span class="line">        entity.setPromotionAmount(promotion);</span><br><span class="line">        entity.setIntegrationAmount(integration);</span><br><span class="line">        entity.setCouponAmount(coupon);</span><br><span class="line">        entity.setIntegration(integrationTotal);</span><br><span class="line">        entity.setGrowth(growthTotal);</span><br><span class="line"></span><br><span class="line">        <span class="comment">//付款价格=商品价格+运费</span></span><br><span class="line">        entity.setPayAmount(entity.getFreightAmount().add(total));</span><br><span class="line"></span><br><span class="line">        <span class="comment">//设置删除状态(0-未删除，1-已删除)</span></span><br><span class="line">        entity.setDeleteStatus(<span class="number">0</span>);</span><br><span class="line">    &#125;</span><br></pre></td></tr></table></figure><h4 id="3-验价"><a href="#3-验价" class="headerlink" title="3) 验价"></a>3) 验价</h4><p>将页面提交的价格和后台计算的价格进行对比，若不同则提示用户<code>商品价格发生变化</code></p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"><span class="type">BigDecimal</span> <span class="variable">payAmount</span> <span class="operator">=</span> order.getOrder().getPayAmount();</span><br><span class="line"><span class="type">BigDecimal</span> <span class="variable">payPrice</span> <span class="operator">=</span> submitVo.getPayPrice();</span><br><span class="line"><span class="keyword">if</span> (Math.abs(payAmount.subtract(payPrice).doubleValue()) &lt; <span class="number">0.01</span>) &#123;</span><br><span class="line"><span class="comment">/****************/</span></span><br><span class="line">&#125;<span class="keyword">else</span> &#123;</span><br><span class="line">    <span class="comment">//验价失败</span></span><br><span class="line">    responseVo.setCode(<span class="number">2</span>);</span><br><span class="line">    <span class="keyword">return</span> responseVo;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h4 id="4-保存订单"><a href="#4-保存订单" class="headerlink" title="4) 保存订单"></a>4) 保存订单</h4><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">private</span> <span class="keyword">void</span> <span class="title function_">saveOrder</span><span class="params">(OrderCreateTo orderCreateTo)</span> &#123;</span><br><span class="line">    <span class="type">OrderEntity</span> <span class="variable">order</span> <span class="operator">=</span> orderCreateTo.getOrder();</span><br><span class="line">    order.setCreateTime(<span class="keyword">new</span> <span class="title class_">Date</span>());</span><br><span class="line">    order.setModifyTime(<span class="keyword">new</span> <span class="title class_">Date</span>());</span><br><span class="line">    <span class="built_in">this</span>.save(order);</span><br><span class="line">    orderItemService.saveBatch(orderCreateTo.getOrderItems());</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h4 id="5-锁定库存"><a href="#5-锁定库存" class="headerlink" title="5) 锁定库存"></a>5) 锁定库存</h4><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><span class="line">List&lt;OrderItemVo&gt; orderItemVos = order.getOrderItems().stream().map((item) -&gt; &#123;</span><br><span class="line">                   <span class="type">OrderItemVo</span> <span class="variable">orderItemVo</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">OrderItemVo</span>();</span><br><span class="line">                   orderItemVo.setSkuId(item.getSkuId());</span><br><span class="line">                   orderItemVo.setCount(item.getSkuQuantity());</span><br><span class="line">                   <span class="keyword">return</span> orderItemVo;</span><br><span class="line">               &#125;).collect(Collectors.toList());</span><br><span class="line">               <span class="type">R</span> <span class="variable">r</span> <span class="operator">=</span> wareFeignService.orderLockStock(orderItemVos);</span><br><span class="line">               <span class="comment">//5.1 锁定库存成功</span></span><br><span class="line">               <span class="keyword">if</span> (r.getCode()==<span class="number">0</span>)&#123;</span><br><span class="line">                   responseVo.setOrder(order.getOrder());</span><br><span class="line">                   responseVo.setCode(<span class="number">0</span>);</span><br><span class="line">                   <span class="keyword">return</span> responseVo;</span><br><span class="line">               &#125;<span class="keyword">else</span> &#123;</span><br><span class="line">                   <span class="comment">//5.2 锁定库存失败</span></span><br><span class="line">                   <span class="type">String</span> <span class="variable">msg</span> <span class="operator">=</span> (String) r.get(<span class="string">&quot;msg&quot;</span>);</span><br><span class="line">                   <span class="keyword">throw</span> <span class="keyword">new</span> <span class="title class_">NoStockException</span>(msg);</span><br><span class="line">               &#125;</span><br></pre></td></tr></table></figure><ul><li>找出所有库存大于商品数的仓库</li><li>遍历所有满足条件的仓库，逐个尝试锁库存，若锁库存成功则退出遍历</li></ul><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">@RequestMapping(&quot;/lock/order&quot;)</span></span><br><span class="line"><span class="keyword">public</span> R <span class="title function_">orderLockStock</span><span class="params">(<span class="meta">@RequestBody</span> List&lt;OrderItemVo&gt; itemVos)</span> &#123;</span><br><span class="line">    <span class="keyword">try</span> &#123;</span><br><span class="line">        <span class="type">Boolean</span> <span class="variable">lock</span> <span class="operator">=</span> wareSkuService.orderLockStock(itemVos);</span><br><span class="line">        <span class="keyword">return</span> R.ok();</span><br><span class="line">    &#125; <span class="keyword">catch</span> (NoStockException e) &#123;</span><br><span class="line">        <span class="keyword">return</span> R.error(BizCodeEnum.NO_STOCK_EXCEPTION.getCode(), BizCodeEnum.NO_STOCK_EXCEPTION.getMsg());</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="meta">@Transactional</span></span><br><span class="line"><span class="meta">@Override</span></span><br><span class="line"><span class="keyword">public</span> Boolean <span class="title function_">orderLockStock</span><span class="params">(List&lt;OrderItemVo&gt; itemVos)</span> &#123;</span><br><span class="line">    List&lt;SkuLockVo&gt; lockVos = itemVos.stream().map((item) -&gt; &#123;</span><br><span class="line">        <span class="type">SkuLockVo</span> <span class="variable">skuLockVo</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">SkuLockVo</span>();</span><br><span class="line">        skuLockVo.setSkuId(item.getSkuId());</span><br><span class="line">        skuLockVo.setNum(item.getCount());</span><br><span class="line">        <span class="comment">//找出所有库存大于商品数的仓库</span></span><br><span class="line">        List&lt;Long&gt; wareIds = baseMapper.listWareIdsHasStock(item.getSkuId(), item.getCount());</span><br><span class="line">        skuLockVo.setWareIds(wareIds);</span><br><span class="line">        <span class="keyword">return</span> skuLockVo;</span><br><span class="line">    &#125;).collect(Collectors.toList());</span><br><span class="line"></span><br><span class="line">    <span class="keyword">for</span> (SkuLockVo lockVo : lockVos) &#123;</span><br><span class="line">        <span class="type">boolean</span> <span class="variable">lock</span> <span class="operator">=</span> <span class="literal">true</span>;</span><br><span class="line">        <span class="type">Long</span> <span class="variable">skuId</span> <span class="operator">=</span> lockVo.getSkuId();</span><br><span class="line">        List&lt;Long&gt; wareIds = lockVo.getWareIds();</span><br><span class="line">        <span class="comment">//如果没有满足条件的仓库，抛出异常</span></span><br><span class="line">        <span class="keyword">if</span> (wareIds == <span class="literal">null</span> || wareIds.size() == <span class="number">0</span>) &#123;</span><br><span class="line">            <span class="keyword">throw</span> <span class="keyword">new</span> <span class="title class_">NoStockException</span>(skuId);</span><br><span class="line">        &#125;<span class="keyword">else</span> &#123;</span><br><span class="line">            <span class="keyword">for</span> (Long wareId : wareIds) &#123;</span><br><span class="line">                Long count=baseMapper.lockWareSku(skuId, lockVo.getNum(), wareId);</span><br><span class="line">                <span class="keyword">if</span> (count==<span class="number">0</span>)&#123;</span><br><span class="line">                    lock=<span class="literal">false</span>;</span><br><span class="line">                &#125;<span class="keyword">else</span> &#123;</span><br><span class="line">                    lock = <span class="literal">true</span>;</span><br><span class="line">                    <span class="keyword">break</span>;</span><br><span class="line">                &#125;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">if</span> (!lock) <span class="keyword">throw</span> <span class="keyword">new</span> <span class="title class_">NoStockException</span>(skuId);</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> <span class="literal">true</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>这里通过异常机制控制事务回滚，如果在锁定库存失败则抛出<code>NoStockException</code>s,订单服务和库存服务都会回滚。</p><h3 id="（3）-分布式事务"><a href="#（3）-分布式事务" class="headerlink" title="（3） 分布式事务"></a>（3） 分布式事务</h3><p><strong>分布式系统中实现一致性的 raft 算法、paxos</strong><br><strong><a href="http://thesecretlivesofdata.com/raft/">http://thesecretlivesofdata.com/raft/</a></strong></p><p>分布式情况下，可能出现一些服务事务不一致的情况</p><ul><li>远程服务假失败</li><li>远程服务执行完成后，下面其他方法出现异常</li></ul><p><img src="https://cdn.jsdelivr.net/gh/zsxfa/CDN/img/md/2022/05/04/1651631106.png" alt="desc"></p><p><strong>分布式事务的解决方案</strong></p><p><strong>1、2PC 模式</strong></p><p>数据库支持的 2PC【2 phase commit 二阶提交】，又叫做 XA Transactions。<br>MySQL 从 5.5 版本开始支持，SQL Server 2005 开始支持，Oracle 7 开始支持。<br>其中，XA 是一个两阶段提交协议，该协议分为以下两个阶段：<br>第一阶段：事务协调器要求每个涉及到事务的数据库预提交(precommit)此操作，并反映是否可以提交.<br>第二阶段：事务协调器要求每个数据库提交数据。<br>其中，如果有任何一个数据库否决此次提交，那么所有数据库都会被要求回滚它们在此事务中的那部分信息。</p><p><img src="https://cdn.jsdelivr.net/gh/zsxfa/CDN/img/md/2022/05/04/1651633432.png" alt="desc"></p><p>    XA 协议比较简单，而且一旦商业数据库实现了 XA 协议，使用分布式事务的成本也比较低。<br>    XA 性能不理想，特别是在交易下单链路，往往并发量很高，XA 无法满足高并发场景<br>    XA 目前在商业数据库支持的比较理想，在 mysql 数据库中支持的不太理想，mysql 的XA 实现，没有记录 prepare 阶段日志，主备切换回导致主库与备库数据不一致。<br>    许多 nosql 也没有支持 XA，这让 XA 的应用场景变得非常狭隘。<br>    也有 3PC，引入了超时机制（无论协调者还是参与者，在向对方发送请求后，若长时间未收到回应则做出相应处理）</p><p><strong>2、柔性事务-TCC 事务</strong></p><p>刚性事务：遵循 ACID 原则，强一致性。<br>柔性事务：遵循 BASE 理论，最终一致性；<br>与刚性事务不同，柔性事务允许一定时间内，不同节点的数据不一致，但要求最终一致。</p><p><img src="https://cdn.jsdelivr.net/gh/zsxfa/CDN/img/md/2022/05/04/1651633487.png" alt="desc"></p><p>一阶段 prepare 行为：调用 自定义 的 prepare 逻辑。<br>二阶段 commit 行为：调用 自定义 的 commit 逻辑。<br>二阶段 rollback 行为：调用 自定义 的 rollback 逻辑。<br>所谓 TCC 模式，是指支持把 自定义 的分支事务纳入到全局事务的管理中。</p><p><img src="https://cdn.jsdelivr.net/gh/zsxfa/CDN/img/md/2022/05/04/1651633524.png" alt="desc"></p><p><strong>3、柔性事务-最大努力通知型方案</strong><br>按规律进行通知，不保证数据一定能通知成功，但会提供可查询操作接口进行核对。这种方案主要用在与第三方系统通讯时，比如：调用微信或支付宝支付后的支付结果通知。这种<br>方案也是结合 MQ 进行实现，例如：通过 MQ 发送 http 请求，设置最大通知次数。达到通知次数后即不再通知。<br>案例：银行通知、商户通知等（各大交易业务平台间的商户通知：多次通知、查询校对、对账文件），支付宝的支付成功异步回调</p><p><strong>4、柔性事务-可靠消息+最终一致性方案（异步确保型）</strong><br>实现：业务处理服务在业务事务提交之前，向实时消息服务请求发送消息，实时消息服务只记录消息数据，而不是真正的发送。业务处理服务在业务事务提交之后，向实时消息服务确认发送。只有在得到确认发送指令后，实时消息服务才会真正发送。<br>防止消息丢失：</p><ul><li>   1、做好消息确认机制（pulisher，consumer【手动 ack】）</li><li>   2、每一个发送的消息都在数据库做好记录。定期将失败的消息再次发送一遍</li></ul><h3 id="（4）使用seata解决分布式事务问题"><a href="#（4）使用seata解决分布式事务问题" class="headerlink" title="（4）使用seata解决分布式事务问题"></a>（4）使用seata解决分布式事务问题</h3><p>导入依赖</p><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>com.alibaba.cloud<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>spring-cloud-starter-alibaba-seata<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br></pre></td></tr></table></figure><p>环境搭建</p><p>下载senta-server-0.7.1并修改<code>register.conf</code>,使用nacos作为注册中心</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line">registry &#123;</span><br><span class="line"><span class="meta prompt_">  # </span><span class="language-bash">file 、nacos 、eureka、redis、zk、consul、etcd3、sofa</span></span><br><span class="line">  type = &quot;nacos&quot;</span><br><span class="line"></span><br><span class="line">  nacos &#123;</span><br><span class="line">    serverAddr = &quot;#:8848&quot;</span><br><span class="line">    namespace = &quot;public&quot;</span><br><span class="line">    cluster = &quot;default&quot;</span><br><span class="line">  &#125;</span><br></pre></td></tr></table></figure><p>将<code>register.conf</code>和<code>file.conf</code>复制到需要开启分布式事务的根目录，并修改<code>file.conf</code></p><p> <code>vgroup_mapping.$&#123;application.name&#125;-fescar-service-group = &quot;default&quot;</code></p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line">service &#123;</span><br><span class="line"><span class="meta prompt_">  #</span><span class="language-bash">vgroup-&gt;rgroup</span></span><br><span class="line">  vgroup_mapping.gulimall-ware-fescar-service-group = &quot;default&quot;</span><br><span class="line"><span class="meta prompt_">  #</span><span class="language-bash">only support single node</span></span><br><span class="line">  default.grouplist = &quot;127.0.0.1:8091&quot;</span><br><span class="line"><span class="meta prompt_">  #</span><span class="language-bash">degrade current not support</span></span><br><span class="line">  enableDegrade = false</span><br><span class="line"><span class="meta prompt_">  #</span><span class="language-bash"><span class="built_in">disable</span></span></span><br><span class="line">  disable = false</span><br><span class="line"><span class="meta prompt_">  #</span><span class="language-bash">unit ms,s,m,h,d represents milliseconds, seconds, minutes, hours, days, default permanent</span></span><br><span class="line">  max.commit.retry.timeout = &quot;-1&quot;</span><br><span class="line">  max.rollback.retry.timeout = &quot;-1&quot;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>使用seata包装数据源</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">@Configuration</span></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">MySeataConfig</span> &#123;</span><br><span class="line">    <span class="meta">@Autowired</span></span><br><span class="line">    DataSourceProperties dataSourceProperties;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Bean</span></span><br><span class="line">    <span class="keyword">public</span> DataSource <span class="title function_">dataSource</span><span class="params">(DataSourceProperties dataSourceProperties)</span> &#123;</span><br><span class="line"></span><br><span class="line">        <span class="type">HikariDataSource</span> <span class="variable">dataSource</span> <span class="operator">=</span> dataSourceProperties.initializeDataSourceBuilder().type(HikariDataSource.class).build();</span><br><span class="line">        <span class="keyword">if</span> (StringUtils.hasText(dataSourceProperties.getName())) &#123;</span><br><span class="line">            dataSource.setPoolName(dataSourceProperties.getName());</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">return</span> <span class="keyword">new</span> <span class="title class_">DataSourceProxy</span>(dataSource);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>在大事务的入口标记注解<code>@GlobalTransactional</code>开启全局事务，并且每个小事务标记注解<code>@Transactional</code></p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">@GlobalTransactional</span></span><br><span class="line"><span class="meta">@Transactional</span></span><br><span class="line"><span class="meta">@Override</span></span><br><span class="line"><span class="keyword">public</span> SubmitOrderResponseVo <span class="title function_">submitOrder</span><span class="params">(OrderSubmitVo submitVo)</span> &#123;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="5-使用消息队列实现最终一致性"><a href="#5-使用消息队列实现最终一致性" class="headerlink" title="5. 使用消息队列实现最终一致性"></a>5. 使用消息队列实现最终一致性</h2><h3 id="1-延迟队列的定义与实现"><a href="#1-延迟队列的定义与实现" class="headerlink" title="(1) 延迟队列的定义与实现"></a>(1) 延迟队列的定义与实现</h3><ul><li><p>定义：</p><p>延迟队列存储的对象肯定是对应的延时消息，所谓”延时消息”是指当消息被发送以后，并不想让消费者立即拿到消息，而是等待指定时间后，消费者才拿到这个消息进行消费。</p></li><li><p>实现：</p><p>rabbitmq可以通过设置队列的<code>TTL</code>和死信路由实现延迟队列</p><ul><li>TTL：</li></ul><blockquote><p>RabbitMQ可以针对Queue设置x-expires 或者 针对Message设置 x-message-ttl，来控制消息的生存时间，如果超时(两者同时设置以最先到期的时间为准)，则消息变为dead letter(死信)</p></blockquote><ul><li>死信路由DLX</li></ul><blockquote><p>RabbitMQ的Queue可以配置x-dead-letter-exchange 和x-dead-letter-routing-key（可选）两个参数，如果队列内出现了dead letter，则按照这两个参数重新路由转发到指定的队列。</p></blockquote><blockquote><ul><li>x-dead-letter-exchange：出现dead letter之后将dead letter重新发送到指定exchange</li></ul></blockquote></li></ul><blockquote><ul><li>x-dead-letter-routing-key：出现dead letter之后将dead letter重新按照指定的routing-key发送</li></ul></blockquote><p><img src="https://cdn.jsdelivr.net/gh/zsxfa/CDN/img/md/2022/05/08/1651972649.png" alt="desc"></p><p>针对订单模块创建以上消息队列，创建订单时消息会被发送至队列<code>order.delay.queue</code>，经过<code>TTL</code>的时间后消息会变成死信以<code>order.release.order</code>的路由键经交换机转发至队列<code>order.release.order.queue</code>，再通过监听该队列的消息来实现过期订单的处理</p><h3 id="2-延迟队列使用场景"><a href="#2-延迟队列使用场景" class="headerlink" title="(2) 延迟队列使用场景"></a>(2) 延迟队列使用场景</h3><p><img src="https://cdn.jsdelivr.net/gh/zsxfa/CDN/img/md/2022/05/08/1651972693.png" alt="desc"></p><p><strong>为什么不能用定时任务完成？</strong></p><p>如果恰好在一次扫描后完成业务逻辑，那么就会等待两个扫描周期才能扫到过期的订单，不能保证时效性</p><p><img src="https://cdn.jsdelivr.net/gh/zsxfa/CDN/img/md/2022/05/08/1651972731.png" alt="desc"></p><h3 id="3-定时关单与库存解锁主体逻辑"><a href="#3-定时关单与库存解锁主体逻辑" class="headerlink" title="(3) 定时关单与库存解锁主体逻辑"></a>(3) 定时关单与库存解锁主体逻辑</h3><ul><li>订单超时未支付触发订单过期状态修改与库存解锁</li></ul><blockquote><p>创建订单时消息会被发送至队列<code>order.delay.queue</code>，经过<code>TTL</code>的时间后消息会变成死信以<code>order.release.order</code>的路由键经交换机转发至队列<code>order.release.order.queue</code>，再通过监听该队列的消息来实现过期订单的处理</p><ul><li>如果该订单已支付，则无需处理</li><li>否则说明该订单已过期，修改该订单的状态并通过路由键<code>order.release.other</code>发送消息至队列<code>stock.release.stock.queue</code>进行库存解锁</li></ul></blockquote><ul><li>库存锁定后延迟检查是否需要解锁库存</li></ul><blockquote><p>在库存锁定后通过<code>路由键stock.locked</code>发送至<code>延迟队列stock.delay.queue</code>，延迟时间到，死信通过<code>路由键stock.release</code>转发至<code>stock.release.stock.queue</code>,通过监听该队列进行判断当前订单状态，来确定库存是否需要解锁</p></blockquote><ul><li>由于<code>关闭订单</code>和<code>库存解锁</code>都有可能被执行多次，因此要保证业务逻辑的幂等性，在执行业务是重新查询当前的状态进行判断</li><li>订单关闭和库存解锁都会进行库存解锁的操作，来确保业务异常或者订单过期时库存会被可靠解锁</li></ul><p><img src="https://cdn.jsdelivr.net/gh/zsxfa/CDN/img/md/2022/05/08/1651972796.png" alt="desc"></p><h3 id="4-创建业务交换机和队列"><a href="#4-创建业务交换机和队列" class="headerlink" title="(4) 创建业务交换机和队列"></a>(4) 创建业务交换机和队列</h3><ul><li>订单模块</li></ul><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">@Configuration</span></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">MyRabbitmqConfig</span> &#123;</span><br><span class="line">    <span class="meta">@Bean</span></span><br><span class="line">    <span class="keyword">public</span> Exchange <span class="title function_">orderEventExchange</span><span class="params">()</span> &#123;</span><br><span class="line">        <span class="comment">/**</span></span><br><span class="line"><span class="comment">         *   String name,</span></span><br><span class="line"><span class="comment">         *   boolean durable,</span></span><br><span class="line"><span class="comment">         *   boolean autoDelete,</span></span><br><span class="line"><span class="comment">         *   Map&lt;String, Object&gt; arguments</span></span><br><span class="line"><span class="comment">         */</span></span><br><span class="line">        <span class="keyword">return</span> <span class="keyword">new</span> <span class="title class_">TopicExchange</span>(<span class="string">&quot;order-event-exchange&quot;</span>, <span class="literal">true</span>, <span class="literal">false</span>);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * 延迟队列</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@return</span></span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="meta">@Bean</span></span><br><span class="line">    <span class="keyword">public</span> Queue <span class="title function_">orderDelayQueue</span><span class="params">()</span> &#123;</span><br><span class="line">       <span class="comment">/**</span></span><br><span class="line"><span class="comment">            Queue(String name,  队列名字</span></span><br><span class="line"><span class="comment">            boolean durable,  是否持久化</span></span><br><span class="line"><span class="comment">            boolean exclusive,  是否排他</span></span><br><span class="line"><span class="comment">            boolean autoDelete, 是否自动删除</span></span><br><span class="line"><span class="comment">            Map&lt;String, Object&gt; arguments) 属性</span></span><br><span class="line"><span class="comment">         */</span></span><br><span class="line">        HashMap&lt;String, Object&gt; arguments = <span class="keyword">new</span> <span class="title class_">HashMap</span>&lt;&gt;();</span><br><span class="line">        <span class="comment">//死信交换机</span></span><br><span class="line">        arguments.put(<span class="string">&quot;x-dead-letter-exchange&quot;</span>, <span class="string">&quot;order-event-exchange&quot;</span>);</span><br><span class="line">        <span class="comment">//死信路由键</span></span><br><span class="line">        arguments.put(<span class="string">&quot;x-dead-letter-routing-key&quot;</span>, <span class="string">&quot;order.release.order&quot;</span>);</span><br><span class="line">        arguments.put(<span class="string">&quot;x-message-ttl&quot;</span>, <span class="number">60000</span>); <span class="comment">// 消息过期时间 1分钟</span></span><br><span class="line">        <span class="keyword">return</span> <span class="keyword">new</span> <span class="title class_">Queue</span>(<span class="string">&quot;order.delay.queue&quot;</span>,<span class="literal">true</span>,<span class="literal">false</span>,<span class="literal">false</span>,arguments);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * 普通队列</span></span><br><span class="line"><span class="comment">     *</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@return</span></span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="meta">@Bean</span></span><br><span class="line">    <span class="keyword">public</span> Queue <span class="title function_">orderReleaseQueue</span><span class="params">()</span> &#123;</span><br><span class="line"></span><br><span class="line">        <span class="type">Queue</span> <span class="variable">queue</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">Queue</span>(<span class="string">&quot;order.release.order.queue&quot;</span>, <span class="literal">true</span>, <span class="literal">false</span>, <span class="literal">false</span>);</span><br><span class="line"></span><br><span class="line">        <span class="keyword">return</span> queue;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * 创建订单的binding</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@return</span></span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="meta">@Bean</span></span><br><span class="line">    <span class="keyword">public</span> Binding <span class="title function_">orderCreateBinding</span><span class="params">()</span> &#123;</span><br><span class="line">        <span class="comment">/**</span></span><br><span class="line"><span class="comment">         * String destination, 目的地（队列名或者交换机名字）</span></span><br><span class="line"><span class="comment">         * DestinationType destinationType, 目的地类型（Queue、Exhcange）</span></span><br><span class="line"><span class="comment">         * String exchange,</span></span><br><span class="line"><span class="comment">         * String routingKey,</span></span><br><span class="line"><span class="comment">         * Map&lt;String, Object&gt; arguments</span></span><br><span class="line"><span class="comment">         * */</span></span><br><span class="line">        <span class="keyword">return</span> <span class="keyword">new</span> <span class="title class_">Binding</span>(<span class="string">&quot;order.delay.queue&quot;</span>, Binding.DestinationType.QUEUE, <span class="string">&quot;order-event-exchange&quot;</span>, <span class="string">&quot;order.create.order&quot;</span>, <span class="literal">null</span>);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Bean</span></span><br><span class="line">    <span class="keyword">public</span> Binding <span class="title function_">orderReleaseBinding</span><span class="params">()</span> &#123;</span><br><span class="line">        <span class="keyword">return</span> <span class="keyword">new</span> <span class="title class_">Binding</span>(<span class="string">&quot;order.release.order.queue&quot;</span>,</span><br><span class="line">                Binding.DestinationType.QUEUE,</span><br><span class="line">                <span class="string">&quot;order-event-exchange&quot;</span>,</span><br><span class="line">                <span class="string">&quot;order.release.order&quot;</span>,</span><br><span class="line">                <span class="literal">null</span>);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Bean</span></span><br><span class="line">    <span class="keyword">public</span> Binding <span class="title function_">orderReleaseOrderBinding</span><span class="params">()</span> &#123;</span><br><span class="line">        <span class="keyword">return</span> <span class="keyword">new</span> <span class="title class_">Binding</span>(<span class="string">&quot;stock.release.stock.queue&quot;</span>,</span><br><span class="line">                Binding.DestinationType.QUEUE,</span><br><span class="line">                <span class="string">&quot;order-event-exchange&quot;</span>,</span><br><span class="line">                <span class="string">&quot;order.release.other.#&quot;</span>,</span><br><span class="line">                <span class="literal">null</span>);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><ul><li>库存模块</li></ul><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">@Configuration</span></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">MyRabbitmqConfig</span> &#123;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Bean</span></span><br><span class="line">    <span class="keyword">public</span> Exchange <span class="title function_">stockEventExchange</span><span class="params">()</span> &#123;</span><br><span class="line">        <span class="keyword">return</span> <span class="keyword">new</span> <span class="title class_">TopicExchange</span>(<span class="string">&quot;stock-event-exchange&quot;</span>, <span class="literal">true</span>, <span class="literal">false</span>);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * 延迟队列</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@return</span></span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="meta">@Bean</span></span><br><span class="line">    <span class="keyword">public</span> Queue <span class="title function_">stockDelayQueue</span><span class="params">()</span> &#123;</span><br><span class="line">        HashMap&lt;String, Object&gt; arguments = <span class="keyword">new</span> <span class="title class_">HashMap</span>&lt;&gt;();</span><br><span class="line">        arguments.put(<span class="string">&quot;x-dead-letter-exchange&quot;</span>, <span class="string">&quot;stock-event-exchange&quot;</span>);</span><br><span class="line">        arguments.put(<span class="string">&quot;x-dead-letter-routing-key&quot;</span>, <span class="string">&quot;stock.release&quot;</span>);</span><br><span class="line">        <span class="comment">// 消息过期时间 2分钟</span></span><br><span class="line">        arguments.put(<span class="string">&quot;x-message-ttl&quot;</span>, <span class="number">120000</span>);</span><br><span class="line">        <span class="keyword">return</span> <span class="keyword">new</span> <span class="title class_">Queue</span>(<span class="string">&quot;stock.delay.queue&quot;</span>, <span class="literal">true</span>, <span class="literal">false</span>, <span class="literal">false</span>, arguments);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * 普通队列，用于解锁库存</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@return</span></span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="meta">@Bean</span></span><br><span class="line">    <span class="keyword">public</span> Queue <span class="title function_">stockReleaseStockQueue</span><span class="params">()</span> &#123;</span><br><span class="line">        <span class="keyword">return</span> <span class="keyword">new</span> <span class="title class_">Queue</span>(<span class="string">&quot;stock.release.stock.queue&quot;</span>, <span class="literal">true</span>, <span class="literal">false</span>, <span class="literal">false</span>, <span class="literal">null</span>);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * 交换机和延迟队列绑定</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@return</span></span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="meta">@Bean</span></span><br><span class="line">    <span class="keyword">public</span> Binding <span class="title function_">stockLockedBinding</span><span class="params">()</span> &#123;</span><br><span class="line">        <span class="keyword">return</span> <span class="keyword">new</span> <span class="title class_">Binding</span>(<span class="string">&quot;stock.delay.queue&quot;</span>,</span><br><span class="line">                Binding.DestinationType.QUEUE,</span><br><span class="line">                <span class="string">&quot;stock-event-exchange&quot;</span>,</span><br><span class="line">                <span class="string">&quot;stock.locked&quot;</span>,</span><br><span class="line">                <span class="literal">null</span>);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * 交换机和普通队列绑定</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@return</span></span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="meta">@Bean</span></span><br><span class="line">    <span class="keyword">public</span> Binding <span class="title function_">stockReleaseBinding</span><span class="params">()</span> &#123;</span><br><span class="line">        <span class="keyword">return</span> <span class="keyword">new</span> <span class="title class_">Binding</span>(<span class="string">&quot;stock.release.stock.queue&quot;</span>,</span><br><span class="line">                Binding.DestinationType.QUEUE,</span><br><span class="line">                <span class="string">&quot;stock-event-exchange&quot;</span>,</span><br><span class="line">                <span class="string">&quot;stock.release.#&quot;</span>,</span><br><span class="line">                <span class="literal">null</span>);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="5-库存自动解锁"><a href="#5-库存自动解锁" class="headerlink" title="(5) 库存自动解锁"></a>(5) 库存自动解锁</h3><h4 id="1）库存锁定"><a href="#1）库存锁定" class="headerlink" title="1）库存锁定"></a>1）库存锁定</h4><p>在库存锁定是添加以下逻辑</p><ul><li>由于可能订单回滚的情况，所以为了能够得到库存锁定的信息，在锁定时需要记录库存工作单，其中包括订单信息和锁定库存时的信息(仓库id，商品id，锁了几件…)</li><li>在锁定成功后，向延迟队列发消息，带上库存锁定的相关信息</li></ul><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">@Transactional</span></span><br><span class="line"><span class="meta">@Override</span></span><br><span class="line"><span class="keyword">public</span> Boolean <span class="title function_">orderLockStock</span><span class="params">(WareSkuLockVo wareSkuLockVo)</span> &#123;</span><br><span class="line">    <span class="comment">//因为可能出现订单回滚后，库存锁定不回滚的情况，但订单已经回滚，得不到库存锁定信息，因此要有库存工作单</span></span><br><span class="line">    <span class="type">WareOrderTaskEntity</span> <span class="variable">taskEntity</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">WareOrderTaskEntity</span>();</span><br><span class="line">    taskEntity.setOrderSn(wareSkuLockVo.getOrderSn());</span><br><span class="line">    taskEntity.setCreateTime(<span class="keyword">new</span> <span class="title class_">Date</span>());</span><br><span class="line">    wareOrderTaskService.save(taskEntity);</span><br><span class="line"></span><br><span class="line">    List&lt;OrderItemVo&gt; itemVos = wareSkuLockVo.getLocks();</span><br><span class="line">    List&lt;SkuLockVo&gt; lockVos = itemVos.stream().map((item) -&gt; &#123;</span><br><span class="line">        <span class="type">SkuLockVo</span> <span class="variable">skuLockVo</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">SkuLockVo</span>();</span><br><span class="line">        skuLockVo.setSkuId(item.getSkuId());</span><br><span class="line">        skuLockVo.setNum(item.getCount());</span><br><span class="line">        List&lt;Long&gt; wareIds = baseMapper.listWareIdsHasStock(item.getSkuId(), item.getCount());</span><br><span class="line">        skuLockVo.setWareIds(wareIds);</span><br><span class="line">        <span class="keyword">return</span> skuLockVo;</span><br><span class="line">    &#125;).collect(Collectors.toList());</span><br><span class="line"></span><br><span class="line">    <span class="keyword">for</span> (SkuLockVo lockVo : lockVos) &#123;</span><br><span class="line">        <span class="type">boolean</span> <span class="variable">lock</span> <span class="operator">=</span> <span class="literal">true</span>;</span><br><span class="line">        <span class="type">Long</span> <span class="variable">skuId</span> <span class="operator">=</span> lockVo.getSkuId();</span><br><span class="line">        List&lt;Long&gt; wareIds = lockVo.getWareIds();</span><br><span class="line">        <span class="keyword">if</span> (wareIds == <span class="literal">null</span> || wareIds.size() == <span class="number">0</span>) &#123;</span><br><span class="line">            <span class="keyword">throw</span> <span class="keyword">new</span> <span class="title class_">NoStockException</span>(skuId);</span><br><span class="line">        &#125;<span class="keyword">else</span> &#123;</span><br><span class="line">            <span class="keyword">for</span> (Long wareId : wareIds) &#123;</span><br><span class="line">                Long count=baseMapper.lockWareSku(skuId, lockVo.getNum(), wareId);</span><br><span class="line">                <span class="keyword">if</span> (count==<span class="number">0</span>)&#123;</span><br><span class="line">                    lock=<span class="literal">false</span>;</span><br><span class="line">                &#125;<span class="keyword">else</span> &#123;</span><br><span class="line">                    <span class="comment">//锁定成功，保存工作单详情</span></span><br><span class="line">                    <span class="type">WareOrderTaskDetailEntity</span> <span class="variable">detailEntity</span> <span class="operator">=</span> WareOrderTaskDetailEntity.builder()</span><br><span class="line">                            .skuId(skuId)</span><br><span class="line">                            .skuName(<span class="string">&quot;&quot;</span>)</span><br><span class="line">                            .skuNum(lockVo.getNum())</span><br><span class="line">                            .taskId(taskEntity.getId())</span><br><span class="line">                            .wareId(wareId)</span><br><span class="line">                            .lockStatus(<span class="number">1</span>).build();</span><br><span class="line">                    wareOrderTaskDetailService.save(detailEntity);</span><br><span class="line">                    <span class="comment">//发送库存锁定消息至延迟队列</span></span><br><span class="line">                    <span class="type">StockLockedTo</span> <span class="variable">lockedTo</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">StockLockedTo</span>();</span><br><span class="line">                    lockedTo.setId(taskEntity.getId());</span><br><span class="line">                    <span class="type">StockDetailTo</span> <span class="variable">detailTo</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">StockDetailTo</span>();</span><br><span class="line">                    BeanUtils.copyProperties(detailEntity,detailTo);</span><br><span class="line">                    lockedTo.setDetailTo(detailTo);</span><br><span class="line">                    rabbitTemplate.convertAndSend(<span class="string">&quot;stock-event-exchange&quot;</span>,<span class="string">&quot;stock.locked&quot;</span>,lockedTo);</span><br><span class="line"></span><br><span class="line">                    lock = <span class="literal">true</span>;</span><br><span class="line">                    <span class="keyword">break</span>;</span><br><span class="line">                &#125;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">if</span> (!lock) <span class="keyword">throw</span> <span class="keyword">new</span> <span class="title class_">NoStockException</span>(skuId);</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> <span class="literal">true</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h4 id="2）监听队列"><a href="#2）监听队列" class="headerlink" title="2）监听队列"></a>2）监听队列</h4><ul><li>延迟队列会将过期的消息路由至<code>&quot;stock.release.stock.queue&quot;</code>,通过监听该队列实现库存的解锁</li><li>为保证消息的可靠到达，我们使用手动确认消息的模式，在解锁成功后确认消息，若出现异常则重新归队</li></ul><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">@Component</span></span><br><span class="line"><span class="meta">@RabbitListener(queues = &#123;&quot;stock.release.stock.queue&quot;&#125;)</span></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">StockReleaseListener</span> &#123;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Autowired</span></span><br><span class="line">    <span class="keyword">private</span> WareSkuService wareSkuService;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@RabbitHandler</span></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">handleStockLockedRelease</span><span class="params">(StockLockedTo stockLockedTo, Message message, Channel channel)</span> <span class="keyword">throws</span> IOException &#123;</span><br><span class="line">        log.info(<span class="string">&quot;************************收到库存解锁的消息********************************&quot;</span>);</span><br><span class="line">        <span class="keyword">try</span> &#123;</span><br><span class="line">            wareSkuService.unlock(stockLockedTo);</span><br><span class="line">            channel.basicAck(message.getMessageProperties().getDeliveryTag(), <span class="literal">false</span>);</span><br><span class="line">        &#125; <span class="keyword">catch</span> (Exception e) &#123;</span><br><span class="line">            channel.basicReject(message.getMessageProperties().getDeliveryTag(),<span class="literal">true</span>);</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h4 id="3）库存解锁"><a href="#3）库存解锁" class="headerlink" title="3）库存解锁"></a>3）库存解锁</h4><ul><li>如果工作单详情不为空，说明该库存锁定成功<ul><li>查询最新的订单状态，如果订单不存在，说明订单提交出现异常回滚，或者订单处于已取消的状态，我们都对已锁定的库存进行解锁</li></ul></li><li>如果工作单详情为空，说明库存未锁定，自然无需解锁</li><li>为保证幂等性，我们分别对订单的状态和工作单的状态都进行了判断，只有当订单过期且工作单显示当前库存处于锁定的状态时，才进行库存的解锁</li></ul><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">@Override</span></span><br><span class="line">   <span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">unlock</span><span class="params">(StockLockedTo stockLockedTo)</span> &#123;</span><br><span class="line">       <span class="type">StockDetailTo</span> <span class="variable">detailTo</span> <span class="operator">=</span> stockLockedTo.getDetailTo();</span><br><span class="line">       <span class="type">WareOrderTaskDetailEntity</span> <span class="variable">detailEntity</span> <span class="operator">=</span> wareOrderTaskDetailService.getById(detailTo.getId());</span><br><span class="line">       <span class="comment">//1.如果工作单详情不为空，说明该库存锁定成功</span></span><br><span class="line">       <span class="keyword">if</span> (detailEntity != <span class="literal">null</span>) &#123;</span><br><span class="line">           <span class="type">WareOrderTaskEntity</span> <span class="variable">taskEntity</span> <span class="operator">=</span> wareOrderTaskService.getById(stockLockedTo.getId());</span><br><span class="line">           <span class="type">R</span> <span class="variable">r</span> <span class="operator">=</span> orderFeignService.infoByOrderSn(taskEntity.getOrderSn());</span><br><span class="line">           <span class="keyword">if</span> (r.getCode() == <span class="number">0</span>) &#123;</span><br><span class="line">               <span class="type">OrderTo</span> <span class="variable">order</span> <span class="operator">=</span> r.getData(<span class="string">&quot;order&quot;</span>, <span class="keyword">new</span> <span class="title class_">TypeReference</span>&lt;OrderTo&gt;() &#123;</span><br><span class="line">               &#125;);</span><br><span class="line">               <span class="comment">//没有这个订单||订单状态已经取消 解锁库存</span></span><br><span class="line">               <span class="keyword">if</span> (order == <span class="literal">null</span>||order.getStatus()== OrderStatusEnum.CANCLED.getCode()) &#123;</span><br><span class="line">                   <span class="comment">//为保证幂等性，只有当工作单详情处于被锁定的情况下才进行解锁</span></span><br><span class="line">                   <span class="keyword">if</span> (detailEntity.getLockStatus()== WareTaskStatusEnum.Locked.getCode())&#123;</span><br><span class="line">                       unlockStock(detailTo.getSkuId(), detailTo.getSkuNum(), detailTo.getWareId(), detailEntity.getId());</span><br><span class="line">                   &#125;</span><br><span class="line">               &#125;</span><br><span class="line">           &#125;<span class="keyword">else</span> &#123;</span><br><span class="line">               <span class="keyword">throw</span> <span class="keyword">new</span> <span class="title class_">RuntimeException</span>(<span class="string">&quot;远程调用订单服务失败&quot;</span>);</span><br><span class="line">           &#125;</span><br><span class="line">       &#125;<span class="keyword">else</span> &#123;</span><br><span class="line">           <span class="comment">//无需解锁</span></span><br><span class="line">       &#125;</span><br><span class="line">   &#125;</span><br></pre></td></tr></table></figure><h3 id="6-定时关单"><a href="#6-定时关单" class="headerlink" title="(6) 定时关单"></a>(6) 定时关单</h3><h4 id="1-提交订单"><a href="#1-提交订单" class="headerlink" title="1) 提交订单"></a>1) 提交订单</h4><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">@Transactional</span></span><br><span class="line"><span class="meta">@Override</span></span><br><span class="line"><span class="keyword">public</span> SubmitOrderResponseVo <span class="title function_">submitOrder</span><span class="params">(OrderSubmitVo submitVo)</span> &#123;</span><br><span class="line"></span><br><span class="line">    <span class="comment">//提交订单的业务处理。。。</span></span><br><span class="line">    </span><br><span class="line">    <span class="comment">//发送消息到订单延迟队列，判断过期订单</span></span><br><span class="line">    rabbitTemplate.convertAndSend(<span class="string">&quot;order-event-exchange&quot;</span>,<span class="string">&quot;order.create.order&quot;</span>,order.getOrder());</span><br><span class="line"></span><br><span class="line">               </span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h4 id="2-监听队列"><a href="#2-监听队列" class="headerlink" title="2) 监听队列"></a>2) 监听队列</h4><p>创建订单的消息会进入延迟队列，最终发送至队列<code>order.release.order.queue</code>，因此我们对该队列进行监听，进行订单的关闭</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">@Component</span></span><br><span class="line"><span class="meta">@RabbitListener(queues = &#123;&quot;order.release.order.queue&quot;&#125;)</span></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">OrderCloseListener</span> &#123;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Autowired</span></span><br><span class="line">    <span class="keyword">private</span> OrderService orderService;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@RabbitHandler</span></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">listener</span><span class="params">(OrderEntity orderEntity, Message message, Channel channel)</span> <span class="keyword">throws</span> IOException &#123;</span><br><span class="line">        System.out.println(<span class="string">&quot;收到过期的订单信息，准备关闭订单&quot;</span> + orderEntity.getOrderSn());</span><br><span class="line">        <span class="type">long</span> <span class="variable">deliveryTag</span> <span class="operator">=</span> message.getMessageProperties().getDeliveryTag();</span><br><span class="line">        <span class="keyword">try</span> &#123;</span><br><span class="line">            orderService.closeOrder(orderEntity);</span><br><span class="line">            channel.basicAck(deliveryTag,<span class="literal">false</span>);</span><br><span class="line">        &#125; <span class="keyword">catch</span> (Exception e)&#123;</span><br><span class="line">            channel.basicReject(deliveryTag,<span class="literal">true</span>);</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h4 id="3-关闭订单"><a href="#3-关闭订单" class="headerlink" title="3) 关闭订单"></a>3) 关闭订单</h4><ul><li>由于要保证幂等性，因此要查询最新的订单状态判断是否需要关单</li><li>关闭订单后也需要解锁库存，因此发送消息进行库存、会员服务对应的解锁</li></ul><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">@Override</span></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">closeOrder</span><span class="params">(OrderEntity orderEntity)</span> &#123;</span><br><span class="line">    <span class="comment">//因为消息发送过来的订单已经是很久前的了，中间可能被改动，因此要查询最新的订单</span></span><br><span class="line">    <span class="type">OrderEntity</span> <span class="variable">newOrderEntity</span> <span class="operator">=</span> <span class="built_in">this</span>.getById(orderEntity.getId());</span><br><span class="line">    <span class="comment">//如果订单还处于新创建的状态，说明超时未支付，进行关单</span></span><br><span class="line">    <span class="keyword">if</span> (newOrderEntity.getStatus() == OrderStatusEnum.CREATE_NEW.getCode()) &#123;</span><br><span class="line">        <span class="type">OrderEntity</span> <span class="variable">updateOrder</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">OrderEntity</span>();</span><br><span class="line">        updateOrder.setId(newOrderEntity.getId());</span><br><span class="line">        updateOrder.setStatus(OrderStatusEnum.CANCLED.getCode());</span><br><span class="line">        <span class="built_in">this</span>.updateById(updateOrder);</span><br><span class="line"></span><br><span class="line">        <span class="comment">//关单后发送消息通知其他服务进行关单相关的操作，如解锁库存</span></span><br><span class="line">        <span class="type">OrderTo</span> <span class="variable">orderTo</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">OrderTo</span>();</span><br><span class="line">        BeanUtils.copyProperties(newOrderEntity,orderTo);</span><br><span class="line">        rabbitTemplate.convertAndSend(<span class="string">&quot;order-event-exchange&quot;</span>, <span class="string">&quot;order.release.other&quot;</span>,orderTo);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h4 id="4-解锁库存"><a href="#4-解锁库存" class="headerlink" title="4) 解锁库存"></a>4) 解锁库存</h4><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">@Slf4j</span></span><br><span class="line"><span class="meta">@Component</span></span><br><span class="line"><span class="meta">@RabbitListener(queues = &#123;&quot;stock.release.stock.queue&quot;&#125;)</span></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">StockReleaseListener</span> &#123;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Autowired</span></span><br><span class="line">    <span class="keyword">private</span> WareSkuService wareSkuService;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@RabbitHandler</span></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">handleStockLockedRelease</span><span class="params">(StockLockedTo stockLockedTo, Message message, Channel channel)</span> <span class="keyword">throws</span> IOException &#123;</span><br><span class="line">        log.info(<span class="string">&quot;************************收到库存解锁的消息********************************&quot;</span>);</span><br><span class="line">        <span class="keyword">try</span> &#123;</span><br><span class="line">            wareSkuService.unlock(stockLockedTo);</span><br><span class="line">            channel.basicAck(message.getMessageProperties().getDeliveryTag(), <span class="literal">false</span>);</span><br><span class="line">        &#125; <span class="keyword">catch</span> (Exception e) &#123;</span><br><span class="line">            channel.basicReject(message.getMessageProperties().getDeliveryTag(),<span class="literal">true</span>);</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@RabbitHandler</span></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">handleStockLockedRelease</span><span class="params">(OrderTo orderTo, Message message, Channel channel)</span> <span class="keyword">throws</span> IOException &#123;</span><br><span class="line">        log.info(<span class="string">&quot;************************从订单模块收到库存解锁的消息********************************&quot;</span>);</span><br><span class="line">        <span class="keyword">try</span> &#123;</span><br><span class="line">            wareSkuService.unlock(orderTo);</span><br><span class="line">            channel.basicAck(message.getMessageProperties().getDeliveryTag(), <span class="literal">false</span>);</span><br><span class="line">        &#125; <span class="keyword">catch</span> (Exception e) &#123;</span><br><span class="line">            channel.basicReject(message.getMessageProperties().getDeliveryTag(),<span class="literal">true</span>);</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">@Override</span></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">unlock</span><span class="params">(OrderTo orderTo)</span> &#123;</span><br><span class="line">    <span class="comment">//为防止重复解锁，需要重新查询工作单</span></span><br><span class="line">    <span class="type">String</span> <span class="variable">orderSn</span> <span class="operator">=</span> orderTo.getOrderSn();</span><br><span class="line">    <span class="type">WareOrderTaskEntity</span> <span class="variable">taskEntity</span> <span class="operator">=</span> wareOrderTaskService.getBaseMapper().selectOne((<span class="keyword">new</span> <span class="title class_">QueryWrapper</span>&lt;WareOrderTaskEntity&gt;().eq(<span class="string">&quot;order_sn&quot;</span>, orderSn)));</span><br><span class="line">    <span class="comment">//查询出当前订单相关的且处于锁定状态的工作单详情</span></span><br><span class="line">    List&lt;WareOrderTaskDetailEntity&gt; lockDetails = wareOrderTaskDetailService.list(<span class="keyword">new</span> <span class="title class_">QueryWrapper</span>&lt;WareOrderTaskDetailEntity&gt;().eq(<span class="string">&quot;task_id&quot;</span>, taskEntity.getId()).eq(<span class="string">&quot;lock_status&quot;</span>, WareTaskStatusEnum.Locked.getCode()));</span><br><span class="line">    <span class="keyword">for</span> (WareOrderTaskDetailEntity lockDetail : lockDetails) &#123;</span><br><span class="line">        unlockStock(lockDetail.getSkuId(),lockDetail.getSkuNum(),lockDetail.getWareId(),lockDetail.getId());</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="6-支付"><a href="#6-支付" class="headerlink" title="6. 支付"></a>6. 支付</h2><h3 id="1-支付宝加密原理"><a href="#1-支付宝加密原理" class="headerlink" title="(1) 支付宝加密原理"></a>(1) 支付宝加密原理</h3><ul><li>支付宝加密采用RSA非对称加密，分别在商户端和支付宝端有两对公钥和私钥</li><li>在发送订单数据时，直接使用明文，但会使用<code>商户私钥</code>加一个对应的签名，支付宝端会使用<code>商户公钥</code>对签名进行验签，只有数据明文和签名对应的时候才能说明传输正确</li><li>支付成功后，支付宝发送支付成功数据之外，还会使用<code>支付宝私钥</code>加一个对应的签名，商户端收到支付成功数据之后也会使用<code>支付宝公钥</code>延签，成功后才能确认</li></ul><p><img src="https://cdn.jsdelivr.net/gh/zsxfa/CDN/img/md/2022/05/08/1651972890.png" alt="desc"></p><h3 id="2-配置支付宝沙箱环境"><a href="#2-配置支付宝沙箱环境" class="headerlink" title="(2) 配置支付宝沙箱环境"></a>(2) 配置支付宝沙箱环境</h3><p><img src="https://cdn.jsdelivr.net/gh/zsxfa/CDN/img/md/2022/05/08/1651972957.png" alt="desc"></p><h3 id="3-环境搭建"><a href="#3-环境搭建" class="headerlink" title="(3) 环境搭建"></a>(3) 环境搭建</h3><p>导入支付宝sdk</p><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>com.alipay.sdk<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>alipay-sdk-java<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">version</span>&gt;</span>4.9.28.ALL<span class="tag">&lt;/<span class="name">version</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br></pre></td></tr></table></figure><p>抽取支付工具类并进行配置</p><p>成功调用该接口后，返回的数据就是支付页面的html，因此后续会使用<code>@ResponseBody</code></p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">@ConfigurationProperties(prefix = &quot;alipay&quot;)</span></span><br><span class="line"><span class="meta">@Component</span></span><br><span class="line"><span class="meta">@Data</span></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">AlipayTemplate</span> &#123;</span><br><span class="line"></span><br><span class="line">    <span class="comment">//在支付宝创建的应用的id</span></span><br><span class="line">    <span class="keyword">private</span>   <span class="type">String</span> <span class="variable">app_id</span> <span class="operator">=</span> <span class="string">&quot;2016102600763190&quot;</span>;</span><br><span class="line"></span><br><span class="line">    <span class="comment">// 商户私钥，您的PKCS8格式RSA2私钥</span></span><br><span class="line">    <span class="keyword">private</span> <span class="type">String</span> <span class="variable">merchant_private_key</span> <span class="operator">=</span> <span class="string">&quot;MjXN6Hnj8k2GAriRFt0BS9gjihbl9Rt38VMNbBi3Vt3Cy6TOwANLLJ/DfnYjRqwCG81fkyKlDqdsamdfCiTysCa0gQKBgQDYQ45LSRxAOTyM5NliBmtev0lbpDa7FqXL0UFgBel5VgA1Ysp0+6ex2n73NBHbaVPEXgNMnTdzU3WF9uHF4Gj0mfUzbVMbj/YkkHDOZHBggAjEHCB87IKowq/uAH/++Qes2GipHHCTJlG6yejdxhOsMZXdCRnidNx5yv9+2JI37QKBgQCw0xn7ZeRBIOXxW7xFJw1WecUV7yaL9OWqKRHat3lFtf1Qo/87cLl+KeObvQjjXuUe07UkrS05h6ijWyCFlBo2V7Cdb3qjq4atUwScKfTJONnrF+fwTX0L5QgyQeDX5a4yYp4pLmt6HKh34sI5S/RSWxDm7kpj+/MjCZgp6Xc51g==&quot;</span>;</span><br><span class="line"></span><br><span class="line">    <span class="comment">// 支付宝公钥,查看地址：https://openhome.alipay.com/platform/keyManage.htm 对应APPID下的支付宝公钥。</span></span><br><span class="line">    <span class="keyword">private</span> <span class="type">String</span> <span class="variable">alipay_public_key</span> <span class="operator">=</span> <span class="string">&quot;MIIBIjA74UKxt2F8VMIRKrRAAAuIMuawIsl4Ye+G12LK8P1ZLYy7ZJpgZ+Wv5nOs3DdoEazgCERj/ON8lM1KBHZOAV+TkrIcyi7cD1gfv4a1usikrUqm8/qhFvoiUfyHJFv1ymT7C4BI6aHzQ2zcUlSQPGoPl4C11tgnSkm3DlH2JZKgaIMcCOnNH+qctjNh9yIV9zat2qUiXbxmrCTtxAmiI3I+eVsUNwvwIDAQAB&quot;</span>;</span><br><span class="line"></span><br><span class="line">    <span class="comment">// 服务器[异步通知]页面路径  需http://格式的完整路径，不能加?id=123这类自定义参数，必须外网可以正常访问</span></span><br><span class="line">    <span class="comment">// 支付宝会悄悄的给我们发送一个请求，告诉我们支付成功的信息</span></span><br><span class="line">    <span class="keyword">private</span>  String notify_url=<span class="string">&quot;http://**.natappfree.cc/payed/notify&quot;</span>;</span><br><span class="line"></span><br><span class="line">    <span class="comment">// 页面跳转同步通知页面路径 需http://格式的完整路径，不能加?id=123这类自定义参数，必须外网可以正常访问</span></span><br><span class="line">    <span class="comment">//同步通知，支付成功，一般跳转到成功页</span></span><br><span class="line">    <span class="keyword">private</span>  String return_url=<span class="string">&quot;http://order.gulimall.com/memberOrder.html&quot;</span>;</span><br><span class="line"></span><br><span class="line">    <span class="comment">// 签名方式</span></span><br><span class="line">    <span class="keyword">private</span>  <span class="type">String</span> <span class="variable">sign_type</span> <span class="operator">=</span> <span class="string">&quot;RSA2&quot;</span>;</span><br><span class="line"></span><br><span class="line">    <span class="comment">// 字符编码格式</span></span><br><span class="line">    <span class="keyword">private</span>  <span class="type">String</span> <span class="variable">charset</span> <span class="operator">=</span> <span class="string">&quot;utf-8&quot;</span>;</span><br><span class="line"></span><br><span class="line">    <span class="comment">// 支付宝网关； https://openapi.alipaydev.com/gateway.do</span></span><br><span class="line">    <span class="keyword">private</span>  <span class="type">String</span> <span class="variable">gatewayUrl</span> <span class="operator">=</span> <span class="string">&quot;https://openapi.alipaydev.com/gateway.do&quot;</span>;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span>  String <span class="title function_">pay</span><span class="params">(PayVo vo)</span> <span class="keyword">throws</span> AlipayApiException &#123;</span><br><span class="line"></span><br><span class="line">        <span class="comment">//AlipayClient alipayClient = new DefaultAlipayClient(AlipayTemplate.gatewayUrl, AlipayTemplate.app_id, AlipayTemplate.merchant_private_key, &quot;json&quot;, AlipayTemplate.charset, AlipayTemplate.alipay_public_key, AlipayTemplate.sign_type);</span></span><br><span class="line">        <span class="comment">//1、根据支付宝的配置生成一个支付客户端</span></span><br><span class="line">        <span class="type">AlipayClient</span> <span class="variable">alipayClient</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">DefaultAlipayClient</span>(gatewayUrl,</span><br><span class="line">                app_id, merchant_private_key, <span class="string">&quot;json&quot;</span>,</span><br><span class="line">                charset, alipay_public_key, sign_type);</span><br><span class="line"></span><br><span class="line">        <span class="comment">//2、创建一个支付请求 //设置请求参数</span></span><br><span class="line">        <span class="type">AlipayTradePagePayRequest</span> <span class="variable">alipayRequest</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">AlipayTradePagePayRequest</span>();</span><br><span class="line">        alipayRequest.setReturnUrl(return_url);</span><br><span class="line">        alipayRequest.setNotifyUrl(notify_url);</span><br><span class="line"></span><br><span class="line">        <span class="comment">//商户订单号，商户网站订单系统中唯一订单号，必填</span></span><br><span class="line">        <span class="type">String</span> <span class="variable">out_trade_no</span> <span class="operator">=</span> vo.getOut_trade_no();</span><br><span class="line">        <span class="comment">//付款金额，必填</span></span><br><span class="line">        <span class="type">String</span> <span class="variable">total_amount</span> <span class="operator">=</span> vo.getTotal_amount();</span><br><span class="line">        <span class="comment">//订单名称，必填</span></span><br><span class="line">        <span class="type">String</span> <span class="variable">subject</span> <span class="operator">=</span> vo.getSubject();</span><br><span class="line">        <span class="comment">//商品描述，可空</span></span><br><span class="line">        <span class="type">String</span> <span class="variable">body</span> <span class="operator">=</span> vo.getBody();</span><br><span class="line"></span><br><span class="line">        alipayRequest.setBizContent(<span class="string">&quot;&#123;\&quot;out_trade_no\&quot;:\&quot;&quot;</span>+ out_trade_no +<span class="string">&quot;\&quot;,&quot;</span></span><br><span class="line">                + <span class="string">&quot;\&quot;total_amount\&quot;:\&quot;&quot;</span>+ total_amount +<span class="string">&quot;\&quot;,&quot;</span></span><br><span class="line">                + <span class="string">&quot;\&quot;subject\&quot;:\&quot;&quot;</span>+ subject +<span class="string">&quot;\&quot;,&quot;</span></span><br><span class="line">                + <span class="string">&quot;\&quot;body\&quot;:\&quot;&quot;</span>+ body +<span class="string">&quot;\&quot;,&quot;</span></span><br><span class="line">                + <span class="string">&quot;\&quot;product_code\&quot;:\&quot;FAST_INSTANT_TRADE_PAY\&quot;&#125;&quot;</span>);</span><br><span class="line"></span><br><span class="line">        <span class="type">String</span> <span class="variable">result</span> <span class="operator">=</span> alipayClient.pageExecute(alipayRequest).getBody();</span><br><span class="line"></span><br><span class="line">        <span class="comment">//会收到支付宝的响应，响应的是一个页面，只要浏览器显示这个页面，就会自动来到支付宝的收银台页面</span></span><br><span class="line">        System.out.println(<span class="string">&quot;支付宝的响应：&quot;</span>+result);</span><br><span class="line"></span><br><span class="line">        <span class="keyword">return</span> result;</span><br><span class="line"></span><br><span class="line">    &#125;</span><br></pre></td></tr></table></figure><h3 id="4-订单支付与同步通知"><a href="#4-订单支付与同步通知" class="headerlink" title="(4) 订单支付与同步通知"></a>(4) 订单支付与同步通知</h3><p>点击支付跳转到支付接口</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">@ResponseBody</span></span><br><span class="line"><span class="meta">@GetMapping(value = &quot;/aliPayOrder&quot;,produces = &quot;text/html&quot;)</span></span><br><span class="line"><span class="keyword">public</span> String <span class="title function_">aliPayOrder</span><span class="params">(<span class="meta">@RequestParam(&quot;orderSn&quot;)</span> String orderSn)</span> <span class="keyword">throws</span> AlipayApiException &#123;</span><br><span class="line">    System.out.println(<span class="string">&quot;接收到订单信息orderSn：&quot;</span>+orderSn);</span><br><span class="line">    <span class="comment">//获取当前订单并设置支付订单相关信息</span></span><br><span class="line">    <span class="type">PayVo</span> <span class="variable">payVo</span> <span class="operator">=</span> orderService.getOrderPay(orderSn);</span><br><span class="line">    <span class="type">String</span> <span class="variable">pay</span> <span class="operator">=</span> alipayTemplate.pay(payVo);</span><br><span class="line">    <span class="keyword">return</span> pay;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="meta">@Override</span></span><br><span class="line"><span class="keyword">public</span> PayVo <span class="title function_">getOrderPay</span><span class="params">(String orderSn)</span> &#123;</span><br><span class="line">    <span class="type">OrderEntity</span> <span class="variable">orderEntity</span> <span class="operator">=</span> <span class="built_in">this</span>.getOne(<span class="keyword">new</span> <span class="title class_">QueryWrapper</span>&lt;OrderEntity&gt;().eq(<span class="string">&quot;order_sn&quot;</span>, orderSn));</span><br><span class="line">    <span class="type">PayVo</span> <span class="variable">payVo</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">PayVo</span>();</span><br><span class="line">    <span class="comment">//交易号</span></span><br><span class="line">    payVo.setOut_trade_no(orderSn);</span><br><span class="line">    <span class="comment">//支付金额设置为两位小数，否则会报错</span></span><br><span class="line">    <span class="type">BigDecimal</span> <span class="variable">payAmount</span> <span class="operator">=</span> orderEntity.getPayAmount().setScale(<span class="number">2</span>, BigDecimal.ROUND_UP);</span><br><span class="line">    payVo.setTotal_amount(payAmount.toString());</span><br><span class="line"></span><br><span class="line">    List&lt;OrderItemEntity&gt; orderItemEntities = orderItemService.list(<span class="keyword">new</span> <span class="title class_">QueryWrapper</span>&lt;OrderItemEntity&gt;().eq(<span class="string">&quot;order_sn&quot;</span>, orderSn));</span><br><span class="line">    <span class="type">OrderItemEntity</span> <span class="variable">orderItemEntity</span> <span class="operator">=</span> orderItemEntities.get(<span class="number">0</span>);</span><br><span class="line">    <span class="comment">//订单名称</span></span><br><span class="line">    payVo.setSubject(orderItemEntity.getSkuName());</span><br><span class="line">    <span class="comment">//商品描述</span></span><br><span class="line">    payVo.setBody(orderItemEntity.getSkuAttrsVals());</span><br><span class="line">    <span class="keyword">return</span> payVo;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>设置成功回调地址为订单详情页</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// 页面跳转同步通知页面路径 需http://格式的完整路径，不能加?id=123这类自定义参数，必须外网可以正常访问</span></span><br><span class="line"> <span class="comment">//同步通知，支付成功，一般跳转到成功页</span></span><br><span class="line"> <span class="keyword">private</span>  String return_url=<span class="string">&quot;http://order.gulimall.com/memberOrder.html&quot;</span>;</span><br><span class="line"></span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment">  * 获取当前用户的所有订单</span></span><br><span class="line"><span class="comment">  * <span class="doctag">@return</span></span></span><br><span class="line"><span class="comment">  */</span></span><br><span class="line"> <span class="meta">@RequestMapping(&quot;/memberOrder.html&quot;)</span></span><br><span class="line"> <span class="keyword">public</span> String <span class="title function_">memberOrder</span><span class="params">(<span class="meta">@RequestParam(value = &quot;pageNum&quot;,required = false,defaultValue = &quot;0&quot;)</span> Integer pageNum,Model model)</span>&#123;</span><br><span class="line">     Map&lt;String, Object&gt; params = <span class="keyword">new</span> <span class="title class_">HashMap</span>&lt;&gt;();</span><br><span class="line">     params.put(<span class="string">&quot;page&quot;</span>, pageNum.toString());</span><br><span class="line">     <span class="comment">//分页查询当前用户的所有订单及对应订单项</span></span><br><span class="line">     <span class="type">PageUtils</span> <span class="variable">page</span> <span class="operator">=</span> orderService.getMemberOrderPage(params);</span><br><span class="line">     model.addAttribute(<span class="string">&quot;pageUtil&quot;</span>, page);</span><br><span class="line">     <span class="comment">//返回至订单详情页</span></span><br><span class="line">     <span class="keyword">return</span> <span class="string">&quot;list&quot;</span>;</span><br><span class="line"> &#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure><h3 id="5-异步通知"><a href="#5-异步通知" class="headerlink" title="(5) 异步通知"></a>(5) 异步通知</h3><ul><li>订单支付成功后支付宝会回调商户接口，这个时候需要修改订单状态</li><li>由于同步跳转可能由于网络问题失败，所以使用异步通知</li><li>支付宝使用的是最大努力通知方案，保障数据一致性，隔一段时间会通知商户支付成功，直到返回<code>success</code></li></ul><h4 id="1）内网穿透设置异步通知地址"><a href="#1）内网穿透设置异步通知地址" class="headerlink" title="1）内网穿透设置异步通知地址"></a>1）内网穿透设置异步通知地址</h4><ul><li><p>将外网映射到本地的<code>order.gulimall.com:80</code></p></li><li><p>由于回调的请求头不是<code>order.gulimall.com</code>，因此nginx转发到网关后找不到对应的服务，所以需要对nginx进行设置</p><p><img src="https://cdn.jsdelivr.net/gh/zsxfa/CDN/img/md/2022/05/08/1651973051.png" alt="desc"></p><p>将<code>/payed/notify</code>异步通知转发至订单服务</p></li></ul><p>设置异步通知的地址</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// 服务器[异步通知]页面路径  需http://格式的完整路径，不能加?id=123这类自定义参数，必须外网可以正常访问</span></span><br><span class="line"><span class="comment">// 支付宝会悄悄的给我们发送一个请求，告诉我们支付成功的信息</span></span><br><span class="line"><span class="keyword">private</span>  String notify_url=<span class="string">&quot;http://****.natappfree.cc/payed/notify&quot;</span>;</span><br></pre></td></tr></table></figure><h4 id="2）验证签名"><a href="#2）验证签名" class="headerlink" title="2）验证签名"></a>2）验证签名</h4><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">@PostMapping(&quot;/payed/notify&quot;)</span></span><br><span class="line"><span class="keyword">public</span> String <span class="title function_">handlerAlipay</span><span class="params">(HttpServletRequest request, PayAsyncVo payAsyncVo)</span> <span class="keyword">throws</span> AlipayApiException &#123;</span><br><span class="line">    System.out.println(<span class="string">&quot;收到支付宝异步通知******************&quot;</span>);</span><br><span class="line">    <span class="comment">// 只要收到支付宝的异步通知，返回 success 支付宝便不再通知</span></span><br><span class="line">    <span class="comment">// 获取支付宝POST过来反馈信息</span></span><br><span class="line">    <span class="comment">//TODO 需要验签</span></span><br><span class="line">    Map&lt;String, String&gt; params = <span class="keyword">new</span> <span class="title class_">HashMap</span>&lt;&gt;();</span><br><span class="line">    Map&lt;String, String[]&gt; requestParams = request.getParameterMap();</span><br><span class="line">    <span class="keyword">for</span> (String name : requestParams.keySet()) &#123;</span><br><span class="line">        String[] values = requestParams.get(name);</span><br><span class="line">        <span class="type">String</span> <span class="variable">valueStr</span> <span class="operator">=</span> <span class="string">&quot;&quot;</span>;</span><br><span class="line">        <span class="keyword">for</span> (<span class="type">int</span> <span class="variable">i</span> <span class="operator">=</span> <span class="number">0</span>; i &lt; values.length; i++) &#123;</span><br><span class="line">            valueStr = (i == values.length - <span class="number">1</span>) ? valueStr + values[i]</span><br><span class="line">                    : valueStr + values[i] + <span class="string">&quot;,&quot;</span>;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="comment">//乱码解决，这段代码在出现乱码时使用</span></span><br><span class="line">        <span class="comment">// valueStr = new String(valueStr.getBytes(&quot;ISO-8859-1&quot;), &quot;utf-8&quot;);</span></span><br><span class="line">        params.put(name, valueStr);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="type">boolean</span> <span class="variable">signVerified</span> <span class="operator">=</span> AlipaySignature.rsaCheckV1(params, alipayTemplate.getAlipay_public_key(),</span><br><span class="line">            alipayTemplate.getCharset(), alipayTemplate.getSign_type()); <span class="comment">//调用SDK验证签名</span></span><br><span class="line"></span><br><span class="line">    <span class="keyword">if</span> (signVerified)&#123;</span><br><span class="line">        System.out.println(<span class="string">&quot;支付宝异步通知验签成功&quot;</span>);</span><br><span class="line">        <span class="comment">//修改订单状态</span></span><br><span class="line">        orderService.handlerPayResult(payAsyncVo);</span><br><span class="line">        <span class="keyword">return</span> <span class="string">&quot;success&quot;</span>;</span><br><span class="line">    &#125;<span class="keyword">else</span> &#123;</span><br><span class="line">        System.out.println(<span class="string">&quot;支付宝异步通知验签失败&quot;</span>);</span><br><span class="line">        <span class="keyword">return</span> <span class="string">&quot;error&quot;</span>;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h4 id="3）修改订单状态与保存交易流水"><a href="#3）修改订单状态与保存交易流水" class="headerlink" title="3）修改订单状态与保存交易流水"></a>3）修改订单状态与保存交易流水</h4><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">@Override</span></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">handlerPayResult</span><span class="params">(PayAsyncVo payAsyncVo)</span> &#123;</span><br><span class="line">    <span class="comment">//保存交易流水</span></span><br><span class="line">    <span class="type">PaymentInfoEntity</span> <span class="variable">infoEntity</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">PaymentInfoEntity</span>();</span><br><span class="line">    <span class="type">String</span> <span class="variable">orderSn</span> <span class="operator">=</span> payAsyncVo.getOut_trade_no();</span><br><span class="line">    infoEntity.setOrderSn(orderSn);</span><br><span class="line">    infoEntity.setAlipayTradeNo(payAsyncVo.getTrade_no());</span><br><span class="line">    infoEntity.setSubject(payAsyncVo.getSubject());</span><br><span class="line">    <span class="type">String</span> <span class="variable">trade_status</span> <span class="operator">=</span> payAsyncVo.getTrade_status();</span><br><span class="line">    infoEntity.setPaymentStatus(trade_status);</span><br><span class="line">    infoEntity.setCreateTime(<span class="keyword">new</span> <span class="title class_">Date</span>());</span><br><span class="line">    infoEntity.setCallbackTime(payAsyncVo.getNotify_time());</span><br><span class="line">    paymentInfoService.save(infoEntity);</span><br><span class="line"></span><br><span class="line">    <span class="comment">//判断交易状态是否成功</span></span><br><span class="line">    <span class="keyword">if</span> (trade_status.equals(<span class="string">&quot;TRADE_SUCCESS&quot;</span>) || trade_status.equals(<span class="string">&quot;TRADE_FINISHED&quot;</span>)) &#123;</span><br><span class="line">        baseMapper.updateOrderStatus(orderSn, OrderStatusEnum.PAYED.getCode(), PayConstant.ALIPAY);</span><br><span class="line">    &#125;</span><br></pre></td></tr></table></figure><h4 id="4-异步通知的参数"><a href="#4-异步通知的参数" class="headerlink" title="4) 异步通知的参数"></a>4) 异步通知的参数</h4><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">@PostMapping(&quot;/payed/notify&quot;)</span></span><br><span class="line"><span class="keyword">public</span> String <span class="title function_">handlerAlipay</span><span class="params">(HttpServletRequest request)</span> &#123;</span><br><span class="line">    System.out.println(<span class="string">&quot;收到支付宝异步通知******************&quot;</span>);</span><br><span class="line">    Map&lt;String, String[]&gt; parameterMap = request.getParameterMap();</span><br><span class="line">    <span class="keyword">for</span> (String key : parameterMap.keySet()) &#123;</span><br><span class="line">        <span class="type">String</span> <span class="variable">value</span> <span class="operator">=</span> request.getParameter(key);</span><br><span class="line">        System.out.println(<span class="string">&quot;key:&quot;</span>+key+<span class="string">&quot;===========&gt;value:&quot;</span>+value);</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> <span class="string">&quot;success&quot;</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br></pre></td><td class="code"><pre><span class="line">收到支付宝异步通知******************</span><br><span class="line">key:gmt_create===========&gt;value:2020-10-18 09:13:26</span><br><span class="line">key:charset===========&gt;value:utf-8</span><br><span class="line">key:gmt_payment===========&gt;value:2020-10-18 09:13:34</span><br><span class="line">key:notify_time===========&gt;value:2020-10-18 09:13:35</span><br><span class="line">key:subject===========&gt;value:华为</span><br><span class="line">key:sign===========&gt;value:aqhKWzgzTLE84Scy5d8i3f+t9f7t7IE5tK/s5iHf3SdFQXPnTt6MEVtbr15ZXmITEo015nCbSXaUFJvLiAhWpvkNEd6ysraa+2dMgotuHPIHnIUFwvdk+U4Ez+2A4DBTJgmwtc5Ay8mYLpHLNR9ASuEmkxxK2F3Ov6MO0d+1DOjw9c/CCRRBWR8NHSJePAy/UxMzULLtpMELQ1KUVHLgZC5yym5TYSuRmltYpLHOuoJhJw8vGkh2+4FngvjtS7SBhEhR1GvJCYm1iXRFTNgP9Fmflw+EjxrDafCIA+r69ZqoJJ2Sk1hb4cBsXgNrFXR2Uj4+rQ1Ec74bIjT98f1KpA==</span><br><span class="line">key:buyer_id===========&gt;value:2088622954825223</span><br><span class="line">key:body===========&gt;value:上市年份：2020；内存：64G</span><br><span class="line">key:invoice_amount===========&gt;value:6300.00</span><br><span class="line">key:version===========&gt;value:1.0</span><br><span class="line">key:notify_id===========&gt;value:2020101800222091334025220507700182</span><br><span class="line">key:fund_bill_list===========&gt;value:[&#123;&quot;amount&quot;:&quot;6300.00&quot;,&quot;fundChannel&quot;:&quot;ALIPAYACCOUNT&quot;&#125;]</span><br><span class="line">key:notify_type===========&gt;value:trade_status_sync</span><br><span class="line">key:out_trade_no===========&gt;value:12345523123</span><br><span class="line">key:total_amount===========&gt;value:6300.00</span><br><span class="line">key:trade_status===========&gt;value:TRADE_SUCCESS</span><br><span class="line">key:trade_no===========&gt;value:2020101822001425220501264292</span><br><span class="line">key:auth_app_id===========&gt;value:2016102600763190</span><br><span class="line">key:receipt_amount===========&gt;value:6300.00</span><br><span class="line">key:point_amount===========&gt;value:0.00</span><br><span class="line">key:app_id===========&gt;value:2016102600763190</span><br><span class="line">key:buyer_pay_amount===========&gt;value:6300.00</span><br><span class="line">key:sign_type===========&gt;value:RSA2</span><br><span class="line">key:seller_id===========&gt;value:2088102181115314</span><br></pre></td></tr></table></figure><p>各参数详细意义见<a href="https://opendocs.alipay.com/open/194/103296">支付宝开放平台异步通知</a></p><h3 id="6-收单"><a href="#6-收单" class="headerlink" title="(6) 收单"></a>(6) 收单</h3><p>由于可能出现订单已经过期后，库存已经解锁，但支付成功后再修改订单状态的情况，需要设置支付有效时间，只有在有效期内才能进行支付</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">alipayRequest.setBizContent(<span class="string">&quot;&#123;\&quot;out_trade_no\&quot;:\&quot;&quot;</span>+ out_trade_no +<span class="string">&quot;\&quot;,&quot;</span></span><br><span class="line">        + <span class="string">&quot;\&quot;total_amount\&quot;:\&quot;&quot;</span>+ total_amount +<span class="string">&quot;\&quot;,&quot;</span></span><br><span class="line">        + <span class="string">&quot;\&quot;subject\&quot;:\&quot;&quot;</span>+ subject +<span class="string">&quot;\&quot;,&quot;</span></span><br><span class="line">        + <span class="string">&quot;\&quot;body\&quot;:\&quot;&quot;</span>+ body +<span class="string">&quot;\&quot;,&quot;</span></span><br><span class="line">        <span class="comment">//设置过期时间为1m</span></span><br><span class="line">        +<span class="string">&quot;\&quot;timeout_express\&quot;:\&quot;1m\&quot;,&quot;</span></span><br><span class="line">        + <span class="string">&quot;\&quot;product_code\&quot;:\&quot;FAST_INSTANT_TRADE_PAY\&quot;&#125;&quot;</span>);</span><br></pre></td></tr></table></figure><p>超时后订单显示</p><p><img src="https://cdn.jsdelivr.net/gh/zsxfa/CDN/img/md/2022/05/08/1651973086.png" alt="desc"></p><h1 id="秒杀服务"><a href="#秒杀服务" class="headerlink" title="秒杀服务"></a>秒杀服务</h1><h2 id="1-秒杀（高并发）系统关注的问题"><a href="#1-秒杀（高并发）系统关注的问题" class="headerlink" title="1. 秒杀（高并发）系统关注的问题"></a>1. 秒杀（高并发）系统关注的问题</h2><p><img src="https://cdn.jsdelivr.net/gh/zsxfa/CDN/img/md/2022/05/08/1651973246.png" alt="desc"></p><p><img src="https://cdn.jsdelivr.net/gh/zsxfa/CDN/img/md/2022/05/08/1651973308.png" alt="desc"></p><h2 id="2-秒杀架构设计"><a href="#2-秒杀架构设计" class="headerlink" title="2. 秒杀架构设计"></a>2. 秒杀架构设计</h2><h3 id="1-秒杀架构图"><a href="#1-秒杀架构图" class="headerlink" title="(1) 秒杀架构图"></a>(1) 秒杀架构图</h3><ul><li>项目独立部署，独立秒杀模块<code>gulimall-seckill</code></li><li>使用定时任务每天三点上架最新秒杀商品，削减高峰期压力</li><li>秒杀链接加密，为秒杀商品添加唯一商品随机码，在开始秒杀时才暴露接口</li><li>库存预热，先从数据库中扣除一部分库存以<code>redisson 信号量</code>的形式存储在redis中</li><li>队列削峰，秒杀成功后立即返回，然后以发送消息的形式创建订单</li></ul><p><img src="https://cdn.jsdelivr.net/gh/zsxfa/CDN/img/md/2022/05/08/1651973406.png" alt="desc"></p><h3 id="2-存储模型设计"><a href="#2-存储模型设计" class="headerlink" title="(2) 存储模型设计"></a>(2) 存储模型设计</h3><ul><li>秒杀场次存储的<code>List</code>可以当做<code>hash key</code>在<code>SECKILL_CHARE_PREFIX </code>中获得对应的商品数据</li></ul><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//存储的秒杀场次对应数据</span></span><br><span class="line"><span class="comment">//K: SESSION_CACHE_PREFIX + startTime + &quot;_&quot; + endTime</span></span><br><span class="line"><span class="comment">//V: sessionId+&quot;-&quot;+skuId的List</span></span><br><span class="line"><span class="keyword">private</span> <span class="keyword">final</span> <span class="type">String</span> <span class="variable">SESSION_CACHE_PREFIX</span> <span class="operator">=</span> <span class="string">&quot;seckill:sessions:&quot;</span>;</span><br><span class="line"></span><br><span class="line"><span class="comment">//存储的秒杀商品数据</span></span><br><span class="line"><span class="comment">//K: 固定值SECKILL_CHARE_PREFIX</span></span><br><span class="line"><span class="comment">//V: hash，k为sessionId+&quot;-&quot;+skuId，v为对应的商品信息SeckillSkuRedisTo</span></span><br><span class="line"><span class="keyword">private</span> <span class="keyword">final</span> <span class="type">String</span> <span class="variable">SECKILL_CHARE_PREFIX</span> <span class="operator">=</span> <span class="string">&quot;seckill:skus&quot;</span>;</span><br><span class="line"></span><br><span class="line"><span class="comment">//K: SKU_STOCK_SEMAPHORE+商品随机码</span></span><br><span class="line"><span class="comment">//V: 秒杀的库存件数</span></span><br><span class="line"><span class="keyword">private</span> <span class="keyword">final</span> <span class="type">String</span> <span class="variable">SKU_STOCK_SEMAPHORE</span> <span class="operator">=</span> <span class="string">&quot;seckill:stock:&quot;</span>;    <span class="comment">//+商品随机码</span></span><br></pre></td></tr></table></figure><ul><li><p>存储后的效果</p><p><img src="https://cdn.jsdelivr.net/gh/zsxfa/CDN/img/md/2022/05/08/1651973552.png" alt="desc"></p></li><li><p>用来存储的to</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">@Data</span></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">SeckillSkuRedisTo</span> &#123;</span><br><span class="line">    <span class="keyword">private</span> Long id;</span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * 活动id</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="keyword">private</span> Long promotionId;</span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * 活动场次id</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="keyword">private</span> Long promotionSessionId;</span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * 商品id</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="keyword">private</span> Long skuId;</span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * 秒杀价格</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="keyword">private</span> BigDecimal seckillPrice;</span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * 秒杀总量</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="keyword">private</span> Integer seckillCount;</span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * 每人限购数量</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="keyword">private</span> Integer seckillLimit;</span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * 排序</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="keyword">private</span> Integer seckillSort;</span><br><span class="line">    <span class="comment">//以上都为SeckillSkuRelationEntity的属性</span></span><br><span class="line"></span><br><span class="line">    <span class="comment">//skuInfo</span></span><br><span class="line">    <span class="keyword">private</span> SkuInfoVo skuInfoVo;</span><br><span class="line"></span><br><span class="line">    <span class="comment">//当前商品秒杀的开始时间</span></span><br><span class="line">    <span class="keyword">private</span> Long startTime;</span><br><span class="line"></span><br><span class="line">    <span class="comment">//当前商品秒杀的结束时间</span></span><br><span class="line">    <span class="keyword">private</span> Long endTime;</span><br><span class="line"></span><br><span class="line">    <span class="comment">//当前商品秒杀的随机码</span></span><br><span class="line">    <span class="keyword">private</span> String randomCode;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></li></ul><h2 id="3-商品上架"><a href="#3-商品上架" class="headerlink" title="3. 商品上架"></a>3. 商品上架</h2><h3 id="1-定时上架"><a href="#1-定时上架" class="headerlink" title="(1) 定时上架"></a>(1) 定时上架</h3><ul><li><p>开启对定时任务的支持</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">@EnableAsync</span> <span class="comment">//开启对异步的支持，防止定时任务之间相互阻塞</span></span><br><span class="line"><span class="meta">@EnableScheduling</span> <span class="comment">//开启对定时任务的支持</span></span><br><span class="line"><span class="meta">@Configuration</span></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">ScheduledConfig</span> &#123;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></li><li><p>每天凌晨三点远程调用<code>coupon</code>服务上架最近三天的秒杀商品</p></li><li><p>由于在分布式情况下该方法可能同时被调用多次，因此加入分布式锁，同时只有一个服务可以调用该方法</p></li></ul><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//秒杀商品上架功能的锁</span></span><br><span class="line">  <span class="keyword">private</span> <span class="keyword">final</span> <span class="type">String</span> <span class="variable">upload_lock</span> <span class="operator">=</span> <span class="string">&quot;seckill:upload:lock&quot;</span>;</span><br><span class="line"></span><br><span class="line">  <span class="comment">/**</span></span><br><span class="line"><span class="comment">   * 定时任务</span></span><br><span class="line"><span class="comment">   * 每天三点上架最近三天的秒杀商品</span></span><br><span class="line"><span class="comment">   */</span></span><br><span class="line">  <span class="meta">@Async</span></span><br><span class="line">  <span class="meta">@Scheduled(cron = &quot;0 0 3 * * ?&quot;)</span></span><br><span class="line">  <span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">uploadSeckillSkuLatest3Days</span><span class="params">()</span> &#123;</span><br><span class="line">      <span class="comment">//为避免分布式情况下多服务同时上架的情况，使用分布式锁</span></span><br><span class="line">      <span class="type">RLock</span> <span class="variable">lock</span> <span class="operator">=</span> redissonClient.getLock(upload_lock);</span><br><span class="line">      <span class="keyword">try</span> &#123;</span><br><span class="line">          lock.lock(<span class="number">10</span>, TimeUnit.SECONDS);</span><br><span class="line">          secKillService.uploadSeckillSkuLatest3Days();</span><br><span class="line">      &#125;<span class="keyword">catch</span> (Exception e)&#123;</span><br><span class="line">          e.printStackTrace();</span><br><span class="line">      &#125;<span class="keyword">finally</span> &#123;</span><br><span class="line">          lock.unlock();</span><br><span class="line">      &#125;</span><br><span class="line">  &#125;</span><br><span class="line"></span><br><span class="line"><span class="meta">@Override</span></span><br><span class="line">  <span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">uploadSeckillSkuLatest3Days</span><span class="params">()</span> &#123;</span><br><span class="line">      <span class="type">R</span> <span class="variable">r</span> <span class="operator">=</span> couponFeignService.getSeckillSessionsIn3Days();</span><br><span class="line">      <span class="keyword">if</span> (r.getCode() == <span class="number">0</span>) &#123;</span><br><span class="line">          List&lt;SeckillSessionWithSkusVo&gt; sessions = r.getData(<span class="keyword">new</span> <span class="title class_">TypeReference</span>&lt;List&lt;SeckillSessionWithSkusVo&gt;&gt;() &#123;</span><br><span class="line">          &#125;);</span><br><span class="line">          <span class="comment">//在redis中分别保存秒杀场次信息和场次对应的秒杀商品信息</span></span><br><span class="line">          saveSecKillSession(sessions);</span><br><span class="line">          saveSecKillSku(sessions);</span><br><span class="line">      &#125;</span><br><span class="line">  &#125;</span><br></pre></td></tr></table></figure><p><img src="https://cdn.jsdelivr.net/gh/zsxfa/CDN/img/md/2022/05/08/1652013355.png" alt="desc"></p><h3 id="2-获取最近三天的秒杀信息"><a href="#2-获取最近三天的秒杀信息" class="headerlink" title="(2) 获取最近三天的秒杀信息"></a>(2) 获取最近三天的秒杀信息</h3><ul><li>获取最近三天的秒杀场次信息，再通过秒杀场次id查询对应的商品信息</li></ul><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">@Override</span></span><br><span class="line"><span class="keyword">public</span> List&lt;SeckillSessionEntity&gt; <span class="title function_">getSeckillSessionsIn3Days</span><span class="params">()</span> &#123;</span><br><span class="line">    QueryWrapper&lt;SeckillSessionEntity&gt; queryWrapper = <span class="keyword">new</span> <span class="title class_">QueryWrapper</span>&lt;SeckillSessionEntity&gt;()</span><br><span class="line">            .between(<span class="string">&quot;start_time&quot;</span>, getStartTime(), getEndTime());</span><br><span class="line">    List&lt;SeckillSessionEntity&gt; seckillSessionEntities = <span class="built_in">this</span>.list(queryWrapper);</span><br><span class="line">    List&lt;SeckillSessionEntity&gt; list = seckillSessionEntities.stream().map(session -&gt; &#123;</span><br><span class="line">        List&lt;SeckillSkuRelationEntity&gt; skuRelationEntities = seckillSkuRelationService.list(<span class="keyword">new</span> <span class="title class_">QueryWrapper</span>&lt;SeckillSkuRelationEntity&gt;().eq(<span class="string">&quot;promotion_session_id&quot;</span>, session.getId()));</span><br><span class="line">        session.setRelations(skuRelationEntities);</span><br><span class="line">        <span class="keyword">return</span> session;</span><br><span class="line">    &#125;).collect(Collectors.toList());</span><br><span class="line"></span><br><span class="line">    <span class="keyword">return</span> list;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">//当前天数的 00:00:00</span></span><br><span class="line"><span class="keyword">private</span> String <span class="title function_">getStartTime</span><span class="params">()</span> &#123;</span><br><span class="line">    <span class="type">LocalDate</span> <span class="variable">now</span> <span class="operator">=</span> LocalDate.now();</span><br><span class="line">    <span class="type">LocalDateTime</span> <span class="variable">time</span> <span class="operator">=</span> now.atTime(LocalTime.MIN);</span><br><span class="line">    <span class="type">String</span> <span class="variable">format</span> <span class="operator">=</span> time.format(DateTimeFormatter.ofPattern(<span class="string">&quot;yyyy-MM-dd HH:mm:ss&quot;</span>));</span><br><span class="line">    <span class="keyword">return</span> format;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">//当前天数+2 23:59:59..</span></span><br><span class="line"><span class="keyword">private</span> String <span class="title function_">getEndTime</span><span class="params">()</span> &#123;</span><br><span class="line">    <span class="type">LocalDate</span> <span class="variable">now</span> <span class="operator">=</span> LocalDate.now();</span><br><span class="line">    <span class="type">LocalDateTime</span> <span class="variable">time</span> <span class="operator">=</span> now.plusDays(<span class="number">2</span>).atTime(LocalTime.MAX);</span><br><span class="line">    <span class="type">String</span> <span class="variable">format</span> <span class="operator">=</span> time.format(DateTimeFormatter.ofPattern(<span class="string">&quot;yyyy-MM-dd HH:mm:ss&quot;</span>));</span><br><span class="line">    <span class="keyword">return</span> format;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="3-在redis中保存秒杀场次信息"><a href="#3-在redis中保存秒杀场次信息" class="headerlink" title="(3) 在redis中保存秒杀场次信息"></a>(3) 在redis中保存秒杀场次信息</h3><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">private</span> <span class="keyword">void</span> <span class="title function_">saveSecKillSession</span><span class="params">(List&lt;SeckillSessionWithSkusVo&gt; sessions)</span> &#123;</span><br><span class="line">    sessions.stream().forEach(session-&gt;&#123;</span><br><span class="line">        <span class="type">String</span> <span class="variable">key</span> <span class="operator">=</span> SESSION_CACHE_PREFIX + session.getStartTime().getTime() + <span class="string">&quot;_&quot;</span> + session.getEndTime().getTime();</span><br><span class="line">        <span class="comment">//当前活动信息未保存过</span></span><br><span class="line">        <span class="keyword">if</span> (!redisTemplate.hasKey(key))&#123;</span><br><span class="line">            List&lt;String&gt; values = session.getRelations().stream()</span><br><span class="line">                    .map(sku -&gt; sku.getPromotionSessionId() +<span class="string">&quot;-&quot;</span>+ sku.getSkuId())</span><br><span class="line">                    .collect(Collectors.toList());</span><br><span class="line">            redisTemplate.opsForList().leftPushAll(key,values);</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="4-在redis中保存秒杀商品信息"><a href="#4-在redis中保存秒杀商品信息" class="headerlink" title="(4) 在redis中保存秒杀商品信息"></a>(4) 在redis中保存秒杀商品信息</h3><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">private</span> <span class="keyword">void</span> <span class="title function_">saveSecKillSku</span><span class="params">(List&lt;SeckillSessionWithSkusVo&gt; sessions)</span> &#123;</span><br><span class="line">    BoundHashOperations&lt;String, Object, Object&gt; ops = redisTemplate.boundHashOps(SECKILL_CHARE_PREFIX);</span><br><span class="line">    sessions.stream().forEach(session-&gt;&#123;</span><br><span class="line">        session.getRelations().stream().forEach(sku-&gt;&#123;</span><br><span class="line">            <span class="type">String</span> <span class="variable">key</span> <span class="operator">=</span> sku.getPromotionSessionId() +<span class="string">&quot;-&quot;</span>+ sku.getSkuId();</span><br><span class="line">            <span class="keyword">if</span> (!ops.hasKey(key))&#123;</span><br><span class="line">                <span class="type">SeckillSkuRedisTo</span> <span class="variable">redisTo</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">SeckillSkuRedisTo</span>();</span><br><span class="line">                <span class="comment">//1. 保存SeckillSkuVo信息</span></span><br><span class="line">                BeanUtils.copyProperties(sku,redisTo);</span><br><span class="line">                <span class="comment">//2. 保存开始结束时间</span></span><br><span class="line">                redisTo.setStartTime(session.getStartTime().getTime());</span><br><span class="line">                redisTo.setEndTime(session.getEndTime().getTime());</span><br><span class="line">                <span class="comment">//3. 远程查询sku信息并保存</span></span><br><span class="line">                <span class="type">R</span> <span class="variable">r</span> <span class="operator">=</span> productFeignService.info(sku.getSkuId());</span><br><span class="line">                <span class="keyword">if</span> (r.getCode() == <span class="number">0</span>) &#123;</span><br><span class="line">                    <span class="type">SkuInfoVo</span> <span class="variable">skuInfo</span> <span class="operator">=</span> r.getData(<span class="string">&quot;skuInfo&quot;</span>, <span class="keyword">new</span> <span class="title class_">TypeReference</span>&lt;SkuInfoVo&gt;() &#123;</span><br><span class="line">                    &#125;);</span><br><span class="line">                    redisTo.setSkuInfoVo(skuInfo);</span><br><span class="line">                &#125;</span><br><span class="line">                <span class="comment">//4. 生成商品随机码，防止恶意攻击</span></span><br><span class="line">                <span class="type">String</span> <span class="variable">token</span> <span class="operator">=</span> UUID.randomUUID().toString().replace(<span class="string">&quot;-&quot;</span>, <span class="string">&quot;&quot;</span>);</span><br><span class="line">                redisTo.setRandomCode(token);</span><br><span class="line">                <span class="comment">//5. 序列化为json并保存</span></span><br><span class="line">                <span class="type">String</span> <span class="variable">jsonString</span> <span class="operator">=</span> JSON.toJSONString(redisTo);</span><br><span class="line">                ops.put(key,jsonString);</span><br><span class="line">                <span class="comment">//6. 使用库存作为Redisson信号量限制库存</span></span><br><span class="line">                <span class="type">RSemaphore</span> <span class="variable">semaphore</span> <span class="operator">=</span> redissonClient.getSemaphore(SKU_STOCK_SEMAPHORE + token);</span><br><span class="line">                semaphore.trySetPermits(sku.getSeckillCount());</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;);</span><br><span class="line">    &#125;);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="4-获取当前秒杀商品"><a href="#4-获取当前秒杀商品" class="headerlink" title="4. 获取当前秒杀商品"></a>4. 获取当前秒杀商品</h2><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">@GetMapping(value = &quot;/getCurrentSeckillSkus&quot;)</span></span><br><span class="line"><span class="meta">@ResponseBody</span></span><br><span class="line"><span class="keyword">public</span> R <span class="title function_">getCurrentSeckillSkus</span><span class="params">()</span> &#123;</span><br><span class="line">    <span class="comment">//获取到当前可以参加秒杀商品的信息</span></span><br><span class="line">    List&lt;SeckillSkuRedisTo&gt; vos = secKillService.getCurrentSeckillSkus();</span><br><span class="line"></span><br><span class="line">    <span class="keyword">return</span> R.ok().setData(vos);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="keyword">public</span> List&lt;SeckillSkuRedisTo&gt; <span class="title function_">getCurrentSeckillSkus</span><span class="params">()</span> &#123;</span><br><span class="line">        Set&lt;String&gt; keys = redisTemplate.keys(SESSION_CACHE_PREFIX + <span class="string">&quot;*&quot;</span>);</span><br><span class="line">        <span class="type">long</span> <span class="variable">currentTime</span> <span class="operator">=</span> System.currentTimeMillis();</span><br><span class="line">        <span class="keyword">for</span> (String key : keys) &#123;</span><br><span class="line">            <span class="type">String</span> <span class="variable">replace</span> <span class="operator">=</span> key.replace(SESSION_CACHE_PREFIX, <span class="string">&quot;&quot;</span>);</span><br><span class="line">            String[] split = replace.split(<span class="string">&quot;_&quot;</span>);</span><br><span class="line">            <span class="type">long</span> <span class="variable">startTime</span> <span class="operator">=</span> Long.parseLong(split[<span class="number">0</span>]);</span><br><span class="line">            <span class="type">long</span> <span class="variable">endTime</span> <span class="operator">=</span> Long.parseLong(split[<span class="number">1</span>]);</span><br><span class="line">            <span class="comment">//当前秒杀活动处于有效期内</span></span><br><span class="line">            <span class="keyword">if</span> (currentTime &gt; startTime &amp;&amp; currentTime &lt; endTime) &#123;</span><br><span class="line">                <span class="comment">//取出当前秒杀活动对应商品存储的hash key</span></span><br><span class="line">                List&lt;String&gt; range = redisTemplate.opsForList().range(key, -<span class="number">100</span>, <span class="number">100</span>);</span><br><span class="line">                BoundHashOperations&lt;String, Object, Object&gt; ops = redisTemplate.boundHashOps(SECKILL_CHARE_PREFIX);</span><br><span class="line">                <span class="comment">//取出存储的商品信息并返回</span></span><br><span class="line">                List&lt;SeckillSkuRedisTo&gt; collect = range.stream().map(s -&gt; &#123;</span><br><span class="line">                    <span class="type">String</span> <span class="variable">json</span> <span class="operator">=</span> (String) ops.get(s);</span><br><span class="line">                    <span class="type">SeckillSkuRedisTo</span> <span class="variable">redisTo</span> <span class="operator">=</span> JSON.parseObject(json, SeckillSkuRedisTo.class);</span><br><span class="line">                    <span class="keyword">return</span> redisTo;</span><br><span class="line">                &#125;).collect(Collectors.toList());</span><br><span class="line">                <span class="keyword">return</span> collect;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">return</span> <span class="literal">null</span>;</span><br><span class="line">    &#125;</span><br></pre></td></tr></table></figure><p>首页获取并拼装数据</p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">&quot;swiper-slide&quot;</span>&gt;</span></span><br><span class="line">  <span class="comment">&lt;!-- 动态拼装秒杀商品信息 --&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">ul</span> <span class="attr">id</span>=<span class="string">&quot;seckillSkuContent&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">ul</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;<span class="name">script</span> <span class="attr">type</span>=<span class="string">&quot;text/javascript&quot;</span>&gt;</span><span class="language-javascript"></span></span><br><span class="line"><span class="language-javascript">  $.<span class="title function_">get</span>(<span class="string">&quot;http://seckill.gulimall.com/getCurrentSeckillSkus&quot;</span>, <span class="keyword">function</span> (<span class="params">res</span>) &#123;</span></span><br><span class="line"><span class="language-javascript">    <span class="keyword">if</span> (res.<span class="property">data</span>.<span class="property">length</span> &gt; <span class="number">0</span>) &#123;</span></span><br><span class="line"><span class="language-javascript">      res.<span class="property">data</span>.<span class="title function_">forEach</span>(<span class="keyword">function</span> (<span class="params">item</span>) &#123;</span></span><br><span class="line"><span class="language-javascript">        $(<span class="string">&quot;&lt;li onclick=&#x27;toDetail(&quot;</span> + item.<span class="property">skuId</span> + <span class="string">&quot;)&#x27;&gt;&lt;/li&gt;&quot;</span>).<span class="title function_">append</span>($(<span class="string">&quot;&lt;img style=&#x27;width: 130px; height: 130px&#x27; src=&#x27;&quot;</span> + item.<span class="property">skuInfoVo</span>.<span class="property">skuDefaultImg</span> + <span class="string">&quot;&#x27; /&gt;&quot;</span>))</span></span><br><span class="line"><span class="language-javascript">                .<span class="title function_">append</span>($(<span class="string">&quot;&lt;p&gt;&quot;</span>+item.<span class="property">skuInfoVo</span>.<span class="property">skuTitle</span>+<span class="string">&quot;&lt;/p&gt;&quot;</span>))</span></span><br><span class="line"><span class="language-javascript">                .<span class="title function_">append</span>($(<span class="string">&quot;&lt;span&gt;&quot;</span> + item.<span class="property">seckillPrice</span> + <span class="string">&quot;&lt;/span&gt;&quot;</span>))</span></span><br><span class="line"><span class="language-javascript">                .<span class="title function_">append</span>($(<span class="string">&quot;&lt;s&gt;&quot;</span> + item.<span class="property">skuInfoVo</span>.<span class="property">price</span> + <span class="string">&quot;&lt;/s&gt;&quot;</span>))</span></span><br><span class="line"><span class="language-javascript">                .<span class="title function_">appendTo</span>(<span class="string">&quot;#seckillSkuContent&quot;</span>);</span></span><br><span class="line"><span class="language-javascript">      &#125;)</span></span><br><span class="line"><span class="language-javascript">    &#125;</span></span><br><span class="line"><span class="language-javascript">  &#125;)</span></span><br><span class="line"><span class="language-javascript"></span></span><br><span class="line"><span class="language-javascript">  <span class="keyword">function</span> <span class="title function_">toDetail</span>(<span class="params">skuId</span>) &#123;</span></span><br><span class="line"><span class="language-javascript">    location.<span class="property">href</span> = <span class="string">&quot;http://item.gulimall.com/&quot;</span> + skuId + <span class="string">&quot;.html&quot;</span>;</span></span><br><span class="line"><span class="language-javascript">  &#125;</span></span><br><span class="line"><span class="language-javascript"></span></span><br><span class="line"><span class="language-javascript"></span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br></pre></td></tr></table></figure><p>首页展示效果</p><p><img src="https://cdn.jsdelivr.net/gh/zsxfa/CDN/img/md/2022/05/08/1652013402.png" alt="desc"></p><h2 id="5-获取当前商品的秒杀信息"><a href="#5-获取当前商品的秒杀信息" class="headerlink" title="5. 获取当前商品的秒杀信息"></a>5. 获取当前商品的秒杀信息</h2><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">@ResponseBody</span></span><br><span class="line"><span class="meta">@GetMapping(value = &quot;/getSeckillSkuInfo/&#123;skuId&#125;&quot;)</span></span><br><span class="line"><span class="keyword">public</span> R <span class="title function_">getSeckillSkuInfo</span><span class="params">(<span class="meta">@PathVariable(&quot;skuId&quot;)</span> Long skuId)</span> &#123;</span><br><span class="line">    <span class="type">SeckillSkuRedisTo</span> <span class="variable">to</span> <span class="operator">=</span> secKillService.getSeckillSkuInfo(skuId);</span><br><span class="line">    <span class="keyword">return</span> R.ok().setData(to);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"> <span class="meta">@Override</span></span><br><span class="line">    <span class="keyword">public</span> SeckillSkuRedisTo <span class="title function_">getSeckillSkuInfo</span><span class="params">(Long skuId)</span> &#123;</span><br><span class="line">        BoundHashOperations&lt;String, String, String&gt; ops = redisTemplate.boundHashOps(SECKILL_CHARE_PREFIX);</span><br><span class="line">        <span class="comment">//获取所有商品的hash key</span></span><br><span class="line">        Set&lt;String&gt; keys = ops.keys();</span><br><span class="line">        <span class="keyword">for</span> (String key : keys) &#123;</span><br><span class="line">            <span class="comment">//通过正则表达式匹配 数字-当前skuid的商品</span></span><br><span class="line">            <span class="keyword">if</span> (Pattern.matches(<span class="string">&quot;\\d-&quot;</span> + skuId,key)) &#123;</span><br><span class="line">                <span class="type">String</span> <span class="variable">v</span> <span class="operator">=</span> ops.get(key);</span><br><span class="line">                <span class="type">SeckillSkuRedisTo</span> <span class="variable">redisTo</span> <span class="operator">=</span> JSON.parseObject(v, SeckillSkuRedisTo.class);</span><br><span class="line">                <span class="comment">//当前商品参与秒杀活动</span></span><br><span class="line">                <span class="keyword">if</span> (redisTo!=<span class="literal">null</span>)&#123;</span><br><span class="line">                    <span class="type">long</span> <span class="variable">current</span> <span class="operator">=</span> System.currentTimeMillis();</span><br><span class="line">                    <span class="comment">//当前活动在有效期，暴露商品随机码返回</span></span><br><span class="line">                    <span class="keyword">if</span> (redisTo.getStartTime() &lt; current &amp;&amp; redisTo.getEndTime() &gt; current) &#123;</span><br><span class="line">                        <span class="keyword">return</span> redisTo;</span><br><span class="line">                    &#125;</span><br><span class="line">                    <span class="comment">//当前商品不再秒杀有效期，则隐藏秒杀所需的商品随机码</span></span><br><span class="line">                    redisTo.setRandomCode(<span class="literal">null</span>);</span><br><span class="line">                    <span class="keyword">return</span> redisTo;</span><br><span class="line">                &#125;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">return</span> <span class="literal">null</span>;</span><br><span class="line">    &#125;</span><br></pre></td></tr></table></figure><p>在查询商品详情页的接口中查询秒杀对应信息</p><p><img src="https://cdn.jsdelivr.net/gh/zsxfa/CDN/img/md/2022/05/08/1652013625.png" alt="desc"></p><p>更改商品详情页的显示效果</p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">li</span> <span class="attr">style</span>=<span class="string">&quot;color: red&quot;</span> <span class="attr">th:if</span>=<span class="string">&quot;$&#123;item.seckillSkuVo != null&#125;&quot;</span>&gt;</span></span><br><span class="line"></span><br><span class="line">    <span class="tag">&lt;<span class="name">span</span> <span class="attr">th:if</span>=<span class="string">&quot;$&#123;#dates.createNow().getTime() &lt; item.seckillSkuVo.startTime&#125;&quot;</span>&gt;</span></span><br><span class="line">        商品将会在[[$&#123;#dates.format(new java.util.Date(item.seckillSkuVo.startTime),&quot;yyyy-MM-dd HH:mm:ss&quot;)&#125;]]进行秒杀</span><br><span class="line">    <span class="tag">&lt;/<span class="name">span</span>&gt;</span></span><br><span class="line"></span><br><span class="line">    <span class="tag">&lt;<span class="name">span</span> <span class="attr">th:if</span>=<span class="string">&quot;$&#123;#dates.createNow().getTime() &gt;= item.seckillSkuVo.startTime &amp;&amp; #dates.createNow().getTime() &lt;= item.seckillSkuVo.endTime&#125;&quot;</span>&gt;</span></span><br><span class="line">        秒杀价  [[$&#123;#numbers.formatDecimal(item.seckillSkuVo.seckillPrice,1,2)&#125;]]</span><br><span class="line">    <span class="tag">&lt;/<span class="name">span</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;/<span class="name">li</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">&quot;box-btns-two&quot;</span></span></span><br><span class="line"><span class="tag">     <span class="attr">th:if</span>=<span class="string">&quot;$&#123;item.seckillSkuVo == null &#125;&quot;</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">a</span> <span class="attr">class</span>=<span class="string">&quot;addToCart&quot;</span> <span class="attr">href</span>=<span class="string">&quot;http://cart.gulimall.com/addToCart&quot;</span> <span class="attr">th:attr</span>=<span class="string">&quot;skuId=$&#123;item.info.skuId&#125;&quot;</span>&gt;</span></span><br><span class="line">        加入购物车</span><br><span class="line">    <span class="tag">&lt;/<span class="name">a</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">&quot;box-btns-two&quot;</span></span></span><br><span class="line"><span class="tag">     <span class="attr">th:if</span>=<span class="string">&quot;$&#123;item.seckillSkuVo != null &amp;&amp; (#dates.createNow().getTime() &gt;= item.seckillSkuVo.startTime &amp;&amp; #dates.createNow().getTime() &lt;= item.seckillSkuVo.endTime)&#125;&quot;</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">a</span> <span class="attr">class</span>=<span class="string">&quot;seckill&quot;</span> <span class="attr">href</span>=<span class="string">&quot;#&quot;</span></span></span><br><span class="line"><span class="tag">       <span class="attr">th:attr</span>=<span class="string">&quot;skuId=$&#123;item.info.skuId&#125;,sessionId=$&#123;item.seckillSkuVo.promotionSessionId&#125;,code=$&#123;item.seckillSkuVo.randomCode&#125;&quot;</span>&gt;</span></span><br><span class="line">        立即抢购</span><br><span class="line">    <span class="tag">&lt;/<span class="name">a</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br></pre></td></tr></table></figure><p>页面显示效果</p><p><img src="https://cdn.jsdelivr.net/gh/zsxfa/CDN/img/md/2022/05/08/1652013664.png" alt="desc"></p><h2 id="6-秒杀"><a href="#6-秒杀" class="headerlink" title="6. 秒杀"></a>6. 秒杀</h2><h3 id="1-秒杀接口"><a href="#1-秒杀接口" class="headerlink" title="(1) 秒杀接口"></a>(1) 秒杀接口</h3><ul><li><p>点击立即抢购时，会发送请求</p></li><li><p>秒杀请求会对请求校验<code>时效、商品随机码、当前用户是否已经抢购过当前商品、库存和购买量</code>，通过校验的则秒杀成功，发送消息创建订单</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">@GetMapping(&quot;/kill&quot;)</span></span><br><span class="line"><span class="keyword">public</span> String <span class="title function_">kill</span><span class="params">(<span class="meta">@RequestParam(&quot;killId&quot;)</span> String killId,</span></span><br><span class="line"><span class="params">                   <span class="meta">@RequestParam(&quot;key&quot;)</span>String key,</span></span><br><span class="line"><span class="params">                   <span class="meta">@RequestParam(&quot;num&quot;)</span>Integer num,</span></span><br><span class="line"><span class="params">                   Model model)</span> &#123;</span><br><span class="line">    String orderSn= <span class="literal">null</span>;</span><br><span class="line">    <span class="keyword">try</span> &#123;</span><br><span class="line">        orderSn = secKillService.kill(killId, key, num);</span><br><span class="line">        model.addAttribute(<span class="string">&quot;orderSn&quot;</span>, orderSn);</span><br><span class="line">    &#125; <span class="keyword">catch</span> (InterruptedException e) &#123;</span><br><span class="line">        e.printStackTrace();</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> <span class="string">&quot;success&quot;</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"> <span class="meta">@Override</span></span><br><span class="line">    <span class="keyword">public</span> String <span class="title function_">kill</span><span class="params">(String killId, String key, Integer num)</span> <span class="keyword">throws</span> InterruptedException &#123;</span><br><span class="line">        BoundHashOperations&lt;String, String, String&gt; ops = redisTemplate.boundHashOps(SECKILL_CHARE_PREFIX);</span><br><span class="line">        <span class="type">String</span> <span class="variable">json</span> <span class="operator">=</span> ops.get(killId);</span><br><span class="line">        <span class="type">String</span> <span class="variable">orderSn</span> <span class="operator">=</span> <span class="literal">null</span>;</span><br><span class="line">        <span class="keyword">if</span> (!StringUtils.isEmpty(json))&#123;</span><br><span class="line">            <span class="type">SeckillSkuRedisTo</span> <span class="variable">redisTo</span> <span class="operator">=</span> JSON.parseObject(json, SeckillSkuRedisTo.class);</span><br><span class="line">            <span class="comment">//1. 验证时效</span></span><br><span class="line">            <span class="type">long</span> <span class="variable">current</span> <span class="operator">=</span> System.currentTimeMillis();</span><br><span class="line">            <span class="keyword">if</span> (current &gt;= redisTo.getStartTime() &amp;&amp; current &lt;= redisTo.getEndTime()) &#123;</span><br><span class="line">                <span class="comment">//2. 验证商品和商品随机码是否对应</span></span><br><span class="line">                <span class="type">String</span> <span class="variable">redisKey</span> <span class="operator">=</span> redisTo.getPromotionSessionId() + <span class="string">&quot;-&quot;</span> + redisTo.getSkuId();</span><br><span class="line">                <span class="keyword">if</span> (redisKey.equals(killId) &amp;&amp; redisTo.getRandomCode().equals(key)) &#123;</span><br><span class="line">                    <span class="comment">//3. 验证当前用户是否购买过</span></span><br><span class="line">                    <span class="type">MemberResponseVo</span> <span class="variable">memberResponseVo</span> <span class="operator">=</span> LoginInterceptor.loginUser.get();</span><br><span class="line">                    <span class="type">long</span> <span class="variable">ttl</span> <span class="operator">=</span> redisTo.getEndTime() - System.currentTimeMillis();</span><br><span class="line">                    <span class="comment">//3.1 通过在redis中使用 用户id-skuId 来占位看是否买过</span></span><br><span class="line">                    <span class="type">Boolean</span> <span class="variable">occupy</span> <span class="operator">=</span> redisTemplate.opsForValue().setIfAbsent(memberResponseVo.getId()+<span class="string">&quot;-&quot;</span>+redisTo.getSkuId(), num.toString(), ttl, TimeUnit.MILLISECONDS);</span><br><span class="line">                    <span class="comment">//3.2 占位成功，说明该用户未秒杀过该商品，则继续</span></span><br><span class="line">                    <span class="keyword">if</span> (occupy)&#123;</span><br><span class="line">                        <span class="comment">//4. 校验库存和购买量是否符合要求</span></span><br><span class="line">                        <span class="keyword">if</span> (num &lt;= redisTo.getSeckillLimit()) &#123;</span><br><span class="line">                            <span class="comment">//4.1 尝试获取库存信号量</span></span><br><span class="line">                            <span class="type">RSemaphore</span> <span class="variable">semaphore</span> <span class="operator">=</span> redissonClient.getSemaphore(SKU_STOCK_SEMAPHORE + redisTo.getRandomCode());</span><br><span class="line">                            <span class="type">boolean</span> <span class="variable">acquire</span> <span class="operator">=</span> semaphore.tryAcquire(num,<span class="number">100</span>,TimeUnit.MILLISECONDS);</span><br><span class="line">                            <span class="comment">//4.2 获取库存成功</span></span><br><span class="line">                            <span class="keyword">if</span> (acquire) &#123;</span><br><span class="line">                                <span class="comment">//5. 发送消息创建订单</span></span><br><span class="line">                                <span class="comment">//5.1 创建订单号</span></span><br><span class="line">                                orderSn = IdWorker.getTimeId();</span><br><span class="line">                                <span class="comment">//5.2 创建秒杀订单to</span></span><br><span class="line">                                <span class="type">SeckillOrderTo</span> <span class="variable">orderTo</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">SeckillOrderTo</span>();</span><br><span class="line">                                orderTo.setMemberId(memberResponseVo.getId());</span><br><span class="line">                                orderTo.setNum(num);</span><br><span class="line">                                orderTo.setOrderSn(orderSn);</span><br><span class="line">                                orderTo.setPromotionSessionId(redisTo.getPromotionSessionId());</span><br><span class="line">                                orderTo.setSeckillPrice(redisTo.getSeckillPrice());</span><br><span class="line">                                orderTo.setSkuId(redisTo.getSkuId());</span><br><span class="line">                                <span class="comment">//5.3 发送创建订单的消息</span></span><br><span class="line">                                rabbitTemplate.convertAndSend(<span class="string">&quot;order-event-exchange&quot;</span>, <span class="string">&quot;order.seckill.order&quot;</span>, orderTo);</span><br><span class="line">                            &#125;</span><br><span class="line">                        &#125;</span><br><span class="line">                    &#125;</span><br><span class="line">                &#125;</span><br><span class="line">            &#125;</span><br><span class="line">            <span class="keyword">return</span> orderSn;</span><br><span class="line">        &#125;</span><br></pre></td></tr></table></figure><h4 id="2-创建订单"><a href="#2-创建订单" class="headerlink" title="(2) 创建订单"></a>(2) 创建订单</h4><p>发送消息</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//发送创建订单的消息</span></span><br><span class="line">rabbitTemplate.convertAndSend(<span class="string">&quot;order-event-exchange&quot;</span>, <span class="string">&quot;order.seckill.order&quot;</span>, orderTo);</span><br><span class="line"></span><br></pre></td></tr></table></figure><p>创建秒杀所需队列</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br></pre></td><td class="code"><pre><span class="line"> <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * 商品秒杀队列</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@return</span></span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line"><span class="meta">@Bean</span></span><br><span class="line"><span class="keyword">public</span> Queue <span class="title function_">orderSecKillOrrderQueue</span><span class="params">()</span> &#123;</span><br><span class="line">    <span class="type">Queue</span> <span class="variable">queue</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">Queue</span>(<span class="string">&quot;order.seckill.order.queue&quot;</span>, <span class="literal">true</span>, <span class="literal">false</span>, <span class="literal">false</span>);</span><br><span class="line">    <span class="keyword">return</span> queue;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="meta">@Bean</span></span><br><span class="line"><span class="keyword">public</span> Binding <span class="title function_">orderSecKillOrrderQueueBinding</span><span class="params">()</span> &#123;</span><br><span class="line">    <span class="comment">//String destination, DestinationType destinationType, String exchange, String routingKey,</span></span><br><span class="line">    <span class="comment">// Map&lt;String, Object&gt; arguments</span></span><br><span class="line">    <span class="type">Binding</span> <span class="variable">binding</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">Binding</span>(</span><br><span class="line">            <span class="string">&quot;order.seckill.order.queue&quot;</span>,</span><br><span class="line">            Binding.DestinationType.QUEUE,</span><br><span class="line">            <span class="string">&quot;order-event-exchange&quot;</span>,</span><br><span class="line">            <span class="string">&quot;order.seckill.order&quot;</span>,</span><br><span class="line">            <span class="literal">null</span>);</span><br><span class="line"></span><br><span class="line">    <span class="keyword">return</span> binding;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>监听队列</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">@Component</span></span><br><span class="line"><span class="meta">@RabbitListener(queues = &quot;order.seckill.order.queue&quot;)</span></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">SeckillOrderListener</span> &#123;</span><br><span class="line">    <span class="meta">@Autowired</span></span><br><span class="line">    <span class="keyword">private</span> OrderService orderService;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@RabbitHandler</span></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">createOrder</span><span class="params">(SeckillOrderTo orderTo, Message message, Channel channel)</span> <span class="keyword">throws</span> IOException &#123;</span><br><span class="line">        System.out.println(<span class="string">&quot;***********接收到秒杀消息&quot;</span>);</span><br><span class="line">        <span class="type">long</span> <span class="variable">deliveryTag</span> <span class="operator">=</span> message.getMessageProperties().getDeliveryTag();</span><br><span class="line">        <span class="keyword">try</span> &#123;</span><br><span class="line">            orderService.createSeckillOrder(orderTo);</span><br><span class="line">            channel.basicAck(deliveryTag, <span class="literal">false</span>);</span><br><span class="line">        &#125; <span class="keyword">catch</span> (Exception e) &#123;</span><br><span class="line">            channel.basicReject(deliveryTag,<span class="literal">true</span>);</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>创建订单</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">@Transactional</span></span><br><span class="line"><span class="meta">@Override</span></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">createSeckillOrder</span><span class="params">(SeckillOrderTo orderTo)</span> &#123;</span><br><span class="line">    <span class="type">MemberResponseVo</span> <span class="variable">memberResponseVo</span> <span class="operator">=</span> LoginInterceptor.loginUser.get();</span><br><span class="line">    <span class="comment">//1. 创建订单</span></span><br><span class="line">    <span class="type">OrderEntity</span> <span class="variable">orderEntity</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">OrderEntity</span>();</span><br><span class="line">    orderEntity.setOrderSn(orderTo.getOrderSn());</span><br><span class="line">    orderEntity.setMemberId(orderTo.getMemberId());</span><br><span class="line">    orderEntity.setMemberUsername(memberResponseVo.getUsername());</span><br><span class="line">    orderEntity.setStatus(OrderStatusEnum.CREATE_NEW.getCode());</span><br><span class="line">    orderEntity.setCreateTime(<span class="keyword">new</span> <span class="title class_">Date</span>());</span><br><span class="line">    orderEntity.setPayAmount(orderTo.getSeckillPrice().multiply(<span class="keyword">new</span> <span class="title class_">BigDecimal</span>(orderTo.getNum())));</span><br><span class="line">    <span class="built_in">this</span>.save(orderEntity);</span><br><span class="line">    <span class="comment">//2. 创建订单项</span></span><br><span class="line">    <span class="type">R</span> <span class="variable">r</span> <span class="operator">=</span> productFeignService.info(orderTo.getSkuId());</span><br><span class="line">    <span class="keyword">if</span> (r.getCode() == <span class="number">0</span>) &#123;</span><br><span class="line">        <span class="type">SeckillSkuInfoVo</span> <span class="variable">skuInfo</span> <span class="operator">=</span> r.getData(<span class="string">&quot;skuInfo&quot;</span>, <span class="keyword">new</span> <span class="title class_">TypeReference</span>&lt;SeckillSkuInfoVo&gt;() &#123;</span><br><span class="line">        &#125;);</span><br><span class="line">        <span class="type">OrderItemEntity</span> <span class="variable">orderItemEntity</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">OrderItemEntity</span>();</span><br><span class="line">        orderItemEntity.setOrderSn(orderTo.getOrderSn());</span><br><span class="line">        orderItemEntity.setSpuId(skuInfo.getSpuId());</span><br><span class="line">        orderItemEntity.setCategoryId(skuInfo.getCatalogId());</span><br><span class="line">        orderItemEntity.setSkuId(skuInfo.getSkuId());</span><br><span class="line">        orderItemEntity.setSkuName(skuInfo.getSkuName());</span><br><span class="line">        orderItemEntity.setSkuPic(skuInfo.getSkuDefaultImg());</span><br><span class="line">        orderItemEntity.setSkuPrice(skuInfo.getPrice());</span><br><span class="line">        orderItemEntity.setSkuQuantity(orderTo.getNum());</span><br><span class="line">        orderItemService.save(orderItemEntity);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></li></ul><p>页面跳转效果</p><p><img src="https://cdn.jsdelivr.net/gh/zsxfa/CDN/img/md/2022/05/08/1652013704.png" alt="desc"></p><h1 id="Sentinel服务流控、熔断和降级"><a href="#Sentinel服务流控、熔断和降级" class="headerlink" title="Sentinel服务流控、熔断和降级"></a>Sentinel服务流控、熔断和降级</h1><p>sentinel的基础知识参考<a href="https://github.com/alibaba/Sentinel/wiki/">官方文档</a></p><h2 id="1-环境搭建-3"><a href="#1-环境搭建-3" class="headerlink" title="1. 环境搭建"></a>1. 环境搭建</h2><p>导入依赖</p><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>org.springframework.boot<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>spring-boot-starter-actuator<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">version</span>&gt;</span>2.1.8.RELEASE<span class="tag">&lt;/<span class="name">version</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br><span class="line"><span class="comment">&lt;!-- sentinel熔断降级限流--&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>com.alibaba.cloud<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>spring-cloud-starter-alibaba-sentinel<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br></pre></td></tr></table></figure><p>基本配置</p><figure class="highlight yml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># sentinel控制台地址</span></span><br><span class="line"><span class="attr">spring:</span>  </span><br><span class="line">  <span class="attr">cloud:</span></span><br><span class="line">    <span class="attr">sentinel:</span></span><br><span class="line">      <span class="attr">transport:</span></span><br><span class="line">        <span class="attr">dashboard:</span> <span class="string">localhost:8080</span></span><br><span class="line"><span class="comment"># 暴露所有监控端点，使得sentinel可以实时监控</span></span><br><span class="line"><span class="attr">management:</span></span><br><span class="line">  <span class="attr">endpoints:</span></span><br><span class="line">    <span class="attr">web:</span></span><br><span class="line">      <span class="attr">exposure:</span></span><br><span class="line">        <span class="attr">include:</span> <span class="string">&#x27;*&#x27;</span></span><br></pre></td></tr></table></figure><p>流控规则设置</p><p><img src="https://cdn.jsdelivr.net/gh/zsxfa/CDN/img/md/2022/05/09/1652082527.png" alt="desc"></p><p>触发流控的效果</p><h2 id="2-自定义流控响应"><a href="#2-自定义流控响应" class="headerlink" title="2. 自定义流控响应"></a>2. 自定义流控响应</h2><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">@Component</span></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">GulimallSentinelConfig</span> <span class="keyword">implements</span> <span class="title class_">UrlBlockHandler</span>&#123;</span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">blocked</span><span class="params">(HttpServletRequest request, HttpServletResponse response, BlockException ex)</span> <span class="keyword">throws</span> IOException &#123;</span><br><span class="line">        <span class="type">R</span> <span class="variable">r</span> <span class="operator">=</span> R.error(BizCodeEnum.SECKILL_EXCEPTION.getCode(),BizCodeEnum.SECKILL_EXCEPTION.getMsg());</span><br><span class="line">        response.setContentType(<span class="string">&quot;application/json;charset=utf-8&quot;</span>);</span><br><span class="line">        response.getWriter().write(JSON.toJSONString(r));</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p><img src="https://cdn.jsdelivr.net/gh/zsxfa/CDN/img/md/2022/05/09/1652082546.png" alt="desc"></p><h2 id="3-网关流控"><a href="#3-网关流控" class="headerlink" title="3. 网关流控"></a>3. 网关流控</h2><p>如果能在网关层就进行流控，可以避免请求流入业务，减小服务压力</p><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">&lt;!-- 引入sentinel网关限流 --&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>com.alibaba.cloud<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>spring-cloud-alibaba-sentinel-gateway<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">version</span>&gt;</span>2.1.0.RELEASE<span class="tag">&lt;/<span class="name">version</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br></pre></td></tr></table></figure><p><img src="https://cdn.jsdelivr.net/gh/zsxfa/CDN/img/md/2022/05/09/1652088755.png" alt="desc"></p><h2 id="4-feign的流控和降级"><a href="#4-feign的流控和降级" class="headerlink" title="4. feign的流控和降级"></a>4. feign的流控和降级</h2><p>默认情况下，sentinel是不会对feign进行监控的，需要开启配置</p><figure class="highlight yaml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="attr">feign:</span></span><br><span class="line">  <span class="attr">sentinel:</span></span><br><span class="line">    <span class="attr">enabled:</span> <span class="literal">true</span></span><br></pre></td></tr></table></figure><p>开启后的效果</p><p><img src="https://cdn.jsdelivr.net/gh/zsxfa/CDN/img/md/2022/05/09/1652088794.png" alt="desc"></p><p>feign的降级</p><p>在<code>@FeignClient</code>设置<code>fallback</code>属性</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">@FeignClient(value = &quot;gulimall-seckill&quot;,fallback = SeckillFallbackService.class)</span></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">interface</span> <span class="title class_">SeckillFeignService</span> &#123;</span><br><span class="line">    <span class="meta">@ResponseBody</span></span><br><span class="line">    <span class="meta">@GetMapping(value = &quot;/getSeckillSkuInfo/&#123;skuId&#125;&quot;)</span></span><br><span class="line">    R <span class="title function_">getSeckillSkuInfo</span><span class="params">(<span class="meta">@PathVariable(&quot;skuId&quot;)</span> Long skuId)</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>在降级类中实现对应的<code>feign接口</code>,并重写降级方法</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">@Component</span></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">SeckillFallbackService</span> <span class="keyword">implements</span> <span class="title class_">SeckillFeignService</span> &#123;</span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="keyword">public</span> R <span class="title function_">getSeckillSkuInfo</span><span class="params">(Long skuId)</span> &#123;</span><br><span class="line">        <span class="keyword">return</span> R.error(BizCodeEnum.READ_TIME_OUT_EXCEPTION.getCode(), BizCodeEnum.READ_TIME_OUT_EXCEPTION.getMsg());</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>降级效果</p><p>当远程服务被限流或者不可用时，会触发降级效果，如下所示</p><p><img src="https://cdn.jsdelivr.net/gh/zsxfa/CDN/img/md/2022/05/09/1652088812.png" alt="desc"></p><h1 id="Zipkin链路追踪"><a href="#Zipkin链路追踪" class="headerlink" title="Zipkin链路追踪"></a>Zipkin链路追踪</h1><p>由于微服务项目模块众多，相互之间的调用关系十分复杂，因此为了分析工作过程中的调用关系，需要使用zipkin来进行链路追踪</p><h2 id="1-环境搭建-4"><a href="#1-环境搭建-4" class="headerlink" title="1. 环境搭建"></a>1. 环境搭建</h2><p>下载jar包并运行</p><p><a href="https://dl.bintray.com/openzipkin/maven/io/zipkin/java/zipkin-server/">https://dl.bintray.com/openzipkin/maven/io/zipkin/java/zipkin-server/</a></p><p>导入依赖</p><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">&lt;!--链路追踪--&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>org.springframework.cloud<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>spring-cloud-starter-zipkin<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br></pre></td></tr></table></figure><p>配置</p><figure class="highlight yaml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line"><span class="attr">spring:</span></span><br><span class="line">    <span class="attr">zipkin:</span></span><br><span class="line">      <span class="attr">base-url:</span> <span class="string">http://localhost:9411</span></span><br><span class="line">      <span class="attr">sender:</span></span><br><span class="line">        <span class="attr">type:</span> <span class="string">web</span></span><br><span class="line">      <span class="comment"># 取消nacos对zipkin的服务发现</span></span><br><span class="line">      <span class="attr">discovery-client-enabled:</span> <span class="literal">false</span></span><br><span class="line">    <span class="comment">#采样取值介于 0到1之间，1则表示全部收集</span></span><br><span class="line">    <span class="attr">sleuth:</span></span><br><span class="line">      <span class="attr">sampler:</span></span><br><span class="line">        <span class="attr">probability:</span> <span class="number">1</span></span><br></pre></td></tr></table></figure><h2 id="2-查询调用链路"><a href="#2-查询调用链路" class="headerlink" title="2. 查询调用链路"></a>2. 查询调用链路</h2><p><img src="https://cdn.jsdelivr.net/gh/zsxfa/CDN/img/md/2022/05/09/1652088835.png" alt="desc"></p><p>其中可以看到请求的方式，请求时间，异步等信息</p><p><img src="https://cdn.jsdelivr.net/gh/zsxfa/CDN/img/md/2022/05/09/1652088861.png" alt="desc"></p><h2 id="3-查询依赖"><a href="#3-查询依赖" class="headerlink" title="3. 查询依赖"></a>3. 查询依赖</h2><p><img src="https://cdn.jsdelivr.net/gh/zsxfa/CDN/img/md/2022/05/09/1652088914.png" alt="desc"></p><p><img src="https://cdn.jsdelivr.net/gh/zsxfa/CDN/img/md/2022/05/09/1652088932.png" alt="desc"></p>]]></content>
    
    
    <summary type="html">&lt;p&gt;对于谷粒商城的高级篇笔记总结…&lt;/p&gt;</summary>
    
    
    
    <category term="项目" scheme="http://zsxfa.cn/categories/%E9%A1%B9%E7%9B%AE/"/>
    
    
  </entry>
  
  <entry>
    <title>signature</title>
    <link href="http://zsxfa.cn/2022/04/18/signature/"/>
    <id>http://zsxfa.cn/2022/04/18/signature/</id>
    <published>2022-04-18T01:33:31.000Z</published>
    <updated>2022-04-18T01:37:10.902Z</updated>
    
    <content type="html"><![CDATA[<h2 id="Word-文档中插入手写签名生成电子签名"><a href="#Word-文档中插入手写签名生成电子签名" class="headerlink" title="Word 文档中插入手写签名生成电子签名"></a>Word 文档中插入手写签名生成电子签名</h2><span id="more"></span><p>1）准备好签名图片，保存在windows上。</p><p>2）用Word打开需要签名的图片，点菜单中的“插入” → “图片”选择已经写好的签名图片，插入后你可以调整图片大小。</p><p>3）点击菜单 “格式” → “颜色” → “黑白50%”。</p><p>4）点击菜单 “格式” → “颜色” → “重新着色” → “设置透明色”，可以看到鼠标变成一支笔了，之后用鼠标点击图片中白色部分，这样就自动把白底给抠除了，</p><p>再设置图片格式为“浮于文字上方”，最后拖动图片到签字处，调整大小即可，看图：</p><img src="https://cdn.jsdelivr.net/gh/zsxfa/CDN/img/md/2022/04/18/step3.gif" alt="desc" style="zoom:200%;" />]]></content>
    
    
    <summary type="html">&lt;h2 id=&quot;Word-文档中插入手写签名生成电子签名&quot;&gt;&lt;a href=&quot;#Word-文档中插入手写签名生成电子签名&quot; class=&quot;headerlink&quot; title=&quot;Word 文档中插入手写签名生成电子签名&quot;&gt;&lt;/a&gt;Word 文档中插入手写签名生成电子签名&lt;/h2&gt;</summary>
    
    
    
    <category term="Windows" scheme="http://zsxfa.cn/categories/Windows/"/>
    
    
    <category term="tips" scheme="http://zsxfa.cn/tags/tips/"/>
    
  </entry>
  
  <entry>
    <title>科四考点速记</title>
    <link href="http://zsxfa.cn/2022/04/07/3.%E7%A7%91%E5%9B%9B%E8%80%83%E7%82%B9%E9%80%9F%E8%AE%B0/"/>
    <id>http://zsxfa.cn/2022/04/07/3.%E7%A7%91%E5%9B%9B%E8%80%83%E7%82%B9%E9%80%9F%E8%AE%B0/</id>
    <published>2022-04-07T14:23:04.000Z</published>
    <updated>2022-04-18T01:04:46.071Z</updated>
    
    <content type="html"><![CDATA[<h1 id="科目四考点总结"><a href="#科目四考点总结" class="headerlink" title="科目四考点总结"></a>科目四考点总结</h1><span id="more"></span><h1 id="1-灯光使用"><a href="#1-灯光使用" class="headerlink" title="1 灯光使用"></a>1 灯光使用</h1><p>对面开远光灯——  <strong>减速或停车让行</strong></p><p><strong>夜间超车遇到前车不让路  ————保持距离等待让行</strong> </p><p><strong>夜间150米之外交替使用 是为了【看清前方情况】</strong></p><p><strong>150米之内  【互相提示】</strong></p><p><strong>夜间行驶 ——降低车速，谨慎。观察情况</strong></p><p><strong>急弯道不能停车不能超车不能加速 重点不是灯光！！！</strong></p><p><strong>居民小区， 不该鸣喇叭人让车 ，是车让人</strong></p><p><strong>夜间驾驶</strong></p><p>机动车在夜间没有路灯、照明不良或者遇有雾、雨、雪、沙尘、冰雹等低能见度情况下行驶时，应当开启前照灯、示廓灯和后位灯，但同方向行驶的后车与前车近距离行驶时，不得使用远光灯。机动车雾天行驶应当开启雾灯和危险报警闪光灯。</p><p>机动车在夜间通过急弯、坡路、拱桥、人行横道或者没有交通信号灯控制的路口时，应当交替使用远近光灯示意。</p><p>机动车驶近急弯、坡道顶端等影响安全视距的路段以及超车或者遇有紧急情况时，应当减速慢行，并鸣喇叭示意。</p><p>机动车在道路上发生故障或者发生交通事故，妨碍交通又难以移动的，应当按照规定开启危险报警闪光灯并在车后50米至100米处设置警告标志，夜间还应当同时开启示廓灯和后位灯。</p><p><strong>灯光、喇叭规定</strong></p><p>向左转弯、向左变更车道、准备超车、驶离停车地点或者掉头时，应当提前开启左转向灯；</p><p>向右转弯、向右变更车道、超车完毕驶回原车道、靠路边停车时，应当提前开启右转向灯。</p><p>机动车在夜间没有路灯、照明不良或者遇有雾、雨、雪、沙尘、冰雹等低能见度情况下行驶时，应当开启前照灯、示廓灯和后位灯，但同方向行驶的后车与前车近距离行驶时，不得使用远光灯。机动车雾天行驶应当开启雾灯和危险报警闪光灯。</p><p>机动车在夜间通过急弯、坡路、拱桥、人行横道或者没有交通信号灯控制的路口时，应当交替使用远近光灯示意。</p><p>机动车驶近急弯、坡道顶端等影响安全视距的路段以及超互或者遇有紧急情况时，应当减速慢行、并鸣喇叭示意。</p><p>机动车在道路上发生故障或者发生交通事故，妨碍交通又难以移动的，应当按照规定开启危险报警闪光灯并在车后50米至100米处设置警告标志，夜间还应当同时开启示廓灯和后位灯。</p><h1 id="2-安全常识"><a href="#2-安全常识" class="headerlink" title="2 安全常识"></a>2 安全常识</h1><p><strong>行车前的安全检查</strong></p><p>行车前一定要对车况进行检查，使之保持早良好的的状态。</p><p>对车况的检查，一是检查制动、转向装置，检查制动液贮藏室的液面高度，制动时有无跑偏、漏油情况，驻车制动效能是否良好；以及转向装置的各部件连接是否可靠。</p><p>二是检查刮水器工作是否正常，如果有障碍，要及时排除。</p><p>三是检查全车灯光、除雾装置是否完好，使其能发挥应有的功能。</p><p><strong>驾驶人安全行为</strong></p><p>驾驶机动车不得有下列行为：</p><p>1在车门、车厢没有关好时行车</p><p>2在机动车驾驶室的前后窗范围内悬挂、放置妨碍驾驶人视线的物品；</p><p>3拨打接听手持电话、观看电视等妨碍安全驾驶的行为；</p><p>4下陡坡时熄火或空挡滑行；</p><p>5向道路上抛撒物品；</p><p>6驾驶摩托车手离车把或者在车把上悬挂物品；</p><p>7连续驾驶机动车超过4小时未停车休息或者停车休息时间少于20分钟；</p><p>8在禁止鸣喇叭的区域或者路段鸣喇叭。</p><p><strong>安全装置</strong></p><p>安全装置包括安全气囊、安全带、头枕。</p><p>安全气囊：为减少汽车碰撞时对乘员的撞击，当汽车发生严重碰撞时，气囊自动爆出形成一个气囊保护垫，以减轻碰撞时的伤害。</p><p>安全带：安全带用于车辆减速或碰撞时减轻佩戴者的受伤害程度，驾驶人和乘车人应自觉系好安全带并将安全带调整到合适的位置。</p><p>头枕：头枕设计在座椅上方，是用以限制乘员头部相对躯干向后移动的弹性装置。它在发生事故时起作用（尤其是被后面撞击时），减轻乘员减轻乘员颈椎可能受到的损伤。为保证头枕具有有效的保护功能，头枕的中心高度应与驾驶人的头部齐平</p><p><strong>题目解析</strong></p><p>对轮胎的检查是为了确保在行车过程中能安全</p><p>行驶,应该检查的是轮胎的磨损,紧固,气压</p><p>情况和轮胎侧面的磨损标记;轮胎标记处的沟</p><p>槽磨损小于1.6毫米,要立即更换;发现螺栓松</p><p>动,要进行紧固;气压不足,要找出原因,采</p><p>取适当措施予以处理.</p><p><img src="https://cdn.nlark.com/yuque/0/2020/png/646188/1596388334044-9f172131-333a-4080-8546-0f4f920a8daf.png?x-oss-process=image/resize,w_703,limit_0" alt="image.png"></p><p><strong>调整到头部中心以支撑头部，头枕中心与头平齐 （颈部是错误的</strong></p><p>已有裂纹或者损伤的轮胎 容易引起 爆胎</p><p>备胎不能当长期轮胎 </p><p>没有寄安全带 图片——致命（因为图片中看出来冲撞扑出去</p><p>怠速状态下不要检查，机油可能喷出来</p><p>检查刮水器 应该在有水的状态下   <strong>干燥状态错误</strong></p><p>胎压过高过低都可能爆胎 正确</p><p>各轮胎气压不一致的时候 ————后果 abcd  爆胎 行驶油耗增大 操纵失控 加剧轮胎磨损</p><p>影响制动距离 abcd 速度 反应时间 路面状况 载货量多少 制动器的结构</p><p> <strong>abs 保持转向能力（带abs的可以用力踏制动踏板，</strong> </p><p><strong>在紧急制动的同时可能会发生侧滑</strong></p><p><strong>制动距离大大缩短 错误</strong></p><p>ABS是防抱死系统，就是保证在紧急制动时车</p><p>轮不会抱死，也就是紧急制动时保持转向能</p><p>力。ABS防抱死系统是一种具有防滑、防锁死</p><p>等优点的安全刹车控制系统。没有安装ABS系</p><p>统的车，在遇到紧急情况时，来不及分布缓</p><p>刹，只能-脚踩死。这时车轮容易抱死，加之</p><p>车辆冲刺惯性，便可能发生侧滑、跑偏、方向</p><p>不受控制等危险状况。而装有ABS的车，当车</p><p>轮即将到达下一个锁死点时，刹车在一秒内可</p><p>作用60-120次，相当于不停地刹车、放松，即</p><p>相当于机械的“点刹”。因此，可以避免在紧急</p><p>刹车时方向失控及车轮侧滑，使车轮在刹车时</p><p>不被锁死，轮胎不在一一个点上与地面摩擦，加</p><p>大摩擦力，使刹车效率达到90%以上。</p><h1 id="职业道德与安全行车知识"><a href="#职业道德与安全行车知识" class="headerlink" title="职业道德与安全行车知识"></a>职业道德与安全行车知识</h1><p><strong>不准在高速公路匝道上 超车掉头临时停车倒车</strong> </p><h1 id="3-交警手势"><a href="#3-交警手势" class="headerlink" title="3 交警手势"></a>3 交警手势</h1><h1 id="4-速度"><a href="#4-速度" class="headerlink" title="4 速度"></a>4 速度</h1><p><strong>高速速度规定</strong></p><p>高速公路应当标明车道的行驶速度，最高车速不得超过每小时120公里，最低车速不得低于每小时60公里。</p><p>在高速公路上行驶的小型载客汽车最高车速不得超过每小时120公里，其他机动车不得超过每小时100公里，摩托车不得超过每小时80公里。</p><p>同方向有2条车道的，左侧车道的最低车速为每小时100公里；</p><p>同方向有3条以上车道的，最左侧车道的最低车速为每小时110公里，中间车道的最低车速为每小时90公里。道路限速标志标明的车速与上述车道行驶车速的规定不一致的，按照道路限速标志标明的车速行驶。</p><p><strong>道路通行速度</strong></p><p>没有道路中心线的道路，城市道路为每小时30公里，公路为每小时40公里；同方向只有1条机动车道的道路，城市道路为每小时50公里，公路为每小时70公里。</p><p>机动车行驶中遇有下列情形之一的，最高行驶速度不得超过每小时30公里，其中拖拉机、电瓶车、轮式专用机械车不得超过每小时15公里：</p><p>1进出非机动车道，通过铁路道口、急弯路、窄路、窄桥时；</p><p>2掉头、转弯、下陡坡时；</p><p>3遇雾、雨、雪、沙尘、冰雹，能见度在50米以内时；</p><p>4在冰雪、泥泞的道路上行驶时；</p><p>5牵引发生故障的机动车时。</p><h1 id="5-特殊品运输"><a href="#5-特殊品运输" class="headerlink" title="5 特殊品运输"></a>5 特殊品运输</h1><p>下风疏散是错误的，  要先切断电源 带好面具手套  关阀门防止泄漏（液化石油气罐车）</p><p>施救人员 防毒面具防护品上风向</p><p>易燃不一定要水 要是密度比水小会在上面飘着烧</p><p>腐蚀品 干砂干土弄干净才可以 用水洗刷 大量的话酸碱中和 还要防止剧烈反应</p><p>需要明火才燃烧的不是易燃物品</p><p><strong>火柴硫磺赤磷 【易燃固体】</strong></p><p><strong>火药电石炸药 【易燃易爆】</strong></p><h1 id="6-特殊天气"><a href="#6-特殊天气" class="headerlink" title="6 特殊天气"></a>6 特殊天气</h1><p><strong>雨天</strong></p><p>雨天影响行驶安全的主要因素：</p><p>1雨水洒落在前风玻璃窗上，造成视线受阻</p><p>2潮湿路面的管线反射影响视线</p><p>3路面湿滑制动距离增大</p><p>4久雨天气，路基疏松可能出现坍塌现象</p><p>雨天行车，道路湿滑，车轮与地面的附着力下降，应避免紧急转向和紧急制动。</p><p>在大雨天气驾车，为避免发生水滑造成危险，要控制速度行驶；当刮水器无法刮尽雨水时，应当立即减速靠边停车；遇大暴雨或特大暴雨时，应选择安全地点停车，并开启示宽灯示意来往车辆；</p><p>连续降雨天气，山区公路可能会出现路肩松散和堤坡坍塌现象，行车时应选择中间坚实的路面，避免靠近路边行驶。</p><p><strong>雾天</strong></p><p>雾天行车，能见度低，应及时开启雾灯和危险报警闪光灯。</p><p>雾天行车时，因视线不良，应随时注意行人与其他车辆的动态，低速行驶。可适当多使用喇叭引起对方注意；听到对方车辆鸣喇叭，也应鸣喇叭回应。</p><p>行车中遇有浓雾或特大雾天、能见度过低、行车困难时，选择安全地点停车。</p><p><strong>冰雪</strong></p><p>雪天行车时，为预防车轮侧滑或与其他车辆发生刮碰，应减速行驶并保持安全距离，利用发动机制动进行减速，不得空挡滑行。</p><p>冰雪路面起步要平稳，行车中严禁猛抬离合器、急加速、急制动。</p><p>雪天行车中，在有车辙的路段应循车辙行驶。</p><p>必要时，在驱动轮上安装防滑链。</p><p>车辆在山区低等级冰雪道路遇坡道时，上坡车应当让下坡车。</p><p>在结冰的道路上会车时，应提前减速．稳住方向盘，靠右缓慢行驶。</p><p>在山区冰雪道路上行车，遇有前车正在爬坡时，后车应选择适当地点停车等前车通过后再爬坡。</p><p><strong>刮风</strong></p><p>刮风天气对安全行车影响大。大风天气行车，由于风速和风向往往不断地发生变化，当感到方向盘突然“被夺”时，一定要双手握稳方向盘并减速。</p><p>顺风时，非机动车速度加快，不要与之争道抢行。</p><p>逆风时，非机动车驾驶人一般低头猛骑，机动车需靠边停车时应注意避让。</p><h1 id="7-标志与信号"><a href="#7-标志与信号" class="headerlink" title="7 标志与信号"></a>7 标志与信号</h1><p>黄底的自行车  提醒驾驶员注意非机动车</p><p>“让”  会车的时候让对方先行 （错误）</p><p>公交车BRT 不是大客车</p><p><img src="https://cdn.nlark.com/yuque/0/2020/png/646188/1596390614563-540f7c83-40e0-4bc7-a614-304ae8b585bd.png?x-oss-process=image/resize,w_385,limit_0" alt="image.png"></p><p><img src="https://cdn.nlark.com/yuque/0/2020/png/646188/1596390705803-36edb1c4-f0d2-49c1-a4fa-c091c091d317.png?x-oss-process=image/resize,w_375,limit_0" alt="image.png"></p><p>高速上的道路交通信息 （广播频率）</p><p>重要城镇距离</p><p>高速上凸出来一个车位是紧急停车道</p><p>地上白色双虚线 且前方有“让”———— <strong>减速让行</strong></p><p><strong>（停车让行错误）</strong></p><p><strong>警告标志</strong></p><p>警告标志颜色为黄底、黑边、黑图案，形状为等边三角形，顶角朝上。是为驾驶员预示道路上某一地段或一地点道路状况和周围情况，警告驾驶员注意危险地点的交通标志。</p><p>具体的可查看驾校一点通提供的【专项练习-交通标志】，里面对各标志、标线都有详细介绍。</p><p><strong>禁令标志</strong></p><p>禁令标志颜色为白底、红圈、红杠、黑图案，图案压杠。其中解除禁超车、解除限制速度标志为白底、黑圉、黑杠、黑图案，图案压杠。形状为圆形，让路标志为顶角向下的等边三角形。是一种禁止或者限制车辆、行人交通行为的标志。</p><p>具体的可查看驾校一点通提供的【专项练习】，里面对各标志、标线都有详细介绍。</p><p><strong>指路标志</strong></p><p>指路标志颜色除里程碑、百米桩、公路界牌外，一般道路为蓝底、白图案；高速公路为绿底白色团。形状除地点识别标志外，均为长方形和正方形。</p><p>具体的可查看驾校一点通提供的【专项练习】，里面对各标志、标线都有详细介绍。</p><p><strong>指示标志</strong></p><p>指示标志颜色为蓝底、白图案。形状为圆形、长方形和正方形。是指示车辆、行人行进的标志。</p><p>具体的可查看驾校一点通提供的【专项练习】，里面对各标志、标线都有详细介绍。</p><p><strong>旅游标志</strong></p><p>旅游标志的颜色为棕色底、白色字体。</p><p>指示旅游区方向、距离、旅游项目等信息的一种服务性标志。</p><p>具体的可查看驾校一点通提供的【专项练习】，里面对各标志、标线都有详细介绍。</p><p><strong>指示标线</strong></p><p>指示车行道、行驶方向、路面边缘、人行横道等设施的标线。</p><p>包括双向两车道路面中心线、车行道分界线、行道边缘线、左转弯待转区线、左转弯导向线、人行横道线、高速公路车距确认标线、高速公路出入口标线、停车位标线、港湾式停靠站标线、收费岛标线、导向箭头、路面文字标线。</p><p>具体的可查看驾校一点通提供的【专项练习】，里面对各标志、标线都有详细介绍。</p><p><strong>禁止标线</strong></p><p>禁止标线告示道路交通的通行、禁止、限制等特殊规定，机动车机动车驾驶人和行人需严格遵守的标线。</p><p>包括禁止超车线、禁止路边停放车辆线、停止线、停车让行线、减速让行线、非机动车禁驶区表线、导流线、网状线、中心圈、专用车道线、禁止掉头标记。</p><p>具体的可查看驾校一点通提供的【专项练习】，里面对各标志、标线都有详细介绍。</p><p><strong>警告标线</strong></p><p>警告标线促使机动车驾驶人和行人了解道路变化的情况，提高警觉，准确防范，及时采取应变措施的标线。</p><p>包括车行道宽度渐变标线、接近障碍物标线、铁路平交道口标线、减速标线、立面标记。</p><p>具体的可查看驾校一点通提供的【专项练习】，里面对各标志、标线都有详细介绍。</p><p><strong>车道信号灯</strong></p><p>绿色箭头灯亮时，准许本车道车辆按指示方向通行；红色叉形灯或者箭头灯亮时，禁止本车道车辆通行。</p><p>方向指示信号灯的箭头方向向左、向上、向右分别表示左转、直行、右转。</p><p>闪光警告信号灯为持续闪烁的黄灯，提示车辆、行人通行时注意嘹望，确认安全后通过。</p><p><strong>黄灯亮vs黄灯闪烁</strong></p><p>黄灯亮：黄灯亮时，不准车辆、行人通行，但已越过停止线的车辆和已进入人行横道的行人，可以继续通行。</p><p>黄灯闪烁：闪光警告信号灯，为持续闪烁的黄灯，提示车辆、行人通行时注意瞭望，确认安全后通过。</p><p>由绿、黄、红三个色组成的信号灯中，黄灯是不闪的；整个信号灯只由单个黄灯组成的时候才会闪烁。</p><p><strong>平面交叉道口信号灯</strong></p><p>道路与铁路平面交叉道口信号灯：</p><p>道路与铁路平面交叉道口信号灯是设置在道路与铁路相交路口的两个或一个红色信号灯，用于指导车辆和行人通行。</p><p>道路与铁路平面交叉道口有两个红灯交替闪烁或者一个红灯亮时，表示禁止车辆、行人通行；红灯熄灭时，表示允许车辆、行人通行。</p><p><strong>方向指示信号灯</strong></p><p>方向指示信号灯是由红色、黄色、绿色三个内有箭头图案组成的一组灯，用于指导机动车按指示方向通行。方向指示信号灯的箭头方向向左、向上、向右分别表示左转、直行、右转。</p><p><strong>闪光警告信号灯</strong></p><p>闪光警告信号灯为持续闪烁的黄灯，提示车辆、行人通行时注意嘹望，确认安全后通过。一般设置在危险路段以及车流量少的路口，以提醒车辆、行人注意，在确保安全的情况下通行。</p><p>该信号也是晚间使用的一种警用信号，在夜间其他指挥灯停止指挥交通后，利用其中的黄灯来表示。</p><p><strong>机动车信号灯</strong></p><p>绿灯亮时，准许车辆通行，但转弯的车辆不得妨碍被放行的直行车辆、行人通行；黄灯亮时，已越过停止线的车辆可以继续通行；红灯亮时，禁止车辆通行。</p><p>在未设置非机动车信号灯和人行横道信号灯的路口，非机动车和行人应当按照机动车信号灯的表示通行。</p><p>红灯亮时，右转弯的车辆在不妨碍被放行的车辆、行人通行的情况下，可以通行。</p><h1 id="8-道路通行规定"><a href="#8-道路通行规定" class="headerlink" title="8 道路通行规定"></a>8 道路通行规定</h1><h2 id="高速紧急避险"><a href="#高速紧急避险" class="headerlink" title="高速紧急避险"></a>高速紧急避险</h2><p>进入高速公路 先开灯后进去车道</p><p>原则：<strong>先避人后避物，减速不转向</strong>！在高速公路遇到紧急情况时要采取制动减速措施，不要轻易转向避让。</p><p>发生故障：要在紧急车道停车，不要在行车道上抢修。车辆因故障暂时不能离开应急车道或路肩时，驾乘人员下车在路边护栏以外的地方等候救援。</p><p><strong>水滑</strong>：雨天由于车速的增加，轮胎与路面容易形成水膜，使轮胎悬浮，发生“水滑”。雨天为了避免“水滑”，应该<strong>缓速行驶</strong>。发生“水滑”现象时，应该<strong>握稳方向盘，慢慢降低车速</strong>。<strong>切勿迅速转向或者急踏制动踏板减速。</strong></p><p><strong>火灾</strong>：要尽快靠边停车，在<strong>来车方向</strong>设置警告标志及时报警，使用车内备用的灭火器灭火。发动机着火时要迅速关闭发动机，<strong>千万不要开启发动机舱盖进行灭火，更不要将车驶进服务区或停车场灭火。</strong></p><p><strong>非常情况或事故</strong>：</p><p>开启危险警报闪光灯，疏散人员，正确放置危险警告标志，力所能及地将损失降到最低程度，<strong>绝不能因紧急避险造成更大的损失</strong>。大雾天在高速公路遇事故不能继续行驶时，车上人员要从<strong>右侧车门下车</strong>，站到护栏以外安全的地方。</p><h1 id="9-高速速度规定"><a href="#9-高速速度规定" class="headerlink" title="9 高速速度规定"></a>9 高速速度规定</h1><p>高速公路应当标明车道的行驶速度，最高车速不得超过每小时120公里，最低车速不得低于每小时60公里。</p><p>在高速公路上行驶的<strong>小型载客汽车最高车速不得超过每小时120公里，其他机动车不得超过每小时100公里，摩托车不得超过每小时80公里。</strong></p><p>同方向有2条车道的，左侧车道的最低车速为每小时100公里；同方向有3条以上车道的，最左侧车道的最低车速为每小时110公里，中间车道的最低车速为每小时90公里。道路限速标志标明的车速与上述车道行驶车速的规定不一致的，按照道路限速标志标明的车速行驶。</p><h2 id="高速距离"><a href="#高速距离" class="headerlink" title="高速距离"></a>高速距离</h2><p>机动车在高速公路上行驶，车速超过每小时100公里时，应当与同车道前车保持100米以上的距离，车速低于每小时100公里时，与同车道前车距离可以适当缩短，但最小距离不得少于50米。</p><p><strong>机动车在高速公路上行驶，遇有雾、雨、雪、沙尘、冰雹等低能见度气象条件时，应当遵守下列规定：</strong></p><p><strong>能见度小于200米时，开启雾灯、近光灯、示廓灯和前后位灯，车速不得超过每小时60公里，与同车道前车保持100米以上的距离；</strong></p><p><strong>能见度小于100米时，开启雾灯、近光灯、示廓灯、前后位灯和危险报警闪光灯，车速不得超过每小时40公里，与同车道前车保持50米以上的距离；</strong></p><p><strong>能见度小于50米时，开启雾灯、近光灯、示廓灯、前后位灯和危险报警闪光灯，车速不得超过每小时20公里，并从最近的出口尽快驶离高速公路。</strong></p><p><strong>遇有前款规定情形时，高速公路管理部门应当通过显示屏等方式发布速度限制、保持车距等提示信息。</strong></p><h2 id="高速故障、事故"><a href="#高速故障、事故" class="headerlink" title="高速故障、事故"></a>高速故障、事故</h2><p>机动车在高速公路上发生故障，需要停车排除故障时，驾驶人应当立即开启<strong>危险报警闪光灯</strong>，将机动车移至不妨碍交通的地方停放；难以移动的，应当持续开启危险报警闪光灯，并在<strong>来车方向</strong>设置警告标志等措施扩大示警距离，<strong>必要时迅速报警。</strong></p><p>警告标志应当设置在故障车<strong>来车方向一百五十米以外</strong>，车上人员应当迅速转移到<strong>右侧路肩上或者应急车道内</strong>，并且<strong>迅速报警。</strong></p><p>机动车在高速公路上发生故障或者交通事故，<strong>无法正常行驶的</strong>，<strong>应当由救援车、清障车拖曳、牵引。</strong></p><h2 id="进出高速"><a href="#进出高速" class="headerlink" title="进出高速"></a>进出高速</h2><p>机动车从<strong>匝道</strong>驶入高速公路，应当开启<strong>左转向灯</strong>，在不妨碍已在高速公路内的机动车正常行驶的情况下驶入车道。</p><p>机动车驶离高速公路时，应当开启<strong>右转向灯</strong>，驶入减速车道，<strong>降低车速后驶离</strong>。</p><h2 id="高速禁止行为"><a href="#高速禁止行为" class="headerlink" title="高速禁止行为"></a>高速禁止行为</h2><p>机动车在高速公路上行驶，不得有下列行为：</p><p>1倒车、逆行、穿越中央分隔带掉头或者在车道内停车；</p><p><strong>2在匝道、加速车道或者减速车道上超车；</strong></p><p>3骑、轧车行道分界线或者在路肩上行驶；</p><p>4非紧急情况时在应急车道行驶或者停车；</p><p>5试车或者学习驾驶机动车；</p><p>6在高速公路上行驶的载货汽车车厢不得载人；</p><p><strong>7两轮摩托车在高速公路行驶时不得载人。</strong></p><h2 id="人行横道"><a href="#人行横道" class="headerlink" title="人行横道"></a>人行横道</h2><p>机动车行经人行横道不得超车。</p><p>机动车行经人行横道时，应当减速行驶；遇行<strong>人正在通过</strong>人行横道，应当停车让行。</p><p>机动车行经没有交通信号的道路时，遇行人横过道路，应当避让。</p><h2 id="交叉路口"><a href="#交叉路口" class="headerlink" title="交叉路口"></a>交叉路口</h2><p>机动车通过有交通信号灯控制的交叉路口，应当按照下列规定通行：</p><p>1在划有导向车道的路口，按所需行进方向驶入导向车道；</p><p>2准备进入环形路口的让已在路口内的机动车先行；</p><p>3向左转弯时，靠路口中心点左侧转弯。转弯时开启转向灯，夜间行驶开启近光灯；</p><p>4遇放行信号时，依次通过；</p><p>5遇停止信号时，依次停在停止线以外。没有停止线的，停在路口以外；</p><p>6向右转弯遇有同车道前车正在等候放行信号时，依次停车等候；</p><p>7在没有方向指示信号灯的交叉路口，转弯的机动车让直行的车辆、行人先行。相对方向行驶的右转弯机动车让左转弯车辆先行。</p><p>机动车通过没有交通信号灯控制也没有交通警察指挥的交叉路应当遵守下列规定：</p><p>1准备进入环形路口的让已在路口内的机动车先行；</p><p>2向左转弯时，靠路口中心点左侧转弯。转弯时开启转向灯，夜间行驶开启近光灯；</p><p>3有交通标志、标线控制的，让优先通行的一方先行；</p><p>4没有交通标志、标线控制的，在进入路口前停车瞭望，让右方道路的来车先行；</p><p>5转弯的机动车让直行的车辆先行；</p><p>6相对方向行驶的右转弯的机动车让左转弯的车辆先行。</p><h2 id="受阻路段、路口"><a href="#受阻路段、路口" class="headerlink" title="受阻路段、路口"></a>受阻路段、路口</h2><p>机动车遇有前方交叉路口交通阻塞时，应当依次停在路口以外等候，不得进入路口。</p><p>机动车在遇有前方机动车停车排队等候或者缓慢行驶时，应当依次排队，<strong>不得从前方车辆两侧穿插或者超越行驶，不得在人行横道、网状线区域内停车等候。</strong></p><p>机动车在车道减少的路口、路段，遇有前方机动车停车排队等候或者缓慢行驶的，应当每车道一辆依次交替驶入车道减少后的路口、路段。</p><h2 id="铁道路口"><a href="#铁道路口" class="headerlink" title="铁道路口"></a>铁道路口</h2><p>道路与铁路平面交叉道口信号灯是设置在道路与铁路相交路口的两个或一个红色信号灯，用于指导车辆和行人通行。</p><p>道路与铁路平面交叉道口有两个红灯交替闪烁或者一个红灯亮时，表示禁止车辆、行人通行；红灯熄灭时，表示允许车辆、行人通行。</p><h2 id="复杂道路"><a href="#复杂道路" class="headerlink" title="复杂道路"></a>复杂道路</h2><p>汽车通过傍山险路等危险路段，应低速行驶，双手把稳方向盘，谨慎驾驶。</p><p>车辆通过较大坑洼或沟槽应减速驶入，挂低速档通过。</p><p>车辆行至泥泞或翻浆路段时应停车观察，选择平整、坚实或有车辙的路段通过。</p><p>在泥泞路段行车，应选用恰当档位，用加速踏板控制速度，匀速一次性通过。</p><p>车辆在泥泞路行驶，</p><p>前轮发生侧滑时，要冷静清醒，在抬加速踏板的同时，向相反的方向打方向盘进行修正。</p><p>后轮侧滑要向后轮侧滑一方缓慢转动方向盘进行修正。</p><p>在泥泞路段行车，遇车轮空转打滑时，应挖去泥浆铺上砂石草木。</p><h2 id="山区"><a href="#山区" class="headerlink" title="山区"></a>山区</h2><p><strong>加大安全距离</strong></p><p>汽车通过傍山险路、山区等危险路段时，应低速行驶，双手把稳方向盘，谨慎驾驶。</p><p>有的图 山在右边 靠右侧行驶 避免对面来车</p><p>当坡度较陡时，应采用较低的挡位匀速行驶。尽量避免由于动力不足造成上坡过程中的降挡操作。</p><p>下坡时，如果前方的道路不是很直很长，建议不要增挡，用原挡位来牵制车辆的行驶速度。</p><p>未遇见特殊情况尽量不要踩制动踏板（特别是在雨天和雪天）以防侧滑。</p><p>用加速踏板来控制行车速度，严禁踩下离合踏板空挡滑行或熄火前行。</p><p>熄火之后没有后制动助力和转向助力，十分危险。</p><p> <strong>【发动机制动】</strong> </p><p>下长坡控制车速最安全的方法 发动机制动 </p><p>显著优点 </p><p>1.差速器 动力矩  平均分配在左右车轮 【减少测滑甩尾的可能性】</p><p>2。减少脚制动的使用频率， 避免长时间使用摩擦升温度，【脚制动下降甚至失去作用 </p><p>3.车速始终被限制在安全范围内 有利于降速 、及时停车</p><p>在视野不好的非直线路段应尽量减少超车。</p><p>如实在需要超车，先确认前方路况，再行超车。</p><h2 id="上下坡"><a href="#上下坡" class="headerlink" title="上下坡"></a>上下坡</h2><p>前方向后溜车 停车鸣喇叭警示</p><p>上坡临时停车 利用路边沿 卡住  右侧路 左打正确 看轮子方向</p><p>前溜车也一样 前轮那个</p><p>山区上坡路 塞住车轮 根据常识判断</p><p>上坡 如何保持充足的动力 —— 【在车速下降前减档】</p><p>上坡路段遇到前车停车 保持大距离停车</p><p>下坡 提前减速减档 发动机制动</p><p>下坡停车容易后溜</p><p>下坡路段停车， 使用行车制动 ， 【比在平路提前】 因为重力作用下速度会变快 所以提前</p><p>上坡路段  【比在平路时【推迟】】</p><p><strong>下陡坡不能空档，弯道不能加速</strong></p><p>前方是制高点的话，因为不知道前面平路还是下坡 所以加速错误</p><p>减速 慢行 鸣喇叭</p><h2 id="桥梁、隧道"><a href="#桥梁、隧道" class="headerlink" title="桥梁、隧道"></a>桥梁、隧道</h2><h3 id="桥梁"><a href="#桥梁" class="headerlink" title="桥梁"></a>桥梁</h3><p><strong>路段中的桥梁：</strong></p><p>按标志选路线，注意观察桥面情况，减速通过；</p><p>车辆载重超过限制质量标志，不可通过。</p><p><strong>立交桥：</strong></p><p>应减速行驶，按交通标志和交通标线的引导行驶。</p><h3 id="互通式立交桥："><a href="#互通式立交桥：" class="headerlink" title="互通式立交桥："></a><strong>互通式立交桥：</strong></h3><p>右转弯时，应在进入桥区前进入匝道；</p><p>左弯时，应驶过桥后向右转弯进入匝道。</p><p>如行进路线错误，应继续前行，找下一个路口掉头。切忌原地掉头或倒车更改路线。</p><h3 id="单向行驶的隧道"><a href="#单向行驶的隧道" class="headerlink" title="单向行驶的隧道"></a><strong>单向行驶的隧道</strong></h3><p>1通过仅能单向行驶的窄隧道前，应提前减速，观察有无对向来车，确认安全后方可通过。</p><p>2如发现对向有来车时，应及时在隧道外靠右停让，待来车通过或看见放行信号时，再驶入隧道。</p><p>3如遇有信号灯控制的隧道时，应严格遵守红灯停车、绿灯通行的原则。</p><h4 id="双向隧道"><a href="#双向隧道" class="headerlink" title="双向隧道"></a><strong>双向隧道</strong></h4><p>1驶入前，应打开示廓灯或近光灯，靠右侧行驶，注意与对向来车的安全会车；</p><p>2在双向隧道内行驶，应注意会车，并加大车辆的侧向间距；切不可在会车时使用远光灯，在隧道内尽量避免使用喇叭。</p><p>特别是在距离长、车流量较大的隧道内，鸣喇叭会增大隧道内噪声。</p><h2 id="车辆涉水"><a href="#车辆涉水" class="headerlink" title="车辆涉水"></a><strong>车辆涉水</strong></h2><p>一、涉水前</p><p>1涉水前，必须仔细查看水的深度，判断是否能安全地通过。如果水深超过车轮的2/3时，则不宜冒险行驶。水况不明必须下车探路，观察前车行驶轨迹，不可盲目涉水。</p><p>2关闭空调，选用最低档，中途不可松开加速踏板，保持加速踏板稳定。</p><p>二、涉水中</p><p>1挂低速档平稳驶入水中，避免猛冲，防止水花溅入发动机而熄火。行驶中要稳住加速踏板，使车辆有足够而稳定的动力，一次通过，避免中途停车、换挡或急转弯。</p><p>2多车涉水时，不要同时下水，待前车到达彼岸，后车再下水，防止前车因故障停车，迫使后车也停在水中。车辆在涉水中如车轮打滑空转，应立即停车，不要强行进退，更不可猛踩加速踏板，以防越陷越深。</p><p>三、涉水后</p><p>1车辆涉水后，应保持低速行驶，制动踏板，以尽快恢复制动效果。</p><p>2遇大暴雨或特大暴雨时，应选择安全地点停车，并开启示宽灯示意来往车辆；当刮水器无法刮净雨水时，应当立即减速靠边停车。应选择地势高、地面坚硬的地方停车。注意不要停在大树或高压线下面，更不能在立交桥下避雨或停留。</p><p>3连续降雨天气，山区公路可能会出现路肩疏松和堤坡坍塌现象，行车时应选择道路中间坚实的路面，避免靠近路边行驶。</p><p>4暴雨后道路损毁严重，遇有危险路段，不要冒险通过。在傍山险路遇有塌方、泥石流等要绕行。</p><p>漫水路、漫水桥</p><p>机动车行经漫水路或者漫水桥时，应当停车察明水情，确认安全后，低速通过。</p><h2 id="道路通行原则"><a href="#道路通行原则" class="headerlink" title="道路通行原则"></a><strong>道路通行原则</strong></h2><h3 id="1右侧通行原则"><a href="#1右侧通行原则" class="headerlink" title="1右侧通行原则"></a>1右侧通行原则</h3><h3 id="2分道通行原则"><a href="#2分道通行原则" class="headerlink" title="2分道通行原则"></a>2分道通行原则</h3><p>道路划分为机动车道、非机动车道和人行道的，机动车、非机动车、行人实行分道通行。没有划分机动车道、非机动车道和人行道的，机动车在道路中间通行，非机动车和行人在道路两侧通行。</p><p>道路划设专用车道的，在专用车道内，只准许规定的车辆通行，其他车辆不得进入专用车道内行驶。</p><p>在道路同方向划有2条以上机动车道的，左则为快速车道，右侧为慢速车道。在快速车道行驶的机动车应当按照快速车道规定的速度行驶，未达到快速车道规定的行驶速度的，应当在慢速车道行驶。摩托车应当在最右侧车道行驶。有交通标志标明行驶速度的，按照标明的行驶速度行驶。慢速车道内的机车超越前车时，可以借用快速车道行驶。</p><h3 id="3-优先通行原则"><a href="#3-优先通行原则" class="headerlink" title="3 优先通行原则"></a><strong>3 优先通行原则</strong></h3><p>优先通行原则表现在时间上的先后，指车辆或行人在道路上相遇时，依据道路交通安全法规定的其中一方优先通过，另一方应当依法履行让行的义务，在其后通行。</p><h3 id="4安全通行原则"><a href="#4安全通行原则" class="headerlink" title="4安全通行原则"></a><strong>4安全通行原则</strong></h3><p> <strong>超车</strong> </p><p>机动车超车时，应当提前开启左转向灯、变换使用远、近光灯或者鸣喇叭。</p><p>在没有道路中心线或者同方向只再1条机动车道的道路上，前车遇后车发出超车信号时，在条件许可的情况下，应当降低速度、靠右让路。</p><p>后车应当在确认有充足的安全距离后，从前车的左侧超越，在与被超车辆拉开必要的安全距离后，开启右转向灯，驶回原车道。</p><p>若前面有行人 不能盲目让超。</p><p>前方无行人车辆的话 被超车 <strong>【减速靠右侧行驶】</strong></p><p> <strong>会车</strong> </p><p>在没有中心隔离设施或者没有中心线的道路上，机动车遇相对方向来车时应当遵守下列规定：</p><p>1减速靠右行驶，并与其他车辆、行人保持必要的安全距离</p><p>2在有障碍的路段，无障碍的一方先行；但有障碍的一方已驶入障碍路段而无障碍的一方未驶入时，有障碍的一方先行</p><p>3在狭窄的坡路，上坡的一方先行；但下坡的一方已行至中途而上坡的一方未上坡时，下坡的一方先行</p><p>在路面狭窄的山路上 要 做好停车准备  集中注意力 鸣喇叭 降低车速</p><p>4在狭窄的山路，不靠山体的一方先行 （靠山体一侧的让行）</p><p>（掉入悬崖 的角度考虑   【还要 选择安全的地点】</p><p>5夜间会车应当在距相对方向来车150米以外改用近光灯，在窄路、窄桥与非机动车会车时应当使用近光灯</p><p>夜间会车 对面不管 不选远光灯 ， 选减速靠边停车、视线右平移、交替变换提醒来车</p><p>急弯路看不清状况 可以鸣喇叭 （对面鸣喇叭）</p><p>夜间对向来车没关远光灯  自己变换远近光灯提示</p><h1 id="10-文明驾驶技巧"><a href="#10-文明驾驶技巧" class="headerlink" title="10 文明驾驶技巧"></a><strong>10 文明驾驶技巧</strong></h1><p><strong>掉头</strong></p><p>掉头时，应当提前开启左转向灯，最高行驶速度不得超过每小时30公里。</p><p>机动车在有禁止掉头或者禁止左转弯标志、标线的地点以及在铁路道口、人行横道、桥梁、急弯、陡坡、隧道或者容易发生危险的路段，不得掉头。</p><p>机动车在没有禁止掉头或者没有禁止左转弯标志、标线的地点可以掉头，但不得妨碍正常行驶的其他车辆和行人的通行。</p><p><strong>停车</strong></p><p>机动车在道路上临时停车，应当遵守下列规定：</p><p>1在设有禁停标志、标线的路段，在机动车道与非机动车道、人行道之间设有隔离设施的路段以及人行横道、施工地段，不得停车；</p><p>2【口五】交叉路口、铁路道口、急弯路、宽度不足4米的窄路、桥梁、陡坡、隧道以及距离上述地点50米以内的路段，不得停车；</p><p>3【站三】公共汽车站、急救站、加油站、消防栓或者消防队f站）门前以及距离上述地点30米以内的路段，除使用上述设施的以外，不得停车；</p><p>4车辆停稳前不得开车门和上下人员，开关车门不得妨碍其他车辆和行人通行。</p><p>5路边停车应当紧靠道路右侧，机动车驾驶人不得离车，上下人员或者装卸物品后，立即驶离；</p><p>6城市公共汽车不得在站点以外的路段停车上下乘客。</p><p><strong>变更车道</strong></p><p>在道路同方向划有2条以上机动车道的，变更车道的机动车不得影响相关车道内行驶的机动车的正常行驶。</p><p>向左变更车道应当提前开启左转向灯；向右变更车道应当提前开启右转向灯。</p><p>变更车道时，让所借车道内行驶的车辆、行人正常通行。</p><p>变更车道时，按顺序依次行驶，不得频繁变更车道。</p><p><strong>倒车</strong></p><p>机动车倒车时，应当察明车后情况，确认安全后倒车。不得在铁路道口、交叉路口、单行路、桥梁、急弯、陡坡或者隧道中倒车。</p><p>s</p><p><strong>校车规定</strong></p><p>校车在道路上停车上下学生，应当靠道路右侧停靠，开启危险报警闪光灯，打开停车指示标志。</p><p>校车在同方向只有一条机动车道的道路上停靠时，后方车辆应当停车等待，不得超越。</p><p>校车在同方向有两条以上机动车道的道路上停靠时，校车停靠车道后方和相邻机动车道上的机动车应当停车等待，其他机动车道上的机动车应当减速通过。校车后方停车等待的机动车不得鸣喇叭或者使用灯光催促校车。</p><p><strong>特种车的避让</strong></p><p>特种车辆是指警车、消防车、救护车、工程救险车。他们在执行紧急任务时享有优先通行权，在确保安全的前提下，不受行驶路线、行驶方向、行驶速度和交通信号灯的限制，其他车辆和行人应当让行。</p><h1 id="11-事故处理"><a href="#11-事故处理" class="headerlink" title="11 事故处理"></a><strong>11 事故处理</strong></h1><p><strong>避险原则</strong></p><p>原则：先避人后避物，减速不转向！在高速公路遇到紧急情况时要采取制动减速措施，不要轻易转向避让。</p><p><strong>转向失控</strong></p><p>对于转向失控的车辆，最有效的办法就是平稳制动。当转向失灵时s强制制动，很容易由于惯性导致翻车，平稳制动可以减轻撞击的力度。</p><p>突然出现转向失灵和困难时，应该尽快减速，停在安全的地方，检查哪里出了问题。如果还可以进行转向，则缓速开到修车厂去修理。</p><p><strong>制动失效</strong></p><p>制动失效时，应迅速开启危险报警闪光灯，握紧方向盘控制方向，抢挂低速挡减速，使用驻车制动器配合减速，但驻车制动器不能一次拉紧。</p><p>行车中发现制动突然失灵时，驾驶入要沉着镇静，握紧方向盘，以控制方向为第一应急措施，再利用“抢档”或驻车制动减速。使用驻车制动器时，应缓慢使用，避免因紧急使用造成驻车制动盘“抱死”，损坏传动机件而降低制动作用。</p><p>山路下坡时车辆制动突然失效后，首先应利用道路边专设的避险车道停车。不得已的情况下，可利用车身靠向路边的岩石或树林碰擦，或用前保险杠侧面撞击山坡停车。停车后，使用驻车制动器，以防滑动发生二次危险，如果没有可以利用的地形和时机，应迅速逐渐或越一级减挡，利用发动机的牵制作用降低车速。</p><p>发动机熄火</p><p>行车中发动机突然熄火，如无法再次启动，应立即开启危险报警灯，将车辆移到不妨碍交通的地点停车，防止故障车警告标示牌后，再检查熄火原因。</p><p><strong>车辆碰撞</strong></p><p>车辆碰撞分为正面碰撞、侧面碰撞和追尾碰撞。碰撞对驾驶人和乘车人人身安全威胁较大，如果驾驶人采取正确的应急处理措施，可有效降低事故的损失。</p><p>驾驶机动车与对向来车发生正面碰撞且碰撞位置在正前方时要迅速离开方向盘，往前排乘客座位躲避，迅速将两腿抬起。</p><p>发生碰撞的位置不在驾驶人一侧或撞击力量较小时，紧握方向盘，两腿向前蹬，身体向前紧靠座椅。</p><p>若与其他车辆不可避免地发生正面碰撞，应紧急制动。</p><p><strong>机动车着火</strong></p><p>火灾发生时，应该设法将车辆停在远离城镇、建筑物、树木、车辆及易燃物的空旷地带，迅速关闭发动机。</p><p>车辆燃油着火时应当使用灭火器或路边沙土、棉衣等覆盖法灭火。不能用水灭火，以防加剧火势蔓延。</p><p><strong>机动车落水</strong></p><p>当不慎落水时，车窗是最易逃脱的地方。由于内外压强差带来的阻力，很难开启车门。</p><p>应该迅速开启车窗或用粗重物体敲碎玻璃。当不慎落水的瞬间，立即开启车门，当时的阻力是比较小的。</p><p>落水后，驾驶人员应该保持冷静，不得采取关闭车窗阻挡进水或打电话救援的错误方法，应该做好深呼吸，待水浸满车厢时，再开启车门车窗逃生。不要过于慌张，通常有充裕的时间逃生。</p><p><strong>交通事故处理</strong></p><p>机动车与机动车、机动车与非机动车在道路上发生未造成人身伤亡的交通事故，当事人对事实及成因无争议的，在记录交通事故的时间、地点、对方当事人的姓名和联系方式、机动车牌号、驾驶证号、保险凭证号、碰撞部位，并共同签名后，撤离现场，自行协商损害赔偿事宜。当事人对交通事故事实及成因有争议的，应当迅速报警。</p><p>非机动车与非机动车或者行人在道路上发生交通事故，未造成人身伤亡，且基本事实及成因清楚的，当事人应当先撤离现场，再自行协商处理损害赔偿事宜。当事人对交通事故事实及成因有争议的，应当迅速报警。</p><p>机动车发生交通事故，造成道路、供电、通讯等设施损毁的，驾驶人应当报警等候处理，不得驶离。机动车可以移动的，应当将机动车移至不妨碍交通的地点。公安机关交通管理部门应当将事故有关情况通知有关部门。</p><p>公安机关交通管理部门或者交通警察接到交通事故报警，应当及时赶赴现场，对未造成人身伤亡，事实清楚，并且机动车可以移动的，应当在记录事故情况后责令当事人撤离现场，恢复交通。对拒不撤离现场的，予以强制撤离。</p><p>对属于前款规定情况的道路交通事故，交通警察可以适用简易程序处理，并当场出具事故认定书。当事人共同请求调解的，交通警察可以当场对损害赔偿争议进行调解。</p><p>对道路交通事故造成人员伤亡和财产损失需要勘验、检查现场的，公安机关交通管理部门应当按照勘查现场工作规范进行。现场勘查完毕，应当组织清理现场，恢复交通。</p><p><strong>侧滑与抱死</strong></p><p>雨中行车时，路面上的雨水与轮胎之间形成“润滑剂”，使汽车的制动性变差，容易产生侧滑。</p><p>因此，司机要双手平衡握住方向盘，保持直线和低速行驶，需要转弯时，应当缓踩刹车，以防轮胎抱死而造成车辆侧滑。</p><p>如果是前轮侧滑，应当将方向朝侧滑的相反方向纠正；如果是后轮侧滑，要将方向朝侧滑的一侧纠正，切记不可打反方向。</p><p><strong>机动车故障</strong></p><p>机动车在道路上发生故障或者发生交通事故，妨碍交通又难以移动的，应当按照规定开启危险报警闪光灯并在车后50米至100米处设置警告标志，夜间还应当同时开启示廓灯和后位灯。</p><p><strong>漏气爆胎</strong></p><p>如果在行驶当中发现轮胎漏气，应紧握转向盘，慢慢制动减速，极力控制行驶方向，尽快驶离行车道。驶离主车道时，不可采用紧急制动，以免造成交通事故。</p><p>后轮胎爆裂时，应保持镇定，双手紧握转向盘，极力控制车辆保持直线行驶，减速停车。</p><p>当意识到前轮胎爆裂时，应双手紧握转向盘，松抬加速踏板，极力控制车辆直线行驶。前轮爆胎时，危险较大，一定要极力控制转向盘，迅速抢挂低速挡。前轮爆裂已出现转向时，不要过度矫正，应在控制住方向的情况下，轻踏制动踏板，使车辆缓慢减速。</p><p>行车中发生爆胎时，尽量采用“强档”的方法，利用发动机制动使车辆缓慢减速，切忌慌乱中急踏制动踏板，以避免车辆横甩发生更大的险情。</p><p>行车中轮胎突然爆裂时的正确做法是保持镇静，缓抬加速踏板，紧握转向盘，控制车辆直线行驶，待车速降低后，再轻踏制动踏板。</p><p>轮胎气压过高和过低时，都会导致爆胎。</p><p>避免爆胎的正确做法是定期检查轮胎，及时清理轮胎沟槽里的异物，更换有裂纹或有很深损伤的轮胎。</p><p><strong>故障车牵引</strong></p><p>牵引故障机动车应当遵守下列规定</p><p>1被牵引的机动车除驾驶人外不得载人，不得拖带挂车；</p><p>2被牵引的机动车宽度不得大于牵引机动车的宽度；</p><p>3使用软连接牵引装置时，牵引车与被牵引车之间的距离应当大于4米小于10米；</p><p>4对制动失效的被牵引车，应当使用硬连接牵引装置牵引；</p><p>5牵引车和被牵引车均应当开启危险报警闪光灯。</p><p>汽车吊车和轮式专用机械车不得牵引车辆。</p><p>摩托车不得牵引车辆或者被其他车辆牵引。</p><p>转向或者照明、信号装置失效的故障机动车，应当使用专用清障车拖曳。</p><p><strong>追究责任</strong></p><p>违反公安部123号令、安全法、实施条例等法律相关规定，尚不构成犯罪的，属于交通违法行为，追究法律责任。违反法律法划，构成犯罪的，追究刑事责任。</p><p>追究刑事责任的情况：</p><p>1醉酒驾驶机动车的；</p><p>2伪造、变造或者使用伪造、变造的机动车登记证书、号牌、行驶证、驾驶证构成犯罪的；</p><p>3伪造、变造或者使明伪造、变造的检验合格标志、保险标志构成犯罪的；</p><p>4违反道路交通安全法律、法规的规定，发生重大交通事故，构成犯罪的。</p><p><strong>酒驾</strong></p><p>驾驶机动车有饮酒、醉酒、服用国家管制的精神药品或麻醉药品嫌疑的，必须接受测试、检验。</p><p>饮酒后驾驶机动车的，处暂扣六个月机动车驾驶证，并处一千元以上二千元以下罚款。因饮酒后驾驶机动车被处罚，再次饮酒后驾驶机动车的，处十日以下拘留，并处一千元以上二千元以下罚款，吊销机动车驾驶证。</p><p>醉酒驾驶机动车的，由公安机关交通管理部门约束至酒醒，吊销机动车驾驶证，依法追究刑事责任；五年内不得重新取得机动车驾驶证。</p><p>饮酒后驾驶营运机动车的，处十五日拘留，并处五千元罚款，吊销机动车驾驶证，五年内不得重新取得机动车驾驶证。</p><p>醉酒驾驶营运机动车的，由公安机关交通管理部门约束至酒醒，吊销机动车驾驶证，依法追究刑事责任；十年内不得重新取得机动车驾驶证，重新取得机动车驾驶证后，不得驾驶营运机动车。</p><p>饮酒后或者醉酒驾驶机动车发生重大交通事故，构成犯罪的，依法追究刑事责任，并由公安机关交通管理部门吊销机动车驾驶证，终生不得重新取得机动车驾驶证。</p><p><strong>交通肇事</strong></p><p>造成交通事故后逃逸，尚不构成犯罪的，一次记12分，吊销机动车驾驶证，并处200以上2000元以上罚款。</p><p>交通肇事致一人受伤（属于一般事故），负事故全部或者主要责任，并具有酒后，无证驾驶、严重超载等情形之一的，以交通肇事罪处罚。</p><p>违反交通运输管理法规，因而发生重大事故，致人重伤、死亡或者使公私财产遭受重大损失的，处三年以下有期徒刑或者拘役；</p><p>交通运输肇事后逃逸或者有其他特别恶劣情节的，处三年以上七年以下有期徒刑；因逃逸致人死亡的，处七年以上有期徒刑。</p><p><strong>驾驶证申请处罚</strong></p><p>隐瞒有关情况或者提交虚假材料申领机动车驾驶证的，申请人在一年内不得再次申领机动车驾驶证。</p><p>申请人在考试过程中有贿赂、舞弊行为的，取消考试资格，已经通过考试的其他科目成绩无效；申请人在一年内不得再次申领机动车驾驶证。</p><p>申请人以欺骗、贿赂等不正当手段取得机动车驾驶证的，公安机关交通管理部门收缴机动车驾驶证，撤销机动车驾驶许可；申请人在三年内不得再次申领机动车驾驶证。</p><p>饮酒后驾驶营运机动车的，处15日拘留，并处5000元罚款，吊销机动车驾驶证，5年内不得重新取得机动车驾驶证。</p><p>醉酒驾驶营运机动车的，由公安机关交通管理部门约束至酒醒，吊销机动车驾驶证，依法追究刑事责任；10年内不得重新取得机动车驾驶证，重新取得机动车驾驶证后，不得驾驶营运机动车。</p><p>饮酒后或者醉酒驾驶机动车发生重大交通事故，终生不得重新取得机动车驾驶证。</p><p><strong>伪造、变造</strong></p><p>伪造、变造或者使用伪造、变造的机动车号牌、行驶证、驾驶证、校车标牌或者使用其他机动车号牌、行驶证的一次记12分。</p><p>伪造、变造或者使用伪造、变造的机动车驾驶证的，由公安机关交通管理部门予以收缴，依法拘留，并处2000元以上5000元以下罚款；构成犯罪的，依法追究刑事责任。</p><p>伪造、变造或者使用伪造、变造的机动车登记证书、号牌、行驶证、驾驶证的，由公安机关交通管理部门予以收缴，扣留该机动车，处15日以下拘留，并处2000元以上5000元以下罚款；构成犯罪的，依法追究刑事责任。</p><p>伪造、变造或者使用伪造、变造的检验合格标志、保险标志的，由公安机关交通管理部门予以收缴，扣留该机动车，处10日以下拘留，并处1000元以上3000元以下罚款；构成犯罪的，依法追究刑事责任。</p><p><strong>拼装、报废</strong></p><p>驾驶拼装的机动车或者已达到报废标准的机动车上道路行驶的，公安机关交通管理部门应当予以收缴，强制报废。</p><p>对驾驶拼装的机动车或者已达到报废标准的机动车上道路行驶的驾驶人，处200元以上2000元以下罚款，并吊销机动车驾驶证。</p><p><strong>超速处罚</strong></p><p>驾驶中型以上载客载货汽车、校车、危险物品运输车辆在高速公路、城市快速路上行驶超过规定时速20%以上或者在高速公路、城市快速路以外的道路上行驶超过规定时速50%以上的一次记12分。以及驾驶其他机动车行驶超过规定时速50%以上的，一次记12分，吊销驾驶证，并处200元以上2000元以下罚款。</p><p>驾驶中型以上载客载货汽车、校车、危险物品运输车辆在高速公路、城市快速路上行驶超过规定时速未达20%的，一次记6分。</p><p>驾驶中型以上载客载货汽车、校车、危险物品运输车辆在高速公路、城市快速路以外的道路上行驶或者驾驶其他机动车行驶超过规定时速20%以上未达到50%的，一次记6分。</p><p>驾驶中型以上载客载货汽车、危险物品运输车辆在高速公路、城市快速路以外的道路上行驶或者驾驶其他机动车行驶超过规定时速未达20%的，一次记3分。</p><p><strong>扣留车辆</strong></p><p>扣留机动车的情况</p><p>1上道路行驶的机动车未悬挂机动车号牌，未放置检验合格标志、保险标志，或者未随车携带行驶证，随身携带驾驶证的；</p><p>2伪造、变造或者使用伪造、变造的机动车登记证书、号牌、行驶证、驾驶证的；</p><p>3伪造、变造或者使用伪造、变造的检验合格标志、保险标志的；</p><p>4使用其他车辆的机动车登记证书、号牌、行驶证、检验合格标志、保险标志的；</p><p>5机动车所有人、管理人未按照国家规定投保机动车第三者责任强制保险的；</p><p>6公路客运车辆载客超过额定乘员的；</p><p>7货运机动车超过核定载质量的。</p><p><strong>扣留驾驶证</strong></p><p>机动车驾驶人在一个记分周期内累积记分达到12分的，公安机关交通管理部门应当扣留其机动车驾驶证。</p><p>机动车驾驶人在机动车驾驶证丢失、损毁、超过有效期或者被依法扣留、暂扣期间以及记分达到12分的，不得驾驶机动车。</p><p><strong>禁止申请条件</strong></p><p>有下列情形之一的，不得申请机动车驾驶证：</p><p>1有器质性心脏病、癫痫病、美尼尔氏症、眩晕症、癔病、震颤麻痹、精神病、痴呆以及影响肢体活动的神经系统疾病等妨碍安全驾驶疾病的；</p><p>2三年内有吸食、注射毒品行为或者解除强制隔离戒毒措施未满三年，或者长期服用依赖性精神药品成瘾尚未戒除的；</p><p>3造成交通事故后逃逸构成犯罪的；</p><p>4饮酒后或者醉酒驾驶机动车发生重大交通事故构成犯罪的；</p><p>5醉酒驾驶机动车或者饮酒后驾驶营运机动车依法被吊销机动车驾驶证未满五年的；</p><p>6醉酒驾驶营运机动车依法被吊销机动车驾驶证未满十年的；</p><p>7因其他情形依法被吊销机动车驾驶证未满二年的；</p><p>8驾驶许可依法被撤销未满三年的;</p><p>9法律、行政法规规定的其他情形。</p><p>未取得机动车驾驶证驾驶机动车，有第5项至第7项行为之一的，在规定期限内不得申请机动车驾驶证。</p><h1 id="12-其他"><a href="#12-其他" class="headerlink" title="12 其他"></a>12 <strong>其他</strong></h1><h2 id="【高速公路】"><a href="#【高速公路】" class="headerlink" title="【高速公路】"></a><strong>【高速公路】</strong></h2><p> <strong>1、高速公路能见度：</strong> </p><p>（能见度—车速—车距）</p><p>  200—60—100（雾灯，近光，示廓，前后位）</p><p>  100—40—50（以上➕危险报警闪光灯） </p><p>  50—20—驶离（以上➕危险报警闪光灯）</p><hr><p> <strong>2、高速公路车距：</strong> </p><p>（1）、时速大于100公里时：车距要100米以上</p><p>（2）、时速低于100公里时：车距最小不得小于50米</p><p> <strong>3、车道限速</strong> </p><p>双车道：120—100—60</p><p>三车道：120—110—90—60</p><p>超车速度：100km/h（最低1.5m横距）</p><p>中型客车：【60公里/小时，100公里/小时】</p><p>小型客车：可以达到120公里每时</p><h2 id="【非高速】"><a href="#【非高速】" class="headerlink" title="【非高速】"></a><strong>【非高速】</strong></h2><p>1、车道限速：（1）、没有中心线的路：城市道路：小于30千米每小时公路：小于40千米每小时（2）、同方向一条机动车的路：城市道路：小于50千米每小时公路：小于70千米每小时</p><p>2、酒驾：【20mg/100mL，80mg/100mL）醉驾：【80，+∞）疲劳驾驶：超过4小时</p><p>3、</p><p>进高速隧道：前50米开前照灯</p><p>高速停车：后150米放警示物</p><p>会车用灯：150米以外开始用近光灯</p><p>远近灯光使用： 车速在30以下时开近光灯，车速高于30时要开远光灯。（城市不用远光灯）</p><p>特殊道路：限速30公里/小时</p><p>停车题：一般为50米处停车</p><p>4、错误分析题，<strong>图4、5、6为三种错误，其他为两种。</strong></p><h2 id="违法行为综合判断与案例分析"><a href="#违法行为综合判断与案例分析" class="headerlink" title="违法行为综合判断与案例分析"></a><strong>违法行为综合判断与案例分析</strong></h2><h3 id="图像——违法行为"><a href="#图像——违法行为" class="headerlink" title="图像——违法行为"></a><strong>图像——违法行为</strong></h3><p>●开车打电话</p><p>●安全带</p><p>●酒后驾驶</p><p>●无证驾驶</p><p>●遮挡号牌</p><p>●闯红灯</p><p>●不按箭头指向行驶</p><p>●超速？？？？？？</p><p>●堵车时占用公交车道</p><p>●前方拥堵 走应急车道</p><p>●出现禁止左转弯标志还左转</p><p>●占用非机动车道右转弯</p><p>●堵车鸣喇叭不算错误</p><p><strong>●动画题12378 选 2222222种违法行为</strong></p><p><strong>●456选三种违法行为</strong></p><h3 id="文字违法行为"><a href="#文字违法行为" class="headerlink" title="文字违法行为"></a><strong>文字违法行为</strong></h3><p>●醉驾</p><p>○酒驾等于20- 小于80</p><p>○醉驾大于等于80</p><p>●逃逸</p><p>●超速驾驶</p><p>○110公里/时 城市 违法</p><p>●看文字答题。<strong>题目中看到110和90 不选疲劳，选其他三个选项。</strong></p><h1 id="13-紧急情况下避险常识"><a href="#13-紧急情况下避险常识" class="headerlink" title="13 紧急情况下避险常识"></a>13 <strong>紧急情况下避险常识</strong></h1><h2 id="高速上遇到紧急情况避险的时候"><a href="#高速上遇到紧急情况避险的时候" class="headerlink" title="高速上遇到紧急情况避险的时候"></a>高速上遇到紧急情况避险的时候</h2><p><strong>●先减速 再【调整方向】</strong></p><p><strong>○否则速度太快方向盘就翻车了</strong></p><p><strong>○【采取制动措施减速】</strong></p><h2 id="轮胎气压过低-高速行驶-【爆胎】"><a href="#轮胎气压过低-高速行驶-【爆胎】" class="headerlink" title="轮胎气压过低 高速行驶 【爆胎】"></a><strong>轮胎气压过低 高速行驶 【爆胎】</strong></h2><h2 id="右侧轮胎露脐-【慢慢制动减速】"><a href="#右侧轮胎露脐-【慢慢制动减速】" class="headerlink" title="右侧轮胎露脐 【慢慢制动减速】"></a><strong>右侧轮胎露脐 【慢慢制动减速】</strong></h2><p>●紧急制动 可能翻车 也可能让后面车撞上</p><h2 id="【迅速】的都有可能错-——-后轮胎爆裂"><a href="#【迅速】的都有可能错-——-后轮胎爆裂" class="headerlink" title="【迅速】的都有可能错 —— 后轮胎爆裂"></a><strong>【迅速】的都有可能错 —— 后轮胎爆裂</strong></h2><h2 id="前轮胎爆裂——在【控制住方向后】-——【抢挂低速挡位】"><a href="#前轮胎爆裂——在【控制住方向后】-——【抢挂低速挡位】" class="headerlink" title="前轮胎爆裂——在【控制住方向后】 ——【抢挂低速挡位】"></a>前轮胎爆裂——在【控制住方向后】 ——【抢挂低速挡位】</h2><h2 id="气不足-摩擦大-爆胎"><a href="#气不足-摩擦大-爆胎" class="headerlink" title="气不足 摩擦大 爆胎"></a>气不足 摩擦大 爆胎</h2><h2 id="制动失效"><a href="#制动失效" class="headerlink" title="制动失效"></a><strong>制动失效</strong></h2><p>●【冲入 】 下坡 对</p><h2 id="刹车失灵全选？-答案有首先不选-没首先全选"><a href="#刹车失灵全选？-答案有首先不选-没首先全选" class="headerlink" title="刹车失灵全选？  答案有首先不选 没首先全选"></a>刹车失灵全选？  答案有首先不选 没首先全选</h2><p>交通事故救护及常见危化品处置常识</p><h2 id="先救命-后治伤"><a href="#先救命-后治伤" class="headerlink" title="先救命 后治伤"></a>先救命 后治伤</h2><h2 id="人被压在车轮-货物下-——拉出肢体-（x）"><a href="#人被压在车轮-货物下-——拉出肢体-（x）" class="headerlink" title="人被压在车轮/货物下 ——拉出肢体 （x）"></a>人被压在车轮/货物下 ——拉出肢体 （x）</h2><p>●货物移开后才行，硬拖可能更严重</p><h2 id="受伤的人车内动不了，要先移走，避免二次伤害"><a href="#受伤的人车内动不了，要先移走，避免二次伤害" class="headerlink" title="受伤的人车内动不了，要先移走，避免二次伤害"></a>受伤的人车内动不了，要先移走，避免二次伤害</h2><h2 id="抢救昏迷失去知觉的伤员"><a href="#抢救昏迷失去知觉的伤员" class="headerlink" title="抢救昏迷失去知觉的伤员"></a>抢救昏迷失去知觉的伤员</h2><p>●先检查呼吸</p><h2 id="伤员、仰卧-x"><a href="#伤员、仰卧-x" class="headerlink" title="伤员、仰卧 x"></a>伤员、仰卧 x</h2><p>●需要【侧卧】</p><p><strong>●失去知觉/昏迷 去枕仰卧位， 头摆向一侧， 防止误入血液 呕吐物什么的</strong></p><h2 id="止血"><a href="#止血" class="headerlink" title="止血"></a>止血</h2><ul><li><p>失血伤员，先止血</p></li><li><p>指压止血法</p><ul><li>近心端动脉<ul><li>可以降低血液流速从而止血</li></ul></li></ul></li><li><p>包扎止血</p><ul><li>不能用麻绳<ul><li>但有些东西可以代替</li></ul></li><li>可以用绷带 三角巾 止血带</li></ul></li><li><p>紧急情况下止血，要先用【压迫法】别的再看情况</p></li><li><p>失血过多休克的——【保暖】</p></li><li><p>全身燃烧伤员</p><ul><li>身上喷冷水</li><li>口渴可以【淡盐水】<ul><li>只能白开水（x）</li></ul></li></ul></li></ul><h2 id="有毒气体中毒，先转移到新鲜空气"><a href="#有毒气体中毒，先转移到新鲜空气" class="headerlink" title="有毒气体中毒，先转移到新鲜空气"></a>有毒气体中毒，先转移到新鲜空气</h2><h2 id="骨折伤员-不要移动身体骨折部位"><a href="#骨折伤员-不要移动身体骨折部位" class="headerlink" title="骨折伤员 不要移动身体骨折部位"></a>骨折伤员 不要移动身体骨折部位</h2><p>●脊柱骨折，【三角巾固定】</p><p>●骨折处出血，先止血消毒，再固定！！！！！！</p><p>●不能扶持走动，也【不能软担架】</p><p>●脊椎骨折  不要随便移动</p><h2 id="【超过伤口上下关节-】-1324-题"><a href="#【超过伤口上下关节-】-1324-题" class="headerlink" title="【超过伤口上下关节 】 1324 题"></a>【超过伤口上下关节 】 1324 题</h2><h2 id="爆炸品"><a href="#爆炸品" class="headerlink" title="爆炸品"></a>爆炸品</h2><p>●火药 炸药 起爆药</p><p>●需要明火就不是易燃品</p><h2 id="易燃品"><a href="#易燃品" class="headerlink" title="易燃品"></a>易燃品</h2><p>●火柴 硫磺 赤磷</p><h2 id="易燃易爆固体"><a href="#易燃易爆固体" class="headerlink" title="易燃易爆固体"></a>易燃易爆固体</h2><p>●火药 电石 炸药</p><h2 id="易燃液体-【用水扑救】（x）"><a href="#易燃液体-【用水扑救】（x）" class="headerlink" title="易燃液体  【用水扑救】（x）"></a>易燃液体  【用水扑救】（x）</h2><p>●密度比水小的话 会浮在水面接着燃烧</p><h2 id="腐蚀品"><a href="#腐蚀品" class="headerlink" title="腐蚀品"></a>腐蚀品</h2><p>●【略 但很重要】</p>]]></content>
    
    
    <summary type="html">&lt;h1 id=&quot;科目四考点总结&quot;&gt;&lt;a href=&quot;#科目四考点总结&quot; class=&quot;headerlink&quot; title=&quot;科目四考点总结&quot;&gt;&lt;/a&gt;科目四考点总结&lt;/h1&gt;</summary>
    
    
    
    <category term="driving" scheme="http://zsxfa.cn/categories/driving/"/>
    
    
    <category term="驾考常识" scheme="http://zsxfa.cn/tags/%E9%A9%BE%E8%80%83%E5%B8%B8%E8%AF%86/"/>
    
  </entry>
  
  <entry>
    <title>gulimall-基础</title>
    <link href="http://zsxfa.cn/2022/03/20/gulimall-%E5%9F%BA%E7%A1%80/"/>
    <id>http://zsxfa.cn/2022/03/20/gulimall-%E5%9F%BA%E7%A1%80/</id>
    <published>2022-03-20T07:42:11.000Z</published>
    <updated>2022-03-31T03:33:12.321Z</updated>
    
    <content type="html"><![CDATA[<p>对于谷粒商城的基础篇笔记总结…</p><span id="more"></span><h1 id="整体介绍"><a href="#整体介绍" class="headerlink" title="整体介绍"></a>整体介绍</h1><p><img src="https://cdn.jsdelivr.net/gh/zsxfa/CDN/img/md/2022/03/13/1647159813.png" alt="desc"></p><h1 id="安装Linux虚拟机"><a href="#安装Linux虚拟机" class="headerlink" title="安装Linux虚拟机"></a>安装Linux虚拟机</h1><h2 id="1）安装vagrant"><a href="#1）安装vagrant" class="headerlink" title="1）安装vagrant"></a>1）安装vagrant</h2><ol><li><p>下载&amp;安装 VirtualBox <a href="https://www.virtualbox.org/%EF%BC%8C%E8%A6%81%E5%BC%80%E5%90%AF">https://www.virtualbox.org/，要开启</a> CPU 虚拟化</p></li><li><p>下载&amp;安装 Vagrant</p><ul><li><a href="https://app.vagrantup.com/boxes/search">https://app.vagrantup.com/boxes/search</a> Vagrant 官方镜像仓库</li><li><a href="https://www.vagrantup.com/downloads.html">https://www.vagrantup.com/downloads.html</a> Vagrant 下载</li></ul></li></ol><h2 id="2）安装Centos7"><a href="#2）安装Centos7" class="headerlink" title="2）安装Centos7"></a>2）安装Centos7</h2><ol><li><p>打开 window cmd 窗口，运行 </p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta prompt_">$ </span><span class="language-bash">vagrant init centos/7</span></span><br></pre></td></tr></table></figure></li><li><p>执行完上面的命令后，会在用户的家目录下生成Vagrantfile文件，即可初始化一个 centos7 系统</p></li><li><p>运行 <code>vagrant up</code> 即可启动虚拟机。系统 root 用户的密码是 <code>vagrant</code></p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta prompt_">$ </span><span class="language-bash">vagrant up</span></span><br></pre></td></tr></table></figure><p>下载镜像过程比较漫长，也可以采用先用下载工具下载到本地后，然后使用“ <code>vagrant box add</code> ”添加，再“<code>vagrant up</code>”即可</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta prompt_">#</span><span class="language-bash">将下载的镜像添加到virtualBox中</span></span><br><span class="line"><span class="meta prompt_">$ </span><span class="language-bash">vagrant box add centos/7 E:\迅雷下载\CentOS-7-x86_64-Vagrant-1905_01.VirtualBox.box</span></span><br><span class="line"><span class="meta prompt_"></span></span><br><span class="line"><span class="meta prompt_">#</span><span class="language-bash">启动</span></span><br><span class="line"><span class="meta prompt_">$ </span><span class="language-bash">vagrant up</span></span><br></pre></td></tr></table></figure></li><li><p><code>vagrant ssh</code> 开启SSH，并登陆到centos7</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta prompt_">$ </span><span class="language-bash">vagrant ssh</span></span><br><span class="line">[vagrant@localhost ~]$ </span><br></pre></td></tr></table></figure></li><li><p>默认虚拟机的 ip 地址不是固定 ip，开发不方便<br>修改 Vagrantfile</p><blockquote><p>config.vm.network “private_network”, ip: “192.168.56.10”</p></blockquote></li><li><p>这里的 ip 需要在物理机下使用 ipconfig 命令找到</p><p><img src="https://cdn.jsdelivr.net/gh/zsxfa/CDN/img/md/2022/03/12/1647051541.png" alt="desc">改为这个指定的子网地址,重新使用 <code>vagrant up</code> 启动机器即可。然后再 <code>vagrant ssh</code> 连接机器</p></li></ol><h2 id="3）密码登录"><a href="#3）密码登录" class="headerlink" title="3）密码登录"></a>3）密码登录</h2><p>默认只允许ssh登陆方式，为了后面操作方便，文件上传等，我们可以配置允许账户密码登录。</p><p>Vagrant ssh进去系统后</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">vi /etc/ssh/sshd_config</span><br><span class="line">修改</span><br><span class="line">PasswordAuthentication yes</span><br><span class="line">重启服务</span><br><span class="line">service sshd restart</span><br></pre></td></tr></table></figure><p>然后就可以使用XShell进行连接了</p><h2 id="4）修改-linux-的-yum-源"><a href="#4）修改-linux-的-yum-源" class="headerlink" title="4）修改 linux 的 yum 源"></a>4）修改 linux 的 yum 源</h2><p>1）备份原 yum 源<br>mv /etc/yum.repos.d/CentOS-Base.repo /etc/yum.repos.d/CentOS-Base.repo.backup</p><p>2）使用新 yum 源<br>curl -o /etc/yum.repos.d/CentOS-Base.repo <a href="http://mirrors.163.com/.help/CentOS7-Base-163.repo">http://mirrors.163.com/.help/CentOS7-Base-163.repo</a><br>3）生成缓存</p><p>yum makecache</p><h1 id="安装docker"><a href="#安装docker" class="headerlink" title="安装docker"></a>安装docker</h1><p>Docker 安装文档：<a href="https://docs.docker.com/install/linux/docker-ce/centos/">https://docs.docker.com/install/linux/docker-ce/centos/</a> </p><ol><li><p>卸载系统之前的 docker</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">sudo yum remove docker \</span><br><span class="line">                  docker-client \</span><br><span class="line">                  docker-client-latest \</span><br><span class="line">                  docker-common \</span><br><span class="line">                  docker-latest \</span><br><span class="line">                  docker-latest-logrotate \</span><br><span class="line">                  docker-logrotate \</span><br><span class="line">                  docker-engine</span><br></pre></td></tr></table></figure></li><li><p>安装必须的依赖</p><figure class="highlight awk"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">sudo yum install -y yum-utils</span><br><span class="line">sudo yum-config-manager \</span><br><span class="line">    --add-repo \</span><br><span class="line">    https:<span class="regexp">//</span>download.docker.com<span class="regexp">/linux/</span>centos/docker-ce.repo</span><br></pre></td></tr></table></figure></li><li><p>安装 docker，以及 docker-cli</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">sudo yum install docker-ce docker-ce-cli containerd.io</span><br></pre></td></tr></table></figure></li><li><p>启动Docker.</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">sudo systemctl start docker</span><br></pre></td></tr></table></figure></li><li><p>设置docker开机自启</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">sudo systemctl enable docker</span><br></pre></td></tr></table></figure></li><li><p>测试 docker 常用命令，注意切换到 root 用户下</p><p><a href="https://docs.docker.com/engine/reference/commandline/docker/">https://docs.docker.com/engine/reference/commandline/docker/</a></p></li><li><p>配置镜像加速</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">sudo mkdir -p /etc/docker</span><br><span class="line">sudo tee /etc/docker/daemon.json &lt;&lt;-&#x27;EOF&#x27;</span><br><span class="line">&#123;</span><br><span class="line">  &quot;registry-mirrors&quot;: [&quot;https://chqac97z.mirror.aliyuncs.com&quot;]</span><br><span class="line">&#125;</span><br><span class="line">EOF</span><br><span class="line">sudo systemctl daemon-reload</span><br><span class="line">sudo systemctl restart docker</span><br></pre></td></tr></table></figure></li></ol><h2 id="1-docker安装MySQL"><a href="#1-docker安装MySQL" class="headerlink" title="1) docker安装MySQL"></a>1) docker安装MySQL</h2><ol><li><p>下载镜像文件</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">docker pull mysql:5.7</span><br></pre></td></tr></table></figure></li><li><p>查看镜像</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">[vagrant@localhost home]$ sudo docker images</span><br><span class="line">REPOSITORY  TAG    IMAGE ID     CREATED       SIZE</span><br><span class="line">mysql       5.7    c20987f18b13 2 hours ago   448MB</span><br></pre></td></tr></table></figure></li><li><p>创建实例并启动mysql容器</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">docker run -p 3306:3306 --name mysql \</span><br><span class="line">    -v /mydata/mysql/log:/var/log/mysql \</span><br><span class="line">    -v /mydata/mysql/data:/var/lib/mysql \</span><br><span class="line">    -v /mydata/mysql/conf:/etc/mysql \</span><br><span class="line">    -e MYSQL_ROOT_PASSWORD=root \</span><br><span class="line">    -d mysql:5.7</span><br></pre></td></tr></table></figure><p>参数说明</p><blockquote><p>-p 3306:3306：将容器的 3306 端口映射到主机的 3306 端口</p><p>-v /mydata/mysql/conf:/etc/mysql：将配置文件夹挂载到主机</p><p>-v /mydata/mysql/log:/var/log/mysql：将日志文件夹挂载到主机</p><p>-v /mydata/mysql/data:/var/lib/mysql/：将配置文件夹挂载到主机</p><p>-e MYSQL_ROOT_PASSWORD=root：初始化 root 用户的密码</p></blockquote></li><li><p>修改配置</p><figure class="highlight properties"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line"><span class="attr">[vagrant@localhost</span> <span class="string">home]$ vi /mydata/mysql/conf/my.cnf </span></span><br><span class="line"></span><br><span class="line"><span class="attr">[client]</span></span><br><span class="line"><span class="attr">default-character-set</span>=<span class="string">utf8</span></span><br><span class="line"><span class="attr">[mysql]</span></span><br><span class="line"><span class="attr">default-character-set</span>=<span class="string">utf8</span></span><br><span class="line"><span class="attr">[mysqld]</span></span><br><span class="line"><span class="attr">init_connect</span>=<span class="string">&#x27;SET collation_connection = utf8_unicode_ci&#x27;</span></span><br><span class="line"><span class="attr">init_connect</span>=<span class="string">&#x27;SET NAMES utf8&#x27;</span></span><br><span class="line"><span class="attr">character-set-server</span>=<span class="string">utf8</span></span><br><span class="line"><span class="attr">collation-server</span>=<span class="string">utf8_unicode_ci</span></span><br><span class="line"><span class="attr">skip-character-set-client-handshake</span></span><br><span class="line"><span class="attr">skip-name-resolve</span></span><br></pre></td></tr></table></figure><p>注意：解决 MySQL 连接慢的问题<br>在配置文件中加入如下，并重启 mysql</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">[mysqld]</span><br><span class="line">skip-name-resolve</span><br></pre></td></tr></table></figure><p>解释：</p><blockquote><p>skip-name-resolve：跳过域名解析</p></blockquote></li><li><p>进入容器文件系统：</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">[vagrant@localhost home]$ docker exec -it mysql /bin/bash</span><br></pre></td></tr></table></figure></li><li><p>设置root 远程访问</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">grant all privileges on *.* to &#x27;root&#x27;@&#x27;%&#x27; identified by &#x27;root&#x27; with grant option; flush privileges;</span><br></pre></td></tr></table></figure></li><li><p>设置启动docker时，即运行mysql</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">[vagrant@localhost home]$ docker update mysql --restart=always</span><br><span class="line">mysql</span><br></pre></td></tr></table></figure></li></ol><h2 id="2-docker中安装redis"><a href="#2-docker中安装redis" class="headerlink" title="2) docker中安装redis"></a>2) docker中安装redis</h2><ol><li><p>下载镜像文件</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">[root@localhost home]# docker pull redis</span><br></pre></td></tr></table></figure></li><li><p>创建实例并启动</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">[root@localhost home]# mkdir -p /mydata/redis/conf </span><br><span class="line">[root@localhost home]# touch /mydata/redis/conf/redis.conf</span><br><span class="line">[root@localhost home]# echo &quot;appendonly yes&quot;  &gt;&gt; /mydata/redis/conf/redis.conf</span><br></pre></td></tr></table></figure><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">[root@localhost home]# docker run -p 6379:6379 --name redis -v /mydata/redis/data:/data \</span><br><span class="line">-v /mydata/redis/conf/redis.conf:/etc/redis/redis.conf \</span><br><span class="line">-d redis redis-server /etc/redis/redis.conf</span><br></pre></td></tr></table></figure><p>redis 自描述文件：<br><a href="https://raw.githubusercontent.com/antirez/redis/4.0/redis.conf">https://raw.githubusercontent.com/antirez/redis/4.0/redis.conf</a></p></li><li><p>使用redis 镜像执行redis-cli 命令连接</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">docker exec -it redis redis-cli</span><br></pre></td></tr></table></figure></li><li><p>设置redis容器在docker启动的时候启动</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">[root@localhost home]# docker update redis --restart=always</span><br><span class="line">redis</span><br></pre></td></tr></table></figure></li></ol><h1 id="开发环境统一"><a href="#开发环境统一" class="headerlink" title="开发环境统一"></a>开发环境统一</h1><h2 id="Maven"><a href="#Maven" class="headerlink" title="Maven"></a>Maven</h2><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line">配置阿里云镜像</span><br><span class="line"><span class="tag">&lt;<span class="name">mirrors</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">mirror</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">id</span>&gt;</span>nexus-aliyun<span class="tag">&lt;/<span class="name">id</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">mirrorOf</span>&gt;</span>central<span class="tag">&lt;/<span class="name">mirrorOf</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">name</span>&gt;</span>Nexus aliyun<span class="tag">&lt;/<span class="name">name</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">url</span>&gt;</span>http://maven.aliyun.com/nexus/content/groups/public<span class="tag">&lt;/<span class="name">url</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">mirror</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">mirrors</span>&gt;</span></span><br></pre></td></tr></table></figure><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line">配置 jdk 1.8 编译项目</span><br><span class="line"><span class="tag">&lt;<span class="name">profiles</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">profile</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">id</span>&gt;</span>jdk-1.8<span class="tag">&lt;/<span class="name">id</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">activation</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">activeByDefault</span>&gt;</span>true<span class="tag">&lt;/<span class="name">activeByDefault</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">jdk</span>&gt;</span>1.8<span class="tag">&lt;/<span class="name">jdk</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">activation</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">properties</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">maven.compiler.source</span>&gt;</span>1.8<span class="tag">&lt;/<span class="name">maven.compiler.source</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">maven.compiler.target</span>&gt;</span>1.8<span class="tag">&lt;/<span class="name">maven.compiler.target</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">maven.compiler.compilerVersion</span>&gt;</span>1.8<span class="tag">&lt;/<span class="name">maven.compiler.compilerVersion</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">properties</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">profile</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">profiles</span>&gt;</span></span><br></pre></td></tr></table></figure><h1 id="Idea-amp-VsCode"><a href="#Idea-amp-VsCode" class="headerlink" title="Idea&amp;VsCode"></a>Idea&amp;VsCode</h1><p>idea 安装 lombok、mybatisx 插件</p><p><strong>Vscode 安装开发必备插件</strong></p><blockquote><p>Vetur —— 语法高亮、智能感知、Emmet 等<br>包含格式化功能， Alt+Shift+F （格式化全文），Ctrl+K Ctrl+F（格式化选中代码，两个 Ctrl需要同时按着）<br>EsLint —— 语法纠错<br>Auto Close Tag —— 自动闭合 HTML/XML 标签<br>Auto Rename Tag —— 自动完成另一侧标签的同步修改<br>JavaScript(ES6) code snippets —— ES6 语法智能提示以及快速输入，除 js 外还支持.ts，.jsx，.tsx，.html，.vue，省去了配置其支持各种包含 js 代码文件的时间<br>HTML CSS Support —— 让 html 标签上写 class 智能提示当前项目所支持的样式<br>HTML Snippets —— html 快速自动补全<br>Open in browser —— 浏览器快速打开<br>Live Server —— 以内嵌服务器方式打开<br>Chinese (Simplified) Language Pack for Visual Studio Code —— 中文语言包</p></blockquote><h1 id="执行sql脚本"><a href="#执行sql脚本" class="headerlink" title="执行sql脚本"></a>执行sql脚本</h1><p>gulimall_oms.sql<br>gulimall_pms.sql<br>gulimall_sms.sql<br>gulimall_ums.sql<br>gulimall_wms.sql<br>pms_catelog.sql<br>sys_menus.sql</p><h1 id="clone-人人开源"><a href="#clone-人人开源" class="headerlink" title="clone 人人开源"></a>clone 人人开源</h1><p><a href="https://gitee.com/renrenio">https://gitee.com/renrenio</a></p><p><img src="https://cdn.jsdelivr.net/gh/zsxfa/CDN/img/md/2022/03/13/1647162059.png" alt="desc"></p><p>克隆到本地：</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">git clone https://gitee.com/renrenio/renren-fast-vue.git</span><br><span class="line">git clone https://gitee.com/renrenio/renren-fast.git</span><br></pre></td></tr></table></figure><ol><li><p>将拷贝下来的“renren-fast”删除“.git”后，拷贝到“gulimall”工程根目录下，然后将它作为gulimall的一个module</p></li><li><p>创建“<code>gulimall_admin</code>”的数据库，然后执行“<code>renren-fast/db/mysql.sql</code>”中的SQl脚本</p></li><li><p>修改“<code>application-dev.yml</code>”文件，默认为dev环境，修改连接mysql的url和用户名密码</p><figure class="highlight yaml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="attr">spring:</span></span><br><span class="line">    <span class="attr">datasource:</span></span><br><span class="line">        <span class="attr">type:</span> <span class="string">com.alibaba.druid.pool.DruidDataSource</span></span><br><span class="line">        <span class="attr">druid:</span></span><br><span class="line">            <span class="attr">driver-class-name:</span> <span class="string">com.mysql.cj.jdbc.Driver</span></span><br><span class="line">            <span class="attr">url:</span> <span class="string">jdbc:mysql://192.168.56.10:3306/gulimall_admin?useUnicode=true&amp;characterEncoding=UTF-8&amp;serverTimezone=Asia/Shanghai</span></span><br><span class="line">            <span class="attr">username:</span> <span class="string">root</span></span><br><span class="line">            <span class="attr">password:</span> <span class="string">root</span></span><br></pre></td></tr></table></figure></li><li><p>启动“gulimall_admin”，然后访问“<a href="http://localhost:8080/renren-fast/">http://localhost:8080/renren-fast/</a>”</p><p><img src="https://cdn.jsdelivr.net/gh/zsxfa/CDN/img/md/2022/03/13/1647162400.png" alt="desc"></p></li></ol><p>安装node.js，并且安装仓库</p><figure class="highlight tcl"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">npm config <span class="keyword">set</span> <span class="keyword">registry</span> <span class="keyword">http</span>://<span class="keyword">registry</span>.npm.taobao.org/</span><br></pre></td></tr></table></figure><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">PS D:\tmp\renren-fast-vue&gt; npm config set registry http://registry.npm.taobao.org/</span><br><span class="line">PS D:\tmp\renren-fast-vue&gt; npm install</span><br></pre></td></tr></table></figure><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">PS D:\tmp\renren-fast-vue&gt; npm run dev</span><br></pre></td></tr></table></figure><p>常见问题1：“Module build failed: Error: Cannot find module ‘node-sass”</p><p>运行过程中，出现“Module build failed: Error: Cannot find module ‘node-sass’报错问题”，解决方法</p><blockquote><p>用npm install -g cnpm –registry=<a href="https://registry.npm.taobao.org/">https://registry.npm.taobao.org</a> ，从淘宝镜像那下载，然后cnpm下载成功。</p><h2 id="最后输入cnpm-install-node-sass-–save。npm-run-dev终于能跑起来了！！！"><a href="#最后输入cnpm-install-node-sass-–save。npm-run-dev终于能跑起来了！！！" class="headerlink" title="最后输入cnpm install node-sass –save。npm run dev终于能跑起来了！！！"></a>最后输入cnpm install node-sass –save。npm run dev终于能跑起来了！！！</h2><p>版权声明：本文为CSDN博主「夕阳下美了剪影」的原创文章，遵循CC 4.0 BY-SA版权协议，转载请附上原文出处链接及本声明。<br>原文链接：<a href="https://blog.csdn.net/qq_38401285/article/details/86483278">https://blog.csdn.net/qq_38401285/article/details/86483278</a></p></blockquote><p>常见问题2：cnpm - 解决 “ cnpm : 无法加载文件 C:\Users\93457\AppData\Roaming\npm\cnpm.ps1，因为在此系统上禁止运行脚本。有关详细信息 。。。 “</p><p><a href="https://www.cnblogs.com/500m/p/11634969.html">https://www.cnblogs.com/500m/p/11634969.html</a></p><p>所有问题的根源都在“node_modules”，npm install之前，应该将这个文件夹删除，然后再进行安装和运行。</p><p>再次运行npm run dev恢复正常：</p><p><img src="https://cdn.jsdelivr.net/gh/zsxfa/CDN/img/md/2022/03/13/1647162669.png" alt="desc"></p><h1 id="clone-renren-generator"><a href="#clone-renren-generator" class="headerlink" title="clone renren-generator"></a>clone renren-generator</h1><h2 id="clone"><a href="#clone" class="headerlink" title="clone"></a>clone</h2><p><a href="https://gitee.com/renrenio/renren-generator.git">https://gitee.com/renrenio/renren-generator.git</a></p><p>然后将该项目放置到“gulimall”的跟路径下，然后添加该Module，并且提交到github上</p><h2 id="修改配置"><a href="#修改配置" class="headerlink" title="修改配置"></a>修改配置</h2><p>renren-generator/src/main/resources/generator.properties</p><figure class="highlight properties"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">#代码生成器，配置信息</span></span><br><span class="line"></span><br><span class="line"><span class="attr">mainPath</span>=<span class="string">com.atguigu</span></span><br><span class="line"><span class="comment">#包名</span></span><br><span class="line"><span class="attr">package</span>=<span class="string">com.atguigu.gulimall</span></span><br><span class="line"><span class="attr">moduleName</span>=<span class="string">product</span></span><br><span class="line"><span class="comment">#作者</span></span><br><span class="line"><span class="attr">author</span>=<span class="string">zsxfa</span></span><br><span class="line"><span class="comment">#Email</span></span><br><span class="line"><span class="attr">email</span>=<span class="string">zsxfa@gmail.com</span></span><br><span class="line"><span class="comment">#表前缀(类名不会包含表前缀)</span></span><br><span class="line"><span class="attr">tablePrefix</span>=<span class="string">pms_</span></span><br></pre></td></tr></table></figure><h2 id="运行“renren-generator”"><a href="#运行“renren-generator”" class="headerlink" title="运行“renren-generator”"></a>运行“renren-generator”</h2><p>访问：&lt;<a href="http://localhost/">http://localhost:80/</a></p><p><img src="https://cdn.jsdelivr.net/gh/zsxfa/CDN/img/md/2022/03/13/1647162841.png" alt="desc"></p><p>点击“renren-fast”，能够看到它将“renren-fast”的所有表都列举了出来：</p><p><img src="https://cdn.jsdelivr.net/gh/zsxfa/CDN/img/md/2022/03/13/1647162874.png" alt="desc"></p><p>选择所有的表，然后点击“生成代码”，将下载的“renren.zip”，解压后取出main文件夹，放置到“gulimall-product”项目的main目录中。</p><p>下面的几个module，也采用同样的方式来操作。</p><h2 id="整合mybatis-plus"><a href="#整合mybatis-plus" class="headerlink" title="整合mybatis-plus"></a>整合mybatis-plus</h2><p> 1）、导入依赖</p><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>com.baomidou<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>mybatis-plus-boot-starter<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">version</span>&gt;</span>3.2.0<span class="tag">&lt;/<span class="name">version</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br></pre></td></tr></table></figure><p>2）、配置</p><p>1、配置数据源；</p><p>1）、导入数据库的驱动。<a href="https://dev.mysql.com/doc/connector-j/8.0/en/connector-j-versions.html">https://dev.mysql.com/doc/connector-j/8.0/en/connector-j-versions.html</a></p><p>2）、在application.yml配置数据源相关信息</p><figure class="highlight yml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="attr">spring:</span></span><br><span class="line">  <span class="attr">datasource:</span></span><br><span class="line">    <span class="attr">username:</span> <span class="string">root</span></span><br><span class="line">    <span class="attr">password:</span> <span class="string">root</span></span><br><span class="line">    <span class="attr">url:</span> <span class="string">jdbc:mysql://#:3306/gulimall_pms</span></span><br><span class="line">    <span class="attr">driver-class-name:</span> <span class="string">com.mysql.cj.jdbc.Driver</span></span><br></pre></td></tr></table></figure><p>2、配置MyBatis-Plus；</p><p>1）、使用<code>@MapperScan</code></p><p> 2）、告诉MyBatis-Plus，sql映射文件位置</p><figure class="highlight yaml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="attr">mybatis-plus:</span></span><br><span class="line">  <span class="attr">mapper-locations:</span> <span class="string">classpath:/mapper/**/*.xml</span></span><br><span class="line">  <span class="attr">global-config:</span></span><br><span class="line">    <span class="attr">db-config:</span></span><br><span class="line">    <span class="comment">#主键自增</span></span><br><span class="line">      <span class="attr">id-type:</span> <span class="string">auto</span></span><br></pre></td></tr></table></figure><h1 id="微服务注册中心"><a href="#微服务注册中心" class="headerlink" title="微服务注册中心"></a>微服务注册中心</h1><p>要注意nacos集群所在的server，一定要关闭防火墙，否则容易出现各种问题。</p><p>搭建nacos集群，然后分别启动各个微服务，将它们注册到Nacos中。</p><figure class="highlight yaml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="attr">application:</span></span><br><span class="line">  <span class="attr">name:</span> <span class="string">gulimall-coupon</span></span><br><span class="line"><span class="attr">cloud:</span></span><br><span class="line">  <span class="attr">nacos:</span></span><br><span class="line">    <span class="attr">discovery:</span></span><br><span class="line">      <span class="attr">server-addr:</span> <span class="number">192.168</span><span class="number">.137</span><span class="number">.14</span></span><br></pre></td></tr></table></figure><p>查看注册情况：</p><p><a href="http://127.0.0.1:8848/nacos/index.html#/serviceManagement">http://127.0.0.1:8848/nacos/index.html#/serviceManagement</a></p><p><img src="https://cdn.jsdelivr.net/gh/zsxfa/CDN/img/md/2022/03/13/1647163375.png" alt="desc"></p><h1 id="使用openfen"><a href="#使用openfen" class="headerlink" title="使用openfen"></a>使用openfen</h1><p>1)、引入open-feign</p><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>org.springframework.cloud<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>spring-cloud-starter-openfeign<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br></pre></td></tr></table></figure><p>2)、编写一个接口，告诉SpringCLoud这个接口需要调用远程服务</p><p>修改“com.atguigu.gulimall.coupon.controller.CategoryBoundsController”，添加以下controller方法：</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">@RequestMapping(&quot;/member/list&quot;)</span></span><br><span class="line"><span class="keyword">public</span> R <span class="title function_">memberCoupons</span><span class="params">()</span>&#123;</span><br><span class="line">    <span class="type">CouponEntity</span> <span class="variable">couponEntity</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">CouponEntity</span>();</span><br><span class="line">    couponEntity.setCouponName(<span class="string">&quot;discount 20%&quot;</span>);</span><br><span class="line">    <span class="keyword">return</span> R.ok().put(<span class="string">&quot;coupons&quot;</span>,Arrays.asList(couponEntity));</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>新建“com.atguigu.gulimall.member.feign.CouponFeignService”接口</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">@FeignClient(&quot;gulimall_coupon&quot;)</span></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">interface</span> <span class="title class_">CouponFeignService</span> &#123;</span><br><span class="line">    <span class="meta">@RequestMapping(&quot;/coupon/coupon/member/list&quot;)</span></span><br><span class="line">    <span class="keyword">public</span> R <span class="title function_">memberCoupons</span><span class="params">()</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>修改“com.atguigu.gulimall.member.GulimallMemberApplication”类，添加上”@EnableFeignClients”：</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">@SpringBootApplication</span></span><br><span class="line"><span class="meta">@EnableDiscoveryClient</span></span><br><span class="line"><span class="meta">@EnableFeignClients(basePackages = &quot;com.atguigu.gulimall.member.feign&quot;)</span></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">GulimallMemberApplication</span> &#123;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title function_">main</span><span class="params">(String[] args)</span> &#123;</span><br><span class="line">        SpringApplication.run(GulimallMemberApplication.class, args);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>声明接口的每一个方法都是调用哪个远程服务的那个请求</p><p>3)、开启远程调用功能</p><p>io.niceseason.gulimall.member.controller.MemberController</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">@RequestMapping(&quot;/coupons&quot;)</span></span><br><span class="line"><span class="keyword">public</span> R <span class="title function_">test</span><span class="params">()</span>&#123;</span><br><span class="line">    MemberEntity memberEntity=<span class="keyword">new</span> <span class="title class_">MemberEntity</span>();</span><br><span class="line">    memberEntity.setNickname(<span class="string">&quot;zhangsan&quot;</span>);</span><br><span class="line">    <span class="type">R</span> <span class="variable">memberCoupons</span> <span class="operator">=</span> couponFeignService.memberCoupons();</span><br><span class="line"></span><br><span class="line">    <span class="keyword">return</span> memberCoupons.put(<span class="string">&quot;member&quot;</span>,memberEntity).put(<span class="string">&quot;coupons&quot;</span>,memberCoupons.get(<span class="string">&quot;coupons&quot;</span>));</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>(4)、访问<a href="http://localhost:8000/member/member/coupons">http://localhost:8000/member/member/coupons</a></p><p><img src="https://cdn.jsdelivr.net/gh/zsxfa/CDN/img/md/2022/03/13/1647164011.png" alt="desc"></p><p>停止“gulimall-coupon”服务，能够看到注册中心显示该服务的健康值为0：</p><p><img src="https://cdn.jsdelivr.net/gh/zsxfa/CDN/img/md/2022/03/13/1647164064.png" alt="desc"></p><p>再次访问：<a href="http://localhost:8000/member/member/coupons">http://localhost:8000/member/member/coupons</a></p><p><img src="https://cdn.jsdelivr.net/gh/zsxfa/CDN/img/md/2022/03/13/1647164085.png" alt="desc"></p><p>启动“gulimall-coupon”服务，再次访问，又恢复了正常。</p><h1 id="配置中心"><a href="#配置中心" class="headerlink" title="配置中心"></a>配置中心</h1><h2 id="1）修改“gulimall-coupon”模块"><a href="#1）修改“gulimall-coupon”模块" class="headerlink" title="1）修改“gulimall-coupon”模块"></a>1）修改“gulimall-coupon”模块</h2><p>添加pom依赖：</p><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>com.alibaba.cloud<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>spring-cloud-starter-alibaba-nacos-config<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br></pre></td></tr></table></figure><p>创建bootstrap.properties文件，该配置文件会优先于“application.yml”加载。</p><figure class="highlight properties"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="attr">spring.application.name</span>=<span class="string">gulimall-coupon</span></span><br><span class="line"><span class="attr">spring.cloud.nacos.config.server-addr</span>=<span class="string">127.0.0.1:8848</span></span><br></pre></td></tr></table></figure><h2 id="2）传统方式"><a href="#2）传统方式" class="headerlink" title="2）传统方式"></a>2）传统方式</h2><p>为了详细说明config的使用方法，先来看原始的方式</p><p>创建“application.properties”配置文件，添加如下配置内容：</p><figure class="highlight properties"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="attr">coupon.user.name</span>=<span class="string">&quot;zhangsan&quot;</span></span><br><span class="line"><span class="attr">coupon.user.age</span>=<span class="string">30</span></span><br></pre></td></tr></table></figure><p>修改“com\atguigu\gulimall\coupon\controller\CategoryBoundsController.java”文件，添加如下内容：</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">@Value(&quot;$&#123;coupon.user.name&#125;&quot;)</span></span><br><span class="line"><span class="keyword">private</span> String name;</span><br><span class="line"><span class="meta">@Value(&quot;$&#123;coupon.user.age&#125;&quot;)</span></span><br><span class="line"><span class="keyword">private</span> Integer age;</span><br><span class="line"></span><br><span class="line"><span class="meta">@RequestMapping(&quot;/test&quot;)</span></span><br><span class="line"><span class="keyword">public</span> R <span class="title function_">getConfigInfo</span><span class="params">()</span>&#123;</span><br><span class="line">    <span class="keyword">return</span> R.ok().put(<span class="string">&quot;name&quot;</span>,name).put(<span class="string">&quot;age&quot;</span>,age);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>启动“gulimall-coupon”服务：</p><p>访问：<a href="http://localhost:7000/coupon/categorybounds/test">http://localhost:7000/coupon/categorybounds/test</a></p><p><img src="https://cdn.jsdelivr.net/gh/zsxfa/CDN/img/md/2022/03/13/1647164307.png" alt="desc"></p><p>这样做存在的一个问题，如果频繁的修改application.properties，在需要频繁重新打包部署。下面我们将采用Nacos的配置中心来解决这个问题。</p><h2 id="3）nacos-config"><a href="#3）nacos-config" class="headerlink" title="3）nacos config"></a>3）nacos config</h2><p>1、在Nacos注册中心中，点击“配置列表”，添加配置规则：</p><p><img src="https://cdn.jsdelivr.net/gh/zsxfa/CDN/img/md/2022/03/13/1647164460.png" alt="desc"></p><p>DataID：gulimall-coupon</p><p>配置格式：properties</p><p>文件的命名规则为：${spring.application.name}-${spring.profiles.active}.${spring.cloud.nacos.config.file-extension}</p><p>${spring.application.name}：为微服务名</p><p>${spring.profiles.active}：指明是哪种环境下的配置，如dev、test或info</p><p>${spring.cloud.nacos.config.file-extension}：配置文件的扩展名，可以为properties、yml等</p><p>2、查看配置：</p><p><img src="https://cdn.jsdelivr.net/gh/zsxfa/CDN/img/md/2022/03/13/1647164508.png" alt="desc"></p><p>3、修改“com\atguigu\gulimall\coupon\controller\CategoryBoundsController”类，添加“@RefreshScope”注解</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">@RestController</span></span><br><span class="line"><span class="meta">@RequestMapping(&quot;coupon/categorybounds&quot;)</span></span><br><span class="line"><span class="meta">@RefreshScope</span></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">CategoryBoundsController</span> &#123;</span><br></pre></td></tr></table></figure><p>这样都会动态的从配置中心读取配置.</p><p>4、访问：<a href="http://localhost:7000/coupon/categorybounds/test">http://localhost:7000/coupon/categorybounds/test</a></p><p><img src="https://cdn.jsdelivr.net/gh/zsxfa/CDN/img/md/2022/03/13/1647164578.png" alt="desc"></p><p>能够看到读取到了nacos 中的最新的配置信息，并且在指明了相同的配置信息时，配置中心中设置的值优先于本地配置。</p><h2 id="4）Nacos支持三种配置加载方方案"><a href="#4）Nacos支持三种配置加载方方案" class="headerlink" title="4）Nacos支持三种配置加载方方案"></a>4）Nacos支持三种配置加载方方案</h2><p>Nacos支持“Namespace+group+data ID”的配置解决方案。</p><p>详情见：<a href="https://github.com/alibaba/spring-cloud-alibaba/blob/master/spring-cloud-alibaba-docs/src/main/asciidoc-zh/nacos-config.adoc">https://github.com/alibaba/spring-cloud-alibaba/blob/master/spring-cloud-alibaba-docs/src/main/asciidoc-zh/nacos-config.adoc</a></p><h3 id="Namespace方案"><a href="#Namespace方案" class="headerlink" title="Namespace方案"></a>Namespace方案</h3><p>通过命名空间实现环境区分</p><p>下面是配置实例：</p><p>1、创建命名空间：</p><p>“命名空间”—&gt;“创建命名空间”：</p><p><img src="https://cdn.jsdelivr.net/gh/zsxfa/CDN/img/md/2022/03/13/1647164681.png" alt="desc"></p><p> 创建三个命名空间，分别为dev，test和prop</p><p>2、回到配置列表中，能够看到所创建的三个命名空间</p><p><img src="https://cdn.jsdelivr.net/gh/zsxfa/CDN/img/md/2022/03/13/1647164714.png" alt="desc"></p><p>下面我们需要在dev命名空间下，创建“gulimall-coupon.properties”配置规则：</p><p><img src="https://cdn.jsdelivr.net/gh/zsxfa/CDN/img/md/2022/03/13/1647164795.png" alt="desc"></p><p>3、访问：<a href="http://localhost:7000/coupon/categorybounds/test">http://localhost:7000/coupon/categorybounds/test</a></p><p>并没有使用我们在dev命名空间下所配置的规则，而是使用的是public命名空间下所配置的规则，这是怎么回事呢？</p><p>查看“gulimall-coupon”服务的启动日志：</p><figure class="highlight verilog"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="number">2020</span>-<span class="number">04</span>-<span class="number">24</span> <span class="number">16</span>:<span class="number">37</span>:<span class="number">24</span><span class="variable">.158</span>  WARN <span class="number">32792</span> --- [           main] c<span class="variable">.a</span><span class="variable">.c</span><span class="variable">.n</span><span class="variable">.c</span><span class="variable">.NacosPropertySourceBuilder</span>     : Ignore the empty nacos configuration <span class="keyword">and</span> get it based on dataId[gulimall-coupon] &amp; group[DEFAULT_GROUP]</span><br><span class="line"><span class="number">2020</span>-<span class="number">04</span>-<span class="number">24</span> <span class="number">16</span>:<span class="number">37</span>:<span class="number">24</span><span class="variable">.163</span>  INFO <span class="number">32792</span> --- [           main] c<span class="variable">.a</span><span class="variable">.nacos</span><span class="variable">.client</span><span class="variable">.config</span><span class="variable">.utils</span><span class="variable">.JVMUtil</span>    : isMultiInstance:false</span><br><span class="line"><span class="number">2020</span>-<span class="number">04</span>-<span class="number">24</span> <span class="number">16</span>:<span class="number">37</span>:<span class="number">24</span><span class="variable">.169</span>  INFO <span class="number">32792</span> --- [           main] b<span class="variable">.c</span><span class="variable">.PropertySourceBootstrapConfiguration</span> : Located <span class="keyword">property</span> source: [BootstrapPropertySource &#123;name=&#x27;bootstrapProperties-gulimall-coupon<span class="variable">.properties</span>,DEFAULT_GROUP&#x27;&#125;, BootstrapPropertySource &#123;name=&#x27;bootstrapProperties-gulimall-coupon,DEFAULT_GROUP&#x27;&#125;]</span><br><span class="line"></span><br></pre></td></tr></table></figure><p>**”gulimall-coupon.properties”**，默认就是public命名空间中的内容中所配置的规则。</p><p>4、指定命名空间</p><p>如果想要使得我们自定义的命名空间生效，需要在“bootstrap.properties”文件中，指定使用哪个命名空间：</p><figure class="highlight properties"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="attr">spring.cloud.nacos.config.namespace</span>=<span class="string">0114fcbe-b6f5-471a-85db-40b6f34e7597</span></span><br></pre></td></tr></table></figure><p>这个命名空间ID来源于我们在第一步所创建的命名空间</p><p><img src="https://cdn.jsdelivr.net/gh/zsxfa/CDN/img/md/2022/03/13/1647164681.png" alt="desc"></p><p>5、重启“gulimall-coupon”，再次访问：<a href="http://localhost:7000/coupon/categorybounds/test">http://localhost:7000/coupon/categorybounds/test</a></p><p>但是这种命名空间的粒度还是不够细化，对此我们可以为项目的每个微服务module创建一个命名空间。</p><p>6、为所有微服务创建命名空间</p><p><img src="https://cdn.jsdelivr.net/gh/zsxfa/CDN/img/md/2022/03/13/1647164972.png" alt="desc"></p><p>7、回到配置列表选项卡，克隆pulic的配置规则到coupon命名空间下</p><p><img src="https://cdn.jsdelivr.net/gh/zsxfa/CDN/img/md/2022/03/13/1647165026.png" alt="desc"></p><p>切换到coupon命名空间下，查看所克隆的规则</p><p>8、修改“gulimall-coupon”下的bootstrap.properties文件，添加如下配置信息</p><figure class="highlight properties"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="attr">spring.cloud.nacos.config.namespace</span>=<span class="string">0114fcbe-b6f5-471a-85db-40b6f34e7597</span></span><br></pre></td></tr></table></figure><p>这里指明的是，读取时使用coupon命名空间下的配置。</p><p>9、重启“gulimall-coupon”，访问：<a href="http://localhost:7000/coupon/categorybounds/test">http://localhost:7000/coupon/categorybounds/test</a></p><h3 id="DataID方案"><a href="#DataID方案" class="headerlink" title="DataID方案"></a>DataID方案</h3><p>通过指定spring.profile.active和配置文件的DataID，来使不同环境下读取不同的配置，读取配置时，使用的是默认命名空间public，默认分组（default_group）下的DataID。</p><p>默认情况，Namespace=public，Group=DEFAULT GROUP，默认Cluster是DEFAULT</p><p>通过制定<code>spring.profiles.active=dev</code>可以制定<code>xxx-dev.properties</code>的配置文件</p><h3 id="Group方案"><a href="#Group方案" class="headerlink" title="Group方案"></a>Group方案</h3><p>通过Group实现环境区分</p><p>实例：通过使用不同的组，来读取不同的配置，还是以上面的gulimall-coupon微服务为例</p><p>1、新建“gulimall-coupon.properties”，将它置于“dev”组下</p><p><img src="https://cdn.jsdelivr.net/gh/zsxfa/CDN/img/md/2022/03/13/1647165221.png" alt="desc"></p><p>2、修改“bootstrap.properties”配置，添加如下的配置</p><figure class="highlight properties"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="attr">spring.cloud.nacos.config.group</span>=<span class="string">dev</span></span><br></pre></td></tr></table></figure><p>3、重启“gulimall-coupon”，访问：<a href="http://localhost:7000/coupon/categorybounds/test">http://localhost:7000/coupon/categorybounds/test</a></p><p><img src="https://cdn.jsdelivr.net/gh/zsxfa/CDN/img/md/2022/03/13/1647164578.png" alt="desc"></p><h2 id="5）同时加载多个配置集"><a href="#5）同时加载多个配置集" class="headerlink" title="5）同时加载多个配置集"></a>5）同时加载多个配置集</h2><p>当微服务数量很庞大时，将所有配置都书写到一个配置文件中，显然不是太合适。对此我们可以将配置按照功能的不同，拆分为不同的配置文件。</p><p>如下面的配置文件：</p><figure class="highlight yaml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br></pre></td><td class="code"><pre><span class="line"><span class="attr">server:</span></span><br><span class="line">  <span class="attr">port:</span> <span class="number">7000</span></span><br><span class="line"></span><br><span class="line"><span class="attr">spring:</span></span><br><span class="line">  <span class="attr">datasource:</span></span><br><span class="line">    <span class="comment">#MySQL配置</span></span><br><span class="line">    <span class="attr">driverClassName:</span> <span class="string">com.mysql.cj.jdbc.Driver</span></span><br><span class="line">    <span class="attr">url:</span> <span class="string">jdbc:mysql://192.168.56.10:3306/gulimall_sms?useUnicode=true&amp;characterEncoding=UTF-8&amp;useSSL=false</span></span><br><span class="line">    <span class="attr">username:</span> <span class="string">root</span></span><br><span class="line">    <span class="attr">password:</span> <span class="string">root</span></span><br><span class="line"></span><br><span class="line">  <span class="attr">application:</span></span><br><span class="line">    <span class="attr">name:</span> <span class="string">gulimall-coupon</span></span><br><span class="line">  <span class="attr">cloud:</span></span><br><span class="line">    <span class="attr">nacos:</span></span><br><span class="line">      <span class="attr">discovery:</span></span><br><span class="line">        <span class="attr">server-addr:</span> <span class="number">127.0</span><span class="number">.0</span><span class="number">.1</span><span class="string">:8848</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="attr">mybatis-plus:</span></span><br><span class="line">  <span class="attr">global-config:</span></span><br><span class="line">    <span class="attr">db-config:</span></span><br><span class="line">      <span class="attr">id-type:</span> <span class="string">auto</span></span><br><span class="line">  <span class="attr">mapper-locations:</span> <span class="string">classpath:/mapper/**/*.xml</span></span><br></pre></td></tr></table></figure><p>我们可以将，</p><p>数据源有关的配置写到一个配置文件中：</p><figure class="highlight yaml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="attr">spring:</span></span><br><span class="line">  <span class="attr">datasource:</span></span><br><span class="line">    <span class="comment">#MySQL配置</span></span><br><span class="line">    <span class="attr">driverClassName:</span> <span class="string">com.mysql.cj.jdbc.Driver</span></span><br><span class="line">    <span class="attr">url:</span> <span class="string">jdbc:mysql://192.168.56.10:3306/gulimall_sms?useUnicode=true&amp;characterEncoding=UTF-8&amp;useSSL=false</span></span><br><span class="line">    <span class="attr">username:</span> <span class="string">root</span></span><br><span class="line">    <span class="attr">password:</span> <span class="string">root</span></span><br></pre></td></tr></table></figure><p>和框架有关的写到另外一个配置文件中：</p><figure class="highlight yaml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="attr">mybatis-plus:</span></span><br><span class="line">  <span class="attr">global-config:</span></span><br><span class="line">    <span class="attr">db-config:</span></span><br><span class="line">      <span class="attr">id-type:</span> <span class="string">auto</span></span><br><span class="line">  <span class="attr">mapper-locations:</span> <span class="string">classpath:/mapper/**/*.xml</span></span><br></pre></td></tr></table></figure><p>也可以将上面的这些配置交给nacos来进行管理。</p><p>实例：将“gulimall-coupon”的“application.yml”文件拆分为多个配置，并放置到nacos配置中心</p><p>1、创建“datasource.yml”，用于存储和数据源有关的配置</p><figure class="highlight yml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="attr">spring:</span></span><br><span class="line">  <span class="attr">datasource:</span></span><br><span class="line">    <span class="comment">#MySQL配置</span></span><br><span class="line">    <span class="attr">driverClassName:</span> <span class="string">com.mysql.cj.jdbc.Driver</span></span><br><span class="line">    <span class="attr">url:</span> <span class="string">jdbc:mysql://192.168.56.10:3306/gulimall_sms?useUnicode=true&amp;characterEncoding=UTF-8&amp;useSSL=false</span></span><br><span class="line">    <span class="attr">username:</span> <span class="string">root</span></span><br><span class="line">    <span class="attr">password:</span> <span class="string">root</span></span><br></pre></td></tr></table></figure><p>在coupon命名空间中，创建“datasource.yml”配置</p><p><img src="https://cdn.jsdelivr.net/gh/zsxfa/CDN/img/md/2022/03/13/1647165375.png" alt="desc"></p><p>2、将和mybatis相关的配置，放置到“mybatis.yml”中</p><figure class="highlight yaml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="attr">mybatis-plus:</span></span><br><span class="line">  <span class="attr">global-config:</span></span><br><span class="line">    <span class="attr">db-config:</span></span><br><span class="line">      <span class="attr">id-type:</span> <span class="string">auto</span></span><br><span class="line">  <span class="attr">mapper-locations:</span> <span class="string">classpath:/mapper/**/*.xml</span></span><br></pre></td></tr></table></figure><p><img src="https://cdn.jsdelivr.net/gh/zsxfa/CDN/img/md/2022/03/13/1647165414.png" alt="desc"></p><p>3、创建“other.yml”配置，保存其他的配置信息</p><figure class="highlight yaml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line"><span class="attr">server:</span></span><br><span class="line">  <span class="attr">port:</span> <span class="number">7000</span></span><br><span class="line"></span><br><span class="line"><span class="attr">spring:</span></span><br><span class="line">  <span class="attr">application:</span></span><br><span class="line">    <span class="attr">name:</span> <span class="string">gulimall-coupon</span></span><br><span class="line">  <span class="attr">cloud:</span></span><br><span class="line">    <span class="attr">nacos:</span></span><br><span class="line">      <span class="attr">discovery:</span></span><br><span class="line">        <span class="attr">server-addr:</span> <span class="number">127.0</span><span class="number">.0</span><span class="number">.1</span><span class="string">:8848</span></span><br></pre></td></tr></table></figure><p><img src="https://cdn.jsdelivr.net/gh/zsxfa/CDN/img/md/2022/03/13/1647165565.png" alt="desc"></p><p>现在“mybatis.yml”、“datasource.yml”和“other.yml”共同构成了微服务的配置。</p><p>4、修改“gulimall-coupon”的“bootstrap.properties”文件，加载“mybatis.yml”、“datasource.yml”和“other.yml”配置</p><figure class="highlight properties"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line"><span class="attr">spring.cloud.nacos.config.extension-configs[0].data-id</span>=<span class="string">mybatis.yml</span></span><br><span class="line"><span class="attr">spring.cloud.nacos.config.extension-configs[0].group</span>=<span class="string">dev</span></span><br><span class="line"><span class="attr">spring.cloud.nacos.config.extension-configs[0].refresh</span>=<span class="string">true</span></span><br><span class="line"></span><br><span class="line"><span class="attr">spring.cloud.nacos.config.extension-configs[1].data-id</span>=<span class="string">datasource.yml</span></span><br><span class="line"><span class="attr">spring.cloud.nacos.config.extension-configs[1].group</span>=<span class="string">dev</span></span><br><span class="line"><span class="attr">spring.cloud.nacos.config.extension-configs[1].refresh</span>=<span class="string">true</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="attr">spring.cloud.nacos.config.extension-configs[2].data-id</span>=<span class="string">other.yml</span></span><br><span class="line"><span class="attr">spring.cloud.nacos.config.extension-configs[2].group</span>=<span class="string">dev</span></span><br><span class="line"><span class="attr">spring.cloud.nacos.config.extension-configs[2].refresh</span>=<span class="string">true</span></span><br></pre></td></tr></table></figure><p>“spring.cloud.nacos.config.ext-config”已经被废弃，建议使用“spring.cloud.nacos.config.extension-configs”，根据自己的版本选择配置。</p><p>5、注释“application.yml”文件中的所有配置</p><p>6、重启“gulimall-coupon”服务，然后访问：<a href="http://localhost:7000/coupon/categorybounds/test">http://localhost:7000/coupon/categorybounds/test</a></p><p> <img src="https://cdn.jsdelivr.net/gh/zsxfa/CDN/img/md/2022/03/13/1647164578.png" alt="desc"></p><p>7、访问：<a href="http://localhost:7000/coupon/categorybounds/list">http://localhost:7000/coupon/categorybounds/list</a>，查看是否能够正常的访问数据库</p><p><img src="https://cdn.jsdelivr.net/gh/zsxfa/CDN/img/md/2022/03/13/1647165656.png" alt="desc"></p><p>小结：</p><p>1)、微服务任何配置信息，任何配置文件都可以放在配置中心；</p><p>2)、只需要在bootstrap.properties中，说明加载配置中心的哪些配置文件即可；</p><p>3)、@Value, @ConfigurationProperties。都可以用来获取配置中心中所配置的信息；</p><p>4)、配置中心有的优先使用配置中心中的，没有则使用本地的配置。</p><h1 id="网关"><a href="#网关" class="headerlink" title="网关"></a>网关</h1><h2 id="1、注册“gulimall-gateway”到Nacos"><a href="#1、注册“gulimall-gateway”到Nacos" class="headerlink" title="1、注册“gulimall-gateway”到Nacos"></a>1、注册“gulimall-gateway”到Nacos</h2><h3 id="1）创建“gulimall-gateway”"><a href="#1）创建“gulimall-gateway”" class="headerlink" title="1）创建“gulimall-gateway”"></a>1）创建“gulimall-gateway”</h3><p>SpringCloud gateway</p><h3 id="2）添加“gulimall-common”依赖和“spring-cloud-starter-gateway”依赖"><a href="#2）添加“gulimall-common”依赖和“spring-cloud-starter-gateway”依赖" class="headerlink" title="2）添加“gulimall-common”依赖和“spring-cloud-starter-gateway”依赖"></a>2）添加“gulimall-common”依赖和“spring-cloud-starter-gateway”依赖</h3><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>io.niceseason.gulimall<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>gulimall-common<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">version</span>&gt;</span>1.0-SNAPSHOT<span class="tag">&lt;/<span class="name">version</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>org.springframework.cloud<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>spring-cloud-starter-gateway<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br></pre></td></tr></table></figure><h3 id="3）“com-atguigu-gulimall-gateway-GulimallGatewayApplication”类上加上“-EnableDiscoveryClient”注解"><a href="#3）“com-atguigu-gulimall-gateway-GulimallGatewayApplication”类上加上“-EnableDiscoveryClient”注解" class="headerlink" title="3）“com.atguigu.gulimall.gateway.GulimallGatewayApplication”类上加上“@EnableDiscoveryClient”注解"></a>3）“com.atguigu.gulimall.gateway.GulimallGatewayApplication”类上加上“@EnableDiscoveryClient”注解</h3><h3 id="4）在Nacos中创建“gateway”命名空间，同时在该命名空间中创建“gulimall-gateway-yml”"><a href="#4）在Nacos中创建“gateway”命名空间，同时在该命名空间中创建“gulimall-gateway-yml”" class="headerlink" title="4）在Nacos中创建“gateway”命名空间，同时在该命名空间中创建“gulimall-gateway.yml”"></a>4）在Nacos中创建“gateway”命名空间，同时在该命名空间中创建“gulimall-gateway.yml”</h3><p><img src="https://cdn.jsdelivr.net/gh/zsxfa/CDN/img/md/2022/03/13/1647165725.png" alt="desc"></p><h3 id="5）创建“bootstrap-properties”文件，添加如下配置，指明配置中心地址和所属命名空间"><a href="#5）创建“bootstrap-properties”文件，添加如下配置，指明配置中心地址和所属命名空间" class="headerlink" title="5）创建“bootstrap.properties”文件，添加如下配置，指明配置中心地址和所属命名空间"></a>5）创建“bootstrap.properties”文件，添加如下配置，指明配置中心地址和所属命名空间</h3><figure class="highlight properties"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="attr">spring.application.name</span>=<span class="string">gulimall-gateway</span></span><br><span class="line"><span class="attr">spring.cloud.nacos.config.server-addr</span>=<span class="string">127.0.0.1:8848</span></span><br><span class="line"><span class="attr">spring.cloud.nacos.config.namespace</span>=<span class="string">91170566-3108-4593-b497-3ffea6f4555c</span></span><br></pre></td></tr></table></figure><h3 id="6）创建“application-properties”文件，指定服务名和注册中心地址"><a href="#6）创建“application-properties”文件，指定服务名和注册中心地址" class="headerlink" title="6）创建“application.properties”文件，指定服务名和注册中心地址"></a>6）创建“application.properties”文件，指定服务名和注册中心地址</h3><figure class="highlight properties"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="attr">spring.application.name</span>=<span class="string">gulimall-gateway</span></span><br><span class="line"><span class="attr">spring.cloud.nacos.discovery.server-addr</span>=<span class="string">127.0.0.1:8848</span></span><br><span class="line"><span class="attr">server.port</span>=<span class="string">88</span></span><br></pre></td></tr></table></figure><h3 id="7）启动“gulimall-gateway”"><a href="#7）启动“gulimall-gateway”" class="headerlink" title="7）启动“gulimall-gateway”"></a>7）启动“gulimall-gateway”</h3><p>启动报错：</p><figure class="highlight verilog"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">Description:</span><br><span class="line"></span><br><span class="line">Failed to configure a DataSource: &#x27;url&#x27; attribute is <span class="keyword">not</span> specified <span class="keyword">and</span> no embedded datasource could be configured.</span><br><span class="line"></span><br><span class="line">Reason: Failed to determine a suitable driver <span class="keyword">class</span></span><br></pre></td></tr></table></figure><p>解决方法：在“com.atguigu.gulimall.gateway.GulimallGatewayApplication”中排除和数据源相关的配置</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">@SpringBootApplication(exclude = &#123;DataSourceAutoConfiguration.class&#125;)</span></span><br></pre></td></tr></table></figure><p>重新启动</p><p>访问：<a href="http://localhost:8848/nacos/#">http://localhost:8848/nacos/#</a>，查看到该服务已经注册到了Nacos中</p><p><img src="https://cdn.jsdelivr.net/gh/zsxfa/CDN/img/md/2022/03/13/1647165869.png" alt="desc"></p><h2 id="2、案例"><a href="#2、案例" class="headerlink" title="2、案例"></a>2、案例</h2><p>现在想要实现针对于“<a href="http://localhost:88/hello?url=baidu%E2%80%9D%EF%BC%8C%E8%BD%AC%E5%8F%91%E5%88%B0%E2%80%9Chttps://www.baidu.com%E2%80%9D%EF%BC%8C%E9%92%88%E5%AF%B9%E4%BA%8E%E2%80%9Chttp://localhost:88/hello?url=qq%E2%80%9D%E7%9A%84%E8%AF%B7%E6%B1%82%EF%BC%8C%E8%BD%AC%E5%8F%91%E5%88%B0%E2%80%9Chttps://www.qq.com/%E2%80%9D">http://localhost:88/hello?url=baidu”，转发到“https://www.baidu.com”，针对于“http://localhost:88/hello?url=qq”的请求，转发到“https://www.qq.com/”</a></p><h3 id="1）创建“application-yml”"><a href="#1）创建“application-yml”" class="headerlink" title="1）创建“application.yml”"></a>1）创建“application.yml”</h3><figure class="highlight yaml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line"><span class="attr">spring:</span></span><br><span class="line">  <span class="attr">cloud:</span></span><br><span class="line">    <span class="attr">gateway:</span></span><br><span class="line">      <span class="attr">routes:</span></span><br><span class="line">        <span class="bullet">-</span> <span class="attr">id:</span> <span class="string">baidu_route</span></span><br><span class="line">          <span class="attr">uri:</span> <span class="string">https://www.baidu.com</span></span><br><span class="line">          <span class="attr">predicates:</span></span><br><span class="line">            <span class="bullet">-</span> <span class="string">Query=url,</span> <span class="string">baidu</span></span><br><span class="line">        <span class="bullet">-</span> <span class="attr">id:</span> <span class="string">qq_route</span></span><br><span class="line">          <span class="attr">uri:</span> <span class="string">https://www.qq.com/</span></span><br><span class="line">          <span class="attr">predicates:</span></span><br><span class="line">            <span class="bullet">-</span> <span class="string">Query=url,</span> <span class="string">qq</span></span><br></pre></td></tr></table></figure><h3 id="2）启动“gulimall-gateway”"><a href="#2）启动“gulimall-gateway”" class="headerlink" title="2）启动“gulimall-gateway”"></a>2）启动“gulimall-gateway”</h3><h3 id="3）测试"><a href="#3）测试" class="headerlink" title="3）测试"></a>3）测试</h3><p>访问：<a href="http://localhost:88/hello?url=baidu">http://localhost:88/hello?url=baidu</a></p><p>访问：<a href="http://localhost:88/hello?url=qq">http://localhost:88/hello?url=qq</a></p><p><a href="https://cloud.spring.io/spring-cloud-static/spring-cloud-gateway/2.2.2.RELEASE/reference/html/#gateway-request-predicates-factories">Gateway官方文档</a></p><h1 id="Vue"><a href="#Vue" class="headerlink" title="Vue"></a>Vue</h1><p>安装vue</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta prompt_"># </span><span class="language-bash">最新稳定版</span></span><br><span class="line"><span class="meta prompt_">$ </span><span class="language-bash">npm install vue</span></span><br></pre></td></tr></table></figure><h2 id="1、vue声明式渲染"><a href="#1、vue声明式渲染" class="headerlink" title="1、vue声明式渲染"></a>1、vue声明式渲染</h2><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">let</span> vm = <span class="keyword">new</span> <span class="title class_">Vue</span>(&#123;</span><br><span class="line">    <span class="attr">el</span>: <span class="string">&quot;#app&quot;</span>,<span class="comment">//绑定元素</span></span><br><span class="line">    <span class="attr">data</span>: &#123;  <span class="comment">//封装数据</span></span><br><span class="line">        <span class="attr">name</span>: <span class="string">&quot;张三&quot;</span>,</span><br><span class="line">        <span class="attr">num</span>: <span class="number">1</span></span><br><span class="line">    &#125;,</span><br><span class="line">    <span class="attr">methods</span>:&#123;  <span class="comment">//封装方法</span></span><br><span class="line">        <span class="title function_">cancle</span>(<span class="params"></span>)&#123;</span><br><span class="line">            <span class="variable language_">this</span>.<span class="property">num</span> -- ;</span><br><span class="line">        &#125;,</span><br><span class="line">        <span class="title function_">hello</span>(<span class="params"></span>)&#123;</span><br><span class="line">            <span class="keyword">return</span> <span class="string">&quot;1&quot;</span></span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;);</span><br></pre></td></tr></table></figure><h2 id="2、双向绑定-模型变化，视图变化。反之亦然"><a href="#2、双向绑定-模型变化，视图变化。反之亦然" class="headerlink" title="2、双向绑定,模型变化，视图变化。反之亦然"></a>2、双向绑定,模型变化，视图变化。反之亦然</h2><p>双向绑定使用v-model</p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">&quot;text&quot;</span> <span class="attr">v-model</span>=<span class="string">&quot;num&quot;</span>&gt;</span></span><br></pre></td></tr></table></figure><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">&lt;h1&gt; &#123;&#123;name&#125;&#125; ,非常帅，有&#123;&#123;num&#125;&#125;个人为他点赞&#123;&#123;<span class="title function_">hello</span>()&#125;&#125;&lt;/h1&gt;</span><br></pre></td></tr></table></figure><p><img src="https://cdn.jsdelivr.net/gh/zsxfa/CDN/img/md/2022/03/14/1647218668.png" alt="desc"></p><h2 id="3、事件处理"><a href="#3、事件处理" class="headerlink" title="3、事件处理"></a>3、事件处理</h2><p>v-xx：指令<br>1、创建vue实例，关联页面的模板，将自己的数据（data）渲染到关联的模板，响应式的<br>2、指令来简化对dom的一些操作。<br>3、声明方法来做更复杂的操作。methods里面可以封装方法。</p><p>v-on是按钮的单击事件：</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">&lt;button v-on:click=&quot;num++&quot;&gt;点赞&lt;/button&gt;</span><br></pre></td></tr></table></figure><p>在VUE中el,data和vue的作用:</p><ul><li>el：用来绑定数据；</li><li>data:用来封装数据；</li><li>methods：用来封装方法，并且能够封装多个方法，如何上面封装了cancell和hello方法。</li></ul><p>安装“Vue 3 Snippets”，用来做代码提示</p><p><img src="https://cdn.jsdelivr.net/gh/zsxfa/CDN/img/md/2022/03/14/1647218806.png" alt="desc"></p><p>为了方便的在浏览器上调试VUE程序，需要安装“<a href="https://github.com/vuejs/vue-devtools">vue-devtools</a>”，编译后安装到chrome中即可。</p><p>详细的使用方法见：<a href="https://www.jianshu.com/p/63f09651724c">Vue调试神器vue-devtools安装</a></p><p>“v-html”不会对于HTML标签进行转义，而是直接在浏览器上显示data所设置的内容;而“ v-text”会对html标签进行转义</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br></pre></td><td class="code"><pre><span class="line">&lt;div id=<span class="string">&quot;app&quot;</span>&gt;</span><br><span class="line">    &#123;&#123;msg&#125;&#125;  &#123;&#123;<span class="number">1</span>+<span class="number">1</span>&#125;&#125;  &#123;&#123;<span class="title function_">hello</span>()&#125;&#125;&lt;br/&gt;</span><br><span class="line">        <span class="language-xml"><span class="tag">&lt;<span class="name">span</span> <span class="attr">v-html</span>=<span class="string">&quot;msg&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">span</span>&gt;</span></span></span><br><span class="line"><span class="language-xml"><span class="tag">&lt;<span class="name">br</span>/&gt;</span></span></span><br><span class="line">            <span class="language-xml"><span class="tag">&lt;<span class="name">span</span> <span class="attr">v-text</span>=<span class="string">&quot;msg&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">span</span>&gt;</span></span></span><br><span class="line">&lt;/div&gt;</span><br><span class="line"></span><br><span class="line"><span class="language-xml"><span class="tag">&lt;<span class="name">script</span> <span class="attr">src</span>=<span class="string">&quot;../node_modules/vue/dist/vue.js&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span></span><br><span class="line"></span><br><span class="line"><span class="language-xml"><span class="tag">&lt;<span class="name">script</span>&gt;</span><span class="language-javascript"></span></span></span><br><span class="line"><span class="language-javascript"><span class="language-xml">    <span class="keyword">new</span> <span class="title class_">Vue</span>(&#123;</span></span></span><br><span class="line"><span class="language-javascript"><span class="language-xml">    <span class="attr">el</span>:<span class="string">&quot;#app&quot;</span>,</span></span></span><br><span class="line"><span class="language-javascript"><span class="language-xml">    <span class="attr">data</span>:&#123;</span></span></span><br><span class="line"><span class="language-javascript"><span class="language-xml">        <span class="attr">msg</span>:<span class="string">&quot;&lt;h1&gt;Hello&lt;/h1&gt;&quot;</span>,</span></span></span><br><span class="line"><span class="language-javascript"><span class="language-xml">        <span class="attr">link</span>:<span class="string">&quot;http://www.baidu.com&quot;</span></span></span></span><br><span class="line"><span class="language-javascript"><span class="language-xml">    &#125;,</span></span></span><br><span class="line"><span class="language-javascript"><span class="language-xml">    <span class="attr">methods</span>:&#123;</span></span></span><br><span class="line"><span class="language-javascript"><span class="language-xml">        <span class="title function_">hello</span>(<span class="params"></span>)&#123;</span></span></span><br><span class="line"><span class="language-javascript"><span class="language-xml">            <span class="keyword">return</span> <span class="string">&quot;World&quot;</span></span></span></span><br><span class="line"><span class="language-javascript"><span class="language-xml">        &#125;</span></span></span><br><span class="line"><span class="language-javascript"><span class="language-xml">    &#125;</span></span></span><br><span class="line"><span class="language-javascript"><span class="language-xml">&#125;)</span></span></span><br><span class="line"><span class="language-javascript"><span class="language-xml"></span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span></span><br></pre></td></tr></table></figure>    :称为差值表达式，它必须要写在Html表达式，可以完成数学运算和方法调用<h2 id="4、v-bind-单向绑定"><a href="#4、v-bind-单向绑定" class="headerlink" title="4、v-bind :单向绑定"></a>4、v-bind :单向绑定</h2><p>给html标签的属性绑定</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br></pre></td><td class="code"><pre><span class="line">&lt;!-- 给html标签的属性绑定 --&gt;</span><br><span class="line"><span class="language-xml"><span class="tag">&lt;<span class="name">div</span> <span class="attr">id</span>=<span class="string">&quot;app&quot;</span>&gt;</span> </span></span><br><span class="line"><span class="language-xml"></span></span><br><span class="line"><span class="language-xml">    <span class="tag">&lt;<span class="name">a</span> <span class="attr">v-bind:href</span>=<span class="string">&quot;link&quot;</span>&gt;</span>gogogo<span class="tag">&lt;/<span class="name">a</span>&gt;</span></span></span><br><span class="line"><span class="language-xml"></span></span><br><span class="line"><span class="language-xml"><span class="comment">&lt;!-- class,style  &#123;class名：加上？&#125;--&gt;</span></span></span><br><span class="line"><span class="language-xml"><span class="tag">&lt;<span class="name">span</span> <span class="attr">v-bind:class</span>=<span class="string">&quot;&#123;active:isActive,&#x27;text-danger&#x27;:hasError&#125;&quot;</span></span></span></span><br><span class="line"><span class="tag"><span class="language-xml"><span class="attr">:style</span>=<span class="string">&quot;&#123;color: color1,fontSize: size&#125;&quot;</span>&gt;</span>你好<span class="tag">&lt;/<span class="name">span</span>&gt;</span></span></span><br><span class="line"><span class="language-xml"></span></span><br><span class="line"><span class="language-xml"><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span></span><br><span class="line"></span><br><span class="line"><span class="language-xml"><span class="tag">&lt;<span class="name">script</span> <span class="attr">src</span>=<span class="string">&quot;../node_modules/vue/dist/vue.js&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span></span><br><span class="line"></span><br><span class="line"><span class="language-xml"><span class="tag">&lt;<span class="name">script</span>&gt;</span><span class="language-javascript"></span></span></span><br><span class="line"><span class="language-javascript"><span class="language-xml">    <span class="keyword">let</span> vm = <span class="keyword">new</span> <span class="title class_">Vue</span>(&#123;</span></span></span><br><span class="line"><span class="language-javascript"><span class="language-xml">        <span class="attr">el</span>:<span class="string">&quot;#app&quot;</span>,</span></span></span><br><span class="line"><span class="language-javascript"><span class="language-xml">        <span class="attr">data</span>:&#123;</span></span></span><br><span class="line"><span class="language-javascript"><span class="language-xml">            <span class="attr">link</span>: <span class="string">&quot;http://www.baidu.com&quot;</span>,</span></span></span><br><span class="line"><span class="language-javascript"><span class="language-xml">            <span class="attr">isActive</span>:<span class="literal">true</span>,</span></span></span><br><span class="line"><span class="language-javascript"><span class="language-xml">            <span class="attr">hasError</span>:<span class="literal">true</span>,</span></span></span><br><span class="line"><span class="language-javascript"><span class="language-xml">            <span class="attr">color1</span>:<span class="string">&#x27;red&#x27;</span>,</span></span></span><br><span class="line"><span class="language-javascript"><span class="language-xml">            <span class="attr">size</span>:<span class="string">&#x27;36px&#x27;</span></span></span></span><br><span class="line"><span class="language-javascript"><span class="language-xml">        &#125;</span></span></span><br><span class="line"><span class="language-javascript"><span class="language-xml">    &#125;)</span></span></span><br><span class="line"><span class="language-javascript"><span class="language-xml"></span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span></span><br></pre></td></tr></table></figure><p>上面所完成的任务就是给a标签绑定一个超链接。并且当“isActive”和“hasError”都是true的时候，将属性动态的绑定到，则绑定该“active”和 “text-danger”class。这样可以动态的调整属性的存在。</p><p>而且如果想要实现修改vm的”color1”和“size”， span元素的style也能够随之变化，则可以写作v-bind:style，也可以省略v-bind。</p><h2 id="5、v-model双向绑定"><a href="#5、v-model双向绑定" class="headerlink" title="5、v-model双向绑定"></a>5、v-model双向绑定</h2><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;!DOCTYPE <span class="keyword">html</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">html</span> <span class="attr">lang</span>=<span class="string">&quot;en&quot;</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">head</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">meta</span> <span class="attr">charset</span>=<span class="string">&quot;UTF-8&quot;</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">meta</span> <span class="attr">name</span>=<span class="string">&quot;viewport&quot;</span> <span class="attr">content</span>=<span class="string">&quot;width=device-width, initial-scale=1.0&quot;</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">meta</span> <span class="attr">http-equiv</span>=<span class="string">&quot;X-UA-Compatible&quot;</span> <span class="attr">content</span>=<span class="string">&quot;ie=edge&quot;</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">title</span>&gt;</span>Document<span class="tag">&lt;/<span class="name">title</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">head</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">body</span>&gt;</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line">    <span class="comment">&lt;!-- 表单项，自定义组件 --&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">div</span> <span class="attr">id</span>=<span class="string">&quot;app&quot;</span>&gt;</span></span><br><span class="line"></span><br><span class="line">        精通的语言：</span><br><span class="line">            <span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">&quot;checkbox&quot;</span> <span class="attr">v-model</span>=<span class="string">&quot;language&quot;</span> <span class="attr">value</span>=<span class="string">&quot;Java&quot;</span>&gt;</span> java<span class="tag">&lt;<span class="name">br</span>/&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">&quot;checkbox&quot;</span> <span class="attr">v-model</span>=<span class="string">&quot;language&quot;</span> <span class="attr">value</span>=<span class="string">&quot;PHP&quot;</span>&gt;</span> PHP<span class="tag">&lt;<span class="name">br</span>/&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">&quot;checkbox&quot;</span> <span class="attr">v-model</span>=<span class="string">&quot;language&quot;</span> <span class="attr">value</span>=<span class="string">&quot;Python&quot;</span>&gt;</span> Python<span class="tag">&lt;<span class="name">br</span>/&gt;</span></span><br><span class="line">        选中了 &#123;&#123;language.join(&quot;,&quot;)&#125;&#125;</span><br><span class="line">    <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">    </span><br><span class="line">    <span class="tag">&lt;<span class="name">script</span> <span class="attr">src</span>=<span class="string">&quot;../node_modules/vue/dist/vue.js&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br><span class="line"></span><br><span class="line">    <span class="tag">&lt;<span class="name">script</span>&gt;</span><span class="language-javascript"></span></span><br><span class="line"><span class="language-javascript">        <span class="keyword">let</span> vm = <span class="keyword">new</span> <span class="title class_">Vue</span>(&#123;</span></span><br><span class="line"><span class="language-javascript">            <span class="attr">el</span>:<span class="string">&quot;#app&quot;</span>,</span></span><br><span class="line"><span class="language-javascript">            <span class="attr">data</span>:&#123;</span></span><br><span class="line"><span class="language-javascript">                <span class="attr">language</span>: []</span></span><br><span class="line"><span class="language-javascript">            &#125;</span></span><br><span class="line"><span class="language-javascript">        &#125;)</span></span><br><span class="line"><span class="language-javascript">    </span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;/<span class="name">body</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">html</span>&gt;</span></span><br></pre></td></tr></table></figure><p>上面完成的功能就是通过“v-model”为输入框绑定多个值，能够实现选中的值，在data的language也在不断的发生着变化，</p><p><img src="https://cdn.jsdelivr.net/gh/zsxfa/CDN/img/md/2022/03/14/1647221459.png" alt="desc"></p><p>如果在控制台上指定vm.language=[“Java”,”PHP”]，则data值也会跟着变化。</p><p><img src="https://cdn.jsdelivr.net/gh/zsxfa/CDN/img/md/2022/03/14/1647221505.png" alt="desc"></p><p>通过“v-model”实现了页面发生了变化，则数据也发生变化，数据发生变化，则页面也发生变化，这样就实现了双向绑定。</p><h2 id="6、v-on为按钮绑定事件"><a href="#6、v-on为按钮绑定事件" class="headerlink" title="6、v-on为按钮绑定事件"></a>6、v-on为按钮绑定事件</h2><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">&lt;!--事件中直接写js片段--&gt;</span><br><span class="line"><span class="language-xml"><span class="tag">&lt;<span class="name">button</span> <span class="attr">v-on:click</span>=<span class="string">&quot;num++&quot;</span>&gt;</span>点赞<span class="tag">&lt;/<span class="name">button</span>&gt;</span></span></span><br><span class="line">&lt;!--事件指定一个回调函数，必须是<span class="title class_">Vue</span>实例中定义的函数--&gt;</span><br><span class="line"><span class="language-xml"><span class="tag">&lt;<span class="name">button</span> @<span class="attr">click</span>=<span class="string">&quot;cancle&quot;</span>&gt;</span>取消<span class="tag">&lt;/<span class="name">button</span>&gt;</span></span></span><br></pre></td></tr></table></figure><p>上面是为两个按钮绑定了单击事件，其中一个对于num进行自增，另外一个自减。</p><p>v-on:click也可以写作@click</p><p><strong>事件的冒泡：</strong></p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">&lt;!-- 事件修饰符 --&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">div</span> <span class="attr">style</span>=<span class="string">&quot;border: 1px solid red;padding: 20px;&quot;</span> <span class="attr">v-on:click</span>=<span class="string">&quot;hello&quot;</span>&gt;</span></span><br><span class="line">    大div</span><br><span class="line">    <span class="tag">&lt;<span class="name">div</span> <span class="attr">style</span>=<span class="string">&quot;border: 1px solid blue;padding: 20px;&quot;</span> @<span class="attr">click</span>=<span class="string">&quot;hello&quot;</span>&gt;</span></span><br><span class="line">        小div <span class="tag">&lt;<span class="name">br</span> /&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">a</span> <span class="attr">href</span>=<span class="string">&quot;http://www.baidu.com&quot;</span> @<span class="attr">click.prevent</span>=<span class="string">&quot;hello&quot;</span>&gt;</span>去百度<span class="tag">&lt;/<span class="name">a</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br></pre></td></tr></table></figure><p>上面的这两个嵌套div中，如果点击了内层的div，则外层的div也会被触发；这种问题可以事件修饰符来完成：</p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">&lt;!-- 事件修饰符 --&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">div</span> <span class="attr">style</span>=<span class="string">&quot;border: 1px solid red;padding: 20px;&quot;</span> <span class="attr">v-on:click.once</span>=<span class="string">&quot;hello&quot;</span>&gt;</span></span><br><span class="line">    大div</span><br><span class="line">    <span class="tag">&lt;<span class="name">div</span> <span class="attr">style</span>=<span class="string">&quot;border: 1px solid blue;padding: 20px;&quot;</span> @<span class="attr">click.stop</span>=<span class="string">&quot;hello&quot;</span>&gt;</span></span><br><span class="line">        小div <span class="tag">&lt;<span class="name">br</span> /&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">a</span> <span class="attr">href</span>=<span class="string">&quot;http://www.baidu.com&quot;</span> @<span class="attr">click.prevent.stop</span>=<span class="string">&quot;hello&quot;</span>&gt;</span>去百度<span class="tag">&lt;/<span class="name">a</span>&gt;</span></span><br><span class="line">        <span class="comment">&lt;!--这里禁止了超链接的点击跳转操作，并且只会触发当前对象的操作--&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br></pre></td></tr></table></figure><p><strong>关于事件修饰符：</strong></p><blockquote><p>在事件处理程序中调用 <code>event.preventDefault()</code> 或 <code>event.stopPropagation()</code> 是非常常见的需求。尽管我们可以在方法中轻松实现这点，但更好的方式是：方法只有纯粹的数据逻辑，<br>而不是去处理 DOM 事件细节。<br>为了解决这个问题，Vue.js 为 <code>v-on</code> 提供了事件修饰符。修饰符是由点开头的指令后缀来表示的。</p><p>​    <code>.stop</code> ：阻止事件冒泡到父元素<br>​    <code>.prevent</code>：阻止默认事件发生<br>​    <code>.capture</code>：使用事件捕获模式<br>​    <code>.self</code>：只有元素自身触发事件才执行。（冒泡或捕获的都不执行）<br>​    <code>.once</code>：只执行一次</p></blockquote><p><strong>按键修饰符：</strong></p><p><img src="https://cdn.jsdelivr.net/gh/zsxfa/CDN/img/md/2022/03/14/1647222098.png" alt="desc"></p><blockquote><p>全部的按键别名：</p><p>​    <code>.enter</code><br>​    <code>.tab</code><br>​    <code>.delete</code> (捕获“删除”和“退格”键)<br>​    <code>.esc</code><br>​    <code>.space</code><br>​    <code>.up</code><br>​    <code>.down</code><br>​    <code>.left</code><br>​    <code>.right</code></p></blockquote><h2 id="7、v-for遍历循环"><a href="#7、v-for遍历循环" class="headerlink" title="7、v-for遍历循环"></a>7、v-for遍历循环</h2><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;!DOCTYPE <span class="keyword">html</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">html</span> <span class="attr">lang</span>=<span class="string">&quot;en&quot;</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;<span class="name">head</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">meta</span> <span class="attr">charset</span>=<span class="string">&quot;UTF-8&quot;</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">meta</span> <span class="attr">name</span>=<span class="string">&quot;viewport&quot;</span> <span class="attr">content</span>=<span class="string">&quot;width=device-width, initial-scale=1.0&quot;</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">meta</span> <span class="attr">http-equiv</span>=<span class="string">&quot;X-UA-Compatible&quot;</span> <span class="attr">content</span>=<span class="string">&quot;ie=edge&quot;</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">title</span>&gt;</span>Document<span class="tag">&lt;/<span class="name">title</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">head</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;<span class="name">body</span>&gt;</span></span><br><span class="line"></span><br><span class="line">    <span class="tag">&lt;<span class="name">div</span> <span class="attr">id</span>=<span class="string">&quot;app&quot;</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">ul</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">li</span> <span class="attr">v-for</span>=<span class="string">&quot;(user,index) in users&quot;</span> <span class="attr">:key</span>=<span class="string">&quot;user.name&quot;</span> <span class="attr">v-if</span>=<span class="string">&quot;user.gender == &#x27;女&#x27;&quot;</span>&gt;</span></span><br><span class="line">                <span class="comment">&lt;!-- 1、显示user信息：v-for=&quot;item in items&quot; --&gt;</span></span><br><span class="line">               当前索引：&#123;&#123;index&#125;&#125; ==&gt; &#123;&#123;user.name&#125;&#125;  ==&gt;   &#123;&#123;user.gender&#125;&#125; ==&gt;&#123;&#123;user.age&#125;&#125; <span class="tag">&lt;<span class="name">br</span>&gt;</span></span><br><span class="line">                <span class="comment">&lt;!-- 2、获取数组下标：v-for=&quot;(item,index) in items&quot; --&gt;</span></span><br><span class="line">                <span class="comment">&lt;!-- 3、遍历对象：</span></span><br><span class="line"><span class="comment">                        v-for=&quot;value in object&quot;</span></span><br><span class="line"><span class="comment">                        v-for=&quot;(value,key) in object&quot;</span></span><br><span class="line"><span class="comment">                        v-for=&quot;(value,key,index) in object&quot; </span></span><br><span class="line"><span class="comment">                --&gt;</span></span><br><span class="line">                对象信息：</span><br><span class="line">                <span class="tag">&lt;<span class="name">span</span> <span class="attr">v-for</span>=<span class="string">&quot;(v,k,i) in user&quot;</span>&gt;</span>&#123;&#123;k&#125;&#125;==&#123;&#123;v&#125;&#125;==&#123;&#123;i&#125;&#125;；<span class="tag">&lt;/<span class="name">span</span>&gt;</span></span><br><span class="line">                <span class="comment">&lt;!-- 4、遍历的时候都加上:key来区分不同数据，提高vue渲染效率 --&gt;</span></span><br><span class="line">            <span class="tag">&lt;/<span class="name">li</span>&gt;</span></span><br><span class="line"></span><br><span class="line">            </span><br><span class="line">        <span class="tag">&lt;/<span class="name">ul</span>&gt;</span></span><br><span class="line"></span><br><span class="line">        <span class="tag">&lt;<span class="name">ul</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">li</span> <span class="attr">v-for</span>=<span class="string">&quot;(num,index) in nums&quot;</span> <span class="attr">:key</span>=<span class="string">&quot;index&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">li</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">ul</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">script</span> <span class="attr">src</span>=<span class="string">&quot;../node_modules/vue/dist/vue.js&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">script</span>&gt;</span><span class="language-javascript">         </span></span><br><span class="line"><span class="language-javascript">        <span class="keyword">let</span> app = <span class="keyword">new</span> <span class="title class_">Vue</span>(&#123;</span></span><br><span class="line"><span class="language-javascript">            <span class="attr">el</span>: <span class="string">&quot;#app&quot;</span>,</span></span><br><span class="line"><span class="language-javascript">            <span class="attr">data</span>: &#123;</span></span><br><span class="line"><span class="language-javascript">                <span class="attr">users</span>: [&#123; <span class="attr">name</span>: <span class="string">&#x27;柳岩&#x27;</span>, <span class="attr">gender</span>: <span class="string">&#x27;女&#x27;</span>, <span class="attr">age</span>: <span class="number">21</span> &#125;,</span></span><br><span class="line"><span class="language-javascript">                &#123; <span class="attr">name</span>: <span class="string">&#x27;张三&#x27;</span>, <span class="attr">gender</span>: <span class="string">&#x27;男&#x27;</span>, <span class="attr">age</span>: <span class="number">18</span> &#125;,</span></span><br><span class="line"><span class="language-javascript">                &#123; <span class="attr">name</span>: <span class="string">&#x27;范冰冰&#x27;</span>, <span class="attr">gender</span>: <span class="string">&#x27;女&#x27;</span>, <span class="attr">age</span>: <span class="number">24</span> &#125;,</span></span><br><span class="line"><span class="language-javascript">                &#123; <span class="attr">name</span>: <span class="string">&#x27;刘亦菲&#x27;</span>, <span class="attr">gender</span>: <span class="string">&#x27;女&#x27;</span>, <span class="attr">age</span>: <span class="number">18</span> &#125;,</span></span><br><span class="line"><span class="language-javascript">                &#123; <span class="attr">name</span>: <span class="string">&#x27;古力娜扎&#x27;</span>, <span class="attr">gender</span>: <span class="string">&#x27;女&#x27;</span>, <span class="attr">age</span>: <span class="number">25</span> &#125;],</span></span><br><span class="line"><span class="language-javascript">                <span class="attr">nums</span>: [<span class="number">1</span>,<span class="number">2</span>,<span class="number">3</span>,<span class="number">4</span>,<span class="number">4</span>]</span></span><br><span class="line"><span class="language-javascript">            &#125;,</span></span><br><span class="line"><span class="language-javascript">        &#125;)</span></span><br><span class="line"><span class="language-javascript">    </span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">body</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;/<span class="name">html</span>&gt;</span></span><br></pre></td></tr></table></figure><p>4、遍历的时候都加上:key来区分不同数据，提高vue渲染效率</p><h2 id="过滤器"><a href="#过滤器" class="headerlink" title="过滤器"></a>过滤器</h2><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;!DOCTYPE <span class="keyword">html</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">html</span> <span class="attr">lang</span>=<span class="string">&quot;en&quot;</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;<span class="name">head</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">meta</span> <span class="attr">charset</span>=<span class="string">&quot;UTF-8&quot;</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">meta</span> <span class="attr">name</span>=<span class="string">&quot;viewport&quot;</span> <span class="attr">content</span>=<span class="string">&quot;width=device-width, initial-scale=1.0&quot;</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">meta</span> <span class="attr">http-equiv</span>=<span class="string">&quot;X-UA-Compatible&quot;</span> <span class="attr">content</span>=<span class="string">&quot;ie=edge&quot;</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">title</span>&gt;</span>Document<span class="tag">&lt;/<span class="name">title</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">head</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;<span class="name">body</span>&gt;</span></span><br><span class="line">    <span class="comment">&lt;!-- 过滤器常用来处理文本格式化的操作。过滤器可以用在两个地方：双花括号插值和 v-bind 表达式 --&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">div</span> <span class="attr">id</span>=<span class="string">&quot;app&quot;</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">ul</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">li</span> <span class="attr">v-for</span>=<span class="string">&quot;user in userList&quot;</span>&gt;</span></span><br><span class="line">                &#123;&#123;user.id&#125;&#125; ==&gt; &#123;&#123;user.name&#125;&#125; ==&gt; &#123;&#123;user.gender == 1?&quot;男&quot;:&quot;女&quot;&#125;&#125; ==&gt;</span><br><span class="line">                &#123;&#123;user.gender | genderFilter&#125;&#125; ==&gt; &#123;&#123;user.gender | gFilter&#125;&#125;</span><br><span class="line">                <span class="comment">&lt;!-- 这里的&quot;|&quot;表示的管道，将user.gender的值交给genderFilter --&gt;</span></span><br><span class="line">            <span class="tag">&lt;/<span class="name">li</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">ul</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">script</span> <span class="attr">src</span>=<span class="string">&quot;../node_modules/vue/dist/vue.js&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br><span class="line"></span><br><span class="line">    <span class="tag">&lt;<span class="name">script</span>&gt;</span><span class="language-javascript"></span></span><br><span class="line"><span class="language-javascript">        <span class="comment">// 全局过滤器 </span></span></span><br><span class="line"><span class="language-javascript">        <span class="title class_">Vue</span>.<span class="title function_">filter</span>(<span class="string">&quot;gFilter&quot;</span>, <span class="keyword">function</span> (<span class="params">val</span>) &#123;</span></span><br><span class="line"><span class="language-javascript">            <span class="keyword">if</span> (val == <span class="number">1</span>) &#123;</span></span><br><span class="line"><span class="language-javascript">                <span class="keyword">return</span> <span class="string">&quot;男~~~&quot;</span>;</span></span><br><span class="line"><span class="language-javascript">            &#125; <span class="keyword">else</span> &#123;</span></span><br><span class="line"><span class="language-javascript">                <span class="keyword">return</span> <span class="string">&quot;女~~~&quot;</span>;</span></span><br><span class="line"><span class="language-javascript">            &#125;</span></span><br><span class="line"><span class="language-javascript">        &#125;)</span></span><br><span class="line"><span class="language-javascript"></span></span><br><span class="line"><span class="language-javascript">        <span class="keyword">let</span> vm = <span class="keyword">new</span> <span class="title class_">Vue</span>(&#123;</span></span><br><span class="line"><span class="language-javascript">            <span class="attr">el</span>: <span class="string">&quot;#app&quot;</span>,</span></span><br><span class="line"><span class="language-javascript">            <span class="attr">data</span>: &#123;</span></span><br><span class="line"><span class="language-javascript">                <span class="attr">userList</span>: [</span></span><br><span class="line"><span class="language-javascript">                    &#123; <span class="attr">id</span>: <span class="number">1</span>, <span class="attr">name</span>: <span class="string">&#x27;jacky&#x27;</span>, <span class="attr">gender</span>: <span class="number">1</span> &#125;,</span></span><br><span class="line"><span class="language-javascript">                    &#123; <span class="attr">id</span>: <span class="number">2</span>, <span class="attr">name</span>: <span class="string">&#x27;peter&#x27;</span>, <span class="attr">gender</span>: <span class="number">0</span> &#125;</span></span><br><span class="line"><span class="language-javascript">                ]</span></span><br><span class="line"><span class="language-javascript">            &#125;,</span></span><br><span class="line"><span class="language-javascript">            <span class="attr">filters</span>: &#123;</span></span><br><span class="line"><span class="language-javascript">                <span class="comment">//// filters 定义局部过滤器，只可以在当前vue实例中使用</span></span></span><br><span class="line"><span class="language-javascript">                <span class="title function_">genderFilter</span>(<span class="params">val</span>) &#123;</span></span><br><span class="line"><span class="language-javascript">                    <span class="keyword">if</span> (val == <span class="number">1</span>) &#123;</span></span><br><span class="line"><span class="language-javascript">                        <span class="keyword">return</span> <span class="string">&quot;男&quot;</span>;</span></span><br><span class="line"><span class="language-javascript">                    &#125; <span class="keyword">else</span> &#123;</span></span><br><span class="line"><span class="language-javascript">                        <span class="keyword">return</span> <span class="string">&quot;女&quot;</span>;</span></span><br><span class="line"><span class="language-javascript">                    &#125;</span></span><br><span class="line"><span class="language-javascript">                &#125;</span></span><br><span class="line"><span class="language-javascript">            &#125;</span></span><br><span class="line"><span class="language-javascript">        &#125;)</span></span><br><span class="line"><span class="language-javascript">    </span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">body</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">html</span>&gt;</span></span><br></pre></td></tr></table></figure><h2 id="组件化"><a href="#组件化" class="headerlink" title="组件化"></a>组件化</h2><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;!DOCTYPE <span class="keyword">html</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">html</span> <span class="attr">lang</span>=<span class="string">&quot;en&quot;</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;<span class="name">head</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">meta</span> <span class="attr">charset</span>=<span class="string">&quot;UTF-8&quot;</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">meta</span> <span class="attr">name</span>=<span class="string">&quot;viewport&quot;</span> <span class="attr">content</span>=<span class="string">&quot;width=device-width, initial-scale=1.0&quot;</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">meta</span> <span class="attr">http-equiv</span>=<span class="string">&quot;X-UA-Compatible&quot;</span> <span class="attr">content</span>=<span class="string">&quot;ie=edge&quot;</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">title</span>&gt;</span>Document<span class="tag">&lt;/<span class="name">title</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">head</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;<span class="name">body</span>&gt;</span></span><br><span class="line"></span><br><span class="line">    <span class="tag">&lt;<span class="name">div</span> <span class="attr">id</span>=<span class="string">&quot;app&quot;</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">button</span> <span class="attr">v-on:click</span>=<span class="string">&quot;count++&quot;</span>&gt;</span>我被点击了 &#123;&#123;count&#125;&#125; 次<span class="tag">&lt;/<span class="name">button</span>&gt;</span></span><br><span class="line"></span><br><span class="line">        <span class="tag">&lt;<span class="name">counter</span>&gt;</span><span class="tag">&lt;/<span class="name">counter</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">counter</span>&gt;</span><span class="tag">&lt;/<span class="name">counter</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">counter</span>&gt;</span><span class="tag">&lt;/<span class="name">counter</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">counter</span>&gt;</span><span class="tag">&lt;/<span class="name">counter</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">counter</span>&gt;</span><span class="tag">&lt;/<span class="name">counter</span>&gt;</span></span><br><span class="line">        <span class="comment">&lt;!-- 使用所定义的组件button-counter --&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">button-counter</span>&gt;</span><span class="tag">&lt;/<span class="name">button-counter</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">script</span> <span class="attr">src</span>=<span class="string">&quot;../node_modules/vue/dist/vue.js&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line">    <span class="tag">&lt;<span class="name">script</span>&gt;</span><span class="language-javascript"></span></span><br><span class="line"><span class="language-javascript">        <span class="comment">//1、全局声明注册一个组件</span></span></span><br><span class="line"><span class="language-javascript">        <span class="title class_">Vue</span>.<span class="title function_">component</span>(<span class="string">&quot;counter&quot;</span>, &#123;</span></span><br><span class="line"><span class="language-javascript">            <span class="attr">template</span>: <span class="string">`&lt;button v-on:click=&quot;count++&quot;&gt;我被点击了 &#123;&#123;count&#125;&#125; 次&lt;/button&gt;`</span>,</span></span><br><span class="line"><span class="language-javascript">            <span class="title function_">data</span>(<span class="params"></span>) &#123;</span></span><br><span class="line"><span class="language-javascript">                <span class="keyword">return</span> &#123;</span></span><br><span class="line"><span class="language-javascript">                    <span class="attr">count</span>: <span class="number">1</span></span></span><br><span class="line"><span class="language-javascript">                &#125;</span></span><br><span class="line"><span class="language-javascript">            &#125;</span></span><br><span class="line"><span class="language-javascript">        &#125;);</span></span><br><span class="line"><span class="language-javascript"></span></span><br><span class="line"><span class="language-javascript">        <span class="comment">//2、局部声明一个组件</span></span></span><br><span class="line"><span class="language-javascript">        <span class="keyword">const</span> buttonCounter = &#123;</span></span><br><span class="line"><span class="language-javascript">            <span class="attr">template</span>: <span class="string">`&lt;button v-on:click=&quot;count++&quot;&gt;我被点击了 &#123;&#123;count&#125;&#125; 次~~~&lt;/button&gt;`</span>,</span></span><br><span class="line"><span class="language-javascript">            <span class="title function_">data</span>(<span class="params"></span>) &#123;</span></span><br><span class="line"><span class="language-javascript">                <span class="keyword">return</span> &#123;</span></span><br><span class="line"><span class="language-javascript">                    <span class="attr">count</span>: <span class="number">1</span></span></span><br><span class="line"><span class="language-javascript">                &#125;</span></span><br><span class="line"><span class="language-javascript">            &#125;</span></span><br><span class="line"><span class="language-javascript">        &#125;;</span></span><br><span class="line"><span class="language-javascript"></span></span><br><span class="line"><span class="language-javascript">        <span class="keyword">new</span> <span class="title class_">Vue</span>(&#123;</span></span><br><span class="line"><span class="language-javascript">            <span class="attr">el</span>: <span class="string">&quot;#app&quot;</span>,</span></span><br><span class="line"><span class="language-javascript">            <span class="attr">data</span>: &#123;</span></span><br><span class="line"><span class="language-javascript">                <span class="attr">count</span>: <span class="number">1</span></span></span><br><span class="line"><span class="language-javascript">            &#125;,</span></span><br><span class="line"><span class="language-javascript">            <span class="attr">components</span>: &#123;</span></span><br><span class="line"><span class="language-javascript">                <span class="comment">//声明所定义的局部组件</span></span></span><br><span class="line"><span class="language-javascript">                <span class="string">&#x27;button-counter&#x27;</span>: buttonCounter</span></span><br><span class="line"><span class="language-javascript">            &#125;</span></span><br><span class="line"><span class="language-javascript">        &#125;)</span></span><br><span class="line"><span class="language-javascript">    </span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">body</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">html</span>&gt;</span></span><br></pre></td></tr></table></figure><blockquote><ul><li>组件其实也是一个 Vue 实例，因此它在定义时也会接收：data、methods、生命周期函数等</li><li>不同的是组件不会与页面的元素绑定，否则就无法复用了，因此没有 el 属性。</li><li>但是组件渲染需要 html 模板，所以增加了 template 属性，值就是 HTML 模板</li><li>全局组件定义完毕，任何 vue 实例都可以直接在 HTML 中通过组件名称来使用组件了</li><li>data 必须是一个函数，不再是一个对象。</li></ul></blockquote><h2 id="生命周期钩子函数"><a href="#生命周期钩子函数" class="headerlink" title="生命周期钩子函数"></a>生命周期钩子函数</h2><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;!DOCTYPE <span class="keyword">html</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">html</span> <span class="attr">lang</span>=<span class="string">&quot;en&quot;</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;<span class="name">head</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">meta</span> <span class="attr">charset</span>=<span class="string">&quot;UTF-8&quot;</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">meta</span> <span class="attr">name</span>=<span class="string">&quot;viewport&quot;</span> <span class="attr">content</span>=<span class="string">&quot;width=device-width, initial-scale=1.0&quot;</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">meta</span> <span class="attr">http-equiv</span>=<span class="string">&quot;X-UA-Compatible&quot;</span> <span class="attr">content</span>=<span class="string">&quot;ie=edge&quot;</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">title</span>&gt;</span>Document<span class="tag">&lt;/<span class="name">title</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">head</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;<span class="name">body</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">div</span> <span class="attr">id</span>=<span class="string">&quot;app&quot;</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">span</span> <span class="attr">id</span>=<span class="string">&quot;num&quot;</span>&gt;</span>&#123;&#123;num&#125;&#125;<span class="tag">&lt;/<span class="name">span</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">button</span> @<span class="attr">click</span>=<span class="string">&quot;num++&quot;</span>&gt;</span>赞！<span class="tag">&lt;/<span class="name">button</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">h2</span>&gt;</span>&#123;&#123;name&#125;&#125;，有&#123;&#123;num&#125;&#125;个人点赞<span class="tag">&lt;/<span class="name">h2</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line"></span><br><span class="line">    <span class="tag">&lt;<span class="name">script</span> <span class="attr">src</span>=<span class="string">&quot;../node_modules/vue/dist/vue.js&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br><span class="line">    </span><br><span class="line">    <span class="tag">&lt;<span class="name">script</span>&gt;</span><span class="language-javascript"></span></span><br><span class="line"><span class="language-javascript">        <span class="keyword">let</span> app = <span class="keyword">new</span> <span class="title class_">Vue</span>(&#123;</span></span><br><span class="line"><span class="language-javascript">            <span class="attr">el</span>: <span class="string">&quot;#app&quot;</span>,</span></span><br><span class="line"><span class="language-javascript">            <span class="attr">data</span>: &#123;</span></span><br><span class="line"><span class="language-javascript">                <span class="attr">name</span>: <span class="string">&quot;张三&quot;</span>,</span></span><br><span class="line"><span class="language-javascript">                <span class="attr">num</span>: <span class="number">100</span></span></span><br><span class="line"><span class="language-javascript">            &#125;,</span></span><br><span class="line"><span class="language-javascript">            <span class="attr">methods</span>: &#123;</span></span><br><span class="line"><span class="language-javascript">                <span class="title function_">show</span>(<span class="params"></span>) &#123;</span></span><br><span class="line"><span class="language-javascript">                    <span class="keyword">return</span> <span class="variable language_">this</span>.<span class="property">name</span>;</span></span><br><span class="line"><span class="language-javascript">                &#125;,</span></span><br><span class="line"><span class="language-javascript">                <span class="title function_">add</span>(<span class="params"></span>) &#123;</span></span><br><span class="line"><span class="language-javascript">                    <span class="variable language_">this</span>.<span class="property">num</span>++;</span></span><br><span class="line"><span class="language-javascript">                &#125;</span></span><br><span class="line"><span class="language-javascript">            &#125;,</span></span><br><span class="line"><span class="language-javascript">            <span class="title function_">beforeCreate</span>(<span class="params"></span>) &#123;</span></span><br><span class="line"><span class="language-javascript">                <span class="variable language_">console</span>.<span class="title function_">log</span>(<span class="string">&quot;=========beforeCreate=============&quot;</span>);</span></span><br><span class="line"><span class="language-javascript">                <span class="variable language_">console</span>.<span class="title function_">log</span>(<span class="string">&quot;数据模型未加载：&quot;</span> + <span class="variable language_">this</span>.<span class="property">name</span>, <span class="variable language_">this</span>.<span class="property">num</span>);</span></span><br><span class="line"><span class="language-javascript">                <span class="variable language_">console</span>.<span class="title function_">log</span>(<span class="string">&quot;方法未加载：&quot;</span> + <span class="variable language_">this</span>.<span class="title function_">show</span>());</span></span><br><span class="line"><span class="language-javascript">                <span class="variable language_">console</span>.<span class="title function_">log</span>(<span class="string">&quot;html模板未加载：&quot;</span> + <span class="variable language_">document</span>.<span class="title function_">getElementById</span>(<span class="string">&quot;num&quot;</span>));</span></span><br><span class="line"><span class="language-javascript">            &#125;,</span></span><br><span class="line"><span class="language-javascript">            <span class="attr">created</span>: <span class="keyword">function</span> (<span class="params"></span>) &#123;</span></span><br><span class="line"><span class="language-javascript">                <span class="variable language_">console</span>.<span class="title function_">log</span>(<span class="string">&quot;=========created=============&quot;</span>);</span></span><br><span class="line"><span class="language-javascript">                <span class="variable language_">console</span>.<span class="title function_">log</span>(<span class="string">&quot;数据模型已加载：&quot;</span> + <span class="variable language_">this</span>.<span class="property">name</span>, <span class="variable language_">this</span>.<span class="property">num</span>);</span></span><br><span class="line"><span class="language-javascript">                <span class="variable language_">console</span>.<span class="title function_">log</span>(<span class="string">&quot;方法已加载：&quot;</span> + <span class="variable language_">this</span>.<span class="title function_">show</span>());</span></span><br><span class="line"><span class="language-javascript">                <span class="variable language_">console</span>.<span class="title function_">log</span>(<span class="string">&quot;html模板已加载：&quot;</span> + <span class="variable language_">document</span>.<span class="title function_">getElementById</span>(<span class="string">&quot;num&quot;</span>));</span></span><br><span class="line"><span class="language-javascript">                <span class="variable language_">console</span>.<span class="title function_">log</span>(<span class="string">&quot;html模板未渲染：&quot;</span> + <span class="variable language_">document</span>.<span class="title function_">getElementById</span>(<span class="string">&quot;num&quot;</span>).<span class="property">innerText</span>);</span></span><br><span class="line"><span class="language-javascript">            &#125;,</span></span><br><span class="line"><span class="language-javascript">            <span class="title function_">beforeMount</span>(<span class="params"></span>) &#123;</span></span><br><span class="line"><span class="language-javascript">                <span class="variable language_">console</span>.<span class="title function_">log</span>(<span class="string">&quot;=========beforeMount=============&quot;</span>);</span></span><br><span class="line"><span class="language-javascript">                <span class="variable language_">console</span>.<span class="title function_">log</span>(<span class="string">&quot;html模板未渲染：&quot;</span> + <span class="variable language_">document</span>.<span class="title function_">getElementById</span>(<span class="string">&quot;num&quot;</span>).<span class="property">innerText</span>);</span></span><br><span class="line"><span class="language-javascript">            &#125;,</span></span><br><span class="line"><span class="language-javascript">            <span class="title function_">mounted</span>(<span class="params"></span>) &#123;</span></span><br><span class="line"><span class="language-javascript">                <span class="variable language_">console</span>.<span class="title function_">log</span>(<span class="string">&quot;=========mounted=============&quot;</span>);</span></span><br><span class="line"><span class="language-javascript">                <span class="variable language_">console</span>.<span class="title function_">log</span>(<span class="string">&quot;html模板已渲染：&quot;</span> + <span class="variable language_">document</span>.<span class="title function_">getElementById</span>(<span class="string">&quot;num&quot;</span>).<span class="property">innerText</span>);</span></span><br><span class="line"><span class="language-javascript">            &#125;,</span></span><br><span class="line"><span class="language-javascript">            <span class="title function_">beforeUpdate</span>(<span class="params"></span>) &#123;</span></span><br><span class="line"><span class="language-javascript">                <span class="variable language_">console</span>.<span class="title function_">log</span>(<span class="string">&quot;=========beforeUpdate=============&quot;</span>);</span></span><br><span class="line"><span class="language-javascript">                <span class="variable language_">console</span>.<span class="title function_">log</span>(<span class="string">&quot;数据模型已更新：&quot;</span> + <span class="variable language_">this</span>.<span class="property">num</span>);</span></span><br><span class="line"><span class="language-javascript">                <span class="variable language_">console</span>.<span class="title function_">log</span>(<span class="string">&quot;html模板未更新：&quot;</span> + <span class="variable language_">document</span>.<span class="title function_">getElementById</span>(<span class="string">&quot;num&quot;</span>).<span class="property">innerText</span>);</span></span><br><span class="line"><span class="language-javascript">            &#125;,</span></span><br><span class="line"><span class="language-javascript">            <span class="title function_">updated</span>(<span class="params"></span>) &#123;</span></span><br><span class="line"><span class="language-javascript">                <span class="variable language_">console</span>.<span class="title function_">log</span>(<span class="string">&quot;=========updated=============&quot;</span>);</span></span><br><span class="line"><span class="language-javascript">                <span class="variable language_">console</span>.<span class="title function_">log</span>(<span class="string">&quot;数据模型已更新：&quot;</span> + <span class="variable language_">this</span>.<span class="property">num</span>);</span></span><br><span class="line"><span class="language-javascript">                <span class="variable language_">console</span>.<span class="title function_">log</span>(<span class="string">&quot;html模板已更新：&quot;</span> + <span class="variable language_">document</span>.<span class="title function_">getElementById</span>(<span class="string">&quot;num&quot;</span>).<span class="property">innerText</span>);</span></span><br><span class="line"><span class="language-javascript">            &#125;</span></span><br><span class="line"><span class="language-javascript">        &#125;);</span></span><br><span class="line"><span class="language-javascript">    </span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">body</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">html</span>&gt;</span></span><br></pre></td></tr></table></figure><h2 id="新建代码片段"><a href="#新建代码片段" class="headerlink" title="新建代码片段"></a>新建代码片段</h2><p>文件 ➡ 首选项 ➡ 用户代码片段 ➡ 点击新建全局代码片段 ➡ 取名 vue ➡ 确定</p><figure class="highlight json"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br></pre></td><td class="code"><pre><span class="line"><span class="punctuation">&#123;</span></span><br><span class="line">    <span class="attr">&quot;Print to console&quot;</span><span class="punctuation">:</span> <span class="punctuation">&#123;</span></span><br><span class="line">        <span class="attr">&quot;prefix&quot;</span><span class="punctuation">:</span> <span class="string">&quot;vue&quot;</span><span class="punctuation">,</span></span><br><span class="line">        <span class="attr">&quot;body&quot;</span><span class="punctuation">:</span> <span class="punctuation">[</span></span><br><span class="line">            <span class="string">&quot;&lt;!-- $1 --&gt;&quot;</span><span class="punctuation">,</span></span><br><span class="line">            <span class="string">&quot;&lt;template&gt;&quot;</span><span class="punctuation">,</span></span><br><span class="line">            <span class="string">&quot;&lt;div class=&#x27;$2&#x27;&gt;$5&lt;/div&gt;&quot;</span><span class="punctuation">,</span></span><br><span class="line">            <span class="string">&quot;&lt;/template&gt;&quot;</span><span class="punctuation">,</span></span><br><span class="line">            <span class="string">&quot;&quot;</span><span class="punctuation">,</span></span><br><span class="line">            <span class="string">&quot;&lt;script&gt;&quot;</span><span class="punctuation">,</span></span><br><span class="line">            <span class="string">&quot;//这里可以导入其他文件（比如：组件，工具js，第三方插件js，json文件，图片文件等等）&quot;</span><span class="punctuation">,</span></span><br><span class="line">            <span class="string">&quot;//例如：import 《组件名称》 from &#x27;《组件路径》&#x27;;&quot;</span><span class="punctuation">,</span></span><br><span class="line">            <span class="string">&quot;&quot;</span><span class="punctuation">,</span></span><br><span class="line">            <span class="string">&quot;export default &#123;&quot;</span><span class="punctuation">,</span></span><br><span class="line">            <span class="string">&quot;//import引入的组件需要注入到对象中才能使用&quot;</span><span class="punctuation">,</span></span><br><span class="line">            <span class="string">&quot;components: &#123;&#125;,&quot;</span><span class="punctuation">,</span></span><br><span class="line">            <span class="string">&quot;data() &#123;&quot;</span><span class="punctuation">,</span></span><br><span class="line">            <span class="string">&quot;//这里存放数据&quot;</span><span class="punctuation">,</span></span><br><span class="line">            <span class="string">&quot;return &#123;&quot;</span><span class="punctuation">,</span></span><br><span class="line">            <span class="string">&quot;&quot;</span><span class="punctuation">,</span></span><br><span class="line">            <span class="string">&quot;&#125;;&quot;</span><span class="punctuation">,</span></span><br><span class="line">            <span class="string">&quot;&#125;,&quot;</span><span class="punctuation">,</span></span><br><span class="line">            <span class="string">&quot;//监听属性 类似于data概念&quot;</span><span class="punctuation">,</span></span><br><span class="line">            <span class="string">&quot;computed: &#123;&#125;,&quot;</span><span class="punctuation">,</span></span><br><span class="line">            <span class="string">&quot;//监控data中的数据变化&quot;</span><span class="punctuation">,</span></span><br><span class="line">            <span class="string">&quot;watch: &#123;&#125;,&quot;</span><span class="punctuation">,</span></span><br><span class="line">            <span class="string">&quot;//方法集合&quot;</span><span class="punctuation">,</span></span><br><span class="line">            <span class="string">&quot;methods: &#123;&quot;</span><span class="punctuation">,</span></span><br><span class="line">            <span class="string">&quot;&quot;</span><span class="punctuation">,</span></span><br><span class="line">            <span class="string">&quot;&#125;,&quot;</span><span class="punctuation">,</span></span><br><span class="line">            <span class="string">&quot;//生命周期 - 创建完成（可以访问当前this实例）&quot;</span><span class="punctuation">,</span></span><br><span class="line">            <span class="string">&quot;created() &#123;&quot;</span><span class="punctuation">,</span></span><br><span class="line">            <span class="string">&quot;&quot;</span><span class="punctuation">,</span></span><br><span class="line">            <span class="string">&quot;&#125;,&quot;</span><span class="punctuation">,</span></span><br><span class="line">            <span class="string">&quot;//生命周期 - 挂载完成（可以访问DOM元素）&quot;</span><span class="punctuation">,</span></span><br><span class="line">            <span class="string">&quot;mounted() &#123;&quot;</span><span class="punctuation">,</span></span><br><span class="line">            <span class="string">&quot;&quot;</span><span class="punctuation">,</span></span><br><span class="line">            <span class="string">&quot;&#125;,&quot;</span><span class="punctuation">,</span></span><br><span class="line">            <span class="string">&quot;beforeCreate() &#123;&#125;, //生命周期 - 创建之前&quot;</span><span class="punctuation">,</span></span><br><span class="line">            <span class="string">&quot;beforeMount() &#123;&#125;, //生命周期 - 挂载之前&quot;</span><span class="punctuation">,</span></span><br><span class="line">            <span class="string">&quot;beforeUpdate() &#123;&#125;, //生命周期 - 更新之前&quot;</span><span class="punctuation">,</span></span><br><span class="line">            <span class="string">&quot;updated() &#123;&#125;, //生命周期 - 更新之后&quot;</span><span class="punctuation">,</span></span><br><span class="line">            <span class="string">&quot;beforeDestroy() &#123;&#125;, //生命周期 - 销毁之前&quot;</span><span class="punctuation">,</span></span><br><span class="line">            <span class="string">&quot;destroyed() &#123;&#125;, //生命周期 - 销毁完成&quot;</span><span class="punctuation">,</span></span><br><span class="line">            <span class="string">&quot;activated() &#123;&#125;, //如果页面有keep-alive缓存功能，这个函数会触发&quot;</span><span class="punctuation">,</span></span><br><span class="line">            <span class="string">&quot;&#125;&quot;</span><span class="punctuation">,</span></span><br><span class="line">            <span class="string">&quot;&lt;/script&gt;&quot;</span><span class="punctuation">,</span></span><br><span class="line">            <span class="string">&quot;&lt;style scoped&gt;&quot;</span><span class="punctuation">,</span></span><br><span class="line">            <span class="string">&quot;//@import url($3); 引入公共css类&quot;</span><span class="punctuation">,</span></span><br><span class="line">            <span class="string">&quot;$4&quot;</span><span class="punctuation">,</span></span><br><span class="line">            <span class="string">&quot;&lt;/style&gt;&quot;</span></span><br><span class="line">        <span class="punctuation">]</span><span class="punctuation">,</span></span><br><span class="line">        <span class="attr">&quot;description&quot;</span><span class="punctuation">:</span> <span class="string">&quot;生成vue模板&quot;</span></span><br><span class="line">    <span class="punctuation">&#125;</span><span class="punctuation">,</span></span><br><span class="line">    <span class="attr">&quot;http-get请求&quot;</span><span class="punctuation">:</span> <span class="punctuation">&#123;</span></span><br><span class="line"><span class="attr">&quot;prefix&quot;</span><span class="punctuation">:</span> <span class="string">&quot;httpget&quot;</span><span class="punctuation">,</span></span><br><span class="line"><span class="attr">&quot;body&quot;</span><span class="punctuation">:</span> <span class="punctuation">[</span></span><br><span class="line"><span class="string">&quot;this.\\$http(&#123;&quot;</span><span class="punctuation">,</span></span><br><span class="line"><span class="string">&quot;url: this.\\$http.adornUrl(&#x27;&#x27;),&quot;</span><span class="punctuation">,</span></span><br><span class="line"><span class="string">&quot;method: &#x27;get&#x27;,&quot;</span><span class="punctuation">,</span></span><br><span class="line"><span class="string">&quot;params: this.\\$http.adornParams(&#123;&#125;)&quot;</span><span class="punctuation">,</span></span><br><span class="line"><span class="string">&quot;&#125;).then((&#123; data &#125;) =&gt; &#123;&quot;</span><span class="punctuation">,</span></span><br><span class="line"><span class="string">&quot;&#125;)&quot;</span></span><br><span class="line"><span class="punctuation">]</span><span class="punctuation">,</span></span><br><span class="line"><span class="attr">&quot;description&quot;</span><span class="punctuation">:</span> <span class="string">&quot;httpGET请求&quot;</span></span><br><span class="line">    <span class="punctuation">&#125;</span><span class="punctuation">,</span></span><br><span class="line">    <span class="attr">&quot;http-post请求&quot;</span><span class="punctuation">:</span> <span class="punctuation">&#123;</span></span><br><span class="line"><span class="attr">&quot;prefix&quot;</span><span class="punctuation">:</span> <span class="string">&quot;httppost&quot;</span><span class="punctuation">,</span></span><br><span class="line"><span class="attr">&quot;body&quot;</span><span class="punctuation">:</span> <span class="punctuation">[</span></span><br><span class="line"><span class="string">&quot;this.\\$http(&#123;&quot;</span><span class="punctuation">,</span></span><br><span class="line"><span class="string">&quot;url: this.\\$http.adornUrl(&#x27;&#x27;),&quot;</span><span class="punctuation">,</span></span><br><span class="line"><span class="string">&quot;method: &#x27;post&#x27;,&quot;</span><span class="punctuation">,</span></span><br><span class="line"><span class="string">&quot;data: this.\\$http.adornData(data, false)&quot;</span><span class="punctuation">,</span></span><br><span class="line"><span class="string">&quot;&#125;).then((&#123; data &#125;) =&gt; &#123; &#125;);&quot;</span> </span><br><span class="line"><span class="punctuation">]</span><span class="punctuation">,</span></span><br><span class="line"><span class="attr">&quot;description&quot;</span><span class="punctuation">:</span> <span class="string">&quot;httpPOST请求&quot;</span></span><br><span class="line">    <span class="punctuation">&#125;</span></span><br><span class="line"><span class="punctuation">&#125;</span></span><br></pre></td></tr></table></figure><h3 id="新建一个-vue-文件输入-vue-测试"><a href="#新建一个-vue-文件输入-vue-测试" class="headerlink" title="新建一个 .vue 文件输入 vue 测试"></a>新建一个 .vue 文件输入 vue 测试</h3><p>上面的配置中：<code>&quot;prefix&quot;: &quot;vue&quot;</code>、<code>&quot;prefix&quot;: &quot;httpget&quot;</code>、<code>&quot;prefix&quot;: &quot;httppost&quot;</code> 就是你的快捷输入名称，可自行修改</p><h1 id="element-ui"><a href="#element-ui" class="headerlink" title="element ui"></a>element ui</h1><p>官网： <a href="https://element.eleme.cn/#/zh-CN/component/installation">https://element.eleme.cn/#/zh-CN/component/installation</a> </p><p>安装</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">npm i element-ui -S</span><br></pre></td></tr></table></figure><p> 在 main.js 中写入以下内容： </p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">import ElementUI  from &#x27;element-ui&#x27;</span><br><span class="line">import &#x27;element-ui/lib/theme-chalk/index.css&#x27;;</span><br><span class="line"></span><br><span class="line">Vue.use(ElementUI);</span><br></pre></td></tr></table></figure><h1 id="后端开发"><a href="#后端开发" class="headerlink" title="后端开发"></a>后端开发</h1><h2 id="商品系统分类维护"><a href="#商品系统分类维护" class="headerlink" title="商品系统分类维护"></a>商品系统分类维护</h2><h3 id="递归树形结构获取数据"><a href="#递归树形结构获取数据" class="headerlink" title="递归树形结构获取数据"></a>递归树形结构获取数据</h3><p>在注册中心中“product”命名空间中，创建“gulimall-product.yml”配置文件：</p><p><img src="C:/Users/Jachin/AppData/Roaming/Typora/typora-user-images/image-20220314174256609.png" alt="image-20220314174256609"></p><p>将“application.yml”内容拷贝到该配置文件中</p><figure class="highlight yaml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br></pre></td><td class="code"><pre><span class="line"><span class="attr">server:</span></span><br><span class="line">  <span class="attr">port:</span> <span class="number">10000</span></span><br><span class="line"></span><br><span class="line"><span class="attr">spring:</span></span><br><span class="line">  <span class="attr">datasource:</span></span><br><span class="line">    <span class="comment">#MySQL配置</span></span><br><span class="line">    <span class="attr">driverClassName:</span> <span class="string">com.mysql.cj.jdbc.Driver</span></span><br><span class="line">    <span class="attr">url:</span> <span class="string">jdbc:mysql://192.168.56.10:3306/gulimall_pms?useUnicode=true&amp;characterEncoding=UTF-8&amp;useSSL=false</span></span><br><span class="line">    <span class="attr">username:</span> <span class="string">root</span></span><br><span class="line">    <span class="attr">password:</span> <span class="string">root</span></span><br><span class="line">  <span class="attr">application:</span></span><br><span class="line">    <span class="attr">name:</span> <span class="string">gulimall-product</span></span><br><span class="line">  <span class="attr">cloud:</span></span><br><span class="line">    <span class="attr">nacos:</span></span><br><span class="line">      <span class="attr">discovery:</span></span><br><span class="line">        <span class="attr">server-addr:</span> <span class="number">127.0</span><span class="number">.0</span><span class="number">.1</span><span class="string">:8848</span></span><br><span class="line"></span><br><span class="line"><span class="attr">mybatis-plus:</span></span><br><span class="line">  <span class="attr">global-config:</span></span><br><span class="line">    <span class="attr">db-config:</span></span><br><span class="line">      <span class="attr">id-type:</span> <span class="string">auto</span></span><br><span class="line">  <span class="attr">mapper-locations:</span> <span class="string">classpath:/mapper/**/*.xml</span></span><br></pre></td></tr></table></figure><p>在本地创建“bootstrap.properties”文件，指明配置中心的位置和使用到的配置文件：</p><figure class="highlight properties"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="attr">spring.application.name</span>=<span class="string">gulimall-product</span></span><br><span class="line"><span class="attr">spring.cloud.nacos.config.server-addr</span>=<span class="string">127.0.0.1:8848</span></span><br><span class="line"><span class="attr">spring.cloud.nacos.config.namespace</span>=<span class="string">77833c89-7c41-4325-8440-58c0d74e32c0</span></span><br><span class="line"><span class="attr">spring.cloud.nacos.config.extension-configs[0].data-id</span>=<span class="string">gulimall-product.yml</span></span><br><span class="line"><span class="attr">spring.cloud.nacos.config.extension-configs[0].group</span>=<span class="string">DEFAULT_GROUP</span></span><br><span class="line"><span class="attr">spring.cloud.nacos.config.extension-configs[0].refresh</span>=<span class="string">true</span></span><br></pre></td></tr></table></figure><p>然后启动gulimall-product，查看到该服务已经出现在了nacos的注册中心中了</p><p>修改“com.atguigu.gulimall.product.controller.CategoryController”类，添加如下代码：</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment">* 查出所有分类以及子分类，以树型结构组装起来</span></span><br><span class="line"><span class="comment">*/</span></span><br><span class="line"><span class="meta">@RequestMapping(&quot;/list/tree&quot;)</span></span><br><span class="line"><span class="comment">//@RequiresPermissions(&quot;product:category:list&quot;)</span></span><br><span class="line"><span class="keyword">public</span> R <span class="title function_">list</span><span class="params">(<span class="meta">@RequestParam</span> Map&lt;String, Object&gt; params)</span>&#123;</span><br><span class="line">    List&lt;CategoryEntity&gt; entities = categoryService.listWithTree();</span><br><span class="line">    <span class="keyword">return</span> R.ok().put(<span class="string">&quot;page&quot;</span>, entities);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>测试：<a href="http://localhost:10000/product/category/list/tree">http://localhost:10000/product/category/list/tree</a></p><p><img src="C:/Users/Jachin/AppData/Roaming/Typora/typora-user-images/image-20220314170509529.png" alt="image-20220314170509529"></p><p>如何区别是哪种分类级别？</p><p>答：可以通过分类的parent_cid来进行判断，如果是一级分类，其值为0.</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment">* 查出所有分类以及子分类，以树型结构组装起来</span></span><br><span class="line"><span class="comment">*/</span></span><br><span class="line"><span class="meta">@RequestMapping(&quot;/list/tree&quot;)</span></span><br><span class="line"><span class="comment">//@RequiresPermissions(&quot;product:category:list&quot;)</span></span><br><span class="line"><span class="keyword">public</span> R <span class="title function_">list</span><span class="params">(<span class="meta">@RequestParam</span> Map&lt;String, Object&gt; params)</span>&#123;</span><br><span class="line">    List&lt;CategoryEntity&gt; entities = categoryService.listWithTree();</span><br><span class="line">    <span class="keyword">return</span> R.ok().put(<span class="string">&quot;page&quot;</span>, entities);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="meta">@Override</span></span><br><span class="line"><span class="keyword">public</span> List&lt;CategoryEntity&gt; <span class="title function_">listWithTree</span><span class="params">()</span> &#123;</span><br><span class="line">    <span class="comment">//1.查出所有分类</span></span><br><span class="line">    List&lt;CategoryEntity&gt; entities = baseMapper.selectList(<span class="literal">null</span>);</span><br><span class="line"></span><br><span class="line">    <span class="comment">//2.组装成父子的树形结构</span></span><br><span class="line">    List&lt;CategoryEntity&gt; level1Menus = entities.stream().filter(categoryEntity -&gt;</span><br><span class="line">categoryEntity.getParentCid() == <span class="number">0</span></span><br><span class="line">).map((menu)-&gt;&#123;</span><br><span class="line">        menu.setChildren(getChildrens(menu,entities));</span><br><span class="line">        <span class="keyword">return</span> menu;</span><br><span class="line">    &#125;).sorted((menu1,menu2)-&gt;&#123;</span><br><span class="line">        <span class="keyword">return</span> menu1.getSort() - menu2.getSort();</span><br><span class="line">    &#125;).collect(Collectors.toList());</span><br><span class="line">    <span class="keyword">return</span> level1Menus;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">//递归查找所有菜单的子菜单</span></span><br><span class="line"><span class="keyword">private</span> List&lt;CategoryEntity&gt; <span class="title function_">getChildrens</span><span class="params">(CategoryEntity root, List&lt;CategoryEntity&gt; all)</span>&#123;</span><br><span class="line">    List&lt;CategoryEntity&gt; children = all.stream().filter(CategoryEntity -&gt; &#123;</span><br><span class="line">        <span class="keyword">return</span> CategoryEntity.getParentCid() == root.getCatId();</span><br><span class="line">    &#125;).map(categoryEntity -&gt; &#123;</span><br><span class="line">        <span class="comment">//1.找到子菜单</span></span><br><span class="line">        categoryEntity.setChildren(getChildrens(categoryEntity, all));</span><br><span class="line">        <span class="keyword">return</span> categoryEntity;</span><br><span class="line">    &#125;).sorted((menu1, menu2) -&gt; &#123;</span><br><span class="line">        <span class="comment">//2.菜单的排序</span></span><br><span class="line">        <span class="keyword">return</span> (menu1.getSort() == <span class="literal">null</span> ? <span class="number">0</span> : menu1.getSort()) - (menu2.getSort() == <span class="literal">null</span> ? <span class="number">0</span> : menu2.getSort());</span><br><span class="line">    &#125;).collect(Collectors.toList());</span><br><span class="line">    <span class="keyword">return</span> children;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>下面是得到的部分JSON数据</p><figure class="highlight json"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br><span class="line">116</span><br><span class="line">117</span><br><span class="line">118</span><br><span class="line">119</span><br><span class="line">120</span><br><span class="line">121</span><br><span class="line">122</span><br><span class="line">123</span><br></pre></td><td class="code"><pre><span class="line"><span class="punctuation">[</span></span><br><span class="line">  <span class="punctuation">&#123;</span></span><br><span class="line">    <span class="attr">&quot;catId&quot;</span><span class="punctuation">:</span> <span class="number">1</span><span class="punctuation">,</span></span><br><span class="line">    <span class="attr">&quot;name&quot;</span><span class="punctuation">:</span> <span class="string">&quot;图书、音像、电子书刊&quot;</span><span class="punctuation">,</span></span><br><span class="line">    <span class="attr">&quot;parentCid&quot;</span><span class="punctuation">:</span> <span class="number">0</span><span class="punctuation">,</span></span><br><span class="line">    <span class="attr">&quot;catLevel&quot;</span><span class="punctuation">:</span> <span class="number">1</span><span class="punctuation">,</span></span><br><span class="line">    <span class="attr">&quot;showStatus&quot;</span><span class="punctuation">:</span> <span class="number">1</span><span class="punctuation">,</span></span><br><span class="line">    <span class="attr">&quot;sort&quot;</span><span class="punctuation">:</span> <span class="number">0</span><span class="punctuation">,</span></span><br><span class="line">    <span class="attr">&quot;icon&quot;</span><span class="punctuation">:</span> <span class="keyword">null</span><span class="punctuation">,</span></span><br><span class="line">    <span class="attr">&quot;productUnit&quot;</span><span class="punctuation">:</span> <span class="keyword">null</span><span class="punctuation">,</span></span><br><span class="line">    <span class="attr">&quot;productCount&quot;</span><span class="punctuation">:</span> <span class="number">0</span><span class="punctuation">,</span></span><br><span class="line">    <span class="attr">&quot;childCategoryEntity&quot;</span><span class="punctuation">:</span> <span class="punctuation">[</span></span><br><span class="line">      <span class="punctuation">&#123;</span></span><br><span class="line">        <span class="attr">&quot;catId&quot;</span><span class="punctuation">:</span> <span class="number">22</span><span class="punctuation">,</span></span><br><span class="line">        <span class="attr">&quot;name&quot;</span><span class="punctuation">:</span> <span class="string">&quot;电子书刊&quot;</span><span class="punctuation">,</span></span><br><span class="line">        <span class="attr">&quot;parentCid&quot;</span><span class="punctuation">:</span> <span class="number">1</span><span class="punctuation">,</span></span><br><span class="line">        <span class="attr">&quot;catLevel&quot;</span><span class="punctuation">:</span> <span class="number">2</span><span class="punctuation">,</span></span><br><span class="line">        <span class="attr">&quot;showStatus&quot;</span><span class="punctuation">:</span> <span class="number">1</span><span class="punctuation">,</span></span><br><span class="line">        <span class="attr">&quot;sort&quot;</span><span class="punctuation">:</span> <span class="number">0</span><span class="punctuation">,</span></span><br><span class="line">        <span class="attr">&quot;icon&quot;</span><span class="punctuation">:</span> <span class="keyword">null</span><span class="punctuation">,</span></span><br><span class="line">        <span class="attr">&quot;productUnit&quot;</span><span class="punctuation">:</span> <span class="keyword">null</span><span class="punctuation">,</span></span><br><span class="line">        <span class="attr">&quot;productCount&quot;</span><span class="punctuation">:</span> <span class="number">0</span><span class="punctuation">,</span></span><br><span class="line">        <span class="attr">&quot;childCategoryEntity&quot;</span><span class="punctuation">:</span> <span class="punctuation">[</span></span><br><span class="line">          <span class="punctuation">&#123;</span></span><br><span class="line">            <span class="attr">&quot;catId&quot;</span><span class="punctuation">:</span> <span class="number">165</span><span class="punctuation">,</span></span><br><span class="line">            <span class="attr">&quot;name&quot;</span><span class="punctuation">:</span> <span class="string">&quot;电子书&quot;</span><span class="punctuation">,</span></span><br><span class="line">            <span class="attr">&quot;parentCid&quot;</span><span class="punctuation">:</span> <span class="number">22</span><span class="punctuation">,</span></span><br><span class="line">            <span class="attr">&quot;catLevel&quot;</span><span class="punctuation">:</span> <span class="number">3</span><span class="punctuation">,</span></span><br><span class="line">            <span class="attr">&quot;showStatus&quot;</span><span class="punctuation">:</span> <span class="number">1</span><span class="punctuation">,</span></span><br><span class="line">            <span class="attr">&quot;sort&quot;</span><span class="punctuation">:</span> <span class="number">0</span><span class="punctuation">,</span></span><br><span class="line">            <span class="attr">&quot;icon&quot;</span><span class="punctuation">:</span> <span class="keyword">null</span><span class="punctuation">,</span></span><br><span class="line">            <span class="attr">&quot;productUnit&quot;</span><span class="punctuation">:</span> <span class="keyword">null</span><span class="punctuation">,</span></span><br><span class="line">            <span class="attr">&quot;productCount&quot;</span><span class="punctuation">:</span> <span class="number">0</span><span class="punctuation">,</span></span><br><span class="line">            <span class="attr">&quot;childCategoryEntity&quot;</span><span class="punctuation">:</span> <span class="punctuation">[</span><span class="punctuation">]</span></span><br><span class="line">          <span class="punctuation">&#125;</span><span class="punctuation">,</span></span><br><span class="line">          <span class="punctuation">&#123;</span></span><br><span class="line">            <span class="attr">&quot;catId&quot;</span><span class="punctuation">:</span> <span class="number">166</span><span class="punctuation">,</span></span><br><span class="line">            <span class="attr">&quot;name&quot;</span><span class="punctuation">:</span> <span class="string">&quot;网络原创&quot;</span><span class="punctuation">,</span></span><br><span class="line">            <span class="attr">&quot;parentCid&quot;</span><span class="punctuation">:</span> <span class="number">22</span><span class="punctuation">,</span></span><br><span class="line">            <span class="attr">&quot;catLevel&quot;</span><span class="punctuation">:</span> <span class="number">3</span><span class="punctuation">,</span></span><br><span class="line">            <span class="attr">&quot;showStatus&quot;</span><span class="punctuation">:</span> <span class="number">1</span><span class="punctuation">,</span></span><br><span class="line">            <span class="attr">&quot;sort&quot;</span><span class="punctuation">:</span> <span class="number">0</span><span class="punctuation">,</span></span><br><span class="line">            <span class="attr">&quot;icon&quot;</span><span class="punctuation">:</span> <span class="keyword">null</span><span class="punctuation">,</span></span><br><span class="line">            <span class="attr">&quot;productUnit&quot;</span><span class="punctuation">:</span> <span class="keyword">null</span><span class="punctuation">,</span></span><br><span class="line">            <span class="attr">&quot;productCount&quot;</span><span class="punctuation">:</span> <span class="number">0</span><span class="punctuation">,</span></span><br><span class="line">            <span class="attr">&quot;childCategoryEntity&quot;</span><span class="punctuation">:</span> <span class="punctuation">[</span><span class="punctuation">]</span></span><br><span class="line">          <span class="punctuation">&#125;</span><span class="punctuation">,</span></span><br><span class="line">          <span class="punctuation">&#123;</span></span><br><span class="line">            <span class="attr">&quot;catId&quot;</span><span class="punctuation">:</span> <span class="number">167</span><span class="punctuation">,</span></span><br><span class="line">            <span class="attr">&quot;name&quot;</span><span class="punctuation">:</span> <span class="string">&quot;数字杂志&quot;</span><span class="punctuation">,</span></span><br><span class="line">            <span class="attr">&quot;parentCid&quot;</span><span class="punctuation">:</span> <span class="number">22</span><span class="punctuation">,</span></span><br><span class="line">            <span class="attr">&quot;catLevel&quot;</span><span class="punctuation">:</span> <span class="number">3</span><span class="punctuation">,</span></span><br><span class="line">            <span class="attr">&quot;showStatus&quot;</span><span class="punctuation">:</span> <span class="number">1</span><span class="punctuation">,</span></span><br><span class="line">            <span class="attr">&quot;sort&quot;</span><span class="punctuation">:</span> <span class="number">0</span><span class="punctuation">,</span></span><br><span class="line">            <span class="attr">&quot;icon&quot;</span><span class="punctuation">:</span> <span class="keyword">null</span><span class="punctuation">,</span></span><br><span class="line">            <span class="attr">&quot;productUnit&quot;</span><span class="punctuation">:</span> <span class="keyword">null</span><span class="punctuation">,</span></span><br><span class="line">            <span class="attr">&quot;productCount&quot;</span><span class="punctuation">:</span> <span class="number">0</span><span class="punctuation">,</span></span><br><span class="line">            <span class="attr">&quot;childCategoryEntity&quot;</span><span class="punctuation">:</span> <span class="punctuation">[</span><span class="punctuation">]</span></span><br><span class="line">          <span class="punctuation">&#125;</span><span class="punctuation">,</span></span><br><span class="line">          <span class="punctuation">&#123;</span></span><br><span class="line">            <span class="attr">&quot;catId&quot;</span><span class="punctuation">:</span> <span class="number">168</span><span class="punctuation">,</span></span><br><span class="line">            <span class="attr">&quot;name&quot;</span><span class="punctuation">:</span> <span class="string">&quot;多媒体图书&quot;</span><span class="punctuation">,</span></span><br><span class="line">            <span class="attr">&quot;parentCid&quot;</span><span class="punctuation">:</span> <span class="number">22</span><span class="punctuation">,</span></span><br><span class="line">            <span class="attr">&quot;catLevel&quot;</span><span class="punctuation">:</span> <span class="number">3</span><span class="punctuation">,</span></span><br><span class="line">            <span class="attr">&quot;showStatus&quot;</span><span class="punctuation">:</span> <span class="number">1</span><span class="punctuation">,</span></span><br><span class="line">            <span class="attr">&quot;sort&quot;</span><span class="punctuation">:</span> <span class="number">0</span><span class="punctuation">,</span></span><br><span class="line">            <span class="attr">&quot;icon&quot;</span><span class="punctuation">:</span> <span class="keyword">null</span><span class="punctuation">,</span></span><br><span class="line">            <span class="attr">&quot;productUnit&quot;</span><span class="punctuation">:</span> <span class="keyword">null</span><span class="punctuation">,</span></span><br><span class="line">            <span class="attr">&quot;productCount&quot;</span><span class="punctuation">:</span> <span class="number">0</span><span class="punctuation">,</span></span><br><span class="line">            <span class="attr">&quot;childCategoryEntity&quot;</span><span class="punctuation">:</span> <span class="punctuation">[</span><span class="punctuation">]</span></span><br><span class="line">          <span class="punctuation">&#125;</span></span><br><span class="line">        <span class="punctuation">]</span></span><br><span class="line">      <span class="punctuation">&#125;</span><span class="punctuation">,</span></span><br><span class="line">      <span class="punctuation">&#123;</span></span><br><span class="line">        <span class="attr">&quot;catId&quot;</span><span class="punctuation">:</span> <span class="number">23</span><span class="punctuation">,</span></span><br><span class="line">        <span class="attr">&quot;name&quot;</span><span class="punctuation">:</span> <span class="string">&quot;音像&quot;</span><span class="punctuation">,</span></span><br><span class="line">        <span class="attr">&quot;parentCid&quot;</span><span class="punctuation">:</span> <span class="number">1</span><span class="punctuation">,</span></span><br><span class="line">        <span class="attr">&quot;catLevel&quot;</span><span class="punctuation">:</span> <span class="number">2</span><span class="punctuation">,</span></span><br><span class="line">        <span class="attr">&quot;showStatus&quot;</span><span class="punctuation">:</span> <span class="number">1</span><span class="punctuation">,</span></span><br><span class="line">        <span class="attr">&quot;sort&quot;</span><span class="punctuation">:</span> <span class="number">0</span><span class="punctuation">,</span></span><br><span class="line">        <span class="attr">&quot;icon&quot;</span><span class="punctuation">:</span> <span class="keyword">null</span><span class="punctuation">,</span></span><br><span class="line">        <span class="attr">&quot;productUnit&quot;</span><span class="punctuation">:</span> <span class="keyword">null</span><span class="punctuation">,</span></span><br><span class="line">        <span class="attr">&quot;productCount&quot;</span><span class="punctuation">:</span> <span class="number">0</span><span class="punctuation">,</span></span><br><span class="line">        <span class="attr">&quot;childCategoryEntity&quot;</span><span class="punctuation">:</span> <span class="punctuation">[</span></span><br><span class="line">          <span class="punctuation">&#123;</span></span><br><span class="line">            <span class="attr">&quot;catId&quot;</span><span class="punctuation">:</span> <span class="number">169</span><span class="punctuation">,</span></span><br><span class="line">            <span class="attr">&quot;name&quot;</span><span class="punctuation">:</span> <span class="string">&quot;音乐&quot;</span><span class="punctuation">,</span></span><br><span class="line">            <span class="attr">&quot;parentCid&quot;</span><span class="punctuation">:</span> <span class="number">23</span><span class="punctuation">,</span></span><br><span class="line">            <span class="attr">&quot;catLevel&quot;</span><span class="punctuation">:</span> <span class="number">3</span><span class="punctuation">,</span></span><br><span class="line">            <span class="attr">&quot;showStatus&quot;</span><span class="punctuation">:</span> <span class="number">1</span><span class="punctuation">,</span></span><br><span class="line">            <span class="attr">&quot;sort&quot;</span><span class="punctuation">:</span> <span class="number">0</span><span class="punctuation">,</span></span><br><span class="line">            <span class="attr">&quot;icon&quot;</span><span class="punctuation">:</span> <span class="keyword">null</span><span class="punctuation">,</span></span><br><span class="line">            <span class="attr">&quot;productUnit&quot;</span><span class="punctuation">:</span> <span class="keyword">null</span><span class="punctuation">,</span></span><br><span class="line">            <span class="attr">&quot;productCount&quot;</span><span class="punctuation">:</span> <span class="number">0</span><span class="punctuation">,</span></span><br><span class="line">            <span class="attr">&quot;childCategoryEntity&quot;</span><span class="punctuation">:</span> <span class="punctuation">[</span><span class="punctuation">]</span></span><br><span class="line">          <span class="punctuation">&#125;</span><span class="punctuation">,</span></span><br><span class="line">          <span class="punctuation">&#123;</span></span><br><span class="line">            <span class="attr">&quot;catId&quot;</span><span class="punctuation">:</span> <span class="number">170</span><span class="punctuation">,</span></span><br><span class="line">            <span class="attr">&quot;name&quot;</span><span class="punctuation">:</span> <span class="string">&quot;影视&quot;</span><span class="punctuation">,</span></span><br><span class="line">            <span class="attr">&quot;parentCid&quot;</span><span class="punctuation">:</span> <span class="number">23</span><span class="punctuation">,</span></span><br><span class="line">            <span class="attr">&quot;catLevel&quot;</span><span class="punctuation">:</span> <span class="number">3</span><span class="punctuation">,</span></span><br><span class="line">            <span class="attr">&quot;showStatus&quot;</span><span class="punctuation">:</span> <span class="number">1</span><span class="punctuation">,</span></span><br><span class="line">            <span class="attr">&quot;sort&quot;</span><span class="punctuation">:</span> <span class="number">0</span><span class="punctuation">,</span></span><br><span class="line">            <span class="attr">&quot;icon&quot;</span><span class="punctuation">:</span> <span class="keyword">null</span><span class="punctuation">,</span></span><br><span class="line">            <span class="attr">&quot;productUnit&quot;</span><span class="punctuation">:</span> <span class="keyword">null</span><span class="punctuation">,</span></span><br><span class="line">            <span class="attr">&quot;productCount&quot;</span><span class="punctuation">:</span> <span class="number">0</span><span class="punctuation">,</span></span><br><span class="line">            <span class="attr">&quot;childCategoryEntity&quot;</span><span class="punctuation">:</span> <span class="punctuation">[</span><span class="punctuation">]</span></span><br><span class="line">          <span class="punctuation">&#125;</span><span class="punctuation">,</span></span><br><span class="line">          <span class="punctuation">&#123;</span></span><br><span class="line">            <span class="attr">&quot;catId&quot;</span><span class="punctuation">:</span> <span class="number">171</span><span class="punctuation">,</span></span><br><span class="line">            <span class="attr">&quot;name&quot;</span><span class="punctuation">:</span> <span class="string">&quot;教育音像&quot;</span><span class="punctuation">,</span></span><br><span class="line">            <span class="attr">&quot;parentCid&quot;</span><span class="punctuation">:</span> <span class="number">23</span><span class="punctuation">,</span></span><br><span class="line">            <span class="attr">&quot;catLevel&quot;</span><span class="punctuation">:</span> <span class="number">3</span><span class="punctuation">,</span></span><br><span class="line">            <span class="attr">&quot;showStatus&quot;</span><span class="punctuation">:</span> <span class="number">1</span><span class="punctuation">,</span></span><br><span class="line">            <span class="attr">&quot;sort&quot;</span><span class="punctuation">:</span> <span class="number">0</span><span class="punctuation">,</span></span><br><span class="line">            <span class="attr">&quot;icon&quot;</span><span class="punctuation">:</span> <span class="keyword">null</span><span class="punctuation">,</span></span><br><span class="line">            <span class="attr">&quot;productUnit&quot;</span><span class="punctuation">:</span> <span class="keyword">null</span><span class="punctuation">,</span></span><br><span class="line">            <span class="attr">&quot;productCount&quot;</span><span class="punctuation">:</span> <span class="number">0</span><span class="punctuation">,</span></span><br><span class="line">            <span class="attr">&quot;childCategoryEntity&quot;</span><span class="punctuation">:</span> <span class="punctuation">[</span><span class="punctuation">]</span></span><br><span class="line">          <span class="punctuation">&#125;</span></span><br><span class="line">        <span class="punctuation">]</span></span><br><span class="line">      <span class="punctuation">&#125;</span><span class="punctuation">,</span></span><br><span class="line">      <span class="punctuation">&#123;</span></span><br></pre></td></tr></table></figure><p>启动后端项目renren-fast</p><p>启动前端项目renren-fast-vue：</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">npm run dev</span><br></pre></td></tr></table></figure><p>访问： <a href="http://localhost:8001/#/login">http://localhost:8001/#/login</a> </p><p>创建一级菜单：</p><p><img src="https://cdn.jsdelivr.net/gh/zsxfa/CDN/img/md/2022/03/18/1647592303.png" alt="desc"></p><p>创建完成后，在后台的管理系统中会创建一条记录：</p><p><img src="C:/Users/Jachin/AppData/Roaming/Typora/typora-user-images/image-20220314171420509.png" alt="image-20220314171420509"></p><p>然后创建子菜单：</p><p><img src="https://cdn.jsdelivr.net/gh/zsxfa/CDN/img/md/2022/03/18/1647592373.png" alt="desc"></p><p>创建renren-fast-vue\src\views\modules\product目录，子所以是这样来创建，是因为product/category，对应于product-category</p><p>在该目录下，新建“category.vue”文件：</p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">&lt;!--  --&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">template</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">el-tree</span> <span class="attr">:data</span>=<span class="string">&quot;menus&quot;</span> <span class="attr">:props</span>=<span class="string">&quot;defaultProps&quot;</span> @<span class="attr">node-click</span>=<span class="string">&quot;handleNodeClick&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">el-tree</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">template</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;<span class="name">script</span>&gt;</span><span class="language-javascript"></span></span><br><span class="line"><span class="language-javascript"><span class="comment">//这里可以导入其他文件（比如：组件，工具js，第三方插件js，json文件，图片文件等等）</span></span></span><br><span class="line"><span class="language-javascript"><span class="comment">//例如：import 《组件名称》 from &#x27;《组件路径》&#x27;;</span></span></span><br><span class="line"><span class="language-javascript"></span></span><br><span class="line"><span class="language-javascript"><span class="keyword">export</span> <span class="keyword">default</span> &#123;</span></span><br><span class="line"><span class="language-javascript">  <span class="comment">//import引入的组件需要注入到对象中才能使用</span></span></span><br><span class="line"><span class="language-javascript">  <span class="attr">components</span>: &#123;&#125;,</span></span><br><span class="line"><span class="language-javascript"></span></span><br><span class="line"><span class="language-javascript">  <span class="comment">//监听属性 类似于data概念</span></span></span><br><span class="line"><span class="language-javascript">  <span class="attr">computed</span>: &#123;&#125;,</span></span><br><span class="line"><span class="language-javascript">  <span class="comment">//监控data中的数据变化</span></span></span><br><span class="line"><span class="language-javascript">  <span class="attr">watch</span>: &#123;&#125;,</span></span><br><span class="line"><span class="language-javascript">  <span class="title function_">data</span>(<span class="params"></span>) &#123;</span></span><br><span class="line"><span class="language-javascript">    <span class="keyword">return</span> &#123;</span></span><br><span class="line"><span class="language-javascript">      <span class="attr">menus</span>: [],</span></span><br><span class="line"><span class="language-javascript">       <span class="attr">defaultProps</span>: &#123;</span></span><br><span class="line"><span class="language-javascript">        <span class="attr">children</span>: <span class="string">&quot;childrens&quot;</span>,</span></span><br><span class="line"><span class="language-javascript">        <span class="attr">label</span>: <span class="string">&quot;name&quot;</span></span></span><br><span class="line"><span class="language-javascript">      &#125;,</span></span><br><span class="line"><span class="language-javascript">    &#125;</span></span><br><span class="line"><span class="language-javascript">  &#125;,</span></span><br><span class="line"><span class="language-javascript">    </span></span><br><span class="line"><span class="language-javascript">  <span class="attr">methods</span>: &#123;</span></span><br><span class="line"><span class="language-javascript">    <span class="title function_">handleNodeClick</span>(<span class="params">data</span>) &#123;</span></span><br><span class="line"><span class="language-javascript">      <span class="variable language_">console</span>.<span class="title function_">log</span>(data);</span></span><br><span class="line"><span class="language-javascript">    &#125;,</span></span><br><span class="line"><span class="language-javascript"></span></span><br><span class="line"><span class="language-javascript">    <span class="title function_">getMenus</span>(<span class="params"></span>) &#123;</span></span><br><span class="line"><span class="language-javascript">      <span class="variable language_">this</span>.<span class="property">dataListLoading</span> = <span class="literal">true</span>;</span></span><br><span class="line"><span class="language-javascript">      <span class="variable language_">this</span>.$http(&#123;</span></span><br><span class="line"><span class="language-javascript">        <span class="attr">url</span>: <span class="variable language_">this</span>.<span class="property">$http</span>.<span class="title function_">adornUrl</span>(<span class="string">&quot;/product/category/list/tree&quot;</span>),</span></span><br><span class="line"><span class="language-javascript">        <span class="attr">method</span>: <span class="string">&quot;get&quot;</span></span></span><br><span class="line"><span class="language-javascript">      &#125;).<span class="title function_">then</span>(<span class="function">(<span class="params">&#123; data &#125;</span>) =&gt;</span> &#123;</span></span><br><span class="line"><span class="language-javascript">        <span class="variable language_">console</span>.<span class="title function_">log</span>(<span class="string">&quot;获取到数据&quot;</span>, data);</span></span><br><span class="line"><span class="language-javascript">        <span class="variable language_">this</span>.<span class="property">menus</span>=data;</span></span><br><span class="line"><span class="language-javascript">      &#125;);</span></span><br><span class="line"><span class="language-javascript">    &#125;</span></span><br><span class="line"><span class="language-javascript">  &#125;,</span></span><br><span class="line"><span class="language-javascript"></span></span><br><span class="line"><span class="language-javascript"></span></span><br><span class="line"><span class="language-javascript">  <span class="comment">//生命周期 - 创建完成（可以访问当前this实例）</span></span></span><br><span class="line"><span class="language-javascript">  <span class="title function_">created</span>(<span class="params"></span>) &#123;</span></span><br><span class="line"><span class="language-javascript">    <span class="variable language_">this</span>.<span class="title function_">getMenus</span>();</span></span><br><span class="line"><span class="language-javascript">  &#125;,</span></span><br><span class="line"><span class="language-javascript">  <span class="comment">//生命周期 - 挂载完成（可以访问DOM元素）</span></span></span><br><span class="line"><span class="language-javascript">  <span class="title function_">mounted</span>(<span class="params"></span>) &#123;&#125;,</span></span><br><span class="line"><span class="language-javascript">  <span class="title function_">beforeCreate</span>(<span class="params"></span>) &#123;&#125;, <span class="comment">//生命周期 - 创建之前</span></span></span><br><span class="line"><span class="language-javascript">  <span class="title function_">beforeMount</span>(<span class="params"></span>) &#123;&#125;, <span class="comment">//生命周期 - 挂载之前</span></span></span><br><span class="line"><span class="language-javascript">  <span class="title function_">beforeUpdate</span>(<span class="params"></span>) &#123;&#125;, <span class="comment">//生命周期 - 更新之前</span></span></span><br><span class="line"><span class="language-javascript">  <span class="title function_">updated</span>(<span class="params"></span>) &#123;&#125;, <span class="comment">//生命周期 - 更新之后</span></span></span><br><span class="line"><span class="language-javascript">  <span class="title function_">beforeDestroy</span>(<span class="params"></span>) &#123;&#125;, <span class="comment">//生命周期 - 销毁之前</span></span></span><br><span class="line"><span class="language-javascript">  <span class="title function_">destroyed</span>(<span class="params"></span>) &#123;&#125;, <span class="comment">//生命周期 - 销毁完成</span></span></span><br><span class="line"><span class="language-javascript">  <span class="title function_">activated</span>(<span class="params"></span>) &#123;&#125; <span class="comment">//如果页面有keep-alive缓存功能，这个函数会触发</span></span></span><br><span class="line"><span class="language-javascript">&#125;;</span></span><br><span class="line"><span class="language-javascript"></span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">style</span> <span class="attr">scoped</span>&gt;</span></span><br></pre></td></tr></table></figure><p>刷新页面出现404异常，查看请求发现，请求的是“<a href="http://localhost:8080/renren-fast/product/category/list/tree%E2%80%9D">http://localhost:8080/renren-fast/product/category/list/tree”</a></p><p>这个请求是不正确的，正确的请求是：<a href="http://localhost:10000/product/category/list/tree%EF%BC%8C">http://localhost:10000/product/category/list/tree，</a></p><p>修正这个问题：</p><p>替换“static\config\index.js”文件中的“window.SITE_CONFIG[‘baseUrl’]”</p><p>替换前：</p><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="variable language_">window</span>.<span class="property">SITE_CONFIG</span>[<span class="string">&#x27;baseUrl&#x27;</span>] = <span class="string">&#x27;http://localhost:8080/renren-fast&#x27;</span>;</span><br></pre></td></tr></table></figure><p>替换后：</p><figure class="highlight dart"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">window</span>.SITE_CONFIG[<span class="string">&#x27;baseUrl&#x27;</span>] = <span class="string">&#x27;http://localhost:88/api&#x27;</span>;</span><br></pre></td></tr></table></figure><p><a href="http://localhost:88，这个地址是我们网关微服务的接口。">http://localhost:88，这个地址是我们网关微服务的接口。</a></p><p>这里我们需要通过网关来完成路径的映射，因此将renren-fast注册到nacos注册中心中，并添加配置中心</p><figure class="highlight yaml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line"><span class="attr">application:</span></span><br><span class="line">    <span class="attr">name:</span> <span class="string">renren-fast</span></span><br><span class="line">  <span class="attr">cloud:</span></span><br><span class="line">    <span class="attr">nacos:</span></span><br><span class="line">      <span class="attr">discovery:</span></span><br><span class="line">        <span class="attr">server-addr:</span> <span class="number">127.0</span><span class="number">.0</span><span class="number">.1</span><span class="string">:8848</span></span><br><span class="line"></span><br><span class="line">      <span class="attr">config:</span></span><br><span class="line">        <span class="attr">name:</span> <span class="string">renren-fast</span></span><br><span class="line">        <span class="attr">server-addr:</span> <span class="number">127.0</span><span class="number">.0</span><span class="number">.1</span><span class="number">.8848</span></span><br><span class="line">        <span class="attr">namespace:</span> <span class="string">ee409c3f-3206-4a3b-ba65-7376922a886d</span></span><br></pre></td></tr></table></figure><p>配置网关路由，前台的所有请求都是经由“<a href="http://localhost:88/api%E2%80%9D%E6%9D%A5%E8%BD%AC%E5%8F%91%E7%9A%84%EF%BC%8C%E5%9C%A8%E2%80%9Cgulimall-gateway%E2%80%9D%E4%B8%AD%E6%B7%BB%E5%8A%A0%E8%B7%AF%E7%94%B1%E8%A7%84%E5%88%99%EF%BC%9A">http://localhost:88/api”来转发的，在“gulimall-gateway”中添加路由规则：</a></p><figure class="highlight yaml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="bullet">-</span> <span class="attr">id:</span> <span class="string">admin_route</span></span><br><span class="line"><span class="attr">uri:</span> <span class="string">lb://renren-fast</span></span><br><span class="line"><span class="attr">predicates:</span></span><br><span class="line"><span class="bullet">-</span> <span class="string">Path=/api/**</span></span><br></pre></td></tr></table></figure><p>但是这样做也引入了另外的一个问题，再次访问：<a href="http://localhost:8001/#/login%EF%BC%8C%E5%8F%91%E7%8E%B0%E9%AA%8C%E8%AF%81%E7%A0%81%E4%B8%8D%E5%86%8D%E6%98%BE%E7%A4%BA%EF%BC%9A">http://localhost:8001/#/login，发现验证码不再显示：</a></p><p>分析原因：</p><ol><li>现在的验证码请求路径为，<a href="http://localhost:88/api/captcha.jpg?uuid=69c79f02-d15b-478a-8465-a07fd09001e6">http://localhost:88/api/captcha.jpg?uuid=69c79f02-d15b-478a-8465-a07fd09001e6</a></li><li>原始的验证码请求路径：<a href="http://localhost:8001/renren-fast/captcha.jpg?uuid=69c79f02-d15b-478a-8465-a07fd09001e6">http://localhost:8001/renren-fast/captcha.jpg?uuid=69c79f02-d15b-478a-8465-a07fd09001e6</a></li></ol><p>在admin_route的路由规则下，在访问路径中包含了“api”，因此它会将它转发到renren-fast，网关在转发的时候，会使用网关的前缀信息，为了能够正常的取得验证码，我们需要对请求路径进行重写</p><p>关于请求路径重写：</p><p><a href="https://cloud.spring.io/spring-cloud-static/spring-cloud-gateway/2.2.2.RELEASE/reference/html/#the-rewritepath-gatewayfilter-factory">6.16. The <code>RewritePath</code> <code>GatewayFilter</code> Factory</a></p><p>The <code>RewritePath</code> <code>GatewayFilter</code> factory takes a path <code>regexp</code> parameter and a <code>replacement</code> parameter. This uses Java regular expressions for a flexible way to rewrite the request path. The following listing configures a <code>RewritePath</code> <code>GatewayFilter</code>:</p><p>Example 41. application.yml</p><figure class="highlight yaml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line"><span class="attr">spring:</span></span><br><span class="line">  <span class="attr">cloud:</span></span><br><span class="line">    <span class="attr">gateway:</span></span><br><span class="line">      <span class="attr">routes:</span></span><br><span class="line">      <span class="bullet">-</span> <span class="attr">id:</span> <span class="string">rewritepath_route</span></span><br><span class="line">        <span class="attr">uri:</span> <span class="string">https://example.org</span></span><br><span class="line">        <span class="attr">predicates:</span></span><br><span class="line">        <span class="bullet">-</span> <span class="string">Path=/foo/**</span></span><br><span class="line">        <span class="attr">filters:</span></span><br><span class="line">        <span class="bullet">-</span> <span class="string">RewritePath=/red(?&lt;segment&gt;/?.*),</span> <span class="string">$\&#123;segment&#125;</span></span><br></pre></td></tr></table></figure><p>For a request path of <code>/red/blue</code>, this sets the path to <code>/blue</code> before making the downstream request. Note that the <code>$</code> should be replaced with <code>$\</code> because of the YAML specification.</p><p>修改“admin_route”路由规则：</p><figure class="highlight yaml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="bullet">-</span> <span class="attr">id:</span> <span class="string">admin_route</span></span><br><span class="line"><span class="attr">uri:</span> <span class="string">lb://renren-fast</span></span><br><span class="line"><span class="attr">predicates:</span></span><br><span class="line"><span class="bullet">-</span> <span class="string">Path=/api/**</span></span><br><span class="line"><span class="attr">filters:</span></span><br><span class="line"><span class="bullet">-</span> <span class="string">RewritePath=/api/(?&lt;segment&gt;/?.*),</span> <span class="string">/renren-fast/$\&#123;segment&#125;</span></span><br></pre></td></tr></table></figure><p>再次访问：<a href="http://localhost:8001/#/login%EF%BC%8C%E9%AA%8C%E8%AF%81%E7%A0%81%E8%83%BD%E5%A4%9F%E6%AD%A3%E5%B8%B8%E7%9A%84%E5%8A%A0%E8%BD%BD%E4%BA%86%E3%80%82">http://localhost:8001/#/login，验证码能够正常的加载了。</a></p><p>但是很不幸新的问题又产生了，访问被拒绝了</p><p><img src="C:/Users/Jachin/AppData/Roaming/Typora/typora-user-images/image-20220314173838560.png" alt="image-20220314173838560"></p><p> 问题描述：已拦截跨源请求：同源策略禁止读取位于 <a href="http://localhost:88/api/sys/login">http://localhost:88/api/sys/login</a> 的远程资源。（原因：CORS 头缺少 ‘Access-Control-Allow-Origin’）。 </p><p>问题分析：这是一种跨域问题。访问的域名和端口和原来的请求不同，请求就会被限制</p><p><img src="C:/Users/Jachin/AppData/Roaming/Typora/typora-user-images/image-20220314174703525.png" alt="image-20220314174703525"></p><p>跨域流程：</p><p><img src="C:/Users/Jachin/AppData/Roaming/Typora/typora-user-images/image-20220314174730047.png" alt="image-20220314174730047"></p><p><img src="C:/Users/Jachin/AppData/Roaming/Typora/typora-user-images/image-20220314174837614.png" alt="image-20220314174837614"></p><p><img src="C:/Users/Jachin/AppData/Roaming/Typora/typora-user-images/image-20220314174854038.png" alt="image-20220314174854038"></p><p>解决方法：在网关中定义“GulimallCorsConfiguration”类，该类用来做过滤，允许所有的请求跨域。</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">@Configuration</span></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">GulimallCorsConfiguration</span> &#123;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Bean</span></span><br><span class="line">    <span class="keyword">public</span> CorsWebFilter <span class="title function_">corsWebFilter</span><span class="params">()</span>&#123;</span><br><span class="line">        UrlBasedCorsConfigurationSource source=<span class="keyword">new</span> <span class="title class_">UrlBasedCorsConfigurationSource</span>();</span><br><span class="line">        <span class="type">CorsConfiguration</span> <span class="variable">corsConfiguration</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">CorsConfiguration</span>();</span><br><span class="line">        corsConfiguration.addAllowedHeader(<span class="string">&quot;*&quot;</span>);</span><br><span class="line">        corsConfiguration.addAllowedMethod(<span class="string">&quot;*&quot;</span>);</span><br><span class="line">        corsConfiguration.addAllowedOrigin(<span class="string">&quot;*&quot;</span>);</span><br><span class="line">        corsConfiguration.setAllowCredentials(<span class="literal">true</span>);</span><br><span class="line">        </span><br><span class="line">        source.registerCorsConfiguration(<span class="string">&quot;/**&quot;</span>,corsConfiguration);</span><br><span class="line">        <span class="keyword">return</span> <span class="keyword">new</span> <span class="title class_">CorsWebFilter</span>(source);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>再次访问：<a href="http://localhost:8001/#/login">http://localhost:8001/#/login</a></p><p><img src="C:/Users/Jachin/AppData/Roaming/Typora/typora-user-images/image-20220314180016442.png" alt="image-20220314180016442"></p><p><a href="http://localhost:8001/renre%E5%B7%B2%E6%8B%A6%E6%88%AA%E8%B7%A8%E6%BA%90%E8%AF%B7%E6%B1%82%EF%BC%9A%E5%90%8C%E6%BA%90%E7%AD%96%E7%95%A5%E7%A6%81%E6%AD%A2%E8%AF%BB%E5%8F%96%E4%BD%8D%E4%BA%8E">http://localhost:8001/renre已拦截跨源请求：同源策略禁止读取位于</a> <a href="http://localhost:88/api/sys/login">http://localhost:88/api/sys/login</a> 的远程资源。（原因：不允许有多个 ‘Access-Control-Allow-Origin’ CORS 头）n-fast/captcha.jpg?uuid=69c79f02-d15b-478a-8465-a07fd09001e6</p><p>出现了多个请求，并且也存在多个跨源请求。</p><p>为了解决这个问题，需要修改renren-fast项目，注释掉“io.renren.config.CorsConfig”类。然后再次进行访问。</p><p>在显示分类信息的时候，出现了404异常，请求的<a href="http://localhost:88/api/product/category/list/tree%E4%B8%8D%E5%AD%98%E5%9C%A8">http://localhost:88/api/product/category/list/tree不存在</a></p><p><img src="C:/Users/Jachin/AppData/Roaming/Typora/typora-user-images/image-20220314181957753.png" alt="image-20220314181957753"></p><p>这是因为网关上所做的路径映射不正确，映射后的路径为<a href="http://localhost:8001/renren-fast/product/category/list/tree">http://localhost:8001/renren-fast/product/category/list/tree</a></p><p>但是只有通过<a href="http://localhost:10000/product/category/list/tree%E8%B7%AF%E5%BE%84%E6%89%8D%E8%83%BD%E5%A4%9F%E6%AD%A3%E5%B8%B8%E8%AE%BF%E9%97%AE%EF%BC%8C%E6%89%80%E4%BB%A5%E4%BC%9A%E6%8A%A5404%E5%BC%82%E5%B8%B8%E3%80%82">http://localhost:10000/product/category/list/tree路径才能够正常访问，所以会报404异常。</a></p><p>解决方法就是定义一个product路由规则，进行路径重写：</p><figure class="highlight yaml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="bullet">-</span> <span class="attr">id:</span> <span class="string">product_route</span></span><br><span class="line"><span class="attr">uri:</span> <span class="string">lb://gulimall-product</span></span><br><span class="line"><span class="attr">predicates:</span></span><br><span class="line"><span class="bullet">-</span> <span class="string">Path=/api/product/**</span></span><br><span class="line"><span class="attr">filters:</span></span><br><span class="line"><span class="bullet">-</span> <span class="string">RewritePath=/api/(?&lt;segment&gt;/?.*),/$\&#123;segment&#125;</span></span><br></pre></td></tr></table></figure><p>在路由规则的顺序上，将精确的路由规则放置到模糊的路由规则的前面，否则的话，精确的路由规则将不会被匹配到，类似于异常体系中try catch子句中异常的处理顺序。</p><h3 id="删除-添加数据"><a href="#删除-添加数据" class="headerlink" title="删除/添加数据"></a>删除/添加数据</h3><p>添加delete和append标识，并且增加复选框</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br></pre></td><td class="code"><pre><span class="line">&lt;el-tree</span><br><span class="line">   :data=&quot;menus&quot;</span><br><span class="line">   show-checkbox  //显示复选框</span><br><span class="line">   :props=&quot;defaultProps&quot;  </span><br><span class="line">   :expand-on-click-node=&quot;false&quot; //设置节点点击时不展开</span><br><span class="line">   node-key=&quot;catId&quot;   </span><br><span class="line"> &gt;</span><br><span class="line">   &lt;span class=&quot;custom-tree-node&quot; slot-scope=&quot;&#123; node, data &#125;&quot;&gt;</span><br><span class="line">     &lt;span&gt;&#123;&#123; node.label &#125;&#125;&lt;/span&gt;</span><br><span class="line">     &lt;span&gt;</span><br><span class="line">       &lt;el-button v-if=&quot;node.level &lt;= 2&quot; type=&quot;text&quot; size=&quot;mini&quot; @click=&quot;() =&gt; append(data)&quot;&gt;Append&lt;/el-button&gt;</span><br><span class="line">       &lt;el-button</span><br><span class="line">         v-if=&quot;node.childNodes.length == 0&quot;</span><br><span class="line">         type=&quot;text&quot;</span><br><span class="line">         size=&quot;mini&quot;</span><br><span class="line">         @click=&quot;() =&gt; remove(node, data)&quot;</span><br><span class="line">       &gt;Delete&lt;/el-button&gt;</span><br><span class="line">     &lt;/span&gt;</span><br><span class="line">   &lt;/span&gt;</span><br><span class="line"> &lt;/el-tree&gt;</span><br></pre></td></tr></table></figure><p>修改“com.atguigu.gulimall.product.controller.CategoryController”类，添加如下代码：</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">@RequestMapping(&quot;/delete&quot;)</span></span><br><span class="line"><span class="keyword">public</span> R <span class="title function_">delete</span><span class="params">(<span class="meta">@RequestBody</span> Long[] catIds)</span>&#123;</span><br><span class="line">    <span class="comment">//删除之前需要判断待删除的菜单那是否被别的地方所引用。</span></span><br><span class="line">    <span class="comment">//categoryService.removeByIds(Arrays.asList(catIds));</span></span><br><span class="line">    categoryService.removeMenuByIds(Arrays.asList(catIds));</span><br><span class="line">    <span class="keyword">return</span> R.ok();</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>com.atguigu.gulimall.product.service.impl.CategoryServiceImpl</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">@Override</span></span><br><span class="line"><span class="keyword">public</span>   <span class="keyword">void</span> <span class="title function_">removeMenuByIds</span><span class="params">(List&lt;Long&gt; asList)</span> &#123;</span><br><span class="line">    <span class="comment">//TODO 检查当前的菜单是否被别的地方所引用</span></span><br><span class="line">    categoryDao.deleteBatchIds(asList);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>然而多数时候，我们并不希望删除数据，而是标记它被删除了，这就是逻辑删除；</p><p>可以设置show_status为0，标记它已经被删除。</p><p><img src="https://cdn.jsdelivr.net/gh/zsxfa/CDN/img/md/2022/03/18/1647589532.png" alt="desc"></p><p>mybatis-plus的逻辑删除：</p><p>配置全局的逻辑删除规则，在“src/main/resources/application.yml”文件中添加如下内容：</p><figure class="highlight yaml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="attr">mybatis-plus:</span></span><br><span class="line">  <span class="attr">global-config:</span></span><br><span class="line">    <span class="attr">db-config:</span></span><br><span class="line">      <span class="attr">id-type:</span> <span class="string">auto</span></span><br><span class="line">      <span class="attr">logic-delete-value:</span> <span class="number">1</span></span><br><span class="line">      <span class="attr">logic-not-delete-value:</span> <span class="number">0</span></span><br></pre></td></tr></table></figure><p>修改“com.atguigu.gulimall.product.entity.CategoryEntity”类，添加上@TableLogic，表明使用逻辑删除：</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment">* 是否显示[0-不显示，1显示]</span></span><br><span class="line"><span class="comment">*/</span></span><br><span class="line"><span class="meta">@TableLogic(value = &quot;1&quot;,delval = &quot;0&quot;)</span></span><br><span class="line"><span class="keyword">private</span> Integer showStatus;</span><br></pre></td></tr></table></figure><p>然后在POSTMan中测试一下是否能够满足需要。另外在“src/main/resources/application.yml”文件中，设置日志级别，打印出SQL语句：</p><figure class="highlight yaml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="attr">logging:</span></span><br><span class="line">  <span class="attr">level:</span></span><br><span class="line">    <span class="attr">io.niceseason.gulimall.product:</span> <span class="string">debug</span></span><br></pre></td></tr></table></figure><p>打印的日志：</p><figure class="highlight verilog"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">==&gt;  Preparing: UPDATE pms_category SET show_status=<span class="number">0</span> WHERE cat_id IN ( ? ) AND show_status=<span class="number">1</span> </span><br><span class="line">==&gt; Parameters: <span class="number">1431</span>(Long)</span><br><span class="line">&lt;==    Updates: <span class="number">1</span></span><br><span class="line">get changedGroupKeys:[]</span><br></pre></td></tr></table></figure><p>删除细节优化</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br></pre></td><td class="code"><pre><span class="line"><span class="title function_">remove</span>(<span class="params">node, data</span>) &#123;</span><br><span class="line">    <span class="comment">//讲删除id传入数组</span></span><br><span class="line">    <span class="keyword">var</span> ids = [data.<span class="property">catId</span>];</span><br><span class="line">    <span class="comment">//删除前弹出确认框</span></span><br><span class="line">    <span class="variable language_">this</span>.$confirm(<span class="string">`是否删除【<span class="subst">$&#123;data.name&#125;</span>】菜单?`</span>, <span class="string">&quot;提示&quot;</span>, &#123;</span><br><span class="line">      <span class="attr">confirmButtonText</span>: <span class="string">&quot;确定&quot;</span>,</span><br><span class="line">      <span class="attr">cancelButtonText</span>: <span class="string">&quot;取消&quot;</span>,</span><br><span class="line">      <span class="attr">type</span>: <span class="string">&quot;warning&quot;</span>,</span><br><span class="line">    &#125;)</span><br><span class="line">      .<span class="title function_">then</span>(<span class="function">() =&gt;</span> &#123;</span><br><span class="line">        <span class="variable language_">this</span>.$http(&#123;</span><br><span class="line">          <span class="attr">url</span>: <span class="variable language_">this</span>.<span class="property">$http</span>.<span class="title function_">adornUrl</span>(<span class="string">&quot;/product/category/delete&quot;</span>),</span><br><span class="line">          <span class="attr">method</span>: <span class="string">&quot;post&quot;</span>,</span><br><span class="line">          <span class="attr">data</span>: <span class="variable language_">this</span>.<span class="property">$http</span>.<span class="title function_">adornData</span>(ids, <span class="literal">false</span>),</span><br><span class="line">        &#125;).<span class="title function_">then</span>(<span class="function">(<span class="params">&#123; data &#125;</span>) =&gt;</span> &#123;</span><br><span class="line">          <span class="comment">//成功删除后弹出提示</span></span><br><span class="line">          <span class="variable language_">this</span>.$message(&#123;</span><br><span class="line">            <span class="attr">message</span>: <span class="string">&quot;菜单删除成功&quot;</span>,</span><br><span class="line">            <span class="attr">type</span>: <span class="string">&quot;success&quot;</span>,</span><br><span class="line">          &#125;);</span><br><span class="line">          <span class="comment">//刷新出新的菜单</span></span><br><span class="line">          <span class="variable language_">this</span>.<span class="title function_">getMenus</span>();</span><br><span class="line">          <span class="comment">//设置需要默认展开的菜单，使得删除后当前目录处于展开的状态</span></span><br><span class="line">          <span class="variable language_">this</span>.<span class="property">expandedKey</span> = [node.<span class="property">parent</span>.<span class="property">data</span>.<span class="property">catId</span>];</span><br><span class="line">        &#125;);</span><br><span class="line">      &#125;)</span><br><span class="line">      .<span class="title function_">catch</span>(<span class="function">() =&gt;</span> &#123;&#125;);</span><br><span class="line"></span><br><span class="line">    <span class="variable language_">console</span>.<span class="title function_">log</span>(<span class="string">&quot;remove&quot;</span>, node, data);</span><br><span class="line">  &#125;,</span><br></pre></td></tr></table></figure><p><strong>添加数据</strong></p><p>在模板上添加分类对话框</p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line"> <span class="tag">&lt;<span class="name">el-dialog</span> <span class="attr">title</span>=<span class="string">&quot;添加分类&quot;</span> <span class="attr">:visible.sync</span>=<span class="string">&quot;dialogFormVisible&quot;</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">el-form</span> <span class="attr">:model</span>=<span class="string">&quot;category&quot;</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">el-form-item</span> <span class="attr">label</span>=<span class="string">&quot;分类名称&quot;</span>&gt;</span></span><br><span class="line">      <span class="tag">&lt;<span class="name">el-input</span> <span class="attr">v-model</span>=<span class="string">&quot;category.name&quot;</span> <span class="attr">autocomplete</span>=<span class="string">&quot;off&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">el-input</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">el-form-item</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;/<span class="name">el-form</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">div</span> <span class="attr">slot</span>=<span class="string">&quot;footer&quot;</span> <span class="attr">class</span>=<span class="string">&quot;dialog-footer&quot;</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">el-button</span> @<span class="attr">click</span>=<span class="string">&quot;dialogFormVisible = false&quot;</span>&gt;</span>取 消<span class="tag">&lt;/<span class="name">el-button</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">el-button</span> <span class="attr">type</span>=<span class="string">&quot;primary&quot;</span> @<span class="attr">click</span>=<span class="string">&quot;addCategory&quot;</span>&gt;</span>确 定<span class="tag">&lt;/<span class="name">el-button</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">el-dialog</span>&gt;</span></span><br></pre></td></tr></table></figure><p>在data属性中增加对话框显示属性<code>dialogFormVisible</code>和提交数据<code>category</code></p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br></pre></td><td class="code"><pre><span class="line"><span class="title function_">data</span>(<span class="params"></span>) &#123;</span><br><span class="line">    <span class="keyword">return</span> &#123;</span><br><span class="line">      <span class="attr">menus</span>: [],</span><br><span class="line">      <span class="attr">defaultProps</span>: &#123;</span><br><span class="line">        <span class="attr">children</span>: <span class="string">&quot;childrens&quot;</span>,</span><br><span class="line">        <span class="attr">label</span>: <span class="string">&quot;name&quot;</span>,</span><br><span class="line">      &#125;,</span><br><span class="line">      <span class="comment">//展开菜单的id</span></span><br><span class="line">      <span class="attr">expandedKey</span>: [],</span><br><span class="line">      <span class="comment">//添加分类对话框默认关闭</span></span><br><span class="line">      <span class="attr">dialogFormVisible</span>: <span class="literal">false</span>,</span><br><span class="line">      <span class="comment">//提交分类的数据</span></span><br><span class="line">      <span class="attr">category</span>: &#123;</span><br><span class="line">        <span class="attr">name</span>:<span class="string">&quot;&quot;</span>,</span><br><span class="line">        <span class="attr">parentCid</span>: <span class="number">0</span>,</span><br><span class="line">        <span class="attr">catLevel</span>: <span class="number">0</span>,</span><br><span class="line">        <span class="attr">showStatus</span>: <span class="number">1</span>,</span><br><span class="line">        <span class="attr">sort</span>: <span class="number">0</span>,</span><br><span class="line">        <span class="attr">productUnit</span>: <span class="string">&quot;&quot;</span>,</span><br><span class="line">        <span class="attr">icon</span>: <span class="string">&quot;&quot;</span>,</span><br><span class="line">        <span class="attr">catId</span>: <span class="literal">null</span>,</span><br><span class="line">      &#125;,</span><br><span class="line">    &#125;;</span><br><span class="line">  &#125;,</span><br></pre></td></tr></table></figure><p>分别添加<code>添加</code>和<code>确定</code>对应函数</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//点击添加调用此函数</span></span><br><span class="line"><span class="title function_">append</span>(<span class="params">data</span>) &#123;</span><br><span class="line">      <span class="variable language_">console</span>.<span class="title function_">log</span>(<span class="string">&quot;添加数据&quot;</span>, data);</span><br><span class="line">    <span class="comment">//显示对话框</span></span><br><span class="line">      <span class="variable language_">this</span>.<span class="property">dialogFormVisible</span>=<span class="literal">true</span>;</span><br><span class="line">    <span class="comment">//父id为当前点击数据id</span></span><br><span class="line">      <span class="variable language_">this</span>.<span class="property">category</span>.<span class="property">parentCid</span> = data.<span class="property">catId</span>;</span><br><span class="line">    <span class="comment">//显示层级为当前点击数据下一级</span></span><br><span class="line">      <span class="variable language_">this</span>.<span class="property">category</span>.<span class="property">catLevel</span> = data.<span class="property">catLevel</span> * <span class="number">1</span> + <span class="number">1</span>;</span><br><span class="line">      <span class="variable language_">this</span>.<span class="property">category</span>.<span class="property">catId</span> = <span class="literal">null</span>;</span><br><span class="line">      <span class="variable language_">this</span>.<span class="property">category</span>.<span class="property">name</span> = <span class="string">&quot;&quot;</span>;</span><br><span class="line">      <span class="variable language_">this</span>.<span class="property">category</span>.<span class="property">icon</span> = <span class="string">&quot;&quot;</span>;</span><br><span class="line">      <span class="variable language_">this</span>.<span class="property">category</span>.<span class="property">productUnit</span> = <span class="string">&quot;&quot;</span>;</span><br><span class="line">      <span class="variable language_">this</span>.<span class="property">category</span>.<span class="property">sort</span> = <span class="number">0</span>;</span><br><span class="line">      <span class="variable language_">this</span>.<span class="property">category</span>.<span class="property">showStatus</span> = <span class="number">1</span>;</span><br><span class="line">    &#125;,</span><br><span class="line"></span><br><span class="line">    <span class="title function_">addCategory</span>(<span class="params"></span>)&#123;</span><br><span class="line">      <span class="variable language_">this</span>.$http(&#123;</span><br><span class="line">      <span class="attr">url</span>: <span class="variable language_">this</span>.<span class="property">$http</span>.<span class="title function_">adornUrl</span>(<span class="string">&#x27;/product/category/save&#x27;</span>),</span><br><span class="line">      <span class="attr">method</span>: <span class="string">&#x27;post&#x27;</span>,</span><br><span class="line">      <span class="attr">data</span>: <span class="variable language_">this</span>.<span class="property">$http</span>.<span class="title function_">adornData</span>(<span class="variable language_">this</span>.<span class="property">category</span>, <span class="literal">false</span>)</span><br><span class="line">       &#125;).<span class="title function_">then</span>(<span class="function">(<span class="params">&#123; data &#125;</span>) =&gt;</span> &#123;</span><br><span class="line">        <span class="variable language_">this</span>.$message(&#123;</span><br><span class="line">          <span class="attr">message</span>: <span class="string">&quot;菜单保存成功&quot;</span>,</span><br><span class="line">          <span class="attr">type</span>: <span class="string">&quot;success&quot;</span>,</span><br><span class="line">        &#125;);</span><br><span class="line">        <span class="comment">//关闭对话框</span></span><br><span class="line">        <span class="variable language_">this</span>.<span class="property">dialogFormVisible</span> = <span class="literal">false</span>;</span><br><span class="line">        <span class="comment">//刷新出新的菜单</span></span><br><span class="line">        <span class="variable language_">this</span>.<span class="title function_">getMenus</span>();</span><br><span class="line">        <span class="comment">//设置需要默认展开的菜单</span></span><br><span class="line">        <span class="variable language_">this</span>.<span class="property">expandedKey</span> = [<span class="variable language_">this</span>.<span class="property">category</span>.<span class="property">parentCid</span>];</span><br><span class="line">      &#125;);</span><br><span class="line">    &#125;,</span><br><span class="line">  &#125;,</span><br></pre></td></tr></table></figure><h3 id="修改数据"><a href="#修改数据" class="headerlink" title="修改数据"></a>修改数据</h3><p>添加修改按钮</p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">el-button</span> <span class="attr">type</span>=<span class="string">&quot;text&quot;</span> <span class="attr">size</span>=<span class="string">&quot;mini&quot;</span> @<span class="attr">click</span>=<span class="string">&quot;() =&gt; edit(data)&quot;</span>&gt;</span>Edit<span class="tag">&lt;/<span class="name">el-button</span>&gt;</span></span><br></pre></td></tr></table></figure><p>使对话框回显数据并显示标题<code>修改分类</code>，由于与 <code>增加分类</code>公用统一对话框，所以需要添加属性<code>title</code>并定制函数<code>submitData()</code></p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">el-dialog</span> <span class="attr">:title</span>=<span class="string">&quot;title&quot;</span> <span class="attr">:visible.sync</span>=<span class="string">&quot;dialogFormVisible&quot;</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">el-form</span> <span class="attr">:model</span>=<span class="string">&quot;category&quot;</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">el-form-item</span> <span class="attr">label</span>=<span class="string">&quot;分类名称&quot;</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">el-input</span> <span class="attr">v-model</span>=<span class="string">&quot;category.name&quot;</span> <span class="attr">autocomplete</span>=<span class="string">&quot;off&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">el-input</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">el-form-item</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">el-form-item</span> <span class="attr">label</span>=<span class="string">&quot;图标&quot;</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">el-input</span> <span class="attr">v-model</span>=<span class="string">&quot;category.icon&quot;</span> <span class="attr">autocomplete</span>=<span class="string">&quot;off&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">el-input</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">el-form-item</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">el-form-item</span> <span class="attr">label</span>=<span class="string">&quot;计量单位&quot;</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">el-input</span> <span class="attr">v-model</span>=<span class="string">&quot;category.productUnit&quot;</span> <span class="attr">autocomplete</span>=<span class="string">&quot;off&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">el-input</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">el-form-item</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">el-form</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">div</span> <span class="attr">slot</span>=<span class="string">&quot;footer&quot;</span> <span class="attr">class</span>=<span class="string">&quot;dialog-footer&quot;</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">el-button</span> @<span class="attr">click</span>=<span class="string">&quot;dialogFormVisible = false&quot;</span>&gt;</span>取 消<span class="tag">&lt;/<span class="name">el-button</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">el-button</span> <span class="attr">type</span>=<span class="string">&quot;primary&quot;</span> @<span class="attr">click</span>=<span class="string">&quot;submitData&quot;</span>&gt;</span>确 定<span class="tag">&lt;/<span class="name">el-button</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">el-dialog</span>&gt;</span></span><br></pre></td></tr></table></figure><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br></pre></td><td class="code"><pre><span class="line"><span class="title function_">data</span>(<span class="params"></span>) &#123;</span><br><span class="line">   <span class="keyword">return</span> &#123;</span><br><span class="line">     <span class="attr">menus</span>: [],</span><br><span class="line">     <span class="attr">defaultProps</span>: &#123;</span><br><span class="line">       <span class="attr">children</span>: <span class="string">&quot;childrens&quot;</span>,</span><br><span class="line">       <span class="attr">label</span>: <span class="string">&quot;name&quot;</span>,</span><br><span class="line">     &#125;,</span><br><span class="line">     <span class="comment">//展开菜单的id</span></span><br><span class="line">     <span class="attr">expandedKey</span>: [],</span><br><span class="line">     <span class="attr">dialogFormVisible</span>: <span class="literal">false</span>,</span><br><span class="line">     <span class="attr">category</span>: &#123;</span><br><span class="line">       <span class="attr">catId</span>: <span class="literal">null</span>,</span><br><span class="line">       <span class="attr">name</span>: <span class="string">&quot;&quot;</span>,</span><br><span class="line">       <span class="attr">parentCid</span>: <span class="number">0</span>,</span><br><span class="line">       <span class="attr">catLevel</span>: <span class="number">0</span>,</span><br><span class="line">       <span class="attr">showStatus</span>: <span class="number">1</span>,</span><br><span class="line">       <span class="attr">sort</span>: <span class="number">0</span>,</span><br><span class="line">       <span class="attr">productUnit</span>: <span class="string">&quot;&quot;</span>,</span><br><span class="line">       <span class="attr">icon</span>: <span class="string">&quot;&quot;</span>,</span><br><span class="line">       <span class="attr">catId</span>: <span class="literal">null</span>,</span><br><span class="line">     &#125;,</span><br><span class="line">     <span class="comment">//对话框显示标题：添加分类/修改分类</span></span><br><span class="line">     <span class="attr">title</span>: <span class="string">&quot;&quot;</span>,</span><br><span class="line">     <span class="attr">dialogType</span>: <span class="string">&quot;&quot;</span> <span class="comment">// add/edit</span></span><br><span class="line">   &#125;;</span><br><span class="line"> &#125;,</span><br><span class="line">     </span><br><span class="line">     <span class="comment">//点击修改按钮调用函数</span></span><br><span class="line">      <span class="title function_">edit</span>(<span class="params">data</span>) &#123;</span><br><span class="line">     <span class="variable language_">this</span>.<span class="property">title</span> = <span class="string">&quot;修改分类&quot;</span>,</span><br><span class="line">     <span class="variable language_">this</span>.<span class="property">dialogFormVisible</span> = <span class="literal">true</span>,</span><br><span class="line">     <span class="variable language_">this</span>.<span class="property">dialogType</span>=<span class="string">&quot;edit&quot;</span>,</span><br><span class="line">       <span class="variable language_">console</span>.<span class="title function_">log</span>(<span class="string">&quot;修改数据&quot;</span>, data);</span><br><span class="line">     <span class="variable language_">this</span>.$http(&#123;</span><br><span class="line">       <span class="attr">url</span>: <span class="variable language_">this</span>.<span class="property">$http</span>.<span class="title function_">adornUrl</span>(<span class="string">`/product/category/info/<span class="subst">$&#123;data.catId&#125;</span>`</span>),</span><br><span class="line">       <span class="attr">method</span>: <span class="string">&quot;get&quot;</span>,</span><br><span class="line">     &#125;).<span class="title function_">then</span>(<span class="function">(<span class="params">&#123; data &#125;</span>) =&gt;</span> &#123;</span><br><span class="line">       <span class="variable language_">console</span>.<span class="title function_">log</span>(<span class="string">&quot;回显数据&quot;</span>, data.<span class="property">category</span>);</span><br><span class="line">       <span class="variable language_">this</span>.<span class="property">category</span> = data.<span class="property">category</span>;</span><br><span class="line">     &#125;);</span><br><span class="line">   &#125;,</span><br><span class="line"></span><br><span class="line">   <span class="comment">//点击确定按钮调用函数</span></span><br><span class="line">   <span class="title function_">editCategory</span>(<span class="params"></span>)&#123;</span><br><span class="line">     <span class="keyword">var</span> &#123;catId,name,icon,productUnit&#125;=<span class="variable language_">this</span>.<span class="property">category</span>;</span><br><span class="line">     <span class="variable language_">this</span>.$http(&#123;</span><br><span class="line">       <span class="attr">url</span>: <span class="variable language_">this</span>.<span class="property">$http</span>.<span class="title function_">adornUrl</span>(<span class="string">&quot;/product/category/update&quot;</span>),</span><br><span class="line">       <span class="attr">method</span>: <span class="string">&quot;post&quot;</span>,</span><br><span class="line">       <span class="attr">data</span>: <span class="variable language_">this</span>.<span class="property">$http</span>.<span class="title function_">adornData</span>(&#123;catId,name,icon,productUnit&#125;, <span class="literal">false</span>),</span><br><span class="line">     &#125;).<span class="title function_">then</span>(<span class="function">(<span class="params">&#123; data &#125;</span>) =&gt;</span> &#123;</span><br><span class="line">       <span class="variable language_">this</span>.$message(&#123;</span><br><span class="line">         <span class="attr">message</span>: <span class="string">&quot;菜单修改成功&quot;</span>,</span><br><span class="line">         <span class="attr">type</span>: <span class="string">&quot;success&quot;</span>,</span><br><span class="line">       &#125;);</span><br><span class="line">       <span class="comment">//关闭对话框</span></span><br><span class="line">       <span class="variable language_">this</span>.<span class="property">dialogFormVisible</span> = <span class="literal">false</span>;</span><br><span class="line">       <span class="comment">//刷新出新的菜单</span></span><br><span class="line">       <span class="variable language_">this</span>.<span class="title function_">getMenus</span>();</span><br><span class="line">       <span class="comment">//设置需要默认展开的菜单</span></span><br><span class="line">       <span class="variable language_">this</span>.<span class="property">expandedKey</span> = [<span class="variable language_">this</span>.<span class="property">category</span>.<span class="property">parentCid</span>];</span><br><span class="line">     &#125;);</span><br><span class="line">   &#125;,</span><br><span class="line"></span><br><span class="line">   <span class="comment">//根据提交类型是add/edit选择调用不同的方法</span></span><br><span class="line">   <span class="title function_">submitData</span>(<span class="params"></span>)&#123;</span><br><span class="line">     <span class="variable language_">this</span>.<span class="property">dialogType</span>==<span class="string">&quot;add&quot;</span>?<span class="variable language_">this</span>.<span class="title function_">addCategory</span>():<span class="variable language_">this</span>.<span class="title function_">editCategory</span>();</span><br><span class="line">   &#125;,</span><br><span class="line"> &#125;,</span><br></pre></td></tr></table></figure><h3 id="菜单拖动"><a href="#菜单拖动" class="headerlink" title="菜单拖动"></a>菜单拖动</h3><p><strong>开启拖拽功能</strong></p><p>在<code>&lt;el-tree&gt;</code>添加属性<code>draggable</code>开启拖拽功能</p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">el-tree</span></span></span><br><span class="line"><span class="tag">      <span class="attr">:data</span>=<span class="string">&quot;menus&quot;</span></span></span><br><span class="line"><span class="tag">      <span class="attr">:props</span>=<span class="string">&quot;defaultProps&quot;</span></span></span><br><span class="line"><span class="tag">      <span class="attr">:expand-on-click-node</span>=<span class="string">&quot;false&quot;</span></span></span><br><span class="line"><span class="tag">      <span class="attr">show-checkbox</span></span></span><br><span class="line"><span class="tag">      <span class="attr">node-key</span>=<span class="string">&quot;catId&quot;</span></span></span><br><span class="line"><span class="tag">      <span class="attr">:default-expanded-keys</span>=<span class="string">&quot;expandedKey&quot;</span></span></span><br><span class="line"><span class="tag">      <span class="attr">:draggable</span>=<span class="string">&quot;draggable&quot;</span></span></span><br><span class="line"><span class="tag">      <span class="attr">:allow-drop</span>=<span class="string">&quot;allowDrop&quot;</span>  //绑定允许拖拽的函数</span></span><br><span class="line"><span class="tag">      @<span class="attr">node-drop</span>=<span class="string">&quot;handleDrop&quot;</span> </span></span><br><span class="line"><span class="tag">      <span class="attr">ref</span>=<span class="string">&quot;menuTree&quot;</span></span></span><br><span class="line"><span class="tag">    &gt;</span></span><br></pre></td></tr></table></figure><p><strong>限制可拖拽范围</strong></p><p>由于我们的菜单是三级分类，所以未防止超出三级的情况，有部分情况不允许被拖入：比如被拖拽的节点本身包含两级菜单，将其拖进第二层级的节点，那么最深层级就达到了四级，为防止这种情况的出现，我们需要编写在<code>&lt;el-tree&gt;</code>中绑定<code>allow-drop</code>属性并编写<code>allowDrop()</code>函数</p><p><code>allowDrop()</code>的思路为将被拖拽节点的子节点通过递归遍历找出最深节点的<code>level</code>，然后将被拖拽节点的相对深度与目标节点的相对深度相加，看是否超出最大深度3</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//拖拽时判定目标节点能否被放置。type 参数有三种情况：&#x27;prev&#x27;、&#x27;inner&#x27; 和 &#x27;next&#x27;，</span></span><br><span class="line"><span class="comment">//分别表示放置在目标节点前、插入至目标节点和放置在目标节点后</span></span><br><span class="line"><span class="title function_">allowDrop</span>(<span class="params">draggingNode, dropNode, type</span>)&#123;</span><br><span class="line">    <span class="variable language_">console</span>.<span class="title function_">log</span>(<span class="string">&quot;拖拽节点&quot;</span>,draggingNode,dropNode,type);</span><br><span class="line">    <span class="variable language_">this</span>.<span class="property">maxLevel</span>=draggingNode.<span class="property">level</span>;</span><br><span class="line">    <span class="variable language_">this</span>.<span class="title function_">countNodeLevel</span>(draggingNode);</span><br><span class="line">    <span class="comment">//当前拖拽节点距离最深节点的深度</span></span><br><span class="line">    <span class="keyword">let</span> deep=(<span class="variable language_">this</span>.<span class="property">maxLevel</span>-draggingNode.<span class="property">level</span>)+<span class="number">1</span>;</span><br><span class="line">    <span class="variable language_">console</span>.<span class="title function_">log</span>(<span class="string">&quot;deep:&quot;</span>,deep,<span class="string">&quot;maxlevel:&quot;</span>,<span class="variable language_">this</span>.<span class="property">maxLevel</span>,<span class="string">&quot;dragging:&quot;</span>,draggingNode.<span class="property">level</span>);</span><br><span class="line">    <span class="keyword">if</span>(type==<span class="string">&quot;inner&quot;</span>)&#123;</span><br><span class="line">        <span class="keyword">return</span> deep+dropNode.<span class="property">level</span>&lt;=<span class="number">3</span>;</span><br><span class="line">    &#125;<span class="keyword">else</span>&#123;</span><br><span class="line">        <span class="keyword">return</span> deep+dropNode.<span class="property">parent</span>.<span class="property">level</span>&lt;=<span class="number">3</span>;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;,</span><br><span class="line"></span><br><span class="line"><span class="comment">//判断当前拖动菜单的最深层级</span></span><br><span class="line"><span class="title function_">countNodeLevel</span>(<span class="params">node</span>)&#123;</span><br><span class="line">    <span class="keyword">if</span>(node.<span class="property">childNodes</span>!=<span class="literal">null</span>&amp;&amp;node.<span class="property">childNodes</span>.<span class="property">length</span>!=<span class="number">0</span>)&#123;</span><br><span class="line">        <span class="keyword">for</span>(<span class="keyword">let</span> i=<span class="number">0</span>;i&lt;node.<span class="property">childNodes</span>.<span class="property">length</span>;i++)&#123;</span><br><span class="line">            <span class="keyword">if</span>(node.<span class="property">childNodes</span>[i].<span class="property">level</span>&gt;<span class="variable language_">this</span>.<span class="property">maxLevel</span>)&#123;</span><br><span class="line">                <span class="variable language_">this</span>.<span class="property">maxLevel</span>=node.<span class="property">childNodes</span>[i].<span class="property">level</span>;</span><br><span class="line">            &#125;</span><br><span class="line">            <span class="variable language_">this</span>.<span class="title function_">countNodeLevel</span>(node.<span class="property">childNodes</span>[i]);</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;,</span><br></pre></td></tr></table></figure><p><strong>拖拽完成</strong></p><p>拖拽完成后我们需要更新三个状态：</p><ol><li><p>当前节点最新的父节点id，</p></li><li><p>当前拖拽节点的最新顺序</p><blockquote><p>遍历姊妹节点的顺序即为新顺序</p></blockquote></li><li><p>当前拖拽节点的最新层级</p><blockquote><p> 当前拖拽层级变化需要更新拖拽节点及其子节点</p></blockquote></li></ol><p>拖拽完成后需要更新变化的节点，根据被拖拽节点的防止位置的不同，变化的部分也有所不同</p><ul><li><p>inner</p><p>父节点为<code>dropNode</code>节点</p><p>姊妹节点为<code>dropNode</code>的孩子节点</p></li><li><p>before/after</p><p>父节点为<code>dropNode</code>的父节点</p><p>姊妹节点为<code>dropNode</code>的父节点的孩子节点</p></li></ul><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//拖拽成功完成时触发的事件</span></span><br><span class="line"><span class="comment">//共四个参数，依次为：</span></span><br><span class="line"><span class="comment">//被拖拽节点对应的 Node、结束拖拽时最后进入的节点、被拖拽节点的放置位置（before、after、inner）、event</span></span><br><span class="line"><span class="title function_">handleDrop</span>(<span class="params">draggingNode, dropNode, dropType, ev</span>) &#123;</span><br><span class="line">    <span class="comment">//1、当前节点最新的父节点id</span></span><br><span class="line">    <span class="keyword">let</span> pCid=<span class="number">0</span>;</span><br><span class="line">    <span class="keyword">let</span> siblings=<span class="literal">null</span>;</span><br><span class="line">    <span class="keyword">if</span>(dropType==<span class="string">&quot;inner&quot;</span>)&#123;</span><br><span class="line">        pCid=dropNode.<span class="property">data</span>.<span class="property">catId</span>;</span><br><span class="line">        siblings=dropNode.<span class="property">childNodes</span>;</span><br><span class="line">    &#125;<span class="keyword">else</span>&#123;</span><br><span class="line">        pCid=dropNode.<span class="property">parent</span>.<span class="property">data</span>.<span class="property">catId</span>==<span class="literal">undefined</span>?<span class="number">0</span>:dropNode.<span class="property">parent</span>.<span class="property">data</span>.<span class="property">catId</span>;</span><br><span class="line">        siblings=dropNode.<span class="property">parent</span>.<span class="property">childNodes</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="comment">//2、当前拖拽节点的最新顺序，</span></span><br><span class="line">    <span class="comment">//3、当前拖拽节点的最新层级</span></span><br><span class="line">    <span class="variable language_">this</span>.<span class="property">pCid</span>.<span class="title function_">push</span>(pCid);</span><br><span class="line">    <span class="keyword">for</span>(<span class="keyword">let</span> i=<span class="number">0</span>;i&lt;siblings.<span class="property">length</span>;i++)&#123;</span><br><span class="line">        <span class="keyword">if</span>(siblings[i].<span class="property">data</span>.<span class="property">catId</span>==draggingNode.<span class="property">data</span>.<span class="property">catId</span>)&#123;</span><br><span class="line">            <span class="keyword">let</span> catLevel=draggingNode.<span class="property">catLevel</span>;</span><br><span class="line">            <span class="comment">//被拖拽节点的层级发生变化</span></span><br><span class="line">            <span class="comment">//其子节点的层级也需要变化</span></span><br><span class="line">            <span class="keyword">if</span>(catLevel!=draggingNode.<span class="property">level</span>)&#123;</span><br><span class="line">                <span class="variable language_">this</span>.<span class="title function_">updateChildNodeLevel</span>(siblings[i]);</span><br><span class="line">                catLevel=draggingNode.<span class="property">level</span>;</span><br><span class="line">            &#125;</span><br><span class="line">            <span class="variable language_">this</span>.<span class="property">updateNodes</span>.<span class="title function_">push</span>(&#123;</span><br><span class="line">                <span class="attr">catId</span>:siblings[i].<span class="property">data</span>.<span class="property">catId</span>,</span><br><span class="line">                catLevel,</span><br><span class="line">                <span class="attr">sort</span>:i,</span><br><span class="line">                <span class="attr">parentCid</span>:pCid,</span><br><span class="line">            &#125;);</span><br><span class="line">        &#125;<span class="keyword">else</span>&#123;</span><br><span class="line">            <span class="variable language_">this</span>.<span class="property">updateNodes</span>.<span class="title function_">push</span>(&#123;</span><br><span class="line">                <span class="attr">catId</span>:siblings[i].<span class="property">data</span>.<span class="property">catId</span>,</span><br><span class="line">                <span class="attr">sort</span>:i,</span><br><span class="line">            &#125;);</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="variable language_">console</span>.<span class="title function_">log</span>(<span class="variable language_">this</span>.<span class="property">updateNodes</span>);</span><br><span class="line">&#125;,</span><br><span class="line"></span><br><span class="line">    <span class="comment">//更新子节点的层级</span></span><br><span class="line">    <span class="title function_">updateChildNodeLevel</span>(<span class="params">node</span>)&#123;</span><br><span class="line">        <span class="keyword">if</span>(node.<span class="property">childNodes</span>.<span class="property">length</span>&gt;<span class="number">0</span>)&#123;</span><br><span class="line">            <span class="keyword">for</span>(<span class="keyword">let</span> i=<span class="number">0</span>;i&lt;node.<span class="property">childNodes</span>.<span class="property">length</span>;i++)&#123;</span><br><span class="line">                <span class="variable language_">this</span>.<span class="property">updateNodes</span>.<span class="title function_">push</span>(&#123;</span><br><span class="line">                    <span class="attr">catId</span>:node.<span class="property">childNodes</span>[i].<span class="property">data</span>.<span class="property">catId</span>,</span><br><span class="line">                    <span class="attr">catLevel</span>:node.<span class="property">childNodes</span>[i].<span class="property">level</span>,</span><br><span class="line">                &#125;);</span><br><span class="line">                <span class="variable language_">this</span>.<span class="title function_">updateChildNodeLevel</span>(node.<span class="property">childNodes</span>[i]);</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;,</span><br></pre></td></tr></table></figure><p><strong>设置菜单拖动开关</strong></p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">&lt;el-switch v-model=&quot;draggable&quot; active-text=&quot;开启拖拽&quot; inactive-text=&quot;关闭拖拽&quot;&gt;&lt;/el-switch&gt;</span><br><span class="line">&lt;el-button v-if=&quot;draggable&quot; @click=&quot;batchSave&quot;&gt;批量保存&lt;/el-button&gt;</span><br></pre></td></tr></table></figure><blockquote><p>现在存在的一个问题是每次拖拽的时候，都会发送请求，更新数据库这样频繁的与数据库交互，现在想要实现一个拖拽过程中不更新数据库，拖拽完成后，通过<code>批量保存</code>统一提交拖拽后的数据。</p></blockquote><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//批量保存拖动分类</span></span><br><span class="line"><span class="title function_">batchSave</span>(<span class="params"></span>)&#123;</span><br><span class="line">    <span class="variable language_">this</span>.$http(&#123;</span><br><span class="line">        <span class="attr">url</span>: <span class="variable language_">this</span>.<span class="property">$http</span>.<span class="title function_">adornUrl</span>(<span class="string">&#x27;/product/category/updateNodes&#x27;</span>),</span><br><span class="line">        <span class="attr">method</span>: <span class="string">&#x27;post&#x27;</span>,</span><br><span class="line">        <span class="attr">data</span>: <span class="variable language_">this</span>.<span class="property">$http</span>.<span class="title function_">adornData</span>(<span class="variable language_">this</span>.<span class="property">updateNodes</span>, <span class="literal">false</span>)</span><br><span class="line">    &#125;).<span class="title function_">then</span>(<span class="function">(<span class="params">&#123; data &#125;</span>) =&gt;</span> &#123; </span><br><span class="line">        <span class="variable language_">this</span>.$message(&#123;</span><br><span class="line">            <span class="attr">message</span>: <span class="string">&quot;菜单顺序等修改成功&quot;</span>,</span><br><span class="line">            <span class="attr">type</span>: <span class="string">&quot;success&quot;</span></span><br><span class="line">        &#125;);</span><br><span class="line">        <span class="comment">//刷新出新的菜单</span></span><br><span class="line">        <span class="variable language_">this</span>.<span class="title function_">getMenus</span>();</span><br><span class="line">        <span class="comment">//设置需要默认展开的菜单</span></span><br><span class="line">        <span class="variable language_">this</span>.<span class="property">expandedKey</span> = <span class="variable language_">this</span>.<span class="property">pCid</span>;</span><br><span class="line">        <span class="comment">//将更新节点置空</span></span><br><span class="line">        <span class="variable language_">this</span>.<span class="property">updateNodes</span> = [];</span><br><span class="line">        <span class="variable language_">this</span>.<span class="property">maxLevel</span> = <span class="number">0</span>;</span><br><span class="line">    &#125;);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>现在还存在一个问题，如果是将一个菜单连续的拖拽，最终还放到了原来的位置，但是updateNode中却出现了很多节点更新信息，这样显然也是一个问题。</p><h3 id="批量删除"><a href="#批量删除" class="headerlink" title="批量删除"></a>批量删除</h3><p>添加删除按钮</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">&lt;el-button type=&quot;danger&quot; plain size=&quot;small&quot; @click=&quot;batchDelete&quot;&gt;批量删除&lt;/el-button&gt;</span><br></pre></td></tr></table></figure><p>在<code>&lt;el-tree&gt;</code>中添加<code>  ref=&quot;tree&quot;</code>属性以获得选中节点</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//批量删除</span></span><br><span class="line"><span class="title function_">batchDelete</span>(<span class="params"></span>)&#123;</span><br><span class="line">    <span class="comment">// this.$refs表示当前el-tree的所有引用</span></span><br><span class="line">    <span class="keyword">let</span> checkNodes = <span class="variable language_">this</span>.<span class="property">$refs</span>.<span class="property">tree</span>.<span class="title function_">getCheckedNodes</span>();</span><br><span class="line">    <span class="keyword">let</span> ids=[];</span><br><span class="line">    <span class="keyword">let</span> names=[];</span><br><span class="line">    <span class="keyword">for</span>(<span class="keyword">let</span> i=<span class="number">0</span>;i&lt;checkNodes.<span class="property">length</span>;i++)&#123;</span><br><span class="line">        ids.<span class="title function_">push</span>(checkNodes[i].<span class="property">catId</span>);</span><br><span class="line">        names.<span class="title function_">push</span>(checkNodes[i].<span class="property">name</span>);</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="variable language_">this</span>.$confirm(<span class="string">`是否删除【<span class="subst">$&#123;names&#125;</span>】菜单?`</span>, <span class="string">&quot;提示&quot;</span>, &#123;</span><br><span class="line">        <span class="attr">confirmButtonText</span>: <span class="string">&quot;确定&quot;</span>,</span><br><span class="line">        <span class="attr">cancelButtonText</span>: <span class="string">&quot;取消&quot;</span>,</span><br><span class="line">        <span class="attr">type</span>: <span class="string">&quot;warning&quot;</span>,</span><br><span class="line">    &#125;).<span class="title function_">then</span>(<span class="function">()=&gt;</span>&#123;</span><br><span class="line">        <span class="comment">//获取选中节点</span></span><br><span class="line">        <span class="comment">//$refs表示所有属性，由于在之前定义了ref=&quot;tree&quot;</span></span><br><span class="line"></span><br><span class="line">        <span class="variable language_">this</span>.$http(&#123;</span><br><span class="line">            <span class="attr">url</span>: <span class="variable language_">this</span>.<span class="property">$http</span>.<span class="title function_">adornUrl</span>(<span class="string">&#x27;/product/category/delete&#x27;</span>),</span><br><span class="line">            <span class="attr">method</span>: <span class="string">&#x27;post&#x27;</span>,</span><br><span class="line">            <span class="attr">data</span>: <span class="variable language_">this</span>.<span class="property">$http</span>.<span class="title function_">adornData</span>(ids, <span class="literal">false</span>)</span><br><span class="line">        &#125;).<span class="title function_">then</span>(<span class="function">() =&gt;</span> &#123; </span><br><span class="line">            <span class="variable language_">this</span>.$message(&#123;</span><br><span class="line">                <span class="attr">message</span>: <span class="string">&quot;批量删除成功&quot;</span>,</span><br><span class="line">                <span class="attr">type</span>: <span class="string">&quot;success&quot;</span></span><br><span class="line">            &#125;);</span><br><span class="line">            <span class="variable language_">this</span>.<span class="title function_">getMenus</span>();</span><br><span class="line">        &#125;);</span><br><span class="line">    &#125;</span><br><span class="line">           ).<span class="title function_">catch</span>();</span><br><span class="line">&#125;,</span><br></pre></td></tr></table></figure><h2 id="品牌菜单管理"><a href="#品牌菜单管理" class="headerlink" title="品牌菜单管理"></a>品牌菜单管理</h2><p><img src="https://cdn.jsdelivr.net/gh/zsxfa/CDN/img/md/2022/03/18/1647593693.png" alt="desc"></p><p>将“”逆向工程得到的resources\src\views\modules\product文件拷贝到gulimall/renren-fast-vue/src/views/modules/product目录下，也就是下面的两个文件</p><p>brand.vue  brand-add-or-update.vue</p><p>但是显示的页面没有新增和删除功能，这是因为权限控制的原因，</p><p><img src="https://cdn.jsdelivr.net/gh/zsxfa/CDN/img/md/2022/03/18/1647595544.png" alt="desc"></p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">&lt;el-button v-if=&quot;isAuth(&#x27;product:brand:save&#x27;)&quot; type=&quot;primary&quot; @click=&quot;addOrUpdateHandle()&quot;&gt;新增&lt;/el-button&gt;</span><br><span class="line">&lt;el-button v-if=&quot;isAuth(&#x27;product:brand:delete&#x27;)&quot; type=&quot;danger&quot; @click=&quot;deleteHandle()&quot; :disabled=&quot;dataListSelections.length &lt;= 0&quot;&gt;批量删除&lt;/el-button&gt;</span><br></pre></td></tr></table></figure><p>查看“isAuth”的定义位置：</p><p><img src="https://cdn.jsdelivr.net/gh/zsxfa/CDN/img/md/2022/03/18/1647595639.png" alt="desc"></p><p>它是在“index.js”中定义，现在将它设置为返回值为true，即可显示添加和删除功能。</p><p>再次刷新页面能够看到，按钮已经出现了：</p><p><img src="https://cdn.jsdelivr.net/gh/zsxfa/CDN/img/md/2022/03/18/1647595687.png" alt="desc"></p><h3 id="添加“显示状态按钮”"><a href="#添加“显示状态按钮”" class="headerlink" title="添加“显示状态按钮”"></a>添加“显示状态按钮”</h3><p>brand.vue</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line">&lt;template slot-scope=&quot;scope&quot;&gt;</span><br><span class="line">  &lt;el-switch</span><br><span class="line">    v-model=&quot;scope.row.showStatus&quot;</span><br><span class="line">    active-color=&quot;#13ce66&quot;</span><br><span class="line">    inactive-color=&quot;#ff4949&quot;</span><br><span class="line">    @change=&quot;updateBrandStatus(scope.row)&quot;</span><br><span class="line">    :active-value = &quot;1&quot;</span><br><span class="line">    :inactive-value= &quot;0&quot;</span><br><span class="line">  &gt;&lt;/el-switch&gt;</span><br><span class="line">&lt;/template&gt;</span><br></pre></td></tr></table></figure><p>brand-add-or-update.vue</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">&lt;el-form-item label=&quot;显示状态&quot; prop=&quot;showStatus&quot;&gt;</span><br><span class="line">   &lt;el-switch v-model=&quot;dataForm.showStatus&quot; active-color=&quot;#13ce66&quot; inactive-color=&quot;#ff4949&quot;&gt;&lt;/el-switch&gt;</span><br><span class="line">&lt;/el-form-item&gt;</span><br></pre></td></tr></table></figure><p>brand.vue</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//更新开关的状态</span></span><br><span class="line"><span class="title function_">updateBrandStatus</span>(<span class="params">data</span>) &#123;</span><br><span class="line">    <span class="variable language_">console</span>.<span class="title function_">log</span>(<span class="string">&quot;最新状态&quot;</span>, data);</span><br><span class="line">    <span class="keyword">let</span> &#123;brandId,showStatus&#125; = data;</span><br><span class="line">    <span class="variable language_">this</span>.$http(&#123;</span><br><span class="line">        <span class="attr">url</span>: <span class="variable language_">this</span>.<span class="property">$http</span>.<span class="title function_">adornUrl</span>(<span class="string">&quot;/product/brand/update&quot;</span>),</span><br><span class="line">        <span class="attr">method</span>: <span class="string">&quot;post&quot;</span>,</span><br><span class="line">        <span class="attr">data</span>: <span class="variable language_">this</span>.<span class="property">$http</span>.<span class="title function_">adornData</span>(&#123;brandId,showStatus&#125;, <span class="literal">false</span>)</span><br><span class="line">    &#125;).<span class="title function_">then</span>(<span class="function">(<span class="params">&#123; data &#125;</span>) =&gt;</span> &#123;</span><br><span class="line"></span><br><span class="line">        <span class="variable language_">this</span>.$message(&#123;</span><br><span class="line">            <span class="attr">message</span>: <span class="string">&quot;状态更新成功&quot;</span>,</span><br><span class="line">            <span class="attr">type</span>: <span class="string">&quot;success&quot;</span></span><br><span class="line">        &#125;);</span><br><span class="line">    &#125;);</span><br><span class="line">&#125;,</span><br></pre></td></tr></table></figure><h3 id="添加上传"><a href="#添加上传" class="headerlink" title="添加上传"></a>添加上传</h3><p>和传统的单体应用不同，这里我们选择将数据上传到分布式文件服务器上。</p><p>这里我们选择将图片放置到阿里云上，使用对象存储。</p><p>阿里云上使使用对象存储方式：</p><p>查看阿里云关于文件上传的帮助： <a href="https://help.aliyun.com/document_detail/32009.html?spm=a2c4g.11186623.6.768.549d59aaWuZMGJ">https://help.aliyun.com/document_detail/32009.html?spm=a2c4g.11186623.6.768.549d59aaWuZMGJ</a> </p><h4 id="1）添加依赖包"><a href="#1）添加依赖包" class="headerlink" title="1）添加依赖包"></a>1）添加依赖包</h4><p>在Maven项目中加入依赖项（推荐方式）</p><p>在 Maven 工程中使用 OSS Java SDK，只需在 pom.xml 中加入相应依赖即可。以 3.8.0 版本为例，在 <dependencies> 内加入如下内容：</p><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>com.aliyun.oss<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>aliyun-sdk-oss<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">version</span>&gt;</span>3.8.0<span class="tag">&lt;/<span class="name">version</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br></pre></td></tr></table></figure><h4 id="2）上传文件流"><a href="#2）上传文件流" class="headerlink" title="2）上传文件流"></a>2）上传文件流</h4><p>以下代码用于上传文件流：</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// Endpoint以杭州为例，其它Region请按实际情况填写。</span></span><br><span class="line"><span class="type">String</span> <span class="variable">endpoint</span> <span class="operator">=</span> <span class="string">&quot;http://oss-cn-hangzhou.aliyuncs.com&quot;</span>;</span><br><span class="line"><span class="comment">// 云账号AccessKey有所有API访问权限，建议遵循阿里云安全最佳实践，创建并使用RAM子账号进行API访问或日常运维，请登录 https://ram.console.aliyun.com 创建。</span></span><br><span class="line"><span class="type">String</span> <span class="variable">accessKeyId</span> <span class="operator">=</span> <span class="string">&quot;&lt;yourAccessKeyId&gt;&quot;</span>;</span><br><span class="line"><span class="type">String</span> <span class="variable">accessKeySecret</span> <span class="operator">=</span> <span class="string">&quot;&lt;yourAccessKeySecret&gt;&quot;</span>;</span><br><span class="line"></span><br><span class="line"><span class="comment">// 创建OSSClient实例。</span></span><br><span class="line"><span class="type">OSS</span> <span class="variable">ossClient</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">OSSClientBuilder</span>().build(endpoint, accessKeyId, accessKeySecret);</span><br><span class="line"></span><br><span class="line"><span class="comment">// 上传文件流。</span></span><br><span class="line"><span class="type">InputStream</span> <span class="variable">inputStream</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">FileInputStream</span>(<span class="string">&quot;&lt;yourlocalFile&gt;&quot;</span>);</span><br><span class="line">ossClient.putObject(<span class="string">&quot;&lt;yourBucketName&gt;&quot;</span>, <span class="string">&quot;&lt;yourObjectName&gt;&quot;</span>, inputStream);</span><br><span class="line"></span><br><span class="line"><span class="comment">// 关闭OSSClient。</span></span><br><span class="line">ossClient.shutdown();</span><br></pre></td></tr></table></figure><p>endpoint的取值：</p><p>accessKeyId和accessKeySecret需要创建一个RAM账号：</p><p>创建用户完毕后，会得到一个“AccessKey ID”和“AccessKeySecret”，然后复制这两个值到代码的“AccessKey ID”和“AccessKeySecret”。</p><p>另外还需要添加访问控制权限：</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">@Test</span></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">testUpload</span><span class="params">()</span> <span class="keyword">throws</span> FileNotFoundException &#123;</span><br><span class="line">        <span class="comment">// Endpoint以杭州为例，其它Region请按实际情况填写。</span></span><br><span class="line">        <span class="type">String</span> <span class="variable">endpoint</span> <span class="operator">=</span> <span class="string">&quot;oss-cn-shanghai.aliyuncs.com&quot;</span>;</span><br><span class="line">        <span class="comment">// 云账号AccessKey有所有API访问权限，建议遵循阿里云安全最佳实践，创建并使用RAM子账号进行API访问或日常运维，请登录 https://ram.console.aliyun.com 创建。</span></span><br><span class="line">        <span class="type">String</span> <span class="variable">accessKeyId</span> <span class="operator">=</span> <span class="string">&quot;LTAI4G4W1RA4JXz2QhoDwHhi&quot;</span>;</span><br><span class="line">        <span class="type">String</span> <span class="variable">accessKeySecret</span> <span class="operator">=</span> <span class="string">&quot;R99lmDOJumF2x43ZBKT259Qpe70Oxw&quot;</span>;</span><br><span class="line"></span><br><span class="line">        <span class="comment">// 创建OSSClient实例。</span></span><br><span class="line">        <span class="type">OSS</span> <span class="variable">ossClient</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">OSSClientBuilder</span>().build(endpoint, accessKeyId, accessKeySecret);</span><br><span class="line"></span><br><span class="line">        <span class="comment">// 上传文件流。</span></span><br><span class="line">        <span class="type">InputStream</span> <span class="variable">inputStream</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">FileInputStream</span>(<span class="string">&quot;C:\\Users\\Administrator\\Pictures\\timg.jpg&quot;</span>);</span><br><span class="line">        ossClient.putObject(<span class="string">&quot;gulimall-images&quot;</span>, <span class="string">&quot;time.jpg&quot;</span>, inputStream);</span><br><span class="line"></span><br><span class="line">        <span class="comment">// 关闭OSSClient。</span></span><br><span class="line">        ossClient.shutdown();</span><br><span class="line">        System.out.println(<span class="string">&quot;上传成功.&quot;</span>);</span><br><span class="line">    &#125;</span><br></pre></td></tr></table></figure><p>更为简单的使用方式，是使用SpringCloud Alibaba</p><p>详细使用方法，见： <a href="https://help.aliyun.com/knowledge_detail/108650.html">https://help.aliyun.com/knowledge_detail/108650.html</a>  </p><p>（1）添加依赖</p><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>com.alibaba.cloud<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>spring-cloud-starter-alicloud-oss<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">version</span>&gt;</span>2.2.0.RELEASE<span class="tag">&lt;/<span class="name">version</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br></pre></td></tr></table></figure><p>（2）创建“AccessKey ID”和“AccessKeySecret”</p><p>（3）配置key，secret和endpoint相关信息</p><figure class="highlight yaml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="attr">access-key:</span> <span class="string">xxx</span></span><br><span class="line"><span class="attr">secret-key:</span> <span class="string">xxx</span></span><br><span class="line"><span class="attr">oss:</span></span><br><span class="line"><span class="attr">endpoint:</span> <span class="string">oss-cn-shanghai.aliyuncs.com</span></span><br></pre></td></tr></table></figure><p>（4）注入OSSClient并进行文件上传下载等操作</p><p>但是这样来做还是比较麻烦，如果以后的上传任务都交给gulimall-product来完成，显然耦合度高。最好单独新建一个Module来完成文件上传任务。</p><h3 id="其他方式"><a href="#其他方式" class="headerlink" title="其他方式"></a>其他方式</h3><h4 id="1）新建gulimall-third-party"><a href="#1）新建gulimall-third-party" class="headerlink" title="1）新建gulimall-third-party"></a>1）新建gulimall-third-party</h4><h4 id="2）添加依赖，将原来gulimall-common中的“spring-cloud-starter-alicloud-oss”依赖移动到该项目中"><a href="#2）添加依赖，将原来gulimall-common中的“spring-cloud-starter-alicloud-oss”依赖移动到该项目中" class="headerlink" title="2）添加依赖，将原来gulimall-common中的“spring-cloud-starter-alicloud-oss”依赖移动到该项目中"></a>2）添加依赖，将原来gulimall-common中的“spring-cloud-starter-alicloud-oss”依赖移动到该项目中</h4><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>com.alibaba.cloud<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>spring-cloud-starter-alicloud-oss<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">version</span>&gt;</span>2.2.0.RELEASE<span class="tag">&lt;/<span class="name">version</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>com.atguigu.gulimall<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>gulimall-common<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">version</span>&gt;</span>1.0-SNAPSHOT<span class="tag">&lt;/<span class="name">version</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">exclusions</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">exclusion</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>com.baomidou<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>mybatis-plus-boot-starter<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">exclusion</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">exclusions</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br></pre></td></tr></table></figure><p> 另外也需要在“pom.xml”文件中，添加如下的依赖管理</p><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">dependencyManagement</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">dependencies</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>org.springframework.cloud<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>spring-cloud-dependencies<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">version</span>&gt;</span>$&#123;spring-cloud.version&#125;<span class="tag">&lt;/<span class="name">version</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">type</span>&gt;</span>pom<span class="tag">&lt;/<span class="name">type</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">scope</span>&gt;</span>import<span class="tag">&lt;/<span class="name">scope</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>com.alibaba.cloud<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>spring-cloud-alibaba-dependencies<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">version</span>&gt;</span>2.2.1.RELEASE<span class="tag">&lt;/<span class="name">version</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">type</span>&gt;</span>pom<span class="tag">&lt;/<span class="name">type</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">scope</span>&gt;</span>import<span class="tag">&lt;/<span class="name">scope</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">dependencies</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">dependencyManagement</span>&gt;</span></span><br></pre></td></tr></table></figure><h4 id="3）在主启动类中开启服务的注册和发现"><a href="#3）在主启动类中开启服务的注册和发现" class="headerlink" title="3）在主启动类中开启服务的注册和发现"></a>3）在主启动类中开启服务的注册和发现</h4><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">@EnableDiscoveryClient</span></span><br></pre></td></tr></table></figure><h4 id="4）在nacos中注册"><a href="#4）在nacos中注册" class="headerlink" title="4）在nacos中注册"></a>4）在nacos中注册</h4><p>（1）创建命名空间“ gulimall-third-party ”</p><p><img src="images/image-20200429075831984.png" alt="image-20200429075831984"></p><p>（2）在“ gulimall-third-party”命名空间中，创建“ gulimall-third-party.yml”文件</p><figure class="highlight yaml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="attr">spring:</span></span><br><span class="line">  <span class="attr">cloud:</span></span><br><span class="line">    <span class="attr">alicloud:</span></span><br><span class="line">      <span class="attr">access-key:</span> <span class="string">LTAI4G4W1RA4JXz2QhoDwHhi</span></span><br><span class="line">      <span class="attr">secret-key:</span> <span class="string">R99lmDOJumF2x43ZBKT259Qpe70Oxw</span></span><br><span class="line">      <span class="attr">oss:</span></span><br><span class="line">        <span class="attr">endpoint:</span> <span class="string">oss-cn-shanghai.aliyuncs.com</span></span><br></pre></td></tr></table></figure><h4 id="5）编写配置文件"><a href="#5）编写配置文件" class="headerlink" title="5）编写配置文件"></a>5）编写配置文件</h4><p>application.yml</p><figure class="highlight yaml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line"><span class="attr">server:</span></span><br><span class="line">  <span class="attr">port:</span> <span class="number">30000</span></span><br><span class="line"></span><br><span class="line"><span class="attr">spring:</span></span><br><span class="line">  <span class="attr">application:</span></span><br><span class="line">    <span class="attr">name:</span> <span class="string">gulimall-third-party</span></span><br><span class="line">  <span class="attr">cloud:</span></span><br><span class="line">    <span class="attr">nacos:</span></span><br><span class="line">      <span class="attr">discovery:</span></span><br><span class="line">        <span class="attr">server-addr:</span> <span class="number">192.168</span><span class="number">.137</span><span class="number">.14</span><span class="string">:8848</span></span><br><span class="line"></span><br><span class="line"><span class="attr">logging:</span></span><br><span class="line">  <span class="attr">level:</span></span><br><span class="line">    <span class="attr">io.niceseason.gulimall.product:</span> <span class="string">debug</span></span><br><span class="line"></span><br></pre></td></tr></table></figure><p>bootstrap.properties</p><figure class="highlight properties"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="attr">spring.cloud.nacos.config.name</span>=<span class="string">gulimall-third-party</span></span><br><span class="line"><span class="attr">spring.cloud.nacos.config.server-addr</span>=<span class="string">192.168.137.14:8848</span></span><br><span class="line"><span class="attr">spring.cloud.nacos.config.namespace</span>=<span class="string">f995d8ee-c53a-4d29-8316-a1ef54775e00</span></span><br><span class="line"><span class="attr">spring.cloud.nacos.config.extension-configs[0].data-id</span>=<span class="string">gulimall-third-party.yml</span></span><br><span class="line"><span class="attr">spring.cloud.nacos.config.extension-configs[0].group</span>=<span class="string">DEFAULT_GROUP</span></span><br><span class="line"><span class="attr">spring.cloud.nacos.config.extension-configs[0].refresh</span>=<span class="string">true</span></span><br></pre></td></tr></table></figure><h4 id="6）-编写测试类"><a href="#6）-编写测试类" class="headerlink" title="6） 编写测试类"></a>6） 编写测试类</h4><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">package</span> io.niceseason.gulimall.thirdparty;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> com.aliyun.oss.OSS;</span><br><span class="line"><span class="keyword">import</span> com.aliyun.oss.OSSClient;</span><br><span class="line"><span class="keyword">import</span> com.aliyun.oss.OSSClientBuilder;</span><br><span class="line"><span class="keyword">import</span> org.junit.jupiter.api.Test;</span><br><span class="line"><span class="keyword">import</span> org.springframework.beans.factory.annotation.Autowired;</span><br><span class="line"><span class="keyword">import</span> org.springframework.boot.test.context.SpringBootTest;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> java.io.FileInputStream;</span><br><span class="line"><span class="keyword">import</span> java.io.FileNotFoundException;</span><br><span class="line"><span class="keyword">import</span> java.io.InputStream;</span><br><span class="line"></span><br><span class="line"><span class="meta">@SpringBootTest</span></span><br><span class="line"><span class="keyword">class</span> <span class="title class_">GulimallThirdPartyApplicationTests</span> &#123;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">    <span class="meta">@Autowired</span></span><br><span class="line">    OSSClient ossClient;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Test</span></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">testUpload</span><span class="params">()</span> <span class="keyword">throws</span> FileNotFoundException &#123;</span><br><span class="line">        <span class="comment">// Endpoint以杭州为例，其它Region请按实际情况填写。</span></span><br><span class="line">        <span class="type">String</span> <span class="variable">endpoint</span> <span class="operator">=</span> <span class="string">&quot;oss-cn-shanghai.aliyuncs.com&quot;</span>;</span><br><span class="line">        <span class="comment">// 云账号AccessKey有所有API访问权限，建议遵循阿里云安全最佳实践，创建并使用RAM子账号进行API访问或日常运维，请登录 https://ram.console.aliyun.com 创建。</span></span><br><span class="line">        <span class="type">String</span> <span class="variable">accessKeyId</span> <span class="operator">=</span> <span class="string">&quot;LTAI4G4W1RA4JXz2QhoDwHhi&quot;</span>;</span><br><span class="line">        <span class="type">String</span> <span class="variable">accessKeySecret</span> <span class="operator">=</span> <span class="string">&quot;R99lmDOJumF2x43ZBKT259Qpe70Oxw&quot;</span>;</span><br><span class="line"></span><br><span class="line">        <span class="comment">// 创建OSSClient实例。</span></span><br><span class="line">        <span class="type">OSS</span> <span class="variable">ossClient</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">OSSClientBuilder</span>().build(endpoint, accessKeyId, accessKeySecret);</span><br><span class="line"></span><br><span class="line">         <span class="comment">//上传文件流。</span></span><br><span class="line">        <span class="type">InputStream</span> <span class="variable">inputStream</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">FileInputStream</span>(<span class="string">&quot;C:\\Users\\Administrator\\Pictures\\timg.jpg&quot;</span>);</span><br><span class="line">        ossClient.putObject(<span class="string">&quot;gulimall-images&quot;</span>, <span class="string">&quot;time3.jpg&quot;</span>, inputStream);</span><br><span class="line"></span><br><span class="line">        <span class="comment">// 关闭OSSClient。</span></span><br><span class="line">        ossClient.shutdown();</span><br><span class="line">        System.out.println(<span class="string">&quot;上传成功.&quot;</span>);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">&#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure><p> <a href="https://help.aliyun.com/document_detail/31926.html?spm=a2c4g.11186623.6.1527.228d74b8V6IZuT">https://help.aliyun.com/document_detail/31926.html?spm=a2c4g.11186623.6.1527.228d74b8V6IZuT</a> </p><p><strong>背景</strong></p><p>采用JavaScript客户端直接签名（参见<a href="https://help.aliyun.com/document_detail/31925.html#concept-frd-4gy-5db">JavaScript客户端签名直传</a>）时，AccessKeyID和AcessKeySecret会暴露在前端页面，因此存在严重的安全隐患。因此，OSS提供了服务端签名后直传的方案。</p><p><strong>原理介绍</strong></p><p><a href="http://static-aliyun-doc.oss-cn-hangzhou.aliyuncs.com/assets/img/6875011751/p1472.png"><img src="http://static-aliyun-doc.oss-cn-hangzhou.aliyuncs.com/assets/img/6875011751/p1472.png" alt="img"></a></p><p>服务端签名后直传的原理如下：</p><ol><li>用户发送上传Policy请求到应用服务器。</li><li>应用服务器返回上传Policy和签名给用户。</li><li>用户直接上传数据到OSS。</li></ol><p>编写“com.atguigu.gulimall.thirdparty.controller.OssController”类：</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">package</span> com.atguigu.gulimall.thirdparty.controller;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> com.aliyun.oss.OSS;</span><br><span class="line"><span class="keyword">import</span> com.aliyun.oss.common.utils.BinaryUtil;</span><br><span class="line"><span class="keyword">import</span> com.aliyun.oss.model.MatchMode;</span><br><span class="line"><span class="keyword">import</span> com.aliyun.oss.model.PolicyConditions;</span><br><span class="line"><span class="keyword">import</span> org.springframework.beans.factory.annotation.Autowired;</span><br><span class="line"><span class="keyword">import</span> org.springframework.beans.factory.annotation.Value;</span><br><span class="line"><span class="keyword">import</span> org.springframework.web.bind.annotation.RequestMapping;</span><br><span class="line"><span class="keyword">import</span> org.springframework.web.bind.annotation.RestController;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> java.text.SimpleDateFormat;</span><br><span class="line"><span class="keyword">import</span> java.util.Date;</span><br><span class="line"><span class="keyword">import</span> java.util.LinkedHashMap;</span><br><span class="line"><span class="keyword">import</span> java.util.Map;</span><br><span class="line"></span><br><span class="line"><span class="meta">@RestController</span></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">OssController</span> &#123;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Autowired</span></span><br><span class="line">    OSS ossClient;</span><br><span class="line">    <span class="meta">@Value</span> (<span class="string">&quot;$&#123;spring.cloud.alicloud.oss.endpoint&#125;&quot;</span>)</span><br><span class="line">    String endpoint ;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Value(&quot;$&#123;spring.cloud.alicloud.oss.bucket&#125;&quot;)</span></span><br><span class="line">    String bucket ;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Value(&quot;$&#123;spring.cloud.alicloud.access-key&#125;&quot;)</span></span><br><span class="line">    String accessId ;</span><br><span class="line">    <span class="meta">@Value(&quot;$&#123;spring.cloud.alicloud.secret-key&#125;&quot;)</span></span><br><span class="line">    String accessKey ;</span><br><span class="line">    <span class="meta">@RequestMapping(&quot;/oss/policy&quot;)</span></span><br><span class="line">    <span class="keyword">public</span> Map&lt;String, String&gt; <span class="title function_">policy</span><span class="params">()</span>&#123;</span><br><span class="line"></span><br><span class="line">        <span class="type">String</span> <span class="variable">host</span> <span class="operator">=</span> <span class="string">&quot;https://&quot;</span> + bucket + <span class="string">&quot;.&quot;</span> + endpoint; <span class="comment">// host的格式为 bucketname.endpoint</span></span><br><span class="line"></span><br><span class="line">        <span class="type">String</span> <span class="variable">format</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">SimpleDateFormat</span>(<span class="string">&quot;yyyy-MM-dd&quot;</span>).format(<span class="keyword">new</span> <span class="title class_">Date</span>());</span><br><span class="line">        <span class="type">String</span> <span class="variable">dir</span> <span class="operator">=</span> format; <span class="comment">// 用户上传文件时指定的前缀。</span></span><br><span class="line"></span><br><span class="line">        Map&lt;String, String&gt; respMap=<span class="literal">null</span>;</span><br><span class="line">        <span class="keyword">try</span> &#123;</span><br><span class="line">            <span class="type">long</span> <span class="variable">expireTime</span> <span class="operator">=</span> <span class="number">30</span>;</span><br><span class="line">            <span class="type">long</span> <span class="variable">expireEndTime</span> <span class="operator">=</span> System.currentTimeMillis() + expireTime * <span class="number">1000</span>;</span><br><span class="line">            <span class="type">Date</span> <span class="variable">expiration</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">Date</span>(expireEndTime);</span><br><span class="line">            <span class="type">PolicyConditions</span> <span class="variable">policyConds</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">PolicyConditions</span>();</span><br><span class="line">            policyConds.addConditionItem(PolicyConditions.COND_CONTENT_LENGTH_RANGE, <span class="number">0</span>, <span class="number">1048576000</span>);</span><br><span class="line">            policyConds.addConditionItem(MatchMode.StartWith, PolicyConditions.COND_KEY, dir);</span><br><span class="line"></span><br><span class="line">            <span class="type">String</span> <span class="variable">postPolicy</span> <span class="operator">=</span> ossClient.generatePostPolicy(expiration, policyConds);</span><br><span class="line">            <span class="type">byte</span>[] binaryData = postPolicy.getBytes(<span class="string">&quot;utf-8&quot;</span>);</span><br><span class="line">            <span class="type">String</span> <span class="variable">encodedPolicy</span> <span class="operator">=</span> BinaryUtil.toBase64String(binaryData);</span><br><span class="line">            <span class="type">String</span> <span class="variable">postSignature</span> <span class="operator">=</span> ossClient.calculatePostSignature(postPolicy);</span><br><span class="line"></span><br><span class="line">            respMap= <span class="keyword">new</span> <span class="title class_">LinkedHashMap</span>&lt;String, String&gt;();</span><br><span class="line">            respMap.put(<span class="string">&quot;accessid&quot;</span>, accessId);</span><br><span class="line">            respMap.put(<span class="string">&quot;policy&quot;</span>, encodedPolicy);</span><br><span class="line">            respMap.put(<span class="string">&quot;signature&quot;</span>, postSignature);</span><br><span class="line">            respMap.put(<span class="string">&quot;dir&quot;</span>, dir);</span><br><span class="line">            respMap.put(<span class="string">&quot;host&quot;</span>, host);</span><br><span class="line">            respMap.put(<span class="string">&quot;expire&quot;</span>, String.valueOf(expireEndTime / <span class="number">1000</span>));</span><br><span class="line"></span><br><span class="line">        &#125; <span class="keyword">catch</span> (Exception e) &#123;</span><br><span class="line">            <span class="comment">// Assert.fail(e.getMessage());</span></span><br><span class="line">            System.out.println(e.getMessage());</span><br><span class="line">        &#125; <span class="keyword">finally</span> &#123;</span><br><span class="line">            ossClient.shutdown();</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">return</span> respMap;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>测试： <a href="http://localhost:30000/oss/policy">http://localhost:30000/oss/policy</a> </p><figure class="highlight json"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="punctuation">&#123;</span><span class="attr">&quot;accessid&quot;</span><span class="punctuation">:</span><span class="string">&quot;LTAI4G4W1RA4JXz2QhoDwHhi&quot;</span><span class="punctuation">,</span><span class="attr">&quot;policy&quot;</span><span class="punctuation">:</span><span class="string">&quot;eyJleHBpcmF0aW9uIjoiMjAyMC0wNC0yOVQwMjo1ODowNy41NzhaIiwiY29uZGl0aW9ucyI6W1siY29udGVudC1sZW5ndGgtcmFuZ2UiLDAsMTA0ODU3NjAwMF0sWyJzdGFydHMtd2l0aCIsIiRrZXkiLCIyMDIwLTA0LTI5LyJdXX0=&quot;</span><span class="punctuation">,</span><span class="attr">&quot;signature&quot;</span><span class="punctuation">:</span><span class="string">&quot;s42iRxtxGFmHyG40StM3d9vOfFk=&quot;</span><span class="punctuation">,</span><span class="attr">&quot;dir&quot;</span><span class="punctuation">:</span><span class="string">&quot;2020-04-29/&quot;</span><span class="punctuation">,</span><span class="attr">&quot;host&quot;</span><span class="punctuation">:</span><span class="string">&quot;https://gulimall-images.oss-cn-shanghai.aliyuncs.com&quot;</span><span class="punctuation">,</span><span class="attr">&quot;expire&quot;</span><span class="punctuation">:</span><span class="string">&quot;1588129087&quot;</span><span class="punctuation">&#125;</span></span><br></pre></td></tr></table></figure><p>以后在上传文件时的访问路径为“ <a href="http://localhost:88/api/thirdparty/oss/policy%E2%80%9D%EF%BC%8C">http://localhost:88/api/thirdparty/oss/policy”，</a></p><p>在“gulimall-gateway”中配置路由规则：</p><figure class="highlight yaml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="bullet">-</span> <span class="attr">id:</span> <span class="string">third_party_route</span></span><br><span class="line"><span class="attr">uri:</span> <span class="string">lb://gulimall-third-party</span></span><br><span class="line"><span class="attr">predicates:</span></span><br><span class="line"><span class="bullet">-</span> <span class="string">Path=/api/thirdparty/**</span></span><br><span class="line"><span class="attr">filters:</span></span><br><span class="line"><span class="bullet">-</span> <span class="string">RewritePath=/api/thirdparty/(?&lt;segment&gt;/?.*),/$\&#123;segment&#125;</span></span><br></pre></td></tr></table></figure><p>测试是否能够正常跳转： <a href="http://localhost:88/api/thirdparty/oss/policy">http://localhost:88/api/thirdparty/oss/policy</a> </p><h3 id="上传组件"><a href="#上传组件" class="headerlink" title="上传组件"></a>上传组件</h3><p>放置项目提供的upload文件夹到components目录下，一个是单文件上传，另外一个是多文件上传</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line">PS D:\Project\gulimall\renren-fast-vue\src\components\upload&gt; ls</span><br><span class="line"></span><br><span class="line">目录: D:\Project\gulimall\renren-fast-vue\src\components\upload</span><br><span class="line"></span><br><span class="line">Mode                LastWriteTime         Length Name</span><br><span class="line">----                -------------         ------ ----</span><br><span class="line">-a----  2020/4/29 星期三     12:02           3122 multiUpload.vue</span><br><span class="line"></span><br><span class="line">-a----  2019/11/11 星期一     21:20            343 policy.js</span><br><span class="line"></span><br><span class="line">-a----  2020/4/29 星期三     12:01          3053 singleUpload.vue</span><br></pre></td></tr></table></figure><p>修改这两个文件的配置后</p><p>开始执行上传，但是在上传过程中，出现了如下的问题：</p><figure class="highlight pgsql"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">Access</span> <span class="keyword">to</span> XMLHttpRequest at <span class="string">&#x27;http://gulimall-images.oss-cn-shanghai.aliyuncs.com/&#x27;</span> <span class="keyword">from</span> origin <span class="string">&#x27;http://localhost:8001&#x27;</span> has been blocked <span class="keyword">by</span> CORS <span class="keyword">policy</span>: Response <span class="keyword">to</span> preflight request doesn<span class="string">&#x27;t pass access control check: No &#x27;</span><span class="keyword">Access</span>-Control-Allow-Origin<span class="string">&#x27; header is present on the requested resource.</span></span><br></pre></td></tr></table></figure><p>这又是一个跨域的问题，解决方法就是在阿里云上开启跨域访问：</p><p>再次执行文件上传。</p><h2 id="JSR303校验"><a href="#JSR303校验" class="headerlink" title="JSR303校验"></a>JSR303校验</h2><h3 id="步骤1：使用校验注解"><a href="#步骤1：使用校验注解" class="headerlink" title="步骤1：使用校验注解"></a>步骤1：使用校验注解</h3><p>在Java中提供了一系列的校验方式，它这些校验方式在“javax.validation.constraints”包中，提供了如@Email，@NotNull等注解。</p><p>在非空处理方式上提供了@NotNull，@Blank和@NotEmpty</p><p>（1）@NotNull</p><p>The annotated element must not be null. Accepts any type.<br>注解元素禁止为null，能够接收任何类型</p><p>（2）@NotEmpty</p><p>the annotated element must not be null nor empty.</p><p>该注解修饰的字段不能为null或””</p><p>Supported types are:</p><p>支持以下几种类型</p><p>CharSequence (length of character sequence is evaluated)</p><p>字符序列（字符序列长度的计算）</p><p>Collection (collection size is evaluated)<br>集合长度的计算</p><p>Map (map size is evaluated)<br>map长度的计算</p><p>Array (array length is evaluated)<br>数组长度的计算</p><p>（3）@NotBlank</p><p>The annotated element must not be null and must contain at least one non-whitespace character. Accepts CharSequence.<br>该注解不能为null，并且至少包含一个非空白字符。接收字符序列。</p><h3 id="步骤2：在请求方法种，使用校验注解-Valid，开启校验，"><a href="#步骤2：在请求方法种，使用校验注解-Valid，开启校验，" class="headerlink" title="步骤2：在请求方法种，使用校验注解@Valid，开启校验，"></a>步骤2：在请求方法种，使用校验注解@Valid，开启校验，</h3><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">@RequestMapping(&quot;/save&quot;)</span></span><br><span class="line"><span class="keyword">public</span> R <span class="title function_">save</span><span class="params">(<span class="meta">@Valid</span> <span class="meta">@RequestBody</span> BrandEntity brand)</span>&#123;</span><br><span class="line">    brandService.save(brand);</span><br><span class="line"></span><br><span class="line">    <span class="keyword">return</span> R.ok();</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>测试： <a href="http://localhost:88/api/product/brand/save">http://localhost:88/api/product/brand/save</a> </p><p>在postman种发送上面的请求</p><p>能够看到”defaultMessage”: “不能为空”，这些错误消息定义在“hibernate-validator”的“\org\hibernate\validator\ValidationMessages_zh_CN.properties”文件中。在该文件中定义了很多的错误规则：</p><figure class="highlight properties"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br></pre></td><td class="code"><pre><span class="line"><span class="attr">javax.validation.constraints.AssertFalse.message</span>     = <span class="string">只能为false</span></span><br><span class="line"><span class="attr">javax.validation.constraints.AssertTrue.message</span>      = <span class="string">只能为true</span></span><br><span class="line"><span class="attr">javax.validation.constraints.DecimalMax.message</span>      = <span class="string">必须小于或等于&#123;value&#125;</span></span><br><span class="line"><span class="attr">javax.validation.constraints.DecimalMin.message</span>      = <span class="string">必须大于或等于&#123;value&#125;</span></span><br><span class="line"><span class="attr">javax.validation.constraints.Digits.message</span>          = <span class="string">数字的值超出了允许范围(只允许在&#123;integer&#125;位整数和&#123;fraction&#125;位小数范围内)</span></span><br><span class="line"><span class="attr">javax.validation.constraints.Email.message</span>           = <span class="string">不是一个合法的电子邮件地址</span></span><br><span class="line"><span class="attr">javax.validation.constraints.Future.message</span>          = <span class="string">需要是一个将来的时间</span></span><br><span class="line"><span class="attr">javax.validation.constraints.FutureOrPresent.message</span> = <span class="string">需要是一个将来或现在的时间</span></span><br><span class="line"><span class="attr">javax.validation.constraints.Max.message</span>             = <span class="string">最大不能超过&#123;value&#125;</span></span><br><span class="line"><span class="attr">javax.validation.constraints.Min.message</span>             = <span class="string">最小不能小于&#123;value&#125;</span></span><br><span class="line"><span class="attr">javax.validation.constraints.Negative.message</span>        = <span class="string">必须是负数</span></span><br><span class="line"><span class="attr">javax.validation.constraints.NegativeOrZero.message</span>  = <span class="string">必须是负数或零</span></span><br><span class="line"><span class="attr">javax.validation.constraints.NotBlank.message</span>        = <span class="string">不能为空</span></span><br><span class="line"><span class="attr">javax.validation.constraints.NotEmpty.message</span>        = <span class="string">不能为空</span></span><br><span class="line"><span class="attr">javax.validation.constraints.NotNull.message</span>         = <span class="string">不能为null</span></span><br><span class="line"><span class="attr">javax.validation.constraints.Null.message</span>            = <span class="string">必须为null</span></span><br><span class="line"><span class="attr">javax.validation.constraints.Past.message</span>            = <span class="string">需要是一个过去的时间</span></span><br><span class="line"><span class="attr">javax.validation.constraints.PastOrPresent.message</span>   = <span class="string">需要是一个过去或现在的时间</span></span><br><span class="line"><span class="attr">javax.validation.constraints.Pattern.message</span>         = <span class="string">需要匹配正则表达式&quot;&#123;regexp&#125;&quot;</span></span><br><span class="line"><span class="attr">javax.validation.constraints.Positive.message</span>        = <span class="string">必须是正数</span></span><br><span class="line"><span class="attr">javax.validation.constraints.PositiveOrZero.message</span>  = <span class="string">必须是正数或零</span></span><br><span class="line"><span class="attr">javax.validation.constraints.Size.message</span>            = <span class="string">个数必须在&#123;min&#125;和&#123;max&#125;之间</span></span><br><span class="line"></span><br><span class="line"><span class="attr">org.hibernate.validator.constraints.CreditCardNumber.message</span>        = <span class="string">不合法的信用卡号码</span></span><br><span class="line"><span class="attr">org.hibernate.validator.constraints.Currency.message</span>                = <span class="string">不合法的货币 (必须是&#123;value&#125;其中之一)</span></span><br><span class="line"><span class="attr">org.hibernate.validator.constraints.EAN.message</span>                     = <span class="string">不合法的&#123;type&#125;条形码</span></span><br><span class="line"><span class="attr">org.hibernate.validator.constraints.Email.message</span>                   = <span class="string">不是一个合法的电子邮件地址</span></span><br><span class="line"><span class="attr">org.hibernate.validator.constraints.Length.message</span>                  = <span class="string">长度需要在&#123;min&#125;和&#123;max&#125;之间</span></span><br><span class="line"><span class="attr">org.hibernate.validator.constraints.CodePointLength.message</span>         = <span class="string">长度需要在&#123;min&#125;和&#123;max&#125;之间</span></span><br><span class="line"><span class="attr">org.hibernate.validator.constraints.LuhnCheck.message</span>               = <span class="string">$&#123;validatedValue&#125;的校验码不合法, Luhn模10校验和不匹配</span></span><br><span class="line"><span class="attr">org.hibernate.validator.constraints.Mod10Check.message</span>              = <span class="string">$&#123;validatedValue&#125;的校验码不合法, 模10校验和不匹配</span></span><br><span class="line"><span class="attr">org.hibernate.validator.constraints.Mod11Check.message</span>              = <span class="string">$&#123;validatedValue&#125;的校验码不合法, 模11校验和不匹配</span></span><br><span class="line"><span class="attr">org.hibernate.validator.constraints.ModCheck.message</span>                = <span class="string">$&#123;validatedValue&#125;的校验码不合法, $&#123;modType&#125;校验和不匹配</span></span><br><span class="line"><span class="attr">org.hibernate.validator.constraints.NotBlank.message</span>                = <span class="string">不能为空</span></span><br><span class="line"><span class="attr">org.hibernate.validator.constraints.NotEmpty.message</span>                = <span class="string">不能为空</span></span><br><span class="line"><span class="attr">org.hibernate.validator.constraints.ParametersScriptAssert.message</span>  = <span class="string">执行脚本表达式&quot;&#123;script&#125;&quot;没有返回期望结果</span></span><br><span class="line"><span class="attr">org.hibernate.validator.constraints.Range.message</span>                   = <span class="string">需要在&#123;min&#125;和&#123;max&#125;之间</span></span><br><span class="line"><span class="attr">org.hibernate.validator.constraints.SafeHtml.message</span>                = <span class="string">可能有不安全的HTML内容</span></span><br><span class="line"><span class="attr">org.hibernate.validator.constraints.ScriptAssert.message</span>            = <span class="string">执行脚本表达式&quot;&#123;script&#125;&quot;没有返回期望结果</span></span><br><span class="line"><span class="attr">org.hibernate.validator.constraints.URL.message</span>                     = <span class="string">需要是一个合法的URL</span></span><br><span class="line"></span><br><span class="line"><span class="attr">org.hibernate.validator.constraints.time.DurationMax.message</span>        = <span class="string">必须小于$&#123;inclusive == true ? &#x27;或等于&#x27; : &#x27;&#x27;&#125;$&#123;days == 0 ? &#x27;&#x27; : days += &#x27;天&#x27;&#125;$&#123;hours == 0 ? &#x27;&#x27; : hours += &#x27;小时&#x27;&#125;$&#123;minutes == 0 ? &#x27;&#x27; : minutes += &#x27;分钟&#x27;&#125;$&#123;seconds == 0 ? &#x27;&#x27; : seconds += &#x27;秒&#x27;&#125;$&#123;millis == 0 ? &#x27;&#x27; : millis += &#x27;毫秒&#x27;&#125;$&#123;nanos == 0 ? &#x27;&#x27; : nanos += &#x27;纳秒&#x27;&#125;</span></span><br><span class="line"><span class="attr">org.hibernate.validator.constraints.time.DurationMin.message</span>        = <span class="string">必须大于$&#123;inclusive == true ? &#x27;或等于&#x27; : &#x27;&#x27;&#125;$&#123;days == 0 ? &#x27;&#x27; : days += &#x27;天&#x27;&#125;$&#123;hours == 0 ? &#x27;&#x27; : hours += &#x27;小时&#x27;&#125;$&#123;minutes == 0 ? &#x27;&#x27; : minutes += &#x27;分钟&#x27;&#125;$&#123;seconds == 0 ? &#x27;&#x27; : seconds += &#x27;秒&#x27;&#125;$&#123;millis == 0 ? &#x27;&#x27; : millis += &#x27;毫秒&#x27;&#125;$&#123;nanos == 0 ? &#x27;&#x27; : nanos += &#x27;纳秒&#x27;&#125;</span></span><br><span class="line"></span><br></pre></td></tr></table></figure><p>想要自定义错误消息，可以覆盖默认的错误提示信息，如@NotBlank的默认message是</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="meta">@interface</span> NotBlank &#123;</span><br><span class="line">String <span class="title function_">message</span><span class="params">()</span> <span class="keyword">default</span> <span class="string">&quot;&#123;javax.validation.constraints.NotBlank.message&#125;&quot;</span>;</span><br></pre></td></tr></table></figure><p>可以在添加注解的时候，修改message：</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">@NotBlank(message = &quot;品牌名必须非空&quot;)</span></span><br><span class="line"><span class="keyword">private</span> String name;</span><br></pre></td></tr></table></figure><p>当再次发送请求时，得到错误提示信息</p><p>但是这种返回的错误结果并不符合我们的业务需要。</p><h3 id="步骤3：给校验的Bean后，紧跟一个BindResult，就可以获取到校验的结果。拿到校验的结果，就可以自定义的封装。"><a href="#步骤3：给校验的Bean后，紧跟一个BindResult，就可以获取到校验的结果。拿到校验的结果，就可以自定义的封装。" class="headerlink" title="步骤3：给校验的Bean后，紧跟一个BindResult，就可以获取到校验的结果。拿到校验的结果，就可以自定义的封装。"></a>步骤3：给校验的Bean后，紧跟一个BindResult，就可以获取到校验的结果。拿到校验的结果，就可以自定义的封装。</h3><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">@RequestMapping(&quot;/save&quot;)</span></span><br><span class="line"><span class="keyword">public</span> R <span class="title function_">save</span><span class="params">(<span class="meta">@Valid</span> <span class="meta">@RequestBody</span> BrandEntity brand, BindingResult result)</span>&#123;</span><br><span class="line">    <span class="keyword">if</span>( result.hasErrors())&#123;</span><br><span class="line">        Map&lt;String,String&gt; map=<span class="keyword">new</span> <span class="title class_">HashMap</span>&lt;&gt;();</span><br><span class="line">        <span class="comment">//1.获取错误的校验结果</span></span><br><span class="line">        result.getFieldErrors().forEach((item)-&gt;&#123;</span><br><span class="line">            <span class="comment">//获取发生错误时的message</span></span><br><span class="line">            <span class="type">String</span> <span class="variable">message</span> <span class="operator">=</span> item.getDefaultMessage();</span><br><span class="line">            <span class="comment">//获取发生错误的字段</span></span><br><span class="line">            <span class="type">String</span> <span class="variable">field</span> <span class="operator">=</span> item.getField();</span><br><span class="line">            map.put(field,message);</span><br><span class="line">        &#125;);</span><br><span class="line">        <span class="keyword">return</span> R.error(<span class="number">400</span>,<span class="string">&quot;提交的数据不合法&quot;</span>).put(<span class="string">&quot;data&quot;</span>,map);</span><br><span class="line">    &#125;<span class="keyword">else</span> &#123;</span><br><span class="line"></span><br><span class="line">    &#125;</span><br><span class="line">    brandService.save(brand);</span><br><span class="line">    <span class="keyword">return</span> R.ok();</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>这种是针对于该请求设置了一个内容校验，如果针对于每个请求都单独进行配置，显然不是太合适，实际上可以统一的对于异常进行处理。</p><h3 id="步骤4：统一异常处理"><a href="#步骤4：统一异常处理" class="headerlink" title="步骤4：统一异常处理"></a>步骤4：统一异常处理</h3><p>可以使用SpringMvc所提供的@ControllerAdvice，通过“basePackages”能够说明处理哪些路径下的异常。</p><p>（1）抽取一个异常处理类</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">package</span> io.niceseason.gulimall.product.exception;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> io.niceseason.common.utils.R;</span><br><span class="line"><span class="keyword">import</span> lombok.extern.slf4j.Slf4j;</span><br><span class="line"><span class="keyword">import</span> org.springframework.validation.BindingResult;</span><br><span class="line"><span class="keyword">import</span> org.springframework.web.bind.MethodArgumentNotValidException;</span><br><span class="line"><span class="keyword">import</span> org.springframework.web.bind.annotation.ControllerAdvice;</span><br><span class="line"><span class="keyword">import</span> org.springframework.web.bind.annotation.ExceptionHandler;</span><br><span class="line"><span class="keyword">import</span> org.springframework.web.bind.annotation.ResponseBody;</span><br><span class="line"><span class="keyword">import</span> org.springframework.web.bind.annotation.RestControllerAdvice;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> java.util.HashMap;</span><br><span class="line"><span class="keyword">import</span> java.util.Map;</span><br><span class="line"></span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * 集中处理所有异常</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="meta">@Slf4j</span></span><br><span class="line"><span class="meta">@RestControllerAdvice(basePackages = &quot;common.atguigu.gulimall.product.controller&quot;)</span></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">GulimallExceptionAdvice</span> &#123;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@ExceptionHandler(value = Exception.class)</span></span><br><span class="line">    <span class="keyword">public</span> R <span class="title function_">handleValidException</span><span class="params">(MethodArgumentNotValidException exception)</span>&#123;</span><br><span class="line">        Map&lt;String,String&gt; map=<span class="keyword">new</span> <span class="title class_">HashMap</span>&lt;&gt;();</span><br><span class="line">        <span class="type">BindingResult</span> <span class="variable">bindingResult</span> <span class="operator">=</span> exception.getBindingResult();</span><br><span class="line">        bindingResult.getFieldErrors().forEach(fieldError -&gt; &#123;</span><br><span class="line">            <span class="type">String</span> <span class="variable">message</span> <span class="operator">=</span> fieldError.getDefaultMessage();</span><br><span class="line">            <span class="type">String</span> <span class="variable">field</span> <span class="operator">=</span> fieldError.getField();</span><br><span class="line">            map.put(field,message);</span><br><span class="line">        &#125;);</span><br><span class="line">        log.error(<span class="string">&quot;数据校验出现问题&#123;&#125;,异常类型&#123;&#125;&quot;</span>,exception.getMessage(),exception.getClass());</span><br><span class="line">        <span class="keyword">return</span> R.error(<span class="number">400</span>,<span class="string">&quot;数据校验出现问题&quot;</span>).put(<span class="string">&quot;data&quot;</span>,map);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>（2）测试： <a href="http://localhost:88/api/product/brand/save">http://localhost:88/api/product/brand/save</a> </p><p><img src="https://cdn.jsdelivr.net/gh/zsxfa/CDN/img/md/2022/03/26/1648260353.png" alt="desc"></p><p>（3）默认异常处理</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">@ExceptionHandler(value = Throwable.class)</span></span><br><span class="line"><span class="keyword">public</span> R <span class="title function_">handleException</span><span class="params">(Throwable throwable)</span>&#123;</span><br><span class="line">    log.error(<span class="string">&quot;未知异常&#123;&#125;,异常类型&#123;&#125;&quot;</span>,throwable.getMessage(),throwable.getClass());</span><br><span class="line">    <span class="keyword">return</span> R.error(BizCodeEnum.UNKNOW_EXEPTION.getCode(),BizCodeEnum.UNKNOW_EXEPTION.getMsg());</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>（4）错误状态码</p><p>上面代码中，针对于错误状态码，是我们进行随意定义的，然而正规开发过程中，错误状态码有着严格的定义规则</p><p>为了定义这些错误状态码，我们可以单独定义一个常量类，用来存储这些错误状态码</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">package</span> io.niceseason.common.exception;</span><br><span class="line"><span class="comment">/***</span></span><br><span class="line"><span class="comment"> * 错误码和错误信息定义类</span></span><br><span class="line"><span class="comment"> * 1. 错误码定义规则为5为数字</span></span><br><span class="line"><span class="comment"> * 2. 前两位表示业务场景，最后三位表示错误码。例如：100001。10:通用 001:系统未知异常</span></span><br><span class="line"><span class="comment"> * 3. 维护错误码后需要维护错误描述，将他们定义为枚举形式</span></span><br><span class="line"><span class="comment"> * 错误码列表：</span></span><br><span class="line"><span class="comment"> *  10: 通用</span></span><br><span class="line"><span class="comment"> *      001：参数格式校验</span></span><br><span class="line"><span class="comment"> *  11: 商品</span></span><br><span class="line"><span class="comment"> *  12: 订单</span></span><br><span class="line"><span class="comment"> *  13: 购物车</span></span><br><span class="line"><span class="comment"> *  14: 物流</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">enum</span> <span class="title class_">BizCodeEnum</span> &#123;</span><br><span class="line"></span><br><span class="line">    UNKNOW_EXEPTION(<span class="number">10000</span>,<span class="string">&quot;系统未知异常&quot;</span>),</span><br><span class="line"></span><br><span class="line">    VALID_EXCEPTION( <span class="number">10001</span>,<span class="string">&quot;参数格式校验失败&quot;</span>);</span><br><span class="line"></span><br><span class="line">    <span class="keyword">private</span> <span class="type">int</span> code;</span><br><span class="line">    <span class="keyword">private</span> String msg;</span><br><span class="line"></span><br><span class="line">    BizCodeEnum(<span class="type">int</span> code, String msg) &#123;</span><br><span class="line">        <span class="built_in">this</span>.code = code;</span><br><span class="line">        <span class="built_in">this</span>.msg = msg;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> <span class="type">int</span> <span class="title function_">getCode</span><span class="params">()</span> &#123;</span><br><span class="line">        <span class="keyword">return</span> code;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> String <span class="title function_">getMsg</span><span class="params">()</span> &#123;</span><br><span class="line">        <span class="keyword">return</span> msg;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>（5）测试： <a href="http://localhost:88/api/product/brand/save">http://localhost:88/api/product/brand/save</a> </p><p><img src="https://cdn.jsdelivr.net/gh/zsxfa/CDN/img/md/2022/03/26/1648260969.png" alt="desc"></p><h2 id="分组校验功能（完成多场景的复杂校验）"><a href="#分组校验功能（完成多场景的复杂校验）" class="headerlink" title="分组校验功能（完成多场景的复杂校验）"></a>分组校验功能（完成多场景的复杂校验）</h2><h3 id="1、给校验注解，标注上groups，指定什么情况下才需要进行校验"><a href="#1、给校验注解，标注上groups，指定什么情况下才需要进行校验" class="headerlink" title="1、给校验注解，标注上groups，指定什么情况下才需要进行校验"></a>1、给校验注解，标注上groups，指定什么情况下才需要进行校验</h3><p>如：指定在更新和添加的时候，都需要进行校验</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">@NotEmpty</span></span><br><span class="line"><span class="meta">@NotBlank(message = &quot;品牌名必须非空&quot;,groups = &#123;UpdateGroup.class,AddGroup.class&#125;)</span></span><br><span class="line"><span class="keyword">private</span> String name;</span><br></pre></td></tr></table></figure><p>在这种情况下，没有指定分组的校验注解，默认是不起作用的。想要起作用就必须要加groups。</p><h3 id="2、业务方法参数上使用-Validated注解，并在value中给出group接口"><a href="#2、业务方法参数上使用-Validated注解，并在value中给出group接口" class="headerlink" title="2、业务方法参数上使用@Validated注解，并在value中给出group接口"></a>2、业务方法参数上使用@Validated注解，并在value中给出group接口</h3><p>@Validated的value方法：</p><p>Specify one or more validation groups to apply to the validation step kicked off by this annotation.<br> 指定一个或多个验证组以应用于此注释启动的验证步骤。 </p><p>JSR-303 defines validation groups as custom annotations which an application declares for the sole purpose of using<br>them as type-safe group arguments, as implemented in SpringValidatorAdapter.</p><p> JSR-303 将验证组定义为自定义注释，应用程序声明的唯一目的是将它们用作类型安全组参数，如 SpringValidatorAdapter 中实现的那样。 </p><p>Other SmartValidator implementations may support class arguments in other ways as well.</p><p> 其他SmartValidator 实现也可以以其他方式支持类参数。 </p><h3 id="3、默认情况下，在分组校验情况下，没有指定指定分组的校验注解，将不会生效，它只会在不分组的情况下生效。"><a href="#3、默认情况下，在分组校验情况下，没有指定指定分组的校验注解，将不会生效，它只会在不分组的情况下生效。" class="headerlink" title="3、默认情况下，在分组校验情况下，没有指定指定分组的校验注解，将不会生效，它只会在不分组的情况下生效。"></a>3、默认情况下，在分组校验情况下，没有指定指定分组的校验注解，将不会生效，它只会在不分组的情况下生效。</h3><h2 id="自定义校验功能"><a href="#自定义校验功能" class="headerlink" title="自定义校验功能"></a>自定义校验功能</h2><h3 id="1、编写一个自定义的校验注解"><a href="#1、编写一个自定义的校验注解" class="headerlink" title="1、编写一个自定义的校验注解"></a>1、编写一个自定义的校验注解</h3><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">@Documented</span></span><br><span class="line"><span class="meta">@Constraint(validatedBy = &#123; ListValueConstraintValidator.class&#125;)</span></span><br><span class="line"><span class="meta">@Target(&#123; METHOD, FIELD, ANNOTATION_TYPE, CONSTRUCTOR, PARAMETER, TYPE_USE &#125;)</span></span><br><span class="line"><span class="meta">@Retention(RUNTIME)</span></span><br><span class="line"><span class="keyword">public</span> <span class="meta">@interface</span> ListValue &#123;</span><br><span class="line">    String <span class="title function_">message</span><span class="params">()</span> <span class="keyword">default</span> <span class="string">&quot;&#123;com.atguigu.common.valid.ListValue.message&#125;&quot;</span>;</span><br><span class="line"></span><br><span class="line">    Class&lt;?&gt;[] groups() <span class="keyword">default</span> &#123; &#125;;</span><br><span class="line"></span><br><span class="line">    Class&lt;? <span class="keyword">extends</span> <span class="title class_">Payload</span>&gt;[] payload() <span class="keyword">default</span> &#123; &#125;;</span><br><span class="line"></span><br><span class="line">    <span class="type">int</span>[] value() <span class="keyword">default</span> &#123;&#125;;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="2、编写一个自定义的校验器"><a href="#2、编写一个自定义的校验器" class="headerlink" title="2、编写一个自定义的校验器"></a>2、编写一个自定义的校验器</h3><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">ListValueConstraintValidator</span> <span class="keyword">implements</span> <span class="title class_">ConstraintValidator</span>&lt;ListValue,Integer&gt; &#123;</span><br><span class="line">    <span class="keyword">private</span> Set&lt;Integer&gt; set=<span class="keyword">new</span> <span class="title class_">HashSet</span>&lt;&gt;();</span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">initialize</span><span class="params">(ListValue constraintAnnotation)</span> &#123;</span><br><span class="line">        <span class="type">int</span>[] value = constraintAnnotation.value();</span><br><span class="line">        <span class="keyword">for</span> (<span class="type">int</span> i : value) &#123;</span><br><span class="line">            set.add(i);</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="keyword">public</span> <span class="type">boolean</span> <span class="title function_">isValid</span><span class="params">(Integer value, ConstraintValidatorContext context)</span> &#123;</span><br><span class="line">        <span class="keyword">return</span>  set.contains(value);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="3、关联自定义的校验器和自定义的校验注解"><a href="#3、关联自定义的校验器和自定义的校验注解" class="headerlink" title="3、关联自定义的校验器和自定义的校验注解"></a>3、关联自定义的校验器和自定义的校验注解</h3><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">@Constraint(validatedBy = &#123; ListValueConstraintValidator.class&#125;)</span></span><br></pre></td></tr></table></figure><h3 id="4、使用实例"><a href="#4、使用实例" class="headerlink" title="4、使用实例"></a>4、使用实例</h3><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment">* 显示状态[0-不显示；1-显示]</span></span><br><span class="line"><span class="comment">*/</span></span><br><span class="line"><span class="meta">@ListValue(value = &#123;0,1&#125;,groups =&#123;AddGroup.class&#125;)</span></span><br><span class="line"><span class="keyword">private</span> Integer showStatus;</span><br></pre></td></tr></table></figure><h2 id="商品SPU和SKU管理"><a href="#商品SPU和SKU管理" class="headerlink" title="商品SPU和SKU管理"></a>商品SPU和SKU管理</h2><p>重新执行“sys_menus.sql”</p><p><strong>SPU = Standard Product Unit （标准化产品单元）</strong>，SPU是商品信息聚合的最小单位，是一组可复用、易检索的标准化信息的集合，该集合描述了一个产品的特性。通俗点讲，属性值、特性相同的商品就可以称为一个SPU。例如，iphone4就是一个SPU，N97也是一个SPU，这个与商家无关，与颜色、款式、套餐也无关。</p><p>**SKU=stock keeping unit(库存量单位)**，SKU即库存进出计量的单位， 可以是以件、盒、托盘等为单位。在服装、鞋类商品中使用最多最普遍。 例如纺织品中一个SKU通常表示：规格、颜色、款式。</p><h2 id="品牌管理和关联分类"><a href="#品牌管理和关联分类" class="headerlink" title="品牌管理和关联分类"></a>品牌管理和关联分类</h2><p>现在想要实现点击菜单的左边，能够实现在右边展示数据</p><p><img src="https://cdn.jsdelivr.net/gh/zsxfa/CDN/img/md/2022/03/26/1648269023.png" alt="desc"></p><p>父子组件传递数据：</p><p>1）子组件给父组件传递数据，事件机制；</p><p>在category中绑定node-click事件，</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">&lt;el-tree :data=&quot;menus&quot; :props=&quot;defaultProps&quot; node-key=&quot;catId&quot; ref=&quot;menuTree&quot; @node-click=&quot;nodeClick&quot;&gt;&lt;/el-tree&gt;</span><br></pre></td></tr></table></figure><p>2）子组件给父组件发送一个事件，携带上数据；</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="title function_">nodeClick</span>(<span class="params">data,Node,component</span>)&#123;</span><br><span class="line">    <span class="variable language_">console</span>.<span class="title function_">log</span>(<span class="string">&quot;子组件&quot;</span>,data,<span class="title class_">Node</span>,component);</span><br><span class="line">    <span class="variable language_">this</span>.$emit(<span class="string">&quot;tree-node-click&quot;</span>,data,<span class="title class_">Node</span>,component);</span><br><span class="line">&#125;, </span><br></pre></td></tr></table></figure><p>this.$emit(事件名,”携带的数据”);</p><p>3）父组件中的获取发送的事件</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">&lt;category @tree-node-click=&quot;treeNodeClick&quot;&gt;&lt;/category&gt;</span><br></pre></td></tr></table></figure><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//获取发送的事件数据</span></span><br><span class="line"><span class="title function_">treenodeclick</span>(<span class="params">data, node, component</span>) &#123;</span><br><span class="line">    <span class="comment">//只有点击三层分类时才进行查询</span></span><br><span class="line">    <span class="keyword">if</span> (node.<span class="property">level</span> == <span class="number">3</span>) &#123;</span><br><span class="line">        <span class="variable language_">this</span>.<span class="property">catId</span> = data.<span class="property">catId</span>;</span><br><span class="line">        <span class="variable language_">this</span>.<span class="title function_">getDataList</span>(); <span class="comment">//重新查询</span></span><br><span class="line">    &#125;</span><br><span class="line">&#125;,</span><br><span class="line"><span class="title function_">getDataList</span>(<span class="params"></span>) &#123;</span><br><span class="line">    <span class="variable language_">this</span>.<span class="property">dataListLoading</span> = <span class="literal">true</span>;</span><br><span class="line">    <span class="variable language_">this</span>.$http(&#123;</span><br><span class="line">        <span class="attr">url</span>: <span class="variable language_">this</span>.<span class="property">$http</span>.<span class="title function_">adornUrl</span>(<span class="string">`/product/attrgroup/list/<span class="subst">$&#123;<span class="variable language_">this</span>.catId&#125;</span>`</span>),</span><br><span class="line">        <span class="attr">method</span>: <span class="string">&quot;get&quot;</span>,</span><br><span class="line">        <span class="attr">params</span>: <span class="variable language_">this</span>.<span class="property">$http</span>.<span class="title function_">adornParams</span>(&#123;</span><br><span class="line">            <span class="attr">page</span>: <span class="variable language_">this</span>.<span class="property">pageIndex</span>,</span><br><span class="line">            <span class="attr">limit</span>: <span class="variable language_">this</span>.<span class="property">pageSize</span>,</span><br><span class="line">            <span class="attr">key</span>: <span class="variable language_">this</span>.<span class="property">dataForm</span>.<span class="property">key</span></span><br><span class="line">        &#125;)</span><br><span class="line">    &#125;).<span class="title function_">then</span>(<span class="function">(<span class="params">&#123; data &#125;</span>) =&gt;</span> &#123;</span><br><span class="line">        <span class="keyword">if</span> (data &amp;&amp; data.<span class="property">code</span> === <span class="number">0</span>) &#123;</span><br><span class="line">            <span class="variable language_">this</span>.<span class="property">dataList</span> = data.<span class="property">page</span>.<span class="property">list</span>;</span><br><span class="line">            <span class="variable language_">this</span>.<span class="property">totalPage</span> = data.<span class="property">page</span>.<span class="property">totalCount</span>;</span><br><span class="line">        &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">            <span class="variable language_">this</span>.<span class="property">dataList</span> = [];</span><br><span class="line">            <span class="variable language_">this</span>.<span class="property">totalPage</span> = <span class="number">0</span>;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="variable language_">this</span>.<span class="property">dataListLoading</span> = <span class="literal">false</span>;    </span><br><span class="line">    &#125;);</span><br><span class="line">&#125;,    </span><br></pre></td></tr></table></figure><p>4）分组新增&amp;级联选择器</p><p><img src="https://cdn.jsdelivr.net/gh/zsxfa/CDN/img/md/2022/03/26/1648300305.png" alt="desc"></p><p>由于三级分类的<code>children</code>属性为<code>[]</code>,因此显示效果如上，为了避免这种效果，我们可以为该字段添加注解<code>    @JsonInclude(JsonInclude.Include.NON_EMPTY)</code>,表示当只有该字段不为空时才会返回该属性。</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">@JsonInclude(JsonInclude.Include.NON_EMPTY)</span></span><br><span class="line"><span class="keyword">private</span> List&lt;CategoryEntity&gt; children;</span><br></pre></td></tr></table></figure><p>4）分组修改与回显</p><p>由于修改时所属分类不能正常回显，因为缺少完整的三级路径，因此我们在<code>AttrGroupEntity</code>中添加字段<code>catelogPath</code>,并使用递归查找</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">@TableField(exist = false)</span></span><br><span class="line"><span class="keyword">private</span> Long[] catelogPath;</span><br></pre></td></tr></table></figure><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">@RequestMapping(&quot;/info/&#123;attrGroupId&#125;&quot;)</span></span><br><span class="line"><span class="keyword">public</span> R <span class="title function_">info</span><span class="params">(<span class="meta">@PathVariable(&quot;attrGroupId&quot;)</span> Long attrGroupId)</span>&#123;</span><br><span class="line">    <span class="type">AttrGroupEntity</span> <span class="variable">attrGroup</span> <span class="operator">=</span> attrGroupService.getById(attrGroupId);</span><br><span class="line">    Long[] catelogPath=categoryService.findCatelogPathById(attrGroup.getCatelogId());</span><br><span class="line">    attrGroup.setCatelogPath(catelogPath);</span><br><span class="line">    <span class="keyword">return</span> R.ok().put(<span class="string">&quot;attrGroup&quot;</span>, attrGroup);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">//使用递归查找该路径</span></span><br><span class="line"><span class="meta">@Override</span></span><br><span class="line"><span class="keyword">public</span> Long[] findCatelogPathById(Long categorygId) &#123;</span><br><span class="line">    List&lt;Long&gt; path = <span class="keyword">new</span> <span class="title class_">LinkedList</span>&lt;&gt;();</span><br><span class="line">    findPath(categorygId, path);</span><br><span class="line">    Collections.reverse(path);</span><br><span class="line">    Long[] objects = path.toArray(<span class="keyword">new</span> <span class="title class_">Long</span>[path.size()]);</span><br><span class="line">    <span class="keyword">return</span>  objects;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">private</span> <span class="keyword">void</span> <span class="title function_">findPath</span><span class="params">(Long categorygId, List&lt;Long&gt; path)</span> &#123;</span><br><span class="line">    <span class="keyword">if</span> (categorygId!=<span class="number">0</span>)&#123;</span><br><span class="line">        path.add(categorygId);</span><br><span class="line">        <span class="type">CategoryEntity</span> <span class="variable">byId</span> <span class="operator">=</span> getById(categorygId);</span><br><span class="line">        findPath(byId.getParentCid(),path);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>5）分页插件激活</p><p>springboot采取以下方式：</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">@EnableTransactionManagement</span></span><br><span class="line"><span class="meta">@Configuration</span></span><br><span class="line"><span class="meta">@MapperScan(&quot;com.atguigu.gulimall.product.dao&quot;)</span></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">MybatisPlusConfig</span> &#123;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Bean</span></span><br><span class="line">    <span class="keyword">public</span> PaginationInterceptor <span class="title function_">paginationInterceptor</span><span class="params">()</span> &#123;</span><br><span class="line">        <span class="type">PaginationInterceptor</span> <span class="variable">paginationInterceptor</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">PaginationInterceptor</span>();</span><br><span class="line">        <span class="comment">// 设置请求的页面大于最大页后操作， true调回到首页，false 继续请求  默认false</span></span><br><span class="line">        <span class="comment">// paginationInterceptor.setOverflow(false);</span></span><br><span class="line">        <span class="comment">// 设置最大单页限制数量，默认 500 条，-1 不受限制</span></span><br><span class="line">        <span class="comment">// paginationInterceptor.setLimit(500);</span></span><br><span class="line">        <span class="comment">// 开启 count 的 join 优化,只针对部分 left join</span></span><br><span class="line">        paginationInterceptor.setCountSqlParser(<span class="keyword">new</span> <span class="title class_">JsqlParserCountOptimize</span>(<span class="literal">true</span>));</span><br><span class="line">        <span class="keyword">return</span> paginationInterceptor;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p><a href="https://mp.baomidou.com/">参考MyBatis-Plus官网</a></p><ol start="5"><li>关联分类</li></ol><p>点击关联分类要查出所有已经关联的所有数据</p><p><img src="https://cdn.jsdelivr.net/gh/zsxfa/CDN/img/md/2022/03/27/1648351295.png" alt="desc"></p><p>根据品牌id查出关联所有信息</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">@RequestMapping(&quot;catelog/list&quot;)</span></span><br><span class="line"><span class="keyword">public</span> R <span class="title function_">cateloglist</span><span class="params">(<span class="meta">@RequestParam</span> Long brandId)</span>&#123;</span><br><span class="line">    QueryWrapper&lt;CategoryBrandRelationEntity&gt; queryWrapper = <span class="keyword">new</span> <span class="title class_">QueryWrapper</span>&lt;&gt;();</span><br><span class="line">    queryWrapper.eq(<span class="string">&quot;brand_id&quot;</span>, brandId);</span><br><span class="line">    List&lt;CategoryBrandRelationEntity&gt; data = categoryBrandRelationService.list(queryWrapper);</span><br><span class="line">    <span class="keyword">return</span> R.ok().put(<span class="string">&quot;data&quot;</span>, data);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>新增关联</p><p><img src="https://cdn.jsdelivr.net/gh/zsxfa/CDN/img/md/2022/03/27/1648350755.png" alt="desc"></p><p>保存对应分类</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">@RequestMapping(&quot;/save&quot;)</span></span><br><span class="line"><span class="keyword">public</span> R <span class="title function_">save</span><span class="params">(<span class="meta">@RequestBody</span> CategoryBrandRelationEntity categoryBrandRelation)</span>&#123;</span><br><span class="line">    <span class="comment">//categoryBrandRelationService.save(categoryBrandRelation);</span></span><br><span class="line">    categoryBrandRelationService.saveDetail(categoryBrandRelation);</span><br><span class="line">    <span class="keyword">return</span> R.ok();</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">//由于从表单中只能获取分类、品牌的id，因此需要从数据库将其name字段查出，并保存至关联表</span></span><br><span class="line"><span class="meta">@Override</span></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">saveDetail</span><span class="params">(CategoryBrandRelationEntity categoryBrandRelation)</span> &#123;</span><br><span class="line">    <span class="type">Long</span> <span class="variable">brandId</span> <span class="operator">=</span> categoryBrandRelation.getBrandId();</span><br><span class="line">    <span class="type">Long</span> <span class="variable">catelogId</span> <span class="operator">=</span> categoryBrandRelation.getCatelogId();</span><br><span class="line">    <span class="type">BrandEntity</span> <span class="variable">brandEntity</span> <span class="operator">=</span> brandDao.selectById(brandId);</span><br><span class="line">    <span class="type">CategoryEntity</span> <span class="variable">categoryEntity</span> <span class="operator">=</span> categoryDao.selectById(catelogId);</span><br><span class="line">    categoryBrandRelation.setBrandName(brandEntity.getName());</span><br><span class="line">    categoryBrandRelation.setCatelogName(categoryEntity.getName());</span><br><span class="line">    <span class="built_in">this</span>.save(categoryBrandRelation);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="规格参数新增与VO"><a href="#规格参数新增与VO" class="headerlink" title="规格参数新增与VO"></a>规格参数新增与VO</h3><p>规格参数新增时，请求的URL：Request URL: </p><p><a href="http://localhost:88/api/product/attr/base/list/0?t=1588731762158&amp;page=1&amp;limit=10&amp;key=">http://localhost:88/api/product/attr/base/list/0?t=1588731762158&amp;page=1&amp;limit=10&amp;key=</a></p><p>当有新增字段时，我们往往会在entity实体类中新建一个字段，并标注数据库中不存在该字段，然而这种方式并不规范</p><p><img src="https://cdn.jsdelivr.net/gh/zsxfa/CDN/img/md/2022/03/27/1648354045.png" alt="desc"></p><p>比较规范的做法是，新建一个vo文件夹，将每种不同的对象，按照它的功能进行了划分。在java中，涉及到了这几种类型</p><blockquote><p><strong>1.PO(persistant object) 持久对象</strong></p><p>PO 就是对应数据库中某个表中的一条记录，多个记录可以用 PO 的集合。 PO 中应该不包含任何对数据库的操作。</p><p><strong>2.DO（Domain Object）领域对象</strong></p><p>就是从现实世界中抽象出来的有形或无形的业务实体。</p><p><strong>3.TO(Transfer Object) ，数据传输对象</strong></p><p>不同的应用程序之间传输的对象</p><p><strong>4.DTO（Data Transfer Object）数据传输对象</strong></p><p>这个概念来源于 J2EE 的设计模式，原来的目的是为了 EJB 的分布式应用提供粗粒度的数据实体，以减少分布式调用的次数，从而提高分布式调用的性能和降低网络负载，但在这里，泛指用于展示层与服务层之间的数据传输对象。</p><p><strong>5.VO(value object) 值对象</strong><br>通常用于业务层之间的数据传递，和 PO 一样也是仅仅包含数据而已。但应是抽象出的业务对象 , 可以和表对应 , 也可以不 , 这根据业务的需要 。用 new 关键字创建，由GC 回收的。</p><blockquote><p>View object：视图对象；<br>接受页面传递来的数据，封装对象<br>将业务处理完成的对象，封装成页面要用的数据</p></blockquote><p><strong>6.BO(business object) 业务对象</strong></p><p>从业务模型的角度看 , 见 UML 元件领域模型中的领域对象。封装业务逻辑的 java 对象 , 通过调用 DAO 方法 , 结合 PO,VO 进行业务操作。business object: 业务对象 主要作用是把业务逻辑封装为一个对象。这个对象可以包括一个或多个其它的对象。 比如一个简历，有教育经历、工作经历、社会关系等等。 我们可以把教育经历对应一个 PO ，工作经历对应一个 PO ，社会关系对应一个 PO 。 建立一个对应简历的 BO 对象处理简历，每个 BO 包含这些 PO 。 这样处理业务逻辑时，我们就可以针对 BO 去处理。</p><p><strong>7.POJO(plain ordinary java object) 简单无规则 java 对象</strong></p><p>传统意义的 java 对象。就是说在一些 Object/Relation Mapping 工具中，能够做到维护数据库表记录的 persisent object 完全是一个符合 Java Bean 规范的纯 Java 对象，没有增加别的属性和方法。我的理解就是最基本的 java Bean ，只有属性字段及 setter 和 getter方法！。POJO 是 DO/DTO/BO/VO 的统称。</p><p><strong>8.DAO(data access object) 数据访问对象</strong></p><p>是一个 sun 的一个标准 j2ee 设计模式， 这个模式中有个接口就是 DAO ，它负持久层的操作。为业务层提供接口。此对象用于访问数据库。通常和 PO 结合使用， DAO 中包含了各种数据库的操作方法。通过它的方法 , 结合 PO 对数据库进行相关的操作。夹在业务逻辑与数据库资源中间。配合 VO, 提供数据库的 CRUD 操作.</p></blockquote><p>Request URL: <a href="http://localhost:88/api/product/attr/save%EF%BC%8C%E7%8E%B0%E5%9C%A8%E7%9A%84%E6%83%85%E5%86%B5%E6%98%AF%EF%BC%8C%E5%AE%83%E5%9C%A8%E4%BF%9D%E5%AD%98%E7%9A%84%E6%97%B6%E5%80%99%EF%BC%8C%E5%8F%AA%E6%98%AF%E4%BF%9D%E5%AD%98%E4%BA%86attr%EF%BC%8C%E5%B9%B6%E6%B2%A1%E6%9C%89%E4%BF%9D%E5%AD%98attrgroup%EF%BC%8C%E4%B8%BA%E4%BA%86%E8%A7%A3%E5%86%B3%E8%BF%99%E4%B8%AA%E9%97%AE%E9%A2%98%EF%BC%8C%E6%88%91%E4%BB%AC%E6%96%B0%E5%BB%BA%E4%BA%86%E4%B8%80%E4%B8%AAvo/AttrVo%EF%BC%8C%E5%9C%A8%E5%8E%9FAttrEntity%E5%9F%BA%E7%A1%80%E4%B8%8A%E5%A2%9E%E5%8A%A0%E4%BA%86attrGroupId%E5%AD%97%E6%AE%B5%EF%BC%8C%E4%BD%BF%E5%BE%97%E4%BF%9D%E5%AD%98%E6%96%B0%E5%A2%9E%E6%95%B0%E6%8D%AE%E7%9A%84%E6%97%B6%E5%80%99%EF%BC%8C%E4%B9%9F%E4%BF%9D%E5%AD%98%E4%BA%86%E5%AE%83%E4%BB%AC%E4%B9%8B%E9%97%B4%E7%9A%84%E5%85%B3%E7%B3%BB%E3%80%82">http://localhost:88/api/product/attr/save，现在的情况是，它在保存的时候，只是保存了attr，并没有保存attrgroup，为了解决这个问题，我们新建了一个vo/AttrVo，在原AttrEntity基础上增加了attrGroupId字段，使得保存新增数据的时候，也保存了它们之间的关系。</a></p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">@Data</span></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">AttrVo</span> <span class="keyword">extends</span> <span class="title class_">AttrEntity</span> &#123;</span><br><span class="line">    <span class="keyword">private</span> Long attrGroupId;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>并且由于查询时显示了所属分类名和所属分组名，并且在修改时要回显其三级分类，所以我们要为返回时的属性定制vo</p><p><img src="https://cdn.jsdelivr.net/gh/zsxfa/CDN/img/md/2022/03/27/1648360552.png" alt="desc"></p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">@Data</span></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">AttrResponseVo</span> <span class="keyword">extends</span> <span class="title class_">AttrVo</span> &#123;</span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * &quot;catelogName&quot;: &quot;手机/数码/手机&quot;, //所属分类名字</span></span><br><span class="line"><span class="comment">     * &quot;groupName&quot;: &quot;主体&quot;, //所属分组名字</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="keyword">private</span> String catelogName;</span><br><span class="line">    <span class="keyword">private</span> String groupName;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">private</span> Long[] catelogPath;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>通过” BeanUtils.copyProperties(attr,attrEntity);”能够实现在两个Bean之间拷贝数据，但是两个Bean的字段要相同</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">@Override</span></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">saveAttr</span><span class="params">(AttrVo attr)</span> &#123;</span><br><span class="line">    <span class="type">AttrEntity</span> <span class="variable">attrEntity</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">AttrEntity</span>();</span><br><span class="line">    BeanUtils.copyProperties(attr,attrEntity);</span><br><span class="line">    <span class="built_in">this</span>.save(attrEntity);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>问题：现在有两个查询，一个是查询部分，另外一个是查询全部，但是又必须这样来做吗？还是有必要的，但是可以在后台进行设计，两种查询是根据catId是否为零进行区分的。</p><h3 id="规格-参数与销售属性的增删改查"><a href="#规格-参数与销售属性的增删改查" class="headerlink" title="规格 参数与销售属性的增删改查"></a>规格 参数与销售属性的增删改查</h3><p><strong>查询</strong></p><p>可以通过在添加路径变量<code>&#123;attrType&#125;</code>同时用一个方法查询销售属性和规格参数</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">@RequestMapping(&quot;/&#123;attrType&#125;/list/&#123;catelogId&#125;&quot;)</span></span><br><span class="line"><span class="keyword">public</span> R <span class="title function_">infoCatelog</span><span class="params">(<span class="meta">@RequestParam</span> Map&lt;String, Object&gt; params,</span></span><br><span class="line"><span class="params">                     <span class="meta">@PathVariable(&quot;catelogId&quot;)</span> <span class="type">long</span> catelogId,</span></span><br><span class="line"><span class="params">                     <span class="meta">@PathVariable(&quot;attrType&quot;)</span> String attrType)</span> &#123;</span><br><span class="line">    <span class="type">PageUtils</span> <span class="variable">page</span> <span class="operator">=</span> attrService.queryPage(params,catelogId,attrType);</span><br><span class="line"></span><br><span class="line">    <span class="keyword">return</span> R.ok().put(<span class="string">&quot;page&quot;</span>, page);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="meta">@Transactional</span></span><br><span class="line"><span class="meta">@Override</span></span><br><span class="line"><span class="keyword">public</span> PageUtils <span class="title function_">queryPage</span><span class="params">(Map&lt;String, Object&gt; params, <span class="type">long</span> catelogId,String attrType)</span> &#123;</span><br><span class="line">    <span class="comment">//根据attrType进行查询，1规格参数，2销售属性</span></span><br><span class="line">    QueryWrapper&lt;AttrEntity&gt; attrEntityQueryWrapper = <span class="keyword">new</span> <span class="title class_">QueryWrapper</span>&lt;AttrEntity&gt;().eq(<span class="string">&quot;attr_type&quot;</span>,<span class="string">&quot;base&quot;</span>.equalsIgnoreCase(attrType)?<span class="number">1</span>:<span class="number">0</span>);</span><br><span class="line">    <span class="comment">//如果参数带有分类id，则按分类查询</span></span><br><span class="line">    <span class="keyword">if</span> (catelogId != <span class="number">0</span>) &#123;</span><br><span class="line">        attrEntityQueryWrapper.eq(<span class="string">&quot;catelog_id&quot;</span>, catelogId);</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="type">String</span> <span class="variable">key</span> <span class="operator">=</span> (String) params.get(<span class="string">&quot;key&quot;</span>);</span><br><span class="line">    <span class="comment">//搜索的模糊查询</span></span><br><span class="line">    <span class="keyword">if</span> (!StringUtils.isEmpty(key)) &#123;</span><br><span class="line">        attrEntityQueryWrapper.and((wrapper) -&gt; wrapper.eq(<span class="string">&quot;attr_id&quot;</span>, key).or().like(<span class="string">&quot;attr_name&quot;</span>, key));</span><br><span class="line">    &#125;</span><br><span class="line">    IPage&lt;AttrEntity&gt; page = <span class="built_in">this</span>.page(</span><br><span class="line">        <span class="keyword">new</span> <span class="title class_">Query</span>&lt;AttrEntity&gt;().getPage(params),</span><br><span class="line">        attrEntityQueryWrapper</span><br><span class="line">    );</span><br><span class="line">    List&lt;AttrEntity&gt; records = page.getRecords();</span><br><span class="line">    List&lt;AttrRespVo&gt; collect = records.stream().map((entity) -&gt; &#123;</span><br><span class="line">        <span class="type">AttrRespVo</span> <span class="variable">respVo</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">AttrRespVo</span>();</span><br><span class="line">        BeanUtils.copyProperties(entity, respVo);</span><br><span class="line">        <span class="comment">//查询分类并设置分类名</span></span><br><span class="line">        <span class="type">CategoryEntity</span> <span class="variable">categoryEntity</span> <span class="operator">=</span> categoryDao.selectOne(<span class="keyword">new</span> <span class="title class_">QueryWrapper</span>&lt;CategoryEntity&gt;().eq(<span class="string">&quot;cat_id&quot;</span>, entity.getCatelogId()));</span><br><span class="line">        respVo.setCatelogName(categoryEntity.getName());</span><br><span class="line">        <span class="comment">//如果是查询规格参数才查询设置分组名</span></span><br><span class="line">        <span class="keyword">if</span> (<span class="string">&quot;base&quot;</span>.equalsIgnoreCase(attrType)) &#123;</span><br><span class="line">            <span class="comment">//查询参数、分组关系</span></span><br><span class="line">            <span class="type">AttrAttrgroupRelationEntity</span> <span class="variable">attrAttrgroupRelationEntity</span> <span class="operator">=</span> attrAttrgroupRelationDao.selectOne(<span class="keyword">new</span> <span class="title class_">QueryWrapper</span>&lt;AttrAttrgroupRelationEntity&gt;().eq(<span class="string">&quot;attr_id&quot;</span>, entity.getAttrId()));</span><br><span class="line">            <span class="comment">//如果分组id不为空。则查出分组名</span></span><br><span class="line">            <span class="keyword">if</span> (attrAttrgroupRelationEntity != <span class="literal">null</span> &amp;&amp; attrAttrgroupRelationEntity.getAttrGroupId() != <span class="literal">null</span>) &#123;</span><br><span class="line">                <span class="type">AttrGroupEntity</span> <span class="variable">attrGroupEntity</span> <span class="operator">=</span> attrGroupDao.selectOne(<span class="keyword">new</span> <span class="title class_">QueryWrapper</span>&lt;AttrGroupEntity&gt;().eq(<span class="string">&quot;attr_group_id&quot;</span>, attrAttrgroupRelationEntity.getAttrGroupId()));</span><br><span class="line">                <span class="comment">//设置分组名</span></span><br><span class="line">                respVo.setGroupName(attrGroupEntity.getAttrGroupName());</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">return</span> respVo;</span><br><span class="line">    &#125;).collect(Collectors.toList());</span><br><span class="line">    <span class="type">PageUtils</span> <span class="variable">pageUtils</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">PageUtils</span>(page);</span><br><span class="line">    pageUtils.setList(collect);</span><br><span class="line">    <span class="keyword">return</span> pageUtils;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p><strong>保存</strong></p><p>使用<code>AttrVo</code>封装属性，如果<code>AttrGroupId</code>非空，则为规则参数，需要更新属性-分组表</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">@RequestMapping(&quot;/save&quot;)</span></span><br><span class="line"><span class="keyword">public</span> R <span class="title function_">save</span><span class="params">(<span class="meta">@RequestBody</span> AttrVo attr)</span>&#123;</span><br><span class="line">    attrService.saveAttr(attr);</span><br><span class="line"></span><br><span class="line">    <span class="keyword">return</span> R.ok();</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="meta">@Transactional</span></span><br><span class="line"><span class="meta">@Override</span></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">saveAttr</span><span class="params">(AttrVo attr)</span> &#123;</span><br><span class="line">    <span class="type">AttrEntity</span> <span class="variable">attrEntity</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">AttrEntity</span>();</span><br><span class="line">    BeanUtils.copyProperties(attr,attrEntity);</span><br><span class="line">    <span class="built_in">this</span>.save(attrEntity);</span><br><span class="line">    <span class="comment">//如果分组id不为空，说明是规格参数而不是销售属性，则对属性-分组表进行更新</span></span><br><span class="line">    <span class="keyword">if</span> (attr.getAttrGroupId() != <span class="literal">null</span>) &#123;</span><br><span class="line">        <span class="type">AttrAttrgroupRelationEntity</span> <span class="variable">attrAttrgroupRelationEntity</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">AttrAttrgroupRelationEntity</span>();</span><br><span class="line">        attrAttrgroupRelationEntity.setAttrGroupId(attr.getAttrGroupId());</span><br><span class="line">        attrAttrgroupRelationEntity.setAttrId(attrEntity.getAttrId());</span><br><span class="line">        attrAttrgroupRelationDao.insert(attrAttrgroupRelationEntity);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p><strong>修改</strong></p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">@RequestMapping(&quot;/update&quot;)</span></span><br><span class="line"><span class="keyword">public</span> R <span class="title function_">update</span><span class="params">(<span class="meta">@RequestBody</span> AttrVo attr)</span>&#123;</span><br><span class="line">    <span class="comment">//attrService.updateById(attr);</span></span><br><span class="line">    attrService.updateAttr(attr);</span><br><span class="line">    <span class="keyword">return</span> R.ok();</span><br><span class="line">&#125;</span><br><span class="line"><span class="meta">@Transactional</span></span><br><span class="line"><span class="meta">@Override</span></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">updateAttr</span><span class="params">(AttrVo attr)</span> &#123;</span><br><span class="line">    <span class="type">AttrEntity</span> <span class="variable">entity</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">AttrEntity</span>();</span><br><span class="line">    BeanUtils.copyProperties(attr,entity);</span><br><span class="line">    <span class="built_in">this</span>.baseMapper.updateById(entity);</span><br><span class="line">    <span class="comment">//只有当属性分组不为空时，说明更新的是规则参数，则需要更新关联表</span></span><br><span class="line">    <span class="keyword">if</span> (attr.getAttrGroupId() != <span class="literal">null</span>) &#123;</span><br><span class="line">        <span class="comment">//查询属性-分组名对应关系</span></span><br><span class="line">        <span class="type">AttrAttrgroupRelationEntity</span> <span class="variable">attrAttrgroupRelationEntity</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">AttrAttrgroupRelationEntity</span>();</span><br><span class="line">        attrAttrgroupRelationEntity.setAttrId(attr.getAttrId());</span><br><span class="line">        attrAttrgroupRelationEntity.setAttrGroupId(attr.getAttrGroupId());</span><br><span class="line">        <span class="type">Integer</span> <span class="variable">c</span> <span class="operator">=</span> attrAttrgroupRelationDao.selectCount(<span class="keyword">new</span> <span class="title class_">QueryWrapper</span>&lt;AttrAttrgroupRelationEntity&gt;().eq(<span class="string">&quot;attr_id&quot;</span>, attrAttrgroupRelationEntity.getAttrId()));</span><br><span class="line">        <span class="comment">//在关联表中已有该属性分组数据时进行更新，否则插入新数据</span></span><br><span class="line">        <span class="keyword">if</span> (c&gt;<span class="number">0</span>)&#123;</span><br><span class="line">            attrAttrgroupRelationDao.update(attrAttrgroupRelationEntity, <span class="keyword">new</span> <span class="title class_">UpdateWrapper</span>&lt;AttrAttrgroupRelationEntity&gt;().eq(<span class="string">&quot;attr_id&quot;</span>, attr.getAttrId()));</span><br><span class="line">        &#125;<span class="keyword">else</span> &#123;</span><br><span class="line">            attrAttrgroupRelationDao.insert(attrAttrgroupRelationEntity);</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p><strong>修改回显时查询数据</strong></p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">@RequestMapping(&quot;/info/&#123;attrId&#125;&quot;)</span></span><br><span class="line"><span class="keyword">public</span> R <span class="title function_">info</span><span class="params">(<span class="meta">@PathVariable(&quot;attrId&quot;)</span> Long attrId)</span>&#123;</span><br><span class="line">    AttrRespVo respVo=attrService.getAttrInfo(attrId);</span><br><span class="line">    <span class="keyword">return</span> R.ok().put(<span class="string">&quot;attr&quot;</span>, respVo);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="meta">@Transactional</span></span><br><span class="line"><span class="meta">@Override</span></span><br><span class="line"><span class="keyword">public</span> AttrRespVo <span class="title function_">getAttrInfo</span><span class="params">(Long attrId)</span> &#123;</span><br><span class="line">    <span class="type">AttrEntity</span> <span class="variable">attrEntity</span> <span class="operator">=</span> <span class="built_in">this</span>.baseMapper.selectById(attrId);</span><br><span class="line">    <span class="type">AttrRespVo</span> <span class="variable">respVo</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">AttrRespVo</span>();</span><br><span class="line">    BeanUtils.copyProperties(attrEntity,respVo);</span><br><span class="line">    <span class="comment">//查询并设置分组名</span></span><br><span class="line">    <span class="type">AttrAttrgroupRelationEntity</span> <span class="variable">attrAttrgroupRelationEntity</span> <span class="operator">=</span> attrAttrgroupRelationDao.selectOne(<span class="keyword">new</span> <span class="title class_">QueryWrapper</span>&lt;AttrAttrgroupRelationEntity&gt;().eq(<span class="string">&quot;attr_id&quot;</span>, attrEntity.getAttrId()));</span><br><span class="line">    <span class="comment">//如果分组id不为空。则查出分组名</span></span><br><span class="line">    <span class="keyword">if</span> (attrAttrgroupRelationEntity != <span class="literal">null</span> &amp;&amp; attrAttrgroupRelationEntity.getAttrGroupId() != <span class="literal">null</span>) &#123;</span><br><span class="line">        <span class="type">AttrGroupEntity</span> <span class="variable">attrGroupEntity</span> <span class="operator">=</span> attrGroupDao.selectOne(<span class="keyword">new</span> <span class="title class_">QueryWrapper</span>&lt;AttrGroupEntity&gt;().eq(<span class="string">&quot;attr_group_id&quot;</span>, attrAttrgroupRelationEntity.getAttrGroupId()));</span><br><span class="line">        <span class="comment">//设置分组名</span></span><br><span class="line">        respVo.setGroupName(attrGroupEntity.getAttrGroupName());</span><br><span class="line">        respVo.setAttrGroupId(attrGroupEntity.getAttrGroupId());</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="comment">//查询到分类信息</span></span><br><span class="line">    <span class="type">CategoryEntity</span> <span class="variable">categoryEntity</span> <span class="operator">=</span> categoryDao.selectOne(<span class="keyword">new</span> <span class="title class_">QueryWrapper</span>&lt;CategoryEntity&gt;().eq(<span class="string">&quot;cat_id&quot;</span>, attrEntity.getCatelogId()));</span><br><span class="line">    <span class="comment">//设置分类名</span></span><br><span class="line">    respVo.setCatelogName(categoryEntity.getName());</span><br><span class="line">    <span class="comment">//查询并设置分类路径</span></span><br><span class="line">    Long[] catelogPathById = categoryService.findCatelogPathById(categoryEntity.getCatId());</span><br><span class="line">    respVo.setCatelogPath(catelogPathById);</span><br><span class="line">    <span class="keyword">return</span> respVo;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="查询分组关联属性和删除关联"><a href="#查询分组关联属性和删除关联" class="headerlink" title="查询分组关联属性和删除关联"></a>查询分组关联属性和删除关联</h3><p>获取属性分组的关联的所有属性</p><p>API：<a href="https://easydoc.xyz/doc/75716633/ZUqEdvA4/LnjzZHPj">https://easydoc.xyz/doc/75716633/ZUqEdvA4/LnjzZHPj</a></p><p>发送请求：/product/attrgroup/{attrgroupId}/attr/relation</p><p>获取当前属性分组所关联的属性</p><p>如何查找：既然给出了attr_group_id，那么到中间表中查询出来所关联的attr_id，然后得到最终的所有属性即可。</p><p>可能出现null值的问题</p><h3 id="查询分组未关联的属性"><a href="#查询分组未关联的属性" class="headerlink" title="查询分组未关联的属性"></a>查询分组未关联的属性</h3><p>/product/attrgroup/{attrgroupId}/noattr/relation</p><p>API：<a href="https://easydoc.xyz/doc/75716633/ZUqEdvA4/d3EezLdO">https://easydoc.xyz/doc/75716633/ZUqEdvA4/d3EezLdO</a></p><p>获取属性分组里面还没有关联的本分类里面的其他基本属性，方便添加新的关联</p><p>Request URL: <a href="http://localhost:88/api/product/attrgroup/1/noattr/relation?t=1588780783441&amp;page=1&amp;limit=10&amp;key=">http://localhost:88/api/product/attrgroup/1/noattr/relation?t=1588780783441&amp;page=1&amp;limit=10&amp;key=</a></p><p><img src="https://cdn.jsdelivr.net/gh/zsxfa/CDN/img/md/2022/03/27/1648370841.png" alt="desc"></p><p>属性分组，对应于“pms_attr_group”表，每个分组下，需要查看到关联了哪些属性信息，销售属性不需要和分组进行关联，但是规格参数要和属性分组进行关联。</p><p>规格参数：对应于<code>pms_attr</code>表，attr_type=1，需要显示分组信息</p><p>销售属性：对应于pms_attr`表，attr_type=0，不需要显示分组信息</p><p>分组ID为9的分组：Request URL: <a href="http://localhost:88/api/product/attrgroup/9/noattr/relation?t=1588822258669&amp;page=1&amp;limit=10&amp;key=">http://localhost:88/api/product/attrgroup/9/noattr/relation?t=1588822258669&amp;page=1&amp;limit=10&amp;key=</a></p><p>对应的数据库字段</p><p>attr_group_id  attr_group_name    sort  descript                icon    catelog_id  </p><hr><pre><code>        9  主体                    1  型号 平台                   wu               454       10  显卡                    1  显存容量                    wu               454       11  输入设备                  1  鼠标 键盘                   wu               454       12  主板                    1  显卡类型 芯片组                wu               454       13  规格                    1  尺寸                      wu               454</code></pre><p>查询attrgroupId=9的属性分组：</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="type">AttrGroupEntity</span> <span class="variable">attrGroupEntity</span> <span class="operator">=</span> attrGroupDao.selectById(attrgroupId);</span><br></pre></td></tr></table></figure><p>获取到分类信息：</p><figure class="highlight abnf"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">Long catelogId <span class="operator">=</span> attrGroupEntity.getCatelogId()<span class="comment">;</span></span><br></pre></td></tr></table></figure><p>目标：获取属性分组没有关联的其他属性</p><p>也就是获取attrgroupId=9的属性分组中，关联的分类catelog_id =454 （台式机），其他基本属性</p><p>在该属性分组中，现在已经关联的属性：</p><p><img src="https://cdn.jsdelivr.net/gh/zsxfa/CDN/img/md/2022/03/27/1648373017.png" alt="desc"></p><p>本分类下，存在哪些基本属性？</p><p>没有关联的其他属性</p><p>已经关联的属性，这些属性是如何关联上的？</p><p>答：在创建规格参数的时候，已经设置了需要关联哪些属性分组。</p><p>想要知道还没有关联哪些，先查看关联了哪些，如何排除掉这些就是未关联的</p><p>在中间表中显示了属性和属性分组之间的关联关系，在属性表中显示了所有的属性，</p><p>先查询中间表，得到所有已经关联的属性的id，然后再次查询属性表，排除掉已经建立关联的属性ID，将剩下的属性ID和属性建立起关联关系</p><h3 id="添加属性和分组的关联关系"><a href="#添加属性和分组的关联关系" class="headerlink" title="添加属性和分组的关联关系"></a>添加属性和分组的关联关系</h3><p>请求类型：Request URL: <a href="http://localhost:88/api/product/attrgroup/attr/relation">http://localhost:88/api/product/attrgroup/attr/relation</a></p><p>请求方式：POST</p><p>请求数据：[{“attrId”:10,”attrGroupId”:9}]</p><p>API：<a href="https://easydoc.xyz/doc/75716633/ZUqEdvA4/VhgnaedC">https://easydoc.xyz/doc/75716633/ZUqEdvA4/VhgnaedC</a></p><p>响应数据：</p><figure class="highlight json"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="punctuation">&#123;</span></span><br><span class="line"><span class="attr">&quot;msg&quot;</span><span class="punctuation">:</span> <span class="string">&quot;success&quot;</span><span class="punctuation">,</span></span><br><span class="line"><span class="attr">&quot;code&quot;</span><span class="punctuation">:</span> <span class="number">0</span></span><br><span class="line"><span class="punctuation">&#125;</span></span><br></pre></td></tr></table></figure><p>本质就是在中间表pms_attr_attrgroup_relation中，添加一条记录的过程</p><h3 id="发布商品"><a href="#发布商品" class="headerlink" title="发布商品"></a>发布商品</h3><p>获取所有会员等级：/member/memberlevel/list</p><p>API：<a href="https://easydoc.xyz/doc/75716633/ZUqEdvA4/jCFganpf">https://easydoc.xyz/doc/75716633/ZUqEdvA4/jCFganpf</a></p><p>在“gulimall-gateway”中修改“”文件，添加对于member的路由</p><figure class="highlight yaml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="bullet">-</span> <span class="attr">id:</span> <span class="string">gulimall-member</span></span><br><span class="line"><span class="attr">uri:</span> <span class="string">lb://gulimall-member</span></span><br><span class="line"><span class="attr">predicates:</span></span><br><span class="line"><span class="bullet">-</span> <span class="string">Path=/api/member/**</span></span><br><span class="line"><span class="attr">filters:</span></span><br><span class="line"><span class="bullet">-</span> <span class="string">RewritePath=/api/(?&lt;segment&gt;/?.*),/$\&#123;segment&#125;</span></span><br></pre></td></tr></table></figure><p>在“gulimall-member”中，创建“bootstrap.properties”文件，内容如下：</p><figure class="highlight properties"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="attr">spring.cloud.nacos.config.name</span>=<span class="string">gulimall-member</span></span><br><span class="line"><span class="attr">spring.cloud.nacos.config.server-addr</span>=<span class="string">xxx:8848</span></span><br><span class="line"><span class="attr">spring.cloud.nacos.config.namespace</span>=<span class="string">xxx</span></span><br><span class="line"><span class="attr">spring.cloud.nacos.config.extension-configs[0].data-id</span>=<span class="string">gulimall-member.yml</span></span><br><span class="line"><span class="attr">spring.cloud.nacos.config.extension-configs[0].group</span>=<span class="string">DEFAULT_GROUP</span></span><br><span class="line"><span class="attr">spring.cloud.nacos.config.extension-configs[0].refresh</span>=<span class="string">true</span></span><br></pre></td></tr></table></figure><p><strong>获取分类关联的品牌</strong>：/product/categorybrandrelation/brands/list</p><p>API：<a href="https://easydoc.xyz/doc/75716633/ZUqEdvA4/HgVjlzWV">https://easydoc.xyz/doc/75716633/ZUqEdvA4/HgVjlzWV</a></p><p>遇到PubSub问题</p><p>分类变化后请求没有被监听无法发送查询品牌信息的请求</p><ol><li>首先安装pubsub-js</li></ol><figure class="highlight ada"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">npm install <span class="comment">--save pubsub-js</span></span><br></pre></td></tr></table></figure><p>订阅方组件,在src下的main.js中引用：</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> <span class="title class_">PubSub</span> <span class="keyword">from</span> <span class="string">&#x27;pubsub-js&#x27;</span></span><br><span class="line"><span class="title class_">Vue</span>.<span class="property"><span class="keyword">prototype</span></span>.<span class="property">PubSub</span> = <span class="title class_">PubSub</span></span><br></pre></td></tr></table></figure><p>获取分类下所有分组&amp;关联属性</p><p>请求类型：/product/attrgroup/{catelogId}/withattr</p><p>请求方式：GET</p><p>请求URL：<a href="http://localhost:88/api/product/attrgroup/225/withattr?t=1588864569478">http://localhost:88/api/product/attrgroup/225/withattr?t=1588864569478</a></p><p>mysql默认的隔离级别为读已提交，为了能够在调试过程中，获取到数据库中的数据信息，可以调整隔离级别为读未提交：</p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">SET</span> SESSION TRANSACTION ISOLATION LEVEL READ UNCOMMITTED;</span><br></pre></td></tr></table></figure><p>但是它对于当前的事务窗口生效，如果想要设置全局的，需要加上global字段。</p><h3 id="商品管理"><a href="#商品管理" class="headerlink" title="商品管理"></a>商品管理</h3><p>当新建时：</p><figure class="highlight avrasm"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="symbol">t:</span> <span class="number">1588983621569</span></span><br><span class="line"><span class="symbol">status:</span> <span class="number">0</span></span><br><span class="line"><span class="symbol">key:</span> </span><br><span class="line"><span class="symbol">brandId:</span> <span class="number">0</span></span><br><span class="line"><span class="symbol">catelogId:</span> <span class="number">0</span></span><br><span class="line"><span class="symbol">page:</span> <span class="number">1</span></span><br><span class="line"><span class="symbol">limit:</span> <span class="number">10</span></span><br></pre></td></tr></table></figure><p>当上架时：</p><figure class="highlight avrasm"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="symbol">t:</span> <span class="number">1588983754030</span></span><br><span class="line"><span class="symbol">status:</span> <span class="number">1</span></span><br><span class="line"><span class="symbol">key:</span> </span><br><span class="line"><span class="symbol">brandId:</span> <span class="number">0</span></span><br><span class="line"><span class="symbol">catelogId:</span> <span class="number">0</span></span><br><span class="line"><span class="symbol">page:</span> <span class="number">1</span></span><br><span class="line"><span class="symbol">limit:</span> <span class="number">10</span></span><br></pre></td></tr></table></figure><p>当下架时：</p><figure class="highlight avrasm"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="symbol">t:</span> <span class="number">1588983789089</span></span><br><span class="line"><span class="symbol">status:</span> <span class="number">2</span></span><br><span class="line"><span class="symbol">key:</span> </span><br><span class="line"><span class="symbol">brandId:</span> <span class="number">0</span></span><br><span class="line"><span class="symbol">catelogId:</span> <span class="number">0</span></span><br><span class="line"><span class="symbol">page:</span> <span class="number">1</span></span><br><span class="line"><span class="symbol">limit:</span> <span class="number">10</span></span><br></pre></td></tr></table></figure><p>在SPU中，写出的日期数据都不符合规则：<br><img src="https://cdn.jsdelivr.net/gh/zsxfa/CDN/img/md/2022/03/29/1648516433.png" alt="desc"></p><p>想要符合规则，可以设置写出数据的规则：</p><p>spring.jackson</p><figure class="highlight yaml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="attr">jackson:</span></span><br><span class="line">  <span class="attr">date-format:</span> <span class="string">yyyy-MM-dd</span> <span class="string">HH:mm:ss</span></span><br></pre></td></tr></table></figure><p>SKU检索：</p><p>Request URL: <a href="http://localhost:88/api/product/skuinfo/list?t=1588989437944&amp;page=1&amp;limit=10&amp;key=&amp;catelogId=0&amp;brandId=0&amp;min=0&amp;max=0">http://localhost:88/api/product/skuinfo/list?t=1588989437944&amp;page=1&amp;limit=10&amp;key=&amp;catelogId=0&amp;brandId=0&amp;min=0&amp;max=0</a></p><p>请求体：</p><figure class="highlight avrasm"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="symbol">t:</span> <span class="number">1588989437944</span></span><br><span class="line"><span class="symbol">page:</span> <span class="number">1</span></span><br><span class="line"><span class="symbol">limit:</span> <span class="number">10</span></span><br><span class="line"><span class="symbol">key:</span> </span><br><span class="line"><span class="symbol">catelogId:</span> <span class="number">0</span></span><br><span class="line"><span class="symbol">brandId:</span> <span class="number">0</span></span><br><span class="line"><span class="symbol">min:</span> <span class="number">0</span></span><br><span class="line"><span class="symbol">max:</span> <span class="number">0</span></span><br></pre></td></tr></table></figure><p>API： <a href="https://easydoc.xyz/doc/75716633/ZUqEdvA4/ucirLq1D">https://easydoc.xyz/doc/75716633/ZUqEdvA4/ucirLq1D</a> </p><h3 id="仓库管理"><a href="#仓库管理" class="headerlink" title="仓库管理"></a>仓库管理</h3><p> 库存信息表：wms_ware_info</p><p>【1】仓库列表功能： </p><p>【2】查询商品库存：</p><p>【3】查询采购需求：</p><p>【4】 合并采购需求：</p><p>合并整单选中parcharseID：Request URL: <a href="http://localhost:88/api/ware/purchase/merge">http://localhost:88/api/ware/purchase/merge</a></p><p>请求数据：</p><figure class="highlight json"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="punctuation">&#123;</span>purchaseId<span class="punctuation">:</span> <span class="number">1</span><span class="punctuation">,</span> items<span class="punctuation">:</span> <span class="punctuation">[</span><span class="number">1</span><span class="punctuation">,</span> <span class="number">2</span><span class="punctuation">]</span><span class="punctuation">&#125;</span></span><br><span class="line">items<span class="punctuation">:</span> <span class="punctuation">[</span><span class="number">1</span><span class="punctuation">,</span> <span class="number">2</span><span class="punctuation">]</span></span><br></pre></td></tr></table></figure><p>合并整单未选择parcharseID :Request URL: <a href="http://localhost:88/api/ware/purchase/merge">http://localhost:88/api/ware/purchase/merge</a></p><p><img src="https://cdn.jsdelivr.net/gh/zsxfa/CDN/img/md/2022/03/29/1648545678.png" alt="desc"></p><figure class="highlight apache"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="attribute">items</span>:<span class="meta"> [1, 2]</span></span><br></pre></td></tr></table></figure><p>涉及到两张表：wms_purchase_detail，wms_purchase</p><p>现在采购单中填写数据，然后关联用户，关联用户后，</p><p>总的含义，就是根据采购单中的信息，更新采购需求，在采购单中填写采购人员，采购单号，采购的时候，更新采购细节表中的采购人员ID和采购状态。</p><p><img src="https://cdn.jsdelivr.net/gh/zsxfa/CDN/img/md/2022/03/29/1648545721.png" alt="desc"></p><p>领取采购单</p><p><a href="http://localhost:88/api/ware/purchase/received">http://localhost:88/api/ware/purchase/received</a></p><p>（1）某个人领取了采购单后，先看采购单是否处于未分配状态，只有采购单是新建或以领取状态时，才更新采购单的状态</p><p>（2）</p><p>【1】仓库列表功能： <a href="https://easydoc.xyz/doc/75716633/ZUqEdvA4/mZgdqOWe">https://easydoc.xyz/doc/75716633/ZUqEdvA4/mZgdqOWe</a> </p><p>【2】查询商品库存： <a href="https://easydoc.xyz/doc/75716633/ZUqEdvA4/hwXrEXBZ">https://easydoc.xyz/doc/75716633/ZUqEdvA4/hwXrEXBZ</a> </p><p>【3】查询采购需求： <a href="https://easydoc.xyz/doc/75716633/ZUqEdvA4/Ss4zsV7R">https://easydoc.xyz/doc/75716633/ZUqEdvA4/Ss4zsV7R</a> </p><p>【4】 合并采购需求：<a href="https://easydoc.xyz/doc/75716633/ZUqEdvA4/cUlv9QvK">https://easydoc.xyz/doc/75716633/ZUqEdvA4/cUlv9QvK</a> </p><p>【5】查询未领取的采购单： <a href="https://easydoc.xyz/doc/75716633/ZUqEdvA4/hI12DNrH">https://easydoc.xyz/doc/75716633/ZUqEdvA4/hI12DNrH</a> </p><p>【6】领取采购单： <a href="https://easydoc.xyz/doc/75716633/ZUqEdvA4/vXMBBgw1">https://easydoc.xyz/doc/75716633/ZUqEdvA4/vXMBBgw1</a> </p><p>完成采购，在完成采购过程中，需要涉及到设置SKU的name信息到仓库中，这是通过远程调用“gulimall-product”来实现根据sku_id查询得到sku_name的，如果这个过程发生了异常，事务不想要回滚，目前采用的方式是通过捕获异常的方式，防止事务回滚，是否还有其他的方式呢？这个问题留待以后解决。</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br></pre></td><td class="code"><pre><span class="line"> <span class="meta">@Override</span></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">addStock</span><span class="params">(Long skuId, Long wareId, Integer skuNum)</span> &#123;</span><br><span class="line"></span><br><span class="line">    List&lt;WareSkuEntity&gt; wareSkuEntities = wareSkuDao.selectList(<span class="keyword">new</span> <span class="title class_">QueryWrapper</span>&lt;WareSkuEntity&gt;().eq(<span class="string">&quot;sku_id&quot;</span>, skuId).eq(<span class="string">&quot;ware_id&quot;</span>, wareId));</span><br><span class="line"></span><br><span class="line">    <span class="keyword">if</span>(wareSkuEntities == <span class="literal">null</span> || wareSkuEntities.size() ==<span class="number">0</span> )&#123;</span><br><span class="line">        <span class="comment">//新增</span></span><br><span class="line">        <span class="type">WareSkuEntity</span> <span class="variable">wareSkuEntity</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">WareSkuEntity</span>();</span><br><span class="line">        wareSkuEntity.setSkuId(skuId);</span><br><span class="line">        wareSkuEntity.setWareId(wareId);</span><br><span class="line">        wareSkuEntity.setStock(skuNum);</span><br><span class="line">        wareSkuEntity.setStockLocked(<span class="number">0</span>);</span><br><span class="line"></span><br><span class="line">        <span class="comment">//远程查询SKU的name，若失败无需回滚</span></span><br><span class="line">        <span class="keyword">try</span> &#123;</span><br><span class="line">            <span class="type">R</span> <span class="variable">info</span> <span class="operator">=</span> productFeignService.info(skuId);</span><br><span class="line">            <span class="keyword">if</span>(info.getCode() == <span class="number">0</span>)&#123;</span><br><span class="line">                Map&lt;String,Object&gt; data=(Map&lt;String,Object&gt;)info.get(<span class="string">&quot;skuInfo&quot;</span>);</span><br><span class="line">                wareSkuEntity.setSkuName((String) data.get(<span class="string">&quot;skuName&quot;</span>));</span><br><span class="line">            &#125;</span><br><span class="line">        &#125; <span class="keyword">catch</span> (Exception e) &#123;</span><br><span class="line"></span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        wareSkuDao.insert(wareSkuEntity);</span><br><span class="line">    &#125;<span class="keyword">else</span>&#123;</span><br><span class="line">        <span class="comment">//插入</span></span><br><span class="line">        wareSkuDao.addStock(skuId,wareId,skuNum);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="获取spu规格"><a href="#获取spu规格" class="headerlink" title="获取spu规格"></a>获取spu规格</h3><p><strong>在SPU管理页面，获取商品规格的时候，出现400异常，浏览器显示跳转不了</strong></p><p>问题现象：</p><p><img src="https://cdn.jsdelivr.net/gh/zsxfa/CDN/img/md/2022/03/29/1648545762.png" alt="desc"></p><p>出现问题的代码：</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="title function_">attrUpdateShow</span>(<span class="params">row</span>) &#123;</span><br><span class="line">    <span class="variable language_">console</span>.<span class="title function_">log</span>(row);</span><br><span class="line">    <span class="variable language_">this</span>.<span class="property">$router</span>.<span class="title function_">push</span>(&#123;</span><br><span class="line">        <span class="attr">path</span>: <span class="string">&quot;/product-attrupdate&quot;</span>,</span><br><span class="line">        <span class="attr">query</span>: &#123; <span class="attr">spuId</span>: row.<span class="property">id</span>, <span class="attr">catalogId</span>: row.<span class="property">catalogId</span> &#125;</span><br><span class="line">    &#125;);</span><br><span class="line">&#125;,</span><br></pre></td></tr></table></figure><p>暂时不知道如何解决问题。只能留待以后解决。</p><p>经过测试发现，问题和上面的代码没有关系，问题出现在“attrupdate.vue”上，该vue页面无法通过浏览器访问，当输入访问URL（ <a href="http://localhost:8001/#/product-attrupdate">http://localhost:8001/#/product-attrupdate</a> ）的时候，就会出现404，而其他的请求则不会出现这种情况，不知为何。</p><p>通过POSTMAN进行请求的时候，能够请求到数据。</p><p>经过分析发现，是因为在数据库中没有该页面的导航所导致的，为了修正这个问题，可以在“sys-menu”表中添加一行，内容位：</p><p><img src="https://cdn.jsdelivr.net/gh/zsxfa/CDN/img/md/2022/03/29/1648546294.png" alt="desc"></p><p>这样当再次访问的时候，在“平台属性”下，会出现“规格维护”菜单，</p><p><img src="https://cdn.jsdelivr.net/gh/zsxfa/CDN/img/md/2022/03/29/1648546309.png" alt="desc"></p><p>当再次点击“规格”的时候，显示出菜单</p><p>不过这种菜单并不符合我们的需要，我们需要让它以弹出框的形式出现。</p><h3 id="修改商品规格"><a href="#修改商品规格" class="headerlink" title="修改商品规格"></a>修改商品规格</h3><p>API： <a href="https://easydoc.xyz/doc/75716633/ZUqEdvA4/GhnJ0L85">https://easydoc.xyz/doc/75716633/ZUqEdvA4/GhnJ0L85</a> </p><p>URL：/product/attr/update/{spuId}</p><h2 id="小结："><a href="#小结：" class="headerlink" title="小结："></a>小结：</h2><h3 id="1-在open-fen中会将调用的数据转换为JSON，接收方接收后，将JSON转换为对象，此时调用方和被调用方的处理JSON的对象不一定都是同一个类，只要它们的字段类型吻合即可。"><a href="#1-在open-fen中会将调用的数据转换为JSON，接收方接收后，将JSON转换为对象，此时调用方和被调用方的处理JSON的对象不一定都是同一个类，只要它们的字段类型吻合即可。" class="headerlink" title="1.  在open fen中会将调用的数据转换为JSON，接收方接收后，将JSON转换为对象，此时调用方和被调用方的处理JSON的对象不一定都是同一个类，只要它们的字段类型吻合即可。"></a>1.  在open fen中会将调用的数据转换为JSON，接收方接收后，将JSON转换为对象，此时调用方和被调用方的处理JSON的对象不一定都是同一个类，只要它们的字段类型吻合即可。</h3><p>调用方：</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">@FeignClient(value = &quot;gulimall-coupon&quot;)</span></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">interface</span> <span class="title class_">CouponFenService</span> &#123;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@PostMapping(&quot;/coupon/spubounds/save&quot;)</span></span><br><span class="line">    R <span class="title function_">saveSpuBounds</span><span class="params">(<span class="meta">@RequestBody</span> SpuBoundTo spuBoundTo)</span>;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@PostMapping(&quot;/coupon/skufullreduction/saveInfo&quot;)</span></span><br><span class="line">    R <span class="title function_">saveSkuReduction</span><span class="params">(<span class="meta">@RequestBody</span> SkuReductionTo skuReductionTo)</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>被调用方：</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">@PostMapping(&quot;/save&quot;)</span></span><br><span class="line"><span class="keyword">public</span> R <span class="title function_">save</span><span class="params">(<span class="meta">@RequestBody</span> SpuBoundsEntity spuBounds)</span>&#123;</span><br><span class="line">    spuBoundsService.save(spuBounds);</span><br><span class="line"></span><br><span class="line">    <span class="keyword">return</span> R.ok();</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="meta">@PostMapping(&quot;/saveInfo&quot;)</span></span><br><span class="line"><span class="keyword">public</span> R <span class="title function_">saveInfo</span><span class="params">(<span class="meta">@RequestBody</span> SkuReductionTo skuReductionTo)</span>&#123;</span><br><span class="line">    skuFullReductionService.saveSkuReduction(skuReductionTo);</span><br><span class="line">    <span class="keyword">return</span> R.ok();</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>调用方JSON化时的对象SpuBoundTo：</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">@Data</span></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">SpuBoundTo</span> &#123;</span><br><span class="line">    <span class="keyword">private</span> Long spuId;</span><br><span class="line">    <span class="keyword">private</span> BigDecimal buyBounds;</span><br><span class="line">    <span class="keyword">private</span> BigDecimal growBounds;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>被调用方JSON数据对象化时的对象SpuBoundsEntity：</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * 商品spu积分设置</span></span><br><span class="line"><span class="comment"> * </span></span><br><span class="line"><span class="comment"> * <span class="doctag">@author</span> cosmoswong</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@email</span> cosmoswong@sina.com</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@date</span> 2020-04-23 23:38:48</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="meta">@Data</span></span><br><span class="line"><span class="meta">@TableName(&quot;sms_spu_bounds&quot;)</span></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">SpuBoundsEntity</span> <span class="keyword">implements</span> <span class="title class_">Serializable</span> &#123;</span><br><span class="line"><span class="keyword">private</span> <span class="keyword">static</span> <span class="keyword">final</span> <span class="type">long</span> <span class="variable">serialVersionUID</span> <span class="operator">=</span> <span class="number">1L</span>;</span><br><span class="line"></span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * id</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="meta">@TableId</span></span><br><span class="line"><span class="keyword">private</span> Long id;</span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * </span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="keyword">private</span> Long spuId;</span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * 成长积分</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="keyword">private</span> BigDecimal growBounds;</span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * 购物积分</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="keyword">private</span> BigDecimal buyBounds;</span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * 优惠生效情况[1111（四个状态位，从右到左）;0 - 无优惠，成长积分是否赠送;1 - 无优惠，购物积分是否赠送;2 - 有优惠，成长积分是否赠送;3 - 有优惠，购物积分是否赠送【状态位0：不赠送，1：赠送】]</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="keyword">private</span> Integer work;</span><br><span class="line"></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="2-事务究竟要如何加上？"><a href="#2-事务究竟要如何加上？" class="headerlink" title="2. 事务究竟要如何加上？"></a>2. 事务究竟要如何加上？</h3><p>存在Batch操作的时候，才需要加上事务，单个操作无需添加事务控制。</p><p>SpringBoot中的事务</p><p><strong>批量操作的时候，才需要事务</strong></p><p>一个事务标注的方法上，方法内存在这些操作：</p><p>（1）批量更新一个表中字段</p><p>（2）更新多张表中的操作</p><p>实际上不论是哪种类型，方法中所有对于数据库的写操作，都会被整体当做一个事务，在这个事务过程中，如果某个操作出现了异常，则整体都不会被提交。这就是对于SpringBoot中的@Transactional的理解。</p><p><strong>@EnableTransactionManagement和@Transactional的区别？</strong></p><p> <a href="https://blog.csdn.net/abysscarry/article/details/80189232">https://blog.csdn.net/abysscarry/article/details/80189232</a><br> <a href="https://blog.csdn.net/Driver_tu/article/details/99679145">https://blog.csdn.net/Driver_tu/article/details/99679145</a> </p><p> <a href="https://www.cnblogs.com/leaveast/p/11765503.html">https://www.cnblogs.com/leaveast/p/11765503.html</a> </p><h2 id="其他"><a href="#其他" class="headerlink" title="其他"></a>其他</h2><h3 id="1-文档参考地址"><a href="#1-文档参考地址" class="headerlink" title="1. 文档参考地址"></a>1. 文档参考地址</h3><p><a href="http://www.jayh.club/#/02.PassJava%E6%9E%B6%E6%9E%84%E7%AF%87/01.%E5%88%9B%E5%BB%BA%E9%A1%B9%E7%9B%AE%E5%92%8C%E6%B7%BB%E5%8A%A0%E6%A8%A1%E5%9D%97">http://www.jayh.club/#/02.PassJava%E6%9E%B6%E6%9E%84%E7%AF%87/01.%E5%88%9B%E5%BB%BA%E9%A1%B9%E7%9B%AE%E5%92%8C%E6%B7%BB%E5%8A%A0%E6%A8%A1%E5%9D%97</a> </p><p> <a href="https://blog.csdn.net/ok_wolf/article/details/105400748">https://blog.csdn.net/ok_wolf/article/details/105400748</a> </p><p><a href="https://www.cnblogs.com/javalbb/p/12690862.html">https://www.cnblogs.com/javalbb/p/12690862.html</a></p><p> <a href="https://blog.csdn.net/ok_wolf/article/details/105456170">https://blog.csdn.net/ok_wolf/article/details/105456170</a> </p><p> <a href="https://easydoc.xyz/doc/75716633/ZUqEdvA4/jCFganpf">https://easydoc.xyz/doc/75716633/ZUqEdvA4/jCFganpf</a> </p><h3 id="2-开机启动docker"><a href="#2-开机启动docker" class="headerlink" title="2. 开机启动docker"></a>2. 开机启动docker</h3><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">[vagrant@x`]$ sudo systemctl enable docker</span><br></pre></td></tr></table></figure><p>在Docker中设置开机启动容器</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">[vagrant@x`]$ sudo update mysql --restart=always</span><br></pre></td></tr></table></figure><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta prompt_">#</span><span class="language-bash">查看防火墙状态</span></span><br><span class="line">[root@hadoop-104 module]# systemctl status firewalld</span><br><span class="line">  firewalld.service - firewalld - dynamic firewall daemon</span><br><span class="line">   Loaded: loaded (/usr/lib/systemd/system/firewalld.service; enabled; vendor preset: enabled)</span><br><span class="line">   Active: active (running) since Wed 2020-04-22 21:26:23 EDT; 10min ago</span><br><span class="line">     Docs: man:firewalld(1)</span><br><span class="line"> Main PID: 5947 (firewalld)</span><br><span class="line">   CGroup: /system.slice/firewalld.service</span><br><span class="line">           └─5947 /usr/bin/python -Es /usr/sbin/firewalld --nofork --nopid</span><br><span class="line"></span><br><span class="line">Apr 22 21:26:20 hadoop-104 systemd[1]: Starting firewalld - dynamic firewall daemon...</span><br><span class="line">Apr 22 21:26:23 hadoop-104 systemd[1]: Started firewalld - dynamic firewall daemon.</span><br><span class="line"><span class="meta prompt_">#</span><span class="language-bash">查看防火墙是否是开机启动</span></span><br><span class="line">[root@hadoop-104 module]# systemctl list-unit-files|grep firewalld</span><br><span class="line">firewalld.service                             enabled </span><br><span class="line"><span class="meta prompt_">#</span><span class="language-bash">关闭开机启动防火墙</span></span><br><span class="line">[root@hadoop-104 module]# systemctl disable firewalld             </span><br><span class="line">Removed symlink /etc/systemd/system/multi-user.target.wants/firewalld.service.</span><br><span class="line">Removed symlink /etc/systemd/system/dbus-org.fedoraproject.FirewallD1.service.</span><br><span class="line"><span class="meta prompt_">#</span><span class="language-bash">停止防火墙</span></span><br><span class="line">[root@hadoop-104 module]# systemctl stop firewalld         </span><br><span class="line"><span class="meta prompt_">#</span><span class="language-bash">再次查看防火墙</span></span><br><span class="line">[root@hadoop-104 module]# systemctl list-unit-files|grep firewalld</span><br><span class="line">firewalld.service                             disabled</span><br><span class="line">[root@hadoop-104 module]# </span><br></pre></td></tr></table></figure><h3 id="3-查看命令的安装位置"><a href="#3-查看命令的安装位置" class="headerlink" title="3. 查看命令的安装位置"></a>3. 查看命令的安装位置</h3><p>whereis mysql：查看mysql的安装位置</p><h3 id="4-vscode中生成代码片段"><a href="#4-vscode中生成代码片段" class="headerlink" title="4. vscode中生成代码片段"></a>4. vscode中生成代码片段</h3><p><img src="https://cdn.jsdelivr.net/gh/zsxfa/CDN/img/md/2022/03/19/1647690338.png" alt="desc"></p><p>新建一个全局的代码片段，名字为vue，然后回车：</p><p>将下面的代码片段粘贴到“vue-html.code-snippets”</p><figure class="highlight json"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br></pre></td><td class="code"><pre><span class="line"><span class="punctuation">&#123;</span></span><br><span class="line">    <span class="comment">// Place your 全局 snippets here. Each snippet is defined under a snippet name and has a scope, prefix, body and </span></span><br><span class="line">    <span class="comment">// description. Add comma separated ids of the languages where the snippet is applicable in the scope field. If scope </span></span><br><span class="line">    <span class="comment">// is left empty or omitted, the snippet gets applied to all languages. The prefix is what is </span></span><br><span class="line">    <span class="comment">// used to trigger the snippet and the body will be expanded and inserted. Possible variables are: </span></span><br><span class="line">    <span class="comment">// $1, $2 for tab stops, $0 for the final cursor position, and $&#123;1:label&#125;, $&#123;2:another&#125; for placeholders. </span></span><br><span class="line">    <span class="comment">// Placeholders with the same ids are connected.</span></span><br><span class="line">    <span class="comment">// Example:</span></span><br><span class="line">    <span class="comment">// &quot;Print to console&quot;: &#123;</span></span><br><span class="line">    <span class="comment">// &quot;scope&quot;: &quot;javascript,typescript&quot;,</span></span><br><span class="line">    <span class="comment">// &quot;prefix&quot;: &quot;log&quot;,</span></span><br><span class="line">    <span class="comment">// &quot;body&quot;: [</span></span><br><span class="line">    <span class="comment">// &quot;console.log(&#x27;$1&#x27;);&quot;,</span></span><br><span class="line">    <span class="comment">// &quot;$2&quot;</span></span><br><span class="line">    <span class="comment">// ],</span></span><br><span class="line">    <span class="comment">// &quot;description&quot;: &quot;Log output to console&quot;</span></span><br><span class="line">    <span class="comment">// &#125;</span></span><br><span class="line">    <span class="attr">&quot;生成vue模板&quot;</span><span class="punctuation">:</span> <span class="punctuation">&#123;</span></span><br><span class="line">        <span class="attr">&quot;prefix&quot;</span><span class="punctuation">:</span> <span class="string">&quot;vue&quot;</span><span class="punctuation">,</span></span><br><span class="line">        <span class="attr">&quot;body&quot;</span><span class="punctuation">:</span> <span class="punctuation">[</span></span><br><span class="line">            <span class="string">&quot;&lt;!-- $1 --&gt;&quot;</span><span class="punctuation">,</span></span><br><span class="line">            <span class="string">&quot;&lt;template&gt;&quot;</span><span class="punctuation">,</span></span><br><span class="line">            <span class="string">&quot;&lt;div class=&#x27;$2&#x27;&gt;$5&lt;/div&gt;&quot;</span><span class="punctuation">,</span></span><br><span class="line">            <span class="string">&quot;&lt;/template&gt;&quot;</span><span class="punctuation">,</span></span><br><span class="line">            <span class="string">&quot;&quot;</span><span class="punctuation">,</span></span><br><span class="line">            <span class="string">&quot;&lt;script&gt;&quot;</span><span class="punctuation">,</span></span><br><span class="line">            <span class="string">&quot;//这里可以导入其他文件（比如：组件，工具js，第三方插件js，json文件，图片文件等等）&quot;</span><span class="punctuation">,</span></span><br><span class="line">            <span class="string">&quot;//例如：import 《组件名称》 from &#x27;《组件路径》&#x27;;&quot;</span><span class="punctuation">,</span></span><br><span class="line">            <span class="string">&quot;&quot;</span><span class="punctuation">,</span></span><br><span class="line">            <span class="string">&quot;export default &#123;&quot;</span><span class="punctuation">,</span></span><br><span class="line">            <span class="string">&quot;//import引入的组件需要注入到对象中才能使用&quot;</span><span class="punctuation">,</span></span><br><span class="line">            <span class="string">&quot;components: &#123;&#125;,&quot;</span><span class="punctuation">,</span></span><br><span class="line">            <span class="string">&quot;data() &#123;&quot;</span><span class="punctuation">,</span></span><br><span class="line">            <span class="string">&quot;//这里存放数据&quot;</span><span class="punctuation">,</span></span><br><span class="line">            <span class="string">&quot;return &#123;&quot;</span><span class="punctuation">,</span></span><br><span class="line">            <span class="string">&quot;&quot;</span><span class="punctuation">,</span></span><br><span class="line">            <span class="string">&quot;&#125;;&quot;</span><span class="punctuation">,</span></span><br><span class="line">            <span class="string">&quot;&#125;,&quot;</span><span class="punctuation">,</span></span><br><span class="line">            <span class="string">&quot;//监听属性 类似于data概念&quot;</span><span class="punctuation">,</span></span><br><span class="line">            <span class="string">&quot;computed: &#123;&#125;,&quot;</span><span class="punctuation">,</span></span><br><span class="line">            <span class="string">&quot;//监控data中的数据变化&quot;</span><span class="punctuation">,</span></span><br><span class="line">            <span class="string">&quot;watch: &#123;&#125;,&quot;</span><span class="punctuation">,</span></span><br><span class="line">            <span class="string">&quot;//方法集合&quot;</span><span class="punctuation">,</span></span><br><span class="line">            <span class="string">&quot;methods: &#123;&quot;</span><span class="punctuation">,</span></span><br><span class="line">            <span class="string">&quot;&quot;</span><span class="punctuation">,</span></span><br><span class="line">            <span class="string">&quot;&#125;,&quot;</span><span class="punctuation">,</span></span><br><span class="line">            <span class="string">&quot;//生命周期 - 创建完成（可以访问当前this实例）&quot;</span><span class="punctuation">,</span></span><br><span class="line">            <span class="string">&quot;created() &#123;&quot;</span><span class="punctuation">,</span></span><br><span class="line">            <span class="string">&quot;&quot;</span><span class="punctuation">,</span></span><br><span class="line">            <span class="string">&quot;&#125;,&quot;</span><span class="punctuation">,</span></span><br><span class="line">            <span class="string">&quot;//生命周期 - 挂载完成（可以访问DOM元素）&quot;</span><span class="punctuation">,</span></span><br><span class="line">            <span class="string">&quot;mounted() &#123;&quot;</span><span class="punctuation">,</span></span><br><span class="line">            <span class="string">&quot;&quot;</span><span class="punctuation">,</span></span><br><span class="line">            <span class="string">&quot;&#125;,&quot;</span><span class="punctuation">,</span></span><br><span class="line">            <span class="string">&quot;beforeCreate() &#123;&#125;, //生命周期 - 创建之前&quot;</span><span class="punctuation">,</span></span><br><span class="line">            <span class="string">&quot;beforeMount() &#123;&#125;, //生命周期 - 挂载之前&quot;</span><span class="punctuation">,</span></span><br><span class="line">            <span class="string">&quot;beforeUpdate() &#123;&#125;, //生命周期 - 更新之前&quot;</span><span class="punctuation">,</span></span><br><span class="line">            <span class="string">&quot;updated() &#123;&#125;, //生命周期 - 更新之后&quot;</span><span class="punctuation">,</span></span><br><span class="line">            <span class="string">&quot;beforeDestroy() &#123;&#125;, //生命周期 - 销毁之前&quot;</span><span class="punctuation">,</span></span><br><span class="line">            <span class="string">&quot;destroyed() &#123;&#125;, //生命周期 - 销毁完成&quot;</span><span class="punctuation">,</span></span><br><span class="line">            <span class="string">&quot;activated() &#123;&#125;, //如果页面有keep-alive缓存功能，这个函数会触发&quot;</span><span class="punctuation">,</span></span><br><span class="line">            <span class="string">&quot;&#125;&quot;</span><span class="punctuation">,</span></span><br><span class="line">            <span class="string">&quot;&lt;/script&gt;&quot;</span><span class="punctuation">,</span></span><br><span class="line">            <span class="string">&quot;&lt;style lang=&#x27;scss&#x27; scoped&gt;&quot;</span><span class="punctuation">,</span></span><br><span class="line">            <span class="string">&quot;//@import url($3); 引入公共css类&quot;</span><span class="punctuation">,</span></span><br><span class="line">            <span class="string">&quot;$4&quot;</span><span class="punctuation">,</span></span><br><span class="line">            <span class="string">&quot;&lt;/style&gt;&quot;</span></span><br><span class="line">        <span class="punctuation">]</span><span class="punctuation">,</span></span><br><span class="line">        <span class="attr">&quot;description&quot;</span><span class="punctuation">:</span> <span class="string">&quot;生成VUE模板&quot;</span></span><br><span class="line">    <span class="punctuation">&#125;</span><span class="punctuation">,</span></span><br><span class="line">    <span class="attr">&quot;http-get请求&quot;</span><span class="punctuation">:</span> <span class="punctuation">&#123;</span></span><br><span class="line">        <span class="attr">&quot;prefix&quot;</span><span class="punctuation">:</span> <span class="string">&quot;httpget&quot;</span><span class="punctuation">,</span></span><br><span class="line">        <span class="attr">&quot;body&quot;</span><span class="punctuation">:</span> <span class="punctuation">[</span></span><br><span class="line">            <span class="string">&quot;this.\\$http(&#123;&quot;</span><span class="punctuation">,</span></span><br><span class="line">            <span class="string">&quot;url: this.\\$http.adornUrl(&#x27;&#x27;),&quot;</span><span class="punctuation">,</span></span><br><span class="line">            <span class="string">&quot;method: &#x27;get&#x27;,&quot;</span><span class="punctuation">,</span></span><br><span class="line">            <span class="string">&quot;params: this.\\$http.adornParams(&#123;&#125;)&quot;</span><span class="punctuation">,</span></span><br><span class="line">            <span class="string">&quot;&#125;).then((&#123; data &#125;) =&gt; &#123;&quot;</span><span class="punctuation">,</span></span><br><span class="line">            <span class="string">&quot;&#125;)&quot;</span></span><br><span class="line">        <span class="punctuation">]</span><span class="punctuation">,</span></span><br><span class="line">        <span class="attr">&quot;description&quot;</span><span class="punctuation">:</span> <span class="string">&quot;httpGET请求&quot;</span></span><br><span class="line">    <span class="punctuation">&#125;</span><span class="punctuation">,</span></span><br><span class="line">    <span class="attr">&quot;http-post请求&quot;</span><span class="punctuation">:</span> <span class="punctuation">&#123;</span></span><br><span class="line">        <span class="attr">&quot;prefix&quot;</span><span class="punctuation">:</span> <span class="string">&quot;httppost&quot;</span><span class="punctuation">,</span></span><br><span class="line">        <span class="attr">&quot;body&quot;</span><span class="punctuation">:</span> <span class="punctuation">[</span></span><br><span class="line">            <span class="string">&quot;this.\\$http(&#123;&quot;</span><span class="punctuation">,</span></span><br><span class="line">            <span class="string">&quot;url: this.\\$http.adornUrl(&#x27;&#x27;),&quot;</span><span class="punctuation">,</span></span><br><span class="line">            <span class="string">&quot;method: &#x27;post&#x27;,&quot;</span><span class="punctuation">,</span></span><br><span class="line">            <span class="string">&quot;data: this.\\$http.adornData(data, false)&quot;</span><span class="punctuation">,</span></span><br><span class="line">            <span class="string">&quot;&#125;).then((&#123; data &#125;) =&gt; &#123; &#125;);&quot;</span></span><br><span class="line">        <span class="punctuation">]</span><span class="punctuation">,</span></span><br><span class="line">        <span class="attr">&quot;description&quot;</span><span class="punctuation">:</span> <span class="string">&quot;httpPOST请求&quot;</span></span><br><span class="line">    <span class="punctuation">&#125;</span></span><br><span class="line"><span class="punctuation">&#125;</span></span><br></pre></td></tr></table></figure><p>更多详细说明见： <a href="https://blog.csdn.net/z772330927/article/details/105730430/">https://blog.csdn.net/z772330927/article/details/105730430/</a> </p><h3 id="5-vscode快捷键"><a href="#5-vscode快捷键" class="headerlink" title="5. vscode快捷键"></a>5. vscode快捷键</h3><p>ctrl+shift+f 全局搜索</p><p>alt+shift+f 格式化代码</p><h3 id="6-关闭eslint的语法检查"><a href="#6-关闭eslint的语法检查" class="headerlink" title="6.  关闭eslint的语法检查"></a>6.  关闭eslint的语法检查</h3><p><img src="https://cdn.jsdelivr.net/gh/zsxfa/CDN/img/md/2022/03/19/1647690167.png" alt="desc"></p><h3 id="7-安装mybatisx插件"><a href="#7-安装mybatisx插件" class="headerlink" title="7. 安装mybatisx插件"></a>7. 安装mybatisx插件</h3><p>在Marketplace中搜索“mybatisx”，安装后重启IDEA，使用时会自动在@Mapper标注的接口上，产生小图标，然后alt+enter，generate statement，就会自动的在xml文件中生成SQL。</p><h3 id="8-mysql的批量删除"><a href="#8-mysql的批量删除" class="headerlink" title="8. mysql的批量删除"></a>8. mysql的批量删除</h3><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">DELETE</span> <span class="keyword">FROM</span>  `pms_attr_attrgroup_relation` <span class="keyword">WHERE</span> (attr_id<span class="operator">=</span> ? <span class="keyword">AND</span> attr_group_id ) <span class="keyword">OR</span> (attr_id<span class="operator">=</span> ? <span class="keyword">AND</span> attr_group_id )</span><br></pre></td></tr></table></figure><h3 id="9-String-join"><a href="#9-String-join" class="headerlink" title="9. String.join"></a>9. String.join</h3><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">java.lang.String <span class="meta">@NotNull</span> </span><br><span class="line"><span class="keyword">public</span> <span class="keyword">static</span> String <span class="title function_">join</span><span class="params">(<span class="meta">@NotNull</span> CharSequence delimiter,</span></span><br><span class="line"><span class="params">                          <span class="meta">@NotNull</span> Iterable&lt;? extends CharSequence&gt; elements)</span></span><br></pre></td></tr></table></figure><p>Returns a new String composed of copies of the CharSequence elements joined together with a copy of the specified delimiter.</p><p> 返回一个由CharSequence元素的副本和指定分隔符的副本组成的新字符串。 </p><p>For example,</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line">List&lt;String&gt; strings = <span class="keyword">new</span> <span class="title class_">LinkedList</span>&lt;&gt;();</span><br><span class="line">strings.add(<span class="string">&quot;Java&quot;</span>);strings.add(<span class="string">&quot;is&quot;</span>);</span><br><span class="line">strings.add(<span class="string">&quot;cool&quot;</span>);</span><br><span class="line"><span class="type">String</span> <span class="variable">message</span> <span class="operator">=</span> String.join(<span class="string">&quot; &quot;</span>, strings);</span><br><span class="line"><span class="comment">//message returned is: &quot;Java is cool&quot;</span></span><br><span class="line"></span><br><span class="line">Set&lt;String&gt; strings = <span class="keyword">new</span> <span class="title class_">LinkedHashSet</span>&lt;&gt;();</span><br><span class="line">strings.add(<span class="string">&quot;Java&quot;</span>); strings.add(<span class="string">&quot;is&quot;</span>);</span><br><span class="line">strings.add(<span class="string">&quot;very&quot;</span>); strings.add(<span class="string">&quot;cool&quot;</span>);</span><br><span class="line"><span class="type">String</span> <span class="variable">message</span> <span class="operator">=</span> String.join(<span class="string">&quot;-&quot;</span>, strings);</span><br><span class="line"><span class="comment">//message returned is: &quot;Java-is-very-cool&quot;</span></span><br></pre></td></tr></table></figure><p>Note that if an individual element is null, then “null” is added.</p><p> 注意，如果单个元素为null，则添加“null”。 </p><p>Params:<br>delimiter – a sequence of characters that is used to separate each of the elements in the resulting String<br>               用于分隔结果字符串中的每个元素的字符序列 </p><p>elements – an Iterable that will have its elements joined together.<br>                  将其元素连接在一起的可迭代的。 </p><p>Returns:<br>a new String that is composed from the elements argument<br> 由elements参数组成的新字符串 </p><p>Throws:<br>NullPointerException – If delimiter or elements is null</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="keyword">static</span> String <span class="title function_">join</span><span class="params">(CharSequence delimiter,</span></span><br><span class="line"><span class="params">        Iterable&lt;? extends CharSequence&gt; elements)</span> &#123;</span><br><span class="line">    Objects.requireNonNull(delimiter);</span><br><span class="line">    Objects.requireNonNull(elements);</span><br><span class="line">    <span class="type">StringJoiner</span> <span class="variable">joiner</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">StringJoiner</span>(delimiter);</span><br><span class="line">    <span class="keyword">for</span> (CharSequence cs: elements) &#123;</span><br><span class="line">        joiner.add(cs);</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> joiner.toString();</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>能够看到实际上它就是通过创建StringJoiner，然后遍历elements，加入每个元素来完成的。</p><p>StringJoiner</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">java.util <span class="keyword">public</span> <span class="keyword">final</span> <span class="keyword">class</span> <span class="title class_">StringJoiner</span></span><br><span class="line"><span class="keyword">extends</span> <span class="title class_">Object</span></span><br></pre></td></tr></table></figure><p>StringJoiner is used to construct a sequence of characters separated by a delimiter and optionally starting with a supplied prefix and ending with a supplied suffix.<br> tringJoiner用于构造由分隔符分隔的字符序列，可以选择以提供的前缀开始，以提供的后缀结束。 </p><p>Prior to adding something to the StringJoiner, its sj.toString() method will, by default, return prefix + suffix. However, if the setEmptyValue method is called, the emptyValue supplied will be returned instead. This can be used, for example, when creating a string using set notation to indicate an empty set, i.e. “{}”, where the prefix is “{“, the suffix is “}” and nothing has been added to the StringJoiner.<br> 在向StringJoiner添加内容之前，它的sj.toString()方法在默认情况下会返回前缀+后缀。但是，如果调用setEmptyValue方法，则返回所提供的emptyValue。例如，当使用set符号创建一个字符串来表示一个空集时，可以使用这种方法。“{}”，其中前缀是“{”，后缀是“}”，没有向StringJoiner添加任何内容。 </p><p>apiNote:<br>The String “[George:Sally:Fred]” may be constructed as follows:</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="type">StringJoiner</span> <span class="variable">sj</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">StringJoiner</span>(<span class="string">&quot;:&quot;</span>, <span class="string">&quot;[&quot;</span>, <span class="string">&quot;]&quot;</span>);</span><br><span class="line">sj.add(<span class="string">&quot;George&quot;</span>).add(<span class="string">&quot;Sally&quot;</span>).add(<span class="string">&quot;Fred&quot;</span>);</span><br><span class="line"><span class="type">String</span> <span class="variable">desiredString</span> <span class="operator">=</span> sj.toString();</span><br></pre></td></tr></table></figure><p>A StringJoiner may be employed to create formatted output from a java.util.stream.Stream using java.util.stream.Collectors.joining(CharSequence). For example:<br> 使用StringJoiner从java.util.stream创建格式化输出流，使用java.util.stream.Collectors.joining (CharSequence进行)。例如: </p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">List&lt;Integer&gt; numbers = Arrays.asList(<span class="number">1</span>, <span class="number">2</span>, <span class="number">3</span>, <span class="number">4</span>);</span><br><span class="line"><span class="type">String</span> <span class="variable">commaSeparatedNumbers</span> <span class="operator">=</span> numbers.stream()</span><br><span class="line">    .map(i -&gt; i.toString())</span><br><span class="line">    .collect(Collectors.joining(<span class="string">&quot;, &quot;</span>));</span><br></pre></td></tr></table></figure><p>通过分析源码发现，在“”内部维护了一个StringBuilder，所有加入到它内部的元素都会先拼接上分割符，然后再拼接上加入的元素</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">public</span> StringJoiner <span class="title function_">add</span><span class="params">(CharSequence newElement)</span> &#123;</span><br><span class="line">    prepareBuilder().append(newElement);</span><br><span class="line">    <span class="keyword">return</span> <span class="built_in">this</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">private</span> StringBuilder <span class="title function_">prepareBuilder</span><span class="params">()</span> &#123;</span><br><span class="line">    <span class="keyword">if</span> (value != <span class="literal">null</span>) &#123;</span><br><span class="line">        value.append(delimiter);</span><br><span class="line">    &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">        value = <span class="keyword">new</span> <span class="title class_">StringBuilder</span>().append(prefix);</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> value;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="10-在Service中微服务比较多的时候，可以配置将一些微服务放置到compound中，组成一个小组"><a href="#10-在Service中微服务比较多的时候，可以配置将一些微服务放置到compound中，组成一个小组" class="headerlink" title="10. 在Service中微服务比较多的时候，可以配置将一些微服务放置到compound中，组成一个小组"></a>10. 在Service中微服务比较多的时候，可以配置将一些微服务放置到compound中，组成一个小组</h3><p><img src="https://cdn.jsdelivr.net/gh/zsxfa/CDN/img/md/2022/03/29/1648548729.png" alt="desc"></p><p>以后再运行时，直接选择这个compound即可很方便的运行或停止一组微服务：</p><p>另外可以单独为每个微服务，设置需要的运行时最大堆内存大小：</p><p><img src="https://cdn.jsdelivr.net/gh/zsxfa/CDN/img/md/2022/03/29/1648548769.png" alt="desc"></p><h3 id="11-mysql的dateTime和timestamp的区别？"><a href="#11-mysql的dateTime和timestamp的区别？" class="headerlink" title="11. mysql的dateTime和timestamp的区别？"></a>11. mysql的dateTime和timestamp的区别？</h3><p><a href="https://www.cnblogs.com/mxwz/p/7520309.html">MySQL中datetime和timestamp的区别及使用</a></p><p><strong>TIMESTAMP和DATETIME的相同点：</strong></p><p>1&gt; 两者都可用来表示YYYY-MM-DD HH:MM:SS[.fraction]类型的日期。</p><p><strong>TIMESTAMP和DATETIME的不同点：</strong></p><p>1&gt; 两者的存储方式不一样</p><p>对于TIMESTAMP，它把客户端插入的时间从当前时区转化为UTC（世界标准时间）进行存储。查询时，将其又转化为客户端当前时区进行返回。</p><p>而对于DATETIME，不做任何改变，基本上是原样输入和输出。</p><p>2&gt; 两者所能存储的时间范围不一样</p><p>timestamp所能存储的时间范围为：’1970-01-01 00:00:01.000000’ 到 ‘2038-01-19 03:14:07.999999’。</p><p>datetime所能存储的时间范围为：’1000-01-01 00:00:00.000000’ 到 ‘9999-12-31 23:59:59.999999’。</p><p>总结：TIMESTAMP和DATETIME除了存储范围和存储方式不一样，没有太大区别。当然，对于跨时区的业务，TIMESTAMP更为合适。</p><p> <a href="https://www.cnblogs.com/Jashinck/p/10472398.html">https://www.cnblogs.com/Jashinck/p/10472398.html</a> </p><h3 id="12-SpringBoot中的事务"><a href="#12-SpringBoot中的事务" class="headerlink" title="12. SpringBoot中的事务"></a>12. SpringBoot中的事务</h3><p> <a href="https://blog.csdn.net/Z__Sheng/article/details/89489053">https://blog.csdn.net/Z__Sheng/article/details/89489053</a> </p><h3 id="13-IDEA-RESTFUll-clinet"><a href="#13-IDEA-RESTFUll-clinet" class="headerlink" title="13. IDEA RESTFUll clinet"></a>13. IDEA RESTFUll clinet</h3><p><a href="https://blog.csdn.net/qq_37502106/article/details/103183492">IntelliJ IDEA 使用 rest client</a></p>]]></content>
    
    
    <summary type="html">&lt;p&gt;对于谷粒商城的基础篇笔记总结…&lt;/p&gt;</summary>
    
    
    
    <category term="项目" scheme="http://zsxfa.cn/categories/%E9%A1%B9%E7%9B%AE/"/>
    
    
  </entry>
  
  <entry>
    <title>node和npm</title>
    <link href="http://zsxfa.cn/2022/03/16/node%E5%92%8Cnpm/"/>
    <id>http://zsxfa.cn/2022/03/16/node%E5%92%8Cnpm/</id>
    <published>2022-03-16T04:16:16.000Z</published>
    <updated>2022-03-16T06:54:01.001Z</updated>
    
    <content type="html"><![CDATA[<p>早上打算写点东西的，但是用hexo创建文件失败了，继而发现npm命令用不了了，很奇怪的问题，可以使用node -v查看node的版本，但是npm用不了，然后就查了很多，最后把node删除重装了下，下面记录一下npde和npm的相关性和如何使用。</p><span id="more"></span><p>首先说说这两个是什么东西</p><h1 id="node-js"><a href="#node-js" class="headerlink" title="node.js"></a>node.js</h1><ul><li><p>Node.js 是一个 Javascript 运行环境（runtime environment），不是一个 js 文件</p></li><li><p>Node.js 是一个基于 Chrome V8 引擎的 Javascript 运行环境，是用 C++ 写的</p></li><li><p>Node.js 不是库，是一个运行环境，或者说是一个 JS 语言解释器</p></li></ul><h1 id="npm-Node-Package-Manager"><a href="#npm-Node-Package-Manager" class="headerlink" title="npm(Node Package Manager)"></a>npm(Node Package Manager)</h1><p>npm是nodejs的包管理器（package manager）</p><p>nodejs中含有npm，比如说你安装好nodejs，你打开cmd输入npm -v会发现出啊线npm的版本号，说明npm已经安装好。</p><h1 id="卸载node-js"><a href="#卸载node-js" class="headerlink" title="卸载node.js"></a>卸载node.js</h1><p>因为npm用不了的原因，我还是选择了卸载node，下面是网上找到的一些步骤</p><ul><li><p>从卸载程序卸载程序和功能，也可以直接右键node.js的安装包并选择卸载。</p></li><li><p>从下列的目录中找到相关的内容并删除掉：</p><blockquote><p>C:\Program Files (x86)\nodejs<br>C:\Program Files\nodejs<br>C:\Users{User}\AppData\Roaming\npm（或%appdata%\npm）<br>C:\Users{User}\AppData\Roaming\npm-cache（或%appdata%\npm-cache）</p></blockquote></li><li><p>重新启动（或者重新启动任务管理器杀死所有与节点相关的进程）。</p></li></ul><p>检查%PATH%环境变量以确保没有引用Nodejs或npm存在。 重新启动电脑。</p><h1 id="安装nvm-windows并使用"><a href="#安装nvm-windows并使用" class="headerlink" title="安装nvm-windows并使用"></a>安装nvm-windows并使用</h1><h2 id="安装"><a href="#安装" class="headerlink" title="安装"></a>安装</h2><p>在Linux上我一直使用nvm来管理nodejs的不同版本，但是nvm没有windows版本，所以这是一个适用于 Windows 的 node.js 版本管理实用程序。</p><p>下载<a href="https://github.com/coreybutler/nvm-windows/releases">nvm-windows</a></p><ul><li>nvm-noinstall.zip： 这个是绿色免安装版本，但是使用之前需要配置</li><li>nvm-setup.zip：这是一个安装包，下载之后点击安装，无需配置就可以使用，方便。</li><li>Source code(zip)：zip压缩的源码</li><li>Sourc code(tar.gz)：tar.gz的源码，一般用于*nix系统</li></ul><p>我们安装nvm-setup.zip，下载好后，双击nvm-setup.exe安装，<strong>安装时nvm和nodejs目录必须填不包含空格的路径，我使用的是<code>D:\develope_tools</code>，注意这里没有空格</strong></p><h2 id="使用"><a href="#使用" class="headerlink" title="使用"></a>使用</h2><p>安装好后：</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta prompt_">$ </span><span class="language-bash">nvm version</span></span><br><span class="line">1.1.9</span><br></pre></td></tr></table></figure><p>如果是第一次安装，使用该命令结果如下：</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta prompt_">$ </span><span class="language-bash">nvm list</span></span><br><span class="line">No installations recognized.</span><br></pre></td></tr></table></figure><h3 id="查看可以安装的nodejs版本"><a href="#查看可以安装的nodejs版本" class="headerlink" title="查看可以安装的nodejs版本"></a>查看可以安装的nodejs版本</h3><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta prompt_">$ </span><span class="language-bash">nvm list available</span></span><br><span class="line"></span><br><span class="line">|   CURRENT    |     LTS      |  OLD STABLE  | OLD UNSTABLE |</span><br><span class="line">|--------------|--------------|--------------|--------------|</span><br><span class="line">|    17.7.1    |   16.14.1    |   0.12.18    |   0.11.16    |</span><br><span class="line">|    17.7.0    |   16.14.0    |   0.12.17    |   0.11.15    |</span><br><span class="line">|    17.6.0    |   16.13.2    |   0.12.16    |   0.11.14    |</span><br><span class="line">|    17.5.0    |   16.13.1    |   0.12.15    |   0.11.13    |</span><br><span class="line">|    17.4.0    |   16.13.0    |   0.12.14    |   0.11.12    |</span><br><span class="line">|    17.3.1    |   14.19.0    |   0.12.13    |   0.11.11    |</span><br><span class="line">|    17.3.0    |   14.18.3    |   0.12.12    |   0.11.10    |</span><br><span class="line">|    17.2.0    |   14.18.2    |   0.12.11    |    0.11.9    |</span><br><span class="line">|    17.1.0    |   14.18.1    |   0.12.10    |    0.11.8    |</span><br><span class="line">|    17.0.1    |   14.18.0    |    0.12.9    |    0.11.7    |</span><br><span class="line">|    17.0.0    |   14.17.6    |    0.12.8    |    0.11.6    |</span><br><span class="line">|   16.12.0    |   14.17.5    |    0.12.7    |    0.11.5    |</span><br><span class="line">|   16.11.1    |   14.17.4    |    0.12.6    |    0.11.4    |</span><br><span class="line">|   16.11.0    |   14.17.3    |    0.12.5    |    0.11.3    |</span><br><span class="line">|   16.10.0    |   14.17.2    |    0.12.4    |    0.11.2    |</span><br><span class="line">|    16.9.1    |   14.17.1    |    0.12.3    |    0.11.1    |</span><br><span class="line">|    16.9.0    |   14.17.0    |    0.12.2    |    0.11.0    |</span><br><span class="line">|    16.8.0    |   14.16.1    |    0.12.1    |    0.9.12    |</span><br><span class="line">|    16.7.0    |   14.16.0    |    0.12.0    |    0.9.11    |</span><br><span class="line">|    16.6.2    |   14.15.5    |   0.10.48    |    0.9.10    |</span><br><span class="line"></span><br><span class="line">This is a partial list. For a complete list, visit https://nodejs.org/en/download/releases</span><br></pre></td></tr></table></figure><h3 id="安装指定版本的node"><a href="#安装指定版本的node" class="headerlink" title="安装指定版本的node"></a>安装指定版本的node</h3><p>这里我一开始安装的是一个比较新的版本17.7.0,后来发现还是会有冲突，我打开的前端项目也是无法使用npm的。</p><p><strong>安装命令：</strong></p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">nvm install 17.7.0</span><br></pre></td></tr></table></figure><p>这里可以配置下代理会下载快一点,可以在命令行输入，下面的代理端口根据自己本地的进行设置。</p><blockquote><p>set https_proxy=<a href="http://127.0.0.1:1082/">http://127.0.0.1:1082</a></p></blockquote><p><strong>查看已安装的版本</strong></p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">nvm ls</span><br></pre></td></tr></table></figure><h3 id="使用指定版本的node"><a href="#使用指定版本的node" class="headerlink" title="使用指定版本的node"></a>使用指定版本的node</h3><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">nvm use 13.14.0</span><br><span class="line"></span><br><span class="line">17.7.0</span><br><span class="line">    16.14.0</span><br><span class="line">  * 13.14.0 (Currently using 64-bit executable)</span><br></pre></td></tr></table></figure><h3 id="删除指定版本的node"><a href="#删除指定版本的node" class="headerlink" title="删除指定版本的node"></a>删除指定版本的node</h3><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">nvm uninstall 17.7.0</span><br></pre></td></tr></table></figure><h1 id="注意的问题"><a href="#注意的问题" class="headerlink" title="注意的问题"></a>注意的问题</h1><h2 id="环境变量"><a href="#环境变量" class="headerlink" title="环境变量"></a>环境变量</h2><p>在node安装完成时，环境变量会自动的添加，环境变量中会有如下两个变量</p><p><img src="https://cdn.jsdelivr.net/gh/zsxfa/CDN/img/md/2022/03/16/1647413609.png" alt="desc"></p><h2 id="前端项目使用npm报错"><a href="#前端项目使用npm报错" class="headerlink" title="前端项目使用npm报错"></a>前端项目使用npm报错</h2><blockquote><p>npm ERR! code 1 </p><p>npm ERR! path D:…\node-sass</p><p>npm ERR! command failed</p></blockquote><p>项目在运行npm install之后报了这样的错误</p><p>网上搜索到说是版本的问题，可能是node.js的版本和node-sass的版本不合</p><p><strong>解决方法</strong></p><p>更改自己的node.js的版本，下一个符合node-sass版本的node.js</p><p><strong>查看需要的node-sass的版本</strong></p><p>可以在<a href="https://www.npmjs.com/package/node-sass%E4%B8%8A%E6%9F%A5%E8%AF%A2">https://www.npmjs.com/package/node-sass上查询</a></p><p><img src="https://cdn.jsdelivr.net/gh/zsxfa/CDN/img/md/2022/03/16/1647413639.png" alt="desc"></p><p>到这里问题就发现了，我开始安装的node版本是17的版本，对应的node-sass的版本应该是7.0+</p><p>然后我去项目中的package.json文件中发现node-sass的版本是4.13.1</p><figure class="highlight json"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="attr">&quot;node-sass&quot;</span><span class="punctuation">:</span> <span class="string">&quot;4.13.1&quot;</span><span class="punctuation">,</span></span><br></pre></td></tr></table></figure><p>然后只需要去更换一下node的版本为13的就可以了</p>]]></content>
    
    
    <summary type="html">&lt;p&gt;早上打算写点东西的，但是用hexo创建文件失败了，继而发现npm命令用不了了，很奇怪的问题，可以使用node -v查看node的版本，但是npm用不了，然后就查了很多，最后把node删除重装了下，下面记录一下npde和npm的相关性和如何使用。&lt;/p&gt;</summary>
    
    
    
    <category term="Bug" scheme="http://zsxfa.cn/categories/Bug/"/>
    
    
    <category term="npm node" scheme="http://zsxfa.cn/tags/npm-node/"/>
    
  </entry>
  
  <entry>
    <title>行为经济学</title>
    <link href="http://zsxfa.cn/2022/03/16/%E8%A1%8C%E4%B8%BA%E7%BB%8F%E6%B5%8E%E5%AD%A6/"/>
    <id>http://zsxfa.cn/2022/03/16/%E8%A1%8C%E4%B8%BA%E7%BB%8F%E6%B5%8E%E5%AD%A6/</id>
    <published>2022-03-16T03:44:03.000Z</published>
    <updated>2022-03-18T02:48:11.125Z</updated>
    
    <content type="html"><![CDATA[<p>偶然看到了一门公开课，讲行为经济学的，正巧前两天听博客也有涉及到这方面的知识，所以就打算学习记录一下。</p><p>课程地址：<a href="https://www.bilibili.com/video/BV1Ha4y1i7zJ">https://www.bilibili.com/video/BV1Ha4y1i7zJ</a></p><span id="more"></span><h1 id="行为经济学简介"><a href="#行为经济学简介" class="headerlink" title="行为经济学简介"></a>行为经济学简介</h1><h2 id="是什么"><a href="#是什么" class="headerlink" title="是什么"></a>是什么</h2><p>行为经济学简单来讲是心理学和经济学的一个结合，它系统性的研究人们的经济决策行为如何偏离理性人的假设</p><p><img src="https://cdn.jsdelivr.net/gh/zsxfa/CDN/img/md/2022/03/16/1647418372.png" alt="desc"></p><p><strong>损失厌恶：</strong>买的一支股票忽然跌了，你明知道它可能会涨回来，但是就是忍不住割肉</p><p><strong>时间偏好：</strong>努力工作希望攒很多钱，但是一上网就忍不住剁手</p><p><strong>社会性偏好：</strong>亲人生病了，你会想去医院里给医生一个红包或者找到认识的医生才能放心地让他去给你的亲人做手术</p><p><strong>概率判断偏误：</strong>各种媒体宣传扶了老人就会被讹诈，所以所有的老人都不应该扶了？</p><p><img src="https://cdn.jsdelivr.net/gh/zsxfa/CDN/img/md/2022/03/16/1647418472.png" alt="desc"></p><h2 id="发展历史"><a href="#发展历史" class="headerlink" title="发展历史"></a>发展历史</h2><p><strong>亚当·斯密时代：</strong>&lt;国富论&gt;分析了人地自私自利行为和经济系统地发展，更早时他写的&lt;道德情操论&gt;分析了人们地非理性行为，所以在经济学发展的初期，经济学家们实际上并不认为人一定是完全理性地。</p><p><strong>新古典经济学时代：</strong>采取了理性人假设，把人的行为数学化，创造了一个非常伟大的科学研究的范式，造成了整个经济学的繁荣</p><p><strong>大数据时代：</strong>大数据时代对人的个体决策积累了很多的数据，需要一种范式去研究这些人的个体决策行为</p><p>罗伯特席勒教授预测到了08金融危机</p><p><img src="https://cdn.jsdelivr.net/gh/zsxfa/CDN/img/md/2022/03/16/1647419247.png" alt="desc"></p><h2 id="意义"><a href="#意义" class="headerlink" title="意义"></a>意义</h2><p><strong>对个人：</strong>因为我们每个人的决策实际上是一套自动的生物算法来执行的，而我们完全意识不到这套生物算法的存在，所以意识到你的决策机制，能够观察你的决策机制就有助于跳出你的决策机制，能够使你产生真正自由的理性的选择。</p><ul><li>而且在大数据时代，大量的算法和数据越来越多，它会比你更了解你自己，所以很可能会受到各种各样商家的政策影响，进而自己产生损失</li><li>所以先于算法了解到自己的决策机制，开启自我觉知的大门会是一件很有意义的事</li></ul><blockquote><p>意识到自己在经济决策中可能产生的行为偏误</p><p>意识到就是修正最重要的一步</p></blockquote><p><strong>对企业</strong>：很多企业都积累了丰富的个人决策数据，如何去使用这些数据是很多企业共同的问题</p><ul><li>传统方式会使用人口学背景，男性女性来划分人群，可是这个方法过于粗糙</li><li>行为经济学预测的人们的行为实际上是有跨情境的一致性的，比如说如果你是一个有自我控制问题的人，那么你不但会熬夜，过度消费，也有可能还不上贷款。所以企业可以从一个方面的行为，来根据心里决策一致性预测另一个方面的行为</li></ul><blockquote><p>在大数据时代为分析海量数据提供全面系统的理论指导</p><ul><li>从人的心里特征和决策机制出发，而不是从简单人口学背景出发</li><li>人的行为偏误有一贯性，可以用来预测其他方面的行为</li></ul></blockquote><p><strong>政府公共政策制定</strong>：</p><p>宏观政策分为两个流派</p><p><img src="https://cdn.jsdelivr.net/gh/zsxfa/CDN/img/md/2022/03/16/1647420140.png" alt="desc"></p><p><strong>新古典经济学流派：</strong>认为人是完全理性的，因此没有需要干预人的行为的政策空间</p><p><strong>凯恩斯学派：</strong>认为人的很多行为假设是根据他日常观测到的，可能不一定是完全理性的，因此有必要进行政策设计</p><ul><li><strong>举例</strong>：对于人的储蓄行为，<ul><li>新古典经济学认为人会很好的规划他一生的储蓄，在年轻的时候贷款，中年的时候消费并为未来养老储蓄，因此我们不需要干预养老的储蓄行为，人们也可以很好的安排</li><li>凯恩斯学派认为人们的储蓄是根据当期收入的一个百分比，因此当你退休以后，你的储蓄会急剧的降低，会造成你晚年的生活并没有很大的改善，那么就需要有人为制定养老储蓄的政策的空间</li></ul></li></ul><blockquote><p>好的行为政策设计具有成本可忽略而效果显著的特点</p></blockquote><h1 id="理性与非理性行为"><a href="#理性与非理性行为" class="headerlink" title="理性与非理性行为"></a>理性与非理性行为</h1><h2 id="什么是理性人假设"><a href="#什么是理性人假设" class="headerlink" title="什么是理性人假设"></a>什么是理性人假设</h2><p>首先可以思考一下什么是理性人？</p><p><img src="https://cdn.jsdelivr.net/gh/zsxfa/CDN/img/md/2022/03/16/1647421698.png" alt="desc"></p><p><strong>经济学所讨论的理性人定义比想象中的可能更广一些，认为人只要满足两个方面的行为模式就可以被称为理性人</strong></p><ul><li><img src="https://cdn.jsdelivr.net/gh/zsxfa/CDN/img/md/2022/03/16/1647421835.png" alt="desc"></li><li><img src="https://cdn.jsdelivr.net/gh/zsxfa/CDN/img/md/2022/03/16/1647421871.png" alt="desc"></li></ul><p>这两个性质合起来实际上说的就是<strong>人的决策必须是内在一致的(广义假设)</strong></p><h2 id="什么是非理性行为"><a href="#什么是非理性行为" class="headerlink" title="什么是非理性行为"></a>什么是非理性行为</h2><p>新古典经济学在实际建立人们的行为分析的时候采用了一些狭义的假设</p><p><img src="https://cdn.jsdelivr.net/gh/zsxfa/CDN/img/md/2022/03/16/1647422106.png" alt="desc"></p><h1 id="参照点和损失厌恶"><a href="#参照点和损失厌恶" class="headerlink" title="参照点和损失厌恶"></a>参照点和损失厌恶</h1><h2 id="损失厌恶"><a href="#损失厌恶" class="headerlink" title="损失厌恶"></a>损失厌恶</h2><p><img src="https://cdn.jsdelivr.net/gh/zsxfa/CDN/img/md/2022/03/16/1647422774.png" alt="desc"></p><p><img src="https://cdn.jsdelivr.net/gh/zsxfa/CDN/img/md/2022/03/16/1647422842.png" alt="desc"></p><p>人们的视觉是建立在一个对比的基础上产生的，人们对于事务的判断可能不仅仅是基于绝对值，而是建立在比较的基础上</p><p><strong>损失厌恶以及之后的心理机制不但影响了我们对任何的一个决策的效用感知，同时也对我们行为决策造成了很深的影响</strong></p><p><img src="https://cdn.jsdelivr.net/gh/zsxfa/CDN/img/md/2022/03/16/1647423251.png" alt="desc"></p><p><img src="https://cdn.jsdelivr.net/gh/zsxfa/CDN/img/md/2022/03/16/1647423373.png" alt="desc"></p><p><strong>1单位的得到所带来的快乐的程度是小于1单位的损失所带来的伤害的程度，在经济学中就成为损失厌恶</strong></p><h2 id="参照点"><a href="#参照点" class="headerlink" title="参照点"></a>参照点</h2><p><img src="https://cdn.jsdelivr.net/gh/zsxfa/CDN/img/md/2022/03/16/1647423649.png" alt="desc"></p><p>我现在月薪5000，可是由于某种原因，我期望升职或者涨薪到8000，实际上我只到达了7000，那么对于最初的状态5000来说就是2000的得到，但是对于预期来说，这时1000的失去</p><p><strong>所以参照点是什么会极大的影响你对事物的感知以及你的决策</strong></p><h3 id="损失厌恶的影响"><a href="#损失厌恶的影响" class="headerlink" title="损失厌恶的影响"></a>损失厌恶的影响</h3><h3 id="产生过度风险厌恶"><a href="#产生过度风险厌恶" class="headerlink" title="产生过度风险厌恶"></a>产生过度风险厌恶</h3><p><strong>股权溢价</strong>：股市回报和无风险资产回报，也可以认为是银行利率之间的差</p><p><img src="https://cdn.jsdelivr.net/gh/zsxfa/CDN/img/md/2022/03/16/1647424696.png" alt="desc"></p><h3 id="不愿意在有损失的时候交易"><a href="#不愿意在有损失的时候交易" class="headerlink" title="不愿意在有损失的时候交易"></a>不愿意在有损失的时候交易</h3><p>损失厌恶会导致人们不愿意在有损失的时候交易，从而导致决策失误和财富减少</p><h4 id="禀赋效应"><a href="#禀赋效应" class="headerlink" title="禀赋效应"></a>禀赋效应</h4><p>1990年有Kahneman,Knetsch,Thaler三位行为经济学家提出</p><p><strong>禀赋效应</strong>或<strong>厌恶剥夺</strong>(英语：Endowment effect)，形容当一个人拥有某项物品或资产的时候，他对该物品或资产的价值评估要大于没有拥有这项物品或资产的时候。【<a href="https://zh.wikipedia.org/wiki/%E7%A6%80%E8%B5%8B%E6%95%88%E5%BA%94">维基百科</a>】</p><h4 id="处置效应"><a href="#处置效应" class="headerlink" title="处置效应"></a>处置效应</h4><p><img src="https://cdn.jsdelivr.net/gh/zsxfa/CDN/img/md/2022/03/16/1647426077.png" alt="desc"></p><p><img src="https://cdn.jsdelivr.net/gh/zsxfa/CDN/img/md/2022/03/16/1647426169.png" alt="desc"></p><h3 id="产生设定目标的行为"><a href="#产生设定目标的行为" class="headerlink" title="产生设定目标的行为"></a>产生设定目标的行为</h3><p><img src="https://cdn.jsdelivr.net/gh/zsxfa/CDN/img/md/2022/03/16/1647426721.png" alt="desc"></p><p><strong>问题1：如果你津贴的每小时工资翻倍，你会工作更长时间还是更短时间</strong></p><p>新古典经济学认为工作时长取决于两个效应</p><ul><li>替代效应：也就是会工作更长的时间，因为你会用明天的低工资的闲暇来替代今天的高工资的闲暇</li><li>收入效应：也就是会工作更短的时间，因为工资上升伴随着财富上升，你会觉得我已经很富有了，为什么要工作那么长时间</li></ul><p>新古典经济学认为当小时工资临时性增长时，理性人的做法是工作更长的时间</p><h4 id="出租车司机劳动供给"><a href="#出租车司机劳动供给" class="headerlink" title="出租车司机劳动供给"></a>出租车司机劳动供给</h4><p>当天工资越高，出租车司机工作更短时间</p><p><img src="https://cdn.jsdelivr.net/gh/zsxfa/CDN/img/md/2022/03/16/1647427385.png" alt="desc"></p><p><strong>收入目标作为主的参照点</strong>：加入出租车司机每天给自己定一个800美元的收入目标，如果没有达到就会有损失厌恶的倾向，这个时候，如果当天的活特别多时，很快他就能达到800美元，他就直接回家了，但如果当天的活特别少的话，他就一直努力的工作，虽然他很累，但是如果没有达到800美元的目标，他就会有一个损失厌恶的倾向，所以他会一直努力工作到达到800美元，这样的话，他的工作时间和当天的工资就成为一个负向的关系，<strong>这种工作模式事实证明他们损失了很多的收入</strong>，因为他们选择在工资高的时候少工作，工资低的时候多工作，这就是一个非理性的行为</p><h4 id="工资机制设计与劳动供给"><a href="#工资机制设计与劳动供给" class="headerlink" title="工资机制设计与劳动供给"></a>工资机制设计与劳动供给</h4><p><img src="https://cdn.jsdelivr.net/gh/zsxfa/CDN/img/md/2022/03/16/1647427859.png" alt="desc"></p><p><img src="https://cdn.jsdelivr.net/gh/zsxfa/CDN/img/md/2022/03/16/1647427995.png" alt="desc"></p><h1 id="时间偏好"><a href="#时间偏好" class="headerlink" title="时间偏好"></a>时间偏好</h1><p><strong>涉及到今天和未来的决策称为跨期选择</strong></p><p>人对跨期选择有一个偏好，就是同样的消费，人们会认为未来的消费给自己带来的效用水平要低于现在的消费，所以如果要选择同一个苹果，你愿意今天吃还是明天吃，我会选今天，如果让明天吃苹果的话，你会说可不可以给我两个苹果</p><p>同样的，银行如果希望你今天把钱存到银行的话，那你就会说你明天能不能给我一定的利息，因为我会觉得明天的效用对于我来说没有今天那么高，这就是我们说的时间偏好</p><p><strong>利息本质上来源于人们更喜欢今天消费的时间偏好</strong></p><p><img src="https://cdn.jsdelivr.net/gh/zsxfa/CDN/img/md/2022/03/17/1647478676.png" alt="desc"></p><p><strong>问题一：</strong></p><blockquote><p>假设你今天有一份<strong>1000</strong>元的收入，你可以在<strong>今天</strong>和<strong>半年后</strong>分配这部分收入。你可以选择一部分钱在<strong>半年后</strong>拿到，而且这部分钱会有**2%**的红利。</p><p>请问你会选择多少钱在半年后拿到 ____________?</p></blockquote><p><strong>问题二：</strong></p><blockquote><p>假设你在<strong>半年后</strong>有一份<strong>1000</strong>元的收入，你可以在<strong>半年后</strong>和<strong>一年后</strong>分配这部分收入。即，你可以选择一部分钱在<strong>一年后</strong>拿到，而且这部分钱会有**2%**的红利。</p><p>请问你会选择多少钱在一年后拿到 ____________?</p></blockquote><p><img src="https://cdn.jsdelivr.net/gh/zsxfa/CDN/img/md/2022/03/17/1647479091.png" alt="desc"></p><p><strong>新古典经济学的指数折现模型假设人们的时间偏好是跨期一致的。</strong></p><ul><li>无论A从什么时候开始，只要AB距离的时间是相同的，选择就相同</li></ul><p><strong>行为经济学研究发现人们的时间偏好是跨期不一致的，即呈现当下享乐偏误</strong></p><ul><li>只要A涉及当下，人们就会显的格外没有耐心，在问题一中分配到的未来的钱要比问题二显著更少</li></ul><h2 id="时间偏好模型"><a href="#时间偏好模型" class="headerlink" title="时间偏好模型"></a>时间偏好模型</h2><p><strong>新古典经济学</strong>：指数折现模型(exponential discounting)(Samuelson 1937)</p><p><img src="https://cdn.jsdelivr.net/gh/zsxfa/CDN/img/md/2022/03/17/1647479846.png" alt="desc"></p><p><img src="https://cdn.jsdelivr.net/gh/zsxfa/CDN/img/md/2022/03/17/1647479947.png" alt="desc"></p><p><img src="https://cdn.jsdelivr.net/gh/zsxfa/CDN/img/md/2022/03/17/1647479980.png" alt="desc"></p><ul><li>无论什么时候做决策，只要这两个决策相隔的时间点是完全一样的，它的选择就不会有任何差别</li></ul><p><strong>行为经济学：</strong>拟双曲贴线模型(Quasi-hyperbolic discounting)(Laibson, 1997)</p><p><img src="https://cdn.jsdelivr.net/gh/zsxfa/CDN/img/md/2022/03/17/1647479820.png" alt="desc"></p><p>β是小于一的，它代表了今天之外所有的时间的消费对我来说都有一个更额外的折现，所以凸显了今天的重要地位</p><h2 id="当下享乐偏好"><a href="#当下享乐偏好" class="headerlink" title="当下享乐偏好"></a>当下享乐偏好</h2><ul><li>行为经济学研究发现，人在进行跨期决策时候会过度夸大当下的享乐，因此凡是涉及当下的跨期选择会变得更不耐心</li><li>当下享乐偏误导致人们非理性地过度消费、储蓄不足、拖沓、不能坚持自己的计划；如果自我意识到这个问题，会产生自我约束的需求。</li></ul><table><thead><tr><th></th><th align="center">新古典经济学假设(指数折现模型)</th><th>行为经济学假设(当下享乐偏好)</th></tr></thead><tbody><tr><td>储蓄消费决策</td><td align="center">适当消费、适当储蓄</td><td>过度消费、储蓄不足</td></tr><tr><td>计划与执行</td><td align="center">计划与执行一致</td><td>执行偏离计划(拖沓、后悔)</td></tr><tr><td>自我限制</td><td align="center">无自我限制需求</td><td>有自我限制需求(能意识到当下享乐偏误的人)</td></tr></tbody></table><h2 id="自我控制问题"><a href="#自我控制问题" class="headerlink" title="自我控制问题"></a>自我控制问题</h2><h3 id="非平滑消费"><a href="#非平滑消费" class="headerlink" title="非平滑消费"></a>非平滑消费</h3><p><strong>问题</strong></p><blockquote><p>假设你每月1号发工资，以下A，B两张图谁更准确描述了你在这个月内消费水平的动态变化？</p><p><img src="https://cdn.jsdelivr.net/gh/zsxfa/CDN/img/md/2022/03/17/1647480936.png" alt="desc"></p></blockquote><ul><li><p>新古典经济学认为，理性人的消费模式是A，我们称之为<strong>平滑消费</strong>。</p></li><li><p>当下享乐偏误</p><ul><li>首先会让你存不下钱，影响了未来资产增长或者是养老。</li><li>其次，它让你消费的总效用受到了损失</li><li>最后它可能让你产生健康问题</li></ul></li></ul><p><strong>这种时间偏好和消费递减倾向有很明显的关系：越耐性的人消费递减倾向越弱</strong></p><h3 id="计划和实施不一致在健康领域的应用"><a href="#计划和实施不一致在健康领域的应用" class="headerlink" title="计划和实施不一致在健康领域的应用"></a>计划和实施不一致在健康领域的应用</h3><p><img src="https://cdn.jsdelivr.net/gh/zsxfa/CDN/img/md/2022/03/17/1647481683.png" alt="desc"></p><p><strong>年票</strong></p><p><img src="https://cdn.jsdelivr.net/gh/zsxfa/CDN/img/md/2022/03/17/1647481771.png" alt="desc"></p><p><strong>月票</strong></p><p><img src="https://cdn.jsdelivr.net/gh/zsxfa/CDN/img/md/2022/03/17/1647481814.png" alt="desc"></p><h2 id="自我限制需求"><a href="#自我限制需求" class="headerlink" title="自我限制需求"></a>自我限制需求</h2><p><img src="https://cdn.jsdelivr.net/gh/zsxfa/CDN/img/md/2022/03/17/1647482154.png" alt="desc"></p><h3 id="如何解决当下享乐偏误？"><a href="#如何解决当下享乐偏误？" class="headerlink" title="如何解决当下享乐偏误？"></a>如何解决当下享乐偏误？</h3><p><strong>成熟的决策者的自我限制机制</strong></p><ul><li>内在机制<ul><li>有各种内在的心理机制可能产生于自我限制需求</li><li>诺奖得主Richard Thaler教授所提出的心理账户现象，也可能是一种自我控制机制</li></ul></li><li>外在机制<ul><li>手机app，记录步数等</li></ul></li></ul><p><strong>问题</strong></p><blockquote><p>假设上司要求你在两个月内完成两个项目。而你可以给自己的每个项目设置截止日期，并上报给上司作为硬性约束。请问你会选择下面哪种截止日期的设置方式？</p><p>A.两个截止日期都放在两个月后</p><p>B.一个截止日期放在一个月后，另一个放在两个月后</p></blockquote><p>MIT的商学院EMBA们—&gt;B  更为严格的自我限制</p><h3 id="储蓄不足与自我限制需求"><a href="#储蓄不足与自我限制需求" class="headerlink" title="储蓄不足与自我限制需求"></a>储蓄不足与自我限制需求</h3><p><img src="https://cdn.jsdelivr.net/gh/zsxfa/CDN/img/md/2022/03/17/1647482687.png" alt="desc"></p><p><img src="https://cdn.jsdelivr.net/gh/zsxfa/CDN/img/md/2022/03/17/1647482845.png" alt="desc"></p><p><img src="https://cdn.jsdelivr.net/gh/zsxfa/CDN/img/md/2022/03/17/1647482885.png" alt="desc"></p><p><img src="https://cdn.jsdelivr.net/gh/zsxfa/CDN/img/md/2022/03/17/1647482977.png" alt="desc"></p><h1 id="社会性偏好"><a href="#社会性偏好" class="headerlink" title="社会性偏好"></a>社会性偏好</h1><p>新古典经济学假设人是自私的，只在乎自己的利益</p><h2 id="利他与公平"><a href="#利他与公平" class="headerlink" title="利他与公平"></a>利他与公平</h2><p><strong>问题一</strong></p><blockquote><p>想象你与一位同学在网上随机配对成一个小组，你不知道他/她是谁，他/她也不知道你是谁。你会从教学小组获得100块钱</p><ul><li>请问你愿意分多少钱给这位同学？</li></ul></blockquote><p><img src="https://cdn.jsdelivr.net/gh/zsxfa/CDN/img/md/2022/03/17/1647483940.png" alt="desc"></p><p>这是行为经济学中著名的“<a href="https://zh.wikipedia.org/wiki/%E7%8D%A8%E8%A3%81%E8%80%85%E8%B3%BD%E5%B1%80">独裁者游戏</a>”(dictator game),一般认为是用来衡量人的<strong>利他主义</strong>程度</p><p><img src="https://cdn.jsdelivr.net/gh/zsxfa/CDN/img/md/2022/03/17/1647484239.png" alt="desc"></p><p><strong>问题二</strong></p><blockquote><p>想象你与一位同学在网上随机配对成一个小组，你不知道他/她是谁，他/她也不知道你是谁。你会从教学小组获得100块钱,你可以选择分N块给另一个同学。他/她可以选择接收或者不接收。如果接受，则按照你的决策来分配；如果不接受，则你们两个人都拿不到钱</p></blockquote><p>分配者：</p><ul><li>如果你是自私的人，会因为策略原因给一点</li><li>如果你有利他主义倾向，或者在乎比较公平的分配，会给更多。</li></ul><p><img src="https://cdn.jsdelivr.net/gh/zsxfa/CDN/img/md/2022/03/17/1647484651.png" alt="desc"></p><p>这是行为经济学中著名的“<a href="https://zh.wikipedia.org/wiki/%E6%9C%80%E5%BE%8C%E9%80%9A%E7%89%92%E8%B3%BD%E5%B1%80">最后通牒游戏</a>”(ultimatum game),一般认为是用来衡量人们对<strong>不公平的厌恶程度</strong>或者认为什么样的分配是公平的，即人为了追求公平愿意牺牲多少自己的利益</p><p><img src="https://cdn.jsdelivr.net/gh/zsxfa/CDN/img/md/2022/03/17/1647485061.png" alt="desc"></p><h3 id="不公平厌恶"><a href="#不公平厌恶" class="headerlink" title="不公平厌恶"></a>不公平厌恶</h3><p>“市场化”程度越高的社会，对不公平厌恶的程度越高</p><h3 id="现实的影响"><a href="#现实的影响" class="headerlink" title="现实的影响"></a>现实的影响</h3><p><strong>利他主义：</strong>对于公共政策的制定，比如税收，慈善捐款行业</p><p><strong>不公平厌恶：</strong>会影响企业的定价策略(价格粘性)、工资长期增长</p><h2 id="信任和互惠"><a href="#信任和互惠" class="headerlink" title="信任和互惠"></a>信任和互惠</h2><h3 id="信任"><a href="#信任" class="headerlink" title="信任"></a>信任</h3><p>假设你委托你的一个朋友去理财，因为他有更好的投资机会，</p><ul><li>如果没有信任，就需要很复杂的协议和法律支持</li><li>如果有信任，什么都不需要，降低了交易成本</li></ul><p>假设去医院看病</p><ul><li>信任医生，问题可以互相沟通和理解</li><li>不信任医生，因为纠纷或服务态度告医生</li></ul><p><strong>问题</strong></p><blockquote><p>想象你与一位同学在网上随机配对成一个小组，你不知道他/她是谁，他/她也不知道你是谁。你会从教学小组获得10块钱,你可以把其中的N块钱分给另外一位同学，他/她会得到3N的钱，然后可以选择从中还多少给你</p><p>请问你会给他/她多少钱？</p></blockquote><p><img src="https://cdn.jsdelivr.net/gh/zsxfa/CDN/img/md/2022/03/17/1647486813.png" alt="desc"></p><p>这是行为经济学中著名的“<a href="https://zh.wikipedia.org/wiki/%E7%8D%A8%E8%A3%81%E8%80%85%E8%B3%BD%E5%B1%80#%E4%BF%A1%E4%BB%BB%E6%B8%B8%E6%88%8F">信任游戏</a>”(trust game),一般认为是用来衡量人们信任他人的程度以及被信任的程度，而且由于选择涉及到真实的收益，因而更加准确</p><p><strong>信任与被信任：</strong>信任更多来自于追求回报的预期，而被信任程度则是这种预期的回报</p><p><img src="https://cdn.jsdelivr.net/gh/zsxfa/CDN/img/md/2022/03/17/1647487201.png" alt="desc"></p><h3 id="互惠"><a href="#互惠" class="headerlink" title="互惠"></a>互惠</h3><p>正向互惠：你帮助了我，我也会帮助你</p><p>负向互惠：你伤害了我，我也会伤害你</p><p><strong>应用</strong></p><ul><li><p>职场：高工资会有知遇之恩，会有内在的动机去好好工作</p><p><img src="https://cdn.jsdelivr.net/gh/zsxfa/CDN/img/md/2022/03/17/1647487613.png" alt="desc"></p><p><img src="https://cdn.jsdelivr.net/gh/zsxfa/CDN/img/md/2022/03/17/1647487663.png" alt="desc"></p></li><li><p>捐款</p><p><img src="https://cdn.jsdelivr.net/gh/zsxfa/CDN/img/md/2022/03/17/1647487970.png" alt="desc"></p></li></ul><h2 id="社会形象"><a href="#社会形象" class="headerlink" title="社会形象"></a>社会形象</h2><p>人很多时候表现出来的善意和互惠行为，更多是处于社会形象的考虑。</p><p><strong>社会形象：</strong>就是我希望在其他人心里留下好的印象</p><p><strong>问题</strong></p><blockquote><p>想象你与一位同学在网上随机配对成一个小组，你不知道他/她是谁，他/她也不知道你是谁。你会从教学小组获得100块钱,你可以把其中的N块钱分给另外一位同学</p><p>请问你会给他/她多少钱？</p><p>假设现在有50%的概率你给出的N块钱会损失掉，另外一位同学只会收到0.他/她也知道损失的概率，但是他/她不能区分到底是你原本就给0，还是钱损失掉了。</p><p>请问你会给他/她多少钱？</p><p><img src="https://cdn.jsdelivr.net/gh/zsxfa/CDN/img/md/2022/03/17/1647519173.png" alt="desc"></p></blockquote><p>我希望给对方留一个好印象，如果对方对我的印象很差的话，我会收到一个效用的损失，我关心这种所谓的社会形象</p><p><strong>自我形象</strong>：我不希望自己是一个很差的人</p><h3 id="社会形象与捐款"><a href="#社会形象与捐款" class="headerlink" title="社会形象与捐款"></a>社会形象与捐款</h3><blockquote><p>如果你走在路上，发现不远处有一个乞丐在乞讨，如果他在你的必经之路上，你会给她钱吗？</p><p>现在，如果有选择可以绕路，你是会直接走过去，还是会绕路走？</p><ul><li>不绕路：真实的利他倾向</li><li>绕路：考虑社会形象</li></ul></blockquote><p><img src="https://cdn.jsdelivr.net/gh/zsxfa/CDN/img/md/2022/03/17/1647519505.png" alt="desc"></p><p><img src="https://cdn.jsdelivr.net/gh/zsxfa/CDN/img/md/2022/03/17/1647519635.png" alt="desc"></p><p><img src="https://cdn.jsdelivr.net/gh/zsxfa/CDN/img/md/2022/03/17/1647519672.png" alt="desc"></p><p><img src="https://cdn.jsdelivr.net/gh/zsxfa/CDN/img/md/2022/03/17/1647519722.png" alt="desc"></p><p>捐款同时受到利他和社会压力的影响</p><ul><li>25%受到利他主义影响</li><li>75%受到社会压力影响</li></ul><p>社会压力</p><ul><li>对本州的慈善组织：3.75美元的社会压力</li><li>对外州的慈善组织：1.44美元的社会压力</li></ul><h1 id="概率判断偏误"><a href="#概率判断偏误" class="headerlink" title="概率判断偏误"></a>概率判断偏误</h1><p>你对一个事情的概率判断，其实是有唯一的真正的概率存在的</p><p><strong>概率判断：</strong>我们经常需要对某件事情发生的概率、或者某些事物的属性做判断</p><p><strong>例如：</strong>买房你会判断这个房子是会上涨还是下跌、社交媒体上的社会热点你会根据所有的信息去形成一个你对真相的判断，而这些事情反转再反转，那你对真相的判断是不是一直能够保持正确</p><h2 id="忽略先验概率"><a href="#忽略先验概率" class="headerlink" title="忽略先验概率"></a>忽略先验概率</h2><p><strong>问题</strong></p><blockquote><p>假设每一百个人中有一个人是坏人。有一个捐款测试可以检验人的好坏，并且这个实验的精度是99%，即如果一个人是坏人，这个测试在99%的情况下他不会捐款；如果一个人是好人，这个测试在99%的情况下他会捐款</p><p>假设李雷的捐款测试表明他不会捐款，你觉得他是坏人的概率有多少？</p></blockquote><h3 id="概率判断"><a href="#概率判断" class="headerlink" title="概率判断"></a>概率判断</h3><p>形成概率判断的几个要素：</p><ul><li>先验概率：99%都是好人</li><li>信号：李雷没有捐款</li><li>后验概率：李雷是坏人的概率？</li></ul><h3 id="概率判断偏误：忽略先验概率"><a href="#概率判断偏误：忽略先验概率" class="headerlink" title="概率判断偏误：忽略先验概率"></a>概率判断偏误：忽略先验概率</h3><ul><li>大部分人会认为李雷是坏人的后验概率是99%</li><li>大部分人的概率判断中忘记了先验概率：99%的人都是好人。</li><li>贝叶斯法则认为李雷是坏人的后验概率是50%</li></ul><p><strong>媒体的操纵进一步扭曲了你接受到的信号，让它没有代表性</strong></p><h2 id="小数定理"><a href="#小数定理" class="headerlink" title="小数定理"></a>小数定理</h2><p>统计学上有大数定理：样本均值在观测值足够多的时候趋向原变量的期望值</p><p><img src="https://cdn.jsdelivr.net/gh/zsxfa/CDN/img/md/2022/03/18/1647564707.png" alt="desc"></p><p>也就是说假如我认为人群中大家平均身高是1米7，那么这个时候我看到100个人200个人300个人随着我看的人越来越多，这个平均值会慢慢地去接近于1米7，这就是统计学上说的大数定理</p><p><strong>为什么叫小数定理偏误？</strong></p><p>是因为在现实生活中很多人决策地时候错误的以为只要在一个小样本中也必须服从大数定理，也就是小样本中的样本均值也必须是期望值</p><p><strong>例子：</strong></p><blockquote><p>随机扔一个六面骰子，计算平均点数，期望值是3.5</p><p><img src="https://cdn.jsdelivr.net/gh/zsxfa/CDN/img/md/2022/03/18/1647564994.png" alt="desc"></p></blockquote><h3 id="赌徒谬误"><a href="#赌徒谬误" class="headerlink" title="赌徒谬误"></a>赌徒谬误</h3><p><strong>例子：</strong></p><blockquote><p>一个家庭生了五个孩子，您觉得下面什么样地性别顺序更可能出现？</p><ul><li><p>女男女男女</p></li><li><p>女女女女女</p></li></ul></blockquote><p><strong>例子：</strong></p><blockquote><p>赌局：扔硬币，正面赢，反面输</p><p>一个赌徒在连续输了三把之后，坚信下一把一定会赢。因此继续赌博。因为他相信平均来说输赢应该是一半一半。</p><p>他忽略了这样的大数定理结论只有在大样本情况下才适用(掷骰子要求400次以上)</p></blockquote><h3 id="热手谬误"><a href="#热手谬误" class="headerlink" title="热手谬误"></a>热手谬误</h3><p><strong>例子：</strong></p><blockquote><p>一个赌徒在连续赢了五把之后，他相信今天又幸运之神的眷顾，他有一双“热手”。因而继续赌博</p><p>因为他觉得正常情况下(大数定理)不可能连续出现五把赢面，所以反推今天自己运气特别好。即，自己出现赢面地先验概率大于50%</p></blockquote><h3 id="解释"><a href="#解释" class="headerlink" title="解释"></a>解释</h3><ul><li><p>短期：赌徒谬误。相信回报会回归到平均值。</p><p>卖回报好地股票，买回报差地股票。回报好地股票价格变低、回报率上升。-&gt;回报率呈现正相关</p></li><li><p>长期：热手谬误。相信连续产生高回报地股票确实与众不同</p><p>买回报好的股票，卖回报差地股票。-&gt; 回报好的股票价格变高、回报率下降。-&gt;回报率呈现负相关</p></li></ul><h1 id="过度自信"><a href="#过度自信" class="headerlink" title="过度自信"></a>过度自信</h1><p><strong>问题：</strong></p><blockquote><p>你觉得自己的驾驶技术在全国来说在什么水平上？</p><p>美国的实验室研究表</p><ul><li>93%的人认为自己比平均水平高</li><li>理性的结果是50%的人说自己比平均水平高</li><li>46%的人认为自己可以排到前20%</li></ul></blockquote><h3 id="过度自信-1"><a href="#过度自信-1" class="headerlink" title="过度自信"></a>过度自信</h3><ul><li>过高的估计了自己的绝对成绩</li><li>过度估计自己的成绩在和他人相比中的排序</li><li>过度估计自己结论的准确性</li></ul><p><strong>过度自信可能对现实生活产生什么影响?</strong></p><p>影响人们创业的决策(例如各种自行车)</p><p><img src="https://cdn.jsdelivr.net/gh/zsxfa/CDN/img/md/2022/03/18/1647568037.png" alt="desc"></p><p><img src="https://cdn.jsdelivr.net/gh/zsxfa/CDN/img/md/2022/03/18/1647568274.png" alt="desc"></p><p><img src="https://cdn.jsdelivr.net/gh/zsxfa/CDN/img/md/2022/03/18/1647568325.png" alt="desc"></p><h1 id="投射偏误"><a href="#投射偏误" class="headerlink" title="投射偏误"></a>投射偏误</h1><p>人往往高估了未来的效用和当下效用的相似度</p><p><strong>举例：</strong></p><blockquote><p>人们去问一个健康的人群说如果你得了慢性病，你的幸福程度是多少？</p><p>选择是0-1</p><ul><li>健康人给出的值是0.39</li><li>得了慢性病的人是0.56</li></ul></blockquote><p><img src="https://cdn.jsdelivr.net/gh/zsxfa/CDN/img/md/2022/03/18/1647568835.png" alt="desc"></p><p><strong>问题：</strong></p><blockquote><p>你这什么样的天气更愿意呆在屋子里学习？</p><p>A.阳光明媚</p><p>B.乌云密布</p></blockquote><p><img src="https://cdn.jsdelivr.net/gh/zsxfa/CDN/img/md/2022/03/18/1647569108.png" alt="desc"></p><p>如果是乌云密布的一天：学生会因为更看重学术优势而申请</p><p>如果是阳光明媚的一天：学生会因为学校更突出户外活动的劣势而不申请</p><p><img src="https://cdn.jsdelivr.net/gh/zsxfa/CDN/img/md/2022/03/18/1647569419.png" alt="desc"></p><p><strong>问题：</strong></p><blockquote><p>季节和天气会影响你购买什么车型吗？</p><p><img src="https://cdn.jsdelivr.net/gh/zsxfa/CDN/img/md/2022/03/18/1647569616.png" alt="desc"></p><p><img src="https://cdn.jsdelivr.net/gh/zsxfa/CDN/img/md/2022/03/18/1647569661.png" alt="desc"></p><p><img src="https://cdn.jsdelivr.net/gh/zsxfa/CDN/img/md/2022/03/18/1647569731.png" alt="desc"></p></blockquote><p><strong>问题：</strong></p><blockquote><p>天气冷的时候是否更容易冲动购买防寒用品？</p><p>研究发现：</p><ul><li>气温每上升30华氏度，购买的防寒用品被退货的比例会上升3.95%</li></ul></blockquote><p>研究表明：</p><ul><li>中国人在雾霾天更容易购买医疗保险<ul><li>当天的空气污染增加一个标准差，医疗保险的购买增加7.2%</li></ul></li><li>退保的概率也和天气相关<ul><li>在免费退保期内，如果空气污染程度降低一个标准差，退保概率会增加4%</li></ul></li></ul><h1 id="基于行为经济学的政策设计"><a href="#基于行为经济学的政策设计" class="headerlink" title="基于行为经济学的政策设计"></a>基于行为经济学的政策设计</h1><h2 id="商业政策"><a href="#商业政策" class="headerlink" title="商业政策"></a>商业政策</h2><p>传统经济学认为，即便个体有决策偏误，市场会纠正甚至消除这种偏误。</p><ul><li>经验会降低偏误，因而市场竞争会逐步使人变得更加理性</li><li>非理性的人无法在市场中存活下去</li></ul><p><strong>实际上市场如何应对消费者的决策偏误？</strong></p><ul><li>人能够通过学习降低自己的行为偏误变得更加的理性</li><li>每个人每次的损失可能是有限的，这不会使我们达到倾家荡产</li><li>投资理性投资者用来偏离或者纠正这个非理性投资者的这种行为的工具是有限的</li></ul><p><strong>市场如何应对消费者的决策偏误？</strong></p><p>很多企业都在利用消费者的决策偏误来赚钱的</p><p>例如：超市中的一些东西卖3.99，默认选项上默认打勾同时字体很小</p><p><img src="https://cdn.jsdelivr.net/gh/zsxfa/CDN/img/md/2022/03/18/1647571280.png" alt="desc"></p><p><img src="https://cdn.jsdelivr.net/gh/zsxfa/CDN/img/md/2022/03/18/1647571331.png" alt="desc"></p><h2 id="公共政策建议"><a href="#公共政策建议" class="headerlink" title="公共政策建议"></a>公共政策建议</h2><p>传统的政策大多基于理性人假设</p><ul><li>一般认为没有政策干预的必要</li><li>即便干预，也需要支付很大的成本才能改变人们的行为</li></ul><p>行为经济学的政策认为人可能有非理性行为</p><ul><li>某些情况下有干预的必要</li><li>不需要支付很大成本就能通过机制设计改变人们的行为</li></ul><p><img src="https://cdn.jsdelivr.net/gh/zsxfa/CDN/img/md/2022/03/18/1647571596.png" alt="desc"></p><p><img src="https://cdn.jsdelivr.net/gh/zsxfa/CDN/img/md/2022/03/18/1647571688.png" alt="desc"></p>]]></content>
    
    
    <summary type="html">&lt;p&gt;偶然看到了一门公开课，讲行为经济学的，正巧前两天听博客也有涉及到这方面的知识，所以就打算学习记录一下。&lt;/p&gt;
&lt;p&gt;课程地址：&lt;a href=&quot;https://www.bilibili.com/video/BV1Ha4y1i7zJ&quot;&gt;https://www.bilibili.com/video/BV1Ha4y1i7zJ&lt;/a&gt;&lt;/p&gt;</summary>
    
    
    
    <category term="经济学" scheme="http://zsxfa.cn/categories/%E7%BB%8F%E6%B5%8E%E5%AD%A6/"/>
    
    
  </entry>
  
  <entry>
    <title>google搜索技巧</title>
    <link href="http://zsxfa.cn/2022/03/12/google%E6%90%9C%E7%B4%A2%E6%8A%80%E5%B7%A7/"/>
    <id>http://zsxfa.cn/2022/03/12/google%E6%90%9C%E7%B4%A2%E6%8A%80%E5%B7%A7/</id>
    <published>2022-03-12T01:08:30.000Z</published>
    <updated>2022-03-12T01:58:23.391Z</updated>
    
    <content type="html"><![CDATA[<p>因为最近到处都是推荐<a href="https://rutracker.org/forum/index.php">rutracker</a>这个网站的,所以我也就好奇去看了下，上面资源确实挺多的，不过发现搜索功能是需要进行注册的，但是注册的时候也提示了不能注册了，所以也就错过了注册的时间，不过还是想在网站中进行一些资源的搜索，这个时候就可以用到一些搜索的技巧了。</p><span id="more"></span><p>谷歌的官方指南可以在下面两个链接找到。本文只选取几个最常用的技巧举例进行介绍。</p><p><a href="https://support.google.com/websearch/answer/134479?hl=zh-Hans">如何在 Google 中进行搜索</a></p><p><a href="https://support.google.com/websearch/answer/2466433">优化网页搜索结果</a></p><p>原文: <a href="https://zhuanlan.zhihu.com/p/66379388">几个常用的 Google 搜索技巧</a></p><h2 id="1-搜索指定的文本"><a href="#1-搜索指定的文本" class="headerlink" title="1. 搜索指定的文本"></a>1. 搜索指定的文本</h2><p>有时候，因为下列原因，搜索引擎会呈现给你并不完全符合你输入内容的结果：</p><ul><li>输入的文本包含空格，会被搜索引擎认为是断词，从而使<strong>搜索结果只是部分包含这些单词</strong>，而且顺序并不重要</li><li>对于中文输入，<strong>搜索引擎会尝试自动断词</strong>，然后产生了类似上一条的效果</li><li><strong>搜索引擎认为你输入的内容存在错字或不规范</strong>，因为适当修改其中某（几）个字或语序后，会变成另一个带给你明显更多热门结果的关键词</li></ul><p>如果你不希望搜索引擎呈现给你这样的结果，而是完全符合你输入的文字，那么可以用<strong>半角双引号</strong>括住相应的文字。</p><p>比如，想要搜索 <em>story of a toy</em>（玩具的故事），但是直接搜索并不会给你带来完全符合这一格式的结果（可能单词顺序等不同），如下：</p><p><img src="https://cdn.jsdelivr.net/gh/zsxfa/CDN/img/md/2022/03/12/1647048176.png" alt="desc"></p><p>因为 <em>Toy Story</em> 是著名电影《玩具总动员》的名称，谷歌认为你有更大的可能是想搜索这个（但并不是）。这时候，搜索打了双引号的同样的内容，就会呈现给你更好的结果：</p><p><img src="https://cdn.jsdelivr.net/gh/zsxfa/CDN/img/md/2022/03/12/1647048260.png" alt="desc"></p><p><strong>中文的双引号是不起作用的</strong></p><p>另外，谷歌搜索不区分大小写。因此<strong>没有任何直接的方法实现区分大小写的搜索</strong>，只有一些间接的方法（基本上都是针对搜索结果进行筛选），比如<a href="https://www.labnol.org/internet/search/case-sensitive-google-search/6279/">这篇文章</a>提到的方法。</p><h2 id="2-限制只在标题中搜索"><a href="#2-限制只在标题中搜索" class="headerlink" title="2. 限制只在标题中搜索"></a>2. 限制只在标题中搜索</h2><p>如果你希望搜索结果只有标题包含关键字（而非整个网页任意一处包含这个关键词，因为有可能正文只是碰巧出现了这个词，甚至可能只是在广告里，但是整个网页和你要搜索的内容并没有什么关系），那么可以这样借助 <strong>intitle:</strong> 或者 <strong>allintitle:</strong> 这个标记。这两个的区别是，前者只有紧跟在冒号后的第一个关键词会被要求出现在标题中，而后者是冒号后所有关键词都必须出现在标题中。</p><p>比如想要搜索标题包含 <em>microsoft surface macbook</em> 的网页，可以搜索：</p><figure class="highlight text"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">allintitle:microsoft surface macbook</span><br></pre></td></tr></table></figure><p><img src="https://cdn.jsdelivr.net/gh/zsxfa/CDN/img/md/2022/03/12/1647048768.png" alt="desc"></p><h2 id="3-不包含关键词"><a href="#3-不包含关键词" class="headerlink" title="3. 不包含关键词"></a>3. 不包含关键词</h2><p>如果你不希望搜索结果中包含某些关键词，可以在这些关键词前面加一个减号“-”，表示排除。比如，你想搜索“大碗粗面”，但是不希望搜索到与“吴亦凡”相关的内容，可以搜索：</p><figure class="highlight text"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">大碗粗面 -吴亦凡</span><br></pre></td></tr></table></figure><p><img src="https://cdn.jsdelivr.net/gh/zsxfa/CDN/img/md/2022/03/12/1647048869.png" alt="desc"></p><h2 id="4-模糊搜索"><a href="#4-模糊搜索" class="headerlink" title="4. 模糊搜索"></a>4. 模糊搜索</h2><p>如果想要搜索的内容中有个别字符记不清楚，可以用星号“*”代替。</p><p>比如你听到了一首英文歌，但是只听清了里面的几个词，这时候就可以用星号来代替那些没有听清楚的词：</p><p><img src="https://cdn.jsdelivr.net/gh/zsxfa/CDN/img/md/2022/03/12/1647049045.png" alt="desc"></p><h2 id="5-在指定网页中搜索内容"><a href="#5-在指定网页中搜索内容" class="headerlink" title="5. 在指定网页中搜索内容"></a>5. 在指定网页中搜索内容</h2><p>如果已知你希望看到的结果会出现在网址符合某种规律的网页中，那么就可以借助 site: 这个特殊标记来限定搜索范围。</p><p>比如，我们搜索rutracker中的游戏，call of duty，只需要输入</p><figure class="highlight text"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">call of duty site:rutracker.org</span><br></pre></td></tr></table></figure><p><img src="https://cdn.jsdelivr.net/gh/zsxfa/CDN/img/md/2022/03/12/1647049183.png" alt="desc"></p><p>就能找到网站中包含关键词的内容了</p><p>另外，如果想要在指定的社交网站搜索，可以使用“@”符号。</p><p><img src="https://cdn.jsdelivr.net/gh/zsxfa/CDN/img/md/2022/03/12/1647049371.png" alt="desc"></p><blockquote><p>百度也有相同的功能，但并不是 site:，而是 inurl:<br>百度也可以使用 @ 符号</p></blockquote><h2 id="6-搜索指定文件类型的结果"><a href="#6-搜索指定文件类型的结果" class="headerlink" title="6. 搜索指定文件类型的结果"></a>6. 搜索指定文件类型的结果</h2><p>比如，搜索Hadoop的PDF，可以这样：</p><p><img src="https://cdn.jsdelivr.net/gh/zsxfa/CDN/img/md/2022/03/12/1647049534.png" alt="desc"></p><p>在<a href="https://support.google.com/webmasters/answer/35287?hl=zh-Hans">这里</a>可以查看谷歌支持的所有文件格式（不过常用的也基本只有 pdf, ppt, doc 之类的了）。</p><p>想用这种方式搜索图片？请直接使用<a href="https://www.google.com.hk/imghp?hl=zh-CN&tab=wi">谷歌图片搜索</a>。</p>]]></content>
    
    
    <summary type="html">&lt;p&gt;因为最近到处都是推荐&lt;a href=&quot;https://rutracker.org/forum/index.php&quot;&gt;rutracker&lt;/a&gt;这个网站的,所以我也就好奇去看了下，上面资源确实挺多的，不过发现搜索功能是需要进行注册的，但是注册的时候也提示了不能注册了，所以也就错过了注册的时间，不过还是想在网站中进行一些资源的搜索，这个时候就可以用到一些搜索的技巧了。&lt;/p&gt;</summary>
    
    
    
    <category term="interesting" scheme="http://zsxfa.cn/categories/interesting/"/>
    
    
    <category term="浏览器 技巧" scheme="http://zsxfa.cn/tags/%E6%B5%8F%E8%A7%88%E5%99%A8-%E6%8A%80%E5%B7%A7/"/>
    
  </entry>
  
  <entry>
    <title>Hexo访问优化</title>
    <link href="http://zsxfa.cn/2022/02/23/Hexo%E8%AE%BF%E9%97%AE%E4%BC%98%E5%8C%96/"/>
    <id>http://zsxfa.cn/2022/02/23/Hexo%E8%AE%BF%E9%97%AE%E4%BC%98%E5%8C%96/</id>
    <published>2022-02-23T08:12:56.000Z</published>
    <updated>2022-02-23T09:40:21.802Z</updated>
    
    <content type="html"><![CDATA[<h1 id="概述"><a href="#概述" class="headerlink" title="概述"></a>概述</h1><p>这两天给博客添加了很多功能，各种动画效果都用上了， 但是发现访问速度却很慢┭┮﹏┭┮…<span id="more"></span>特别是手机访问，所以就搜索了一下提高访问速度的方式，发现了<a href="https://pagespeed.web.dev/">这个</a>网站,这时一个很好的网页性能分析工具，可以根据它的分析结果针对性的对网页进行优化。</p><p>下面是我一开始测试的结果：</p><p><img src="https://cdn.jsdelivr.net/gh/zsxfa/CDN/img/md/2022/02/23/1645604282.png" alt="desc"></p><p>可以看到此时我的网站在Mobile上访问的性能很差，只获得了27分，优化前可以看到<code>Eliminate render-blocking resources</code>，即有一些加载很慢的资源阻碍了网站的渲染。</p><h1 id="具体步骤"><a href="#具体步骤" class="headerlink" title="具体步骤"></a>具体步骤</h1><h2 id="关闭动态效果"><a href="#关闭动态效果" class="headerlink" title="关闭动态效果"></a>关闭动态效果</h2><p>可以减少动画在Mobile上的优化效果来提升速度。</p><p>打开Next的主题配置文件，找到<code>motion</code></p><figure class="highlight yaml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># Use velocity to animate everything.</span></span><br><span class="line"><span class="comment"># For more information: http://velocityjs.org</span></span><br><span class="line"><span class="attr">motion:</span></span><br><span class="line">  <span class="attr">enable:</span> <span class="literal">false</span></span><br><span class="line">  <span class="attr">async:</span> <span class="literal">false</span></span><br></pre></td></tr></table></figure><p>将<code>enable</code>改为false</p><p>再来看看效果</p><p><img src="https://cdn.jsdelivr.net/gh/zsxfa/CDN/img/md/2022/02/23/1645605071.png" alt="desc"></p><p>可以看到，现在就有了51的分了</p><h2 id="去掉页脚的icon动态效果"><a href="#去掉页脚的icon动态效果" class="headerlink" title="去掉页脚的icon动态效果"></a>去掉页脚的icon动态效果</h2><p>打开Next的主题配置文件，找到<code>footer</code></p><figure class="highlight yaml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line"><span class="attr">footer:</span></span><br><span class="line">  <span class="comment"># Specify the date when the site was setup. If not defined, current year will be used.</span></span><br><span class="line">  <span class="comment">#since: 2015</span></span><br><span class="line"></span><br><span class="line">  <span class="comment"># Icon between year and copyright info.</span></span><br><span class="line">  <span class="attr">icon:</span></span><br><span class="line">    <span class="comment"># Icon name in Font Awesome. See: https://fontawesome.com/icons</span></span><br><span class="line">    <span class="attr">name:</span> <span class="string">fa</span> <span class="string">fa-heart</span></span><br><span class="line">    <span class="comment"># If you want to animate the icon, set it to true.</span></span><br><span class="line">    <span class="attr">animated:</span> <span class="literal">false</span></span><br><span class="line">    <span class="comment"># Change the color of icon, using Hex Code.</span></span><br><span class="line">    <span class="attr">color:</span> <span class="string">&quot;#ff0000&quot;</span></span><br></pre></td></tr></table></figure><h2 id="实现博客压缩"><a href="#实现博客压缩" class="headerlink" title="实现博客压缩"></a>实现博客压缩</h2><p>项目压缩就是对html、css、js、images进行优化，即把重复的代码合并，把多余的空格去掉，用算法把 images 进行压缩。压缩后的博客，加载速度会有较大的提升</p><p>我们首先需要全局安装 <code>gulp-cli</code>，然后在博客工作目录下安装需要的插件：</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">npm install --global gulp-cli</span><br><span class="line">npm install gulp gulp-clean-css gulp-uglify-es gulp-html-minifier-terser</span><br></pre></td></tr></table></figure><p>安装完成后在博客工作目录下新建文件 <code>gulpfile.js</code> ，写入如下 gulp 任务配置代码</p><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">const</span> gulp = <span class="built_in">require</span>(<span class="string">&#x27;gulp&#x27;</span>);</span><br><span class="line"><span class="keyword">const</span> cleancss = <span class="built_in">require</span>(<span class="string">&#x27;gulp-clean-css&#x27;</span>);</span><br><span class="line"><span class="keyword">const</span> uglify = <span class="built_in">require</span>(<span class="string">&#x27;gulp-uglify-es&#x27;</span>).<span class="property">default</span>;</span><br><span class="line"><span class="keyword">const</span> htmlmin = <span class="built_in">require</span>(<span class="string">&#x27;gulp-html-minifier-terser&#x27;</span>);</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="comment">// 压缩public目录下的css文件</span></span><br><span class="line"><span class="comment">// 可接受参数的文档：https://github.com/jakubpawlowicz/clean-css#constructor-options</span></span><br><span class="line">gulp.<span class="title function_">task</span>(<span class="string">&#x27;minify-css&#x27;</span>, <span class="function">() =&gt;</span> &#123;</span><br><span class="line">    <span class="keyword">return</span> gulp.<span class="title function_">src</span>(<span class="string">&#x27;./public/**/*.css&#x27;</span>)           <span class="comment">// 处理public目录下所有的css文件，下同</span></span><br><span class="line">        .<span class="title function_">pipe</span>(<span class="title function_">cleancss</span>(&#123; <span class="attr">compatibility</span>: <span class="string">&#x27;ie8&#x27;</span> &#125;))  <span class="comment">// 兼容到IE8</span></span><br><span class="line">        .<span class="title function_">pipe</span>(gulp.<span class="title function_">dest</span>(<span class="string">&#x27;./public&#x27;</span>));</span><br><span class="line">&#125;);</span><br><span class="line"></span><br><span class="line"><span class="comment">// 压缩public目录下的js文件</span></span><br><span class="line">gulp.<span class="title function_">task</span>(<span class="string">&#x27;minify-js&#x27;</span>, <span class="function">() =&gt;</span> &#123;</span><br><span class="line">    <span class="keyword">return</span> gulp.<span class="title function_">src</span>(<span class="string">&#x27;./public/**/*.js&#x27;</span>)</span><br><span class="line">        .<span class="title function_">pipe</span>(<span class="title function_">uglify</span>())</span><br><span class="line">        .<span class="title function_">pipe</span>(gulp.<span class="title function_">dest</span>(<span class="string">&#x27;./public&#x27;</span>));</span><br><span class="line">&#125;);</span><br><span class="line"></span><br><span class="line"><span class="comment">// 压缩public目录下的html文件</span></span><br><span class="line"><span class="comment">// 可接受参数的文档：https://github.com/terser/html-minifier-terser#options-quick-reference</span></span><br><span class="line">gulp.<span class="title function_">task</span>(<span class="string">&#x27;minify-html&#x27;</span>, <span class="function">() =&gt;</span> &#123;</span><br><span class="line">    <span class="keyword">return</span> gulp.<span class="title function_">src</span>(<span class="string">&#x27;./public/**/*.html&#x27;</span>)</span><br><span class="line">        .<span class="title function_">pipe</span>(<span class="title function_">htmlmin</span>(&#123;</span><br><span class="line">            <span class="attr">removeComments</span>: <span class="literal">true</span>,                 <span class="comment">// 移除注释</span></span><br><span class="line">            <span class="attr">removeEmptyAttributes</span>: <span class="literal">true</span>,          <span class="comment">// 移除值为空的参数</span></span><br><span class="line">            <span class="attr">removeRedundantAttributes</span>: <span class="literal">true</span>,      <span class="comment">// 移除值跟默认值匹配的属性</span></span><br><span class="line">            <span class="attr">collapseBooleanAttributes</span>: <span class="literal">true</span>,      <span class="comment">// 省略布尔属性的值</span></span><br><span class="line">            <span class="attr">collapseWhitespace</span>: <span class="literal">true</span>,             <span class="comment">// 移除空格和空行</span></span><br><span class="line">            <span class="attr">minifyCSS</span>: <span class="literal">true</span>,                      <span class="comment">// 压缩HTML中的CSS</span></span><br><span class="line">            <span class="attr">minifyJS</span>: <span class="literal">true</span>,                       <span class="comment">// 压缩HTML中的JS</span></span><br><span class="line">            <span class="attr">minifyURLs</span>: <span class="literal">true</span>                      <span class="comment">// 压缩HTML中的链接</span></span><br><span class="line">        &#125;))</span><br><span class="line">        .<span class="title function_">pipe</span>(gulp.<span class="title function_">dest</span>(<span class="string">&#x27;./public&#x27;</span>))</span><br><span class="line">&#125;);</span><br><span class="line"></span><br><span class="line"><span class="comment">// 默认任务，不带任务名运行gulp时执行的任务</span></span><br><span class="line">gulp.<span class="title function_">task</span>(<span class="string">&#x27;default&#x27;</span>, gulp.<span class="title function_">parallel</span>(</span><br><span class="line">    <span class="string">&#x27;minify-css&#x27;</span>, <span class="string">&#x27;minify-js&#x27;</span>, <span class="string">&#x27;minify-html&#x27;</span></span><br><span class="line">));</span><br></pre></td></tr></table></figure><p>之后先hexo g生成，然后再执行<code>glup</code>就可以对public 目录下的文件进行压缩优化处理了。</p>]]></content>
    
    
    <summary type="html">&lt;h1 id=&quot;概述&quot;&gt;&lt;a href=&quot;#概述&quot; class=&quot;headerlink&quot; title=&quot;概述&quot;&gt;&lt;/a&gt;概述&lt;/h1&gt;&lt;p&gt;这两天给博客添加了很多功能，各种动画效果都用上了， 但是发现访问速度却很慢┭┮﹏┭┮…</summary>
    
    
    
    <category term="建站小记" scheme="http://zsxfa.cn/categories/%E5%BB%BA%E7%AB%99%E5%B0%8F%E8%AE%B0/"/>
    
    
    <category term="Hexo 优化" scheme="http://zsxfa.cn/tags/Hexo-%E4%BC%98%E5%8C%96/"/>
    
  </entry>
  
  <entry>
    <title>使用btsync</title>
    <link href="http://zsxfa.cn/2022/02/16/%E4%BD%BF%E7%94%A8btsync/"/>
    <id>http://zsxfa.cn/2022/02/16/%E4%BD%BF%E7%94%A8btsync/</id>
    <published>2022-02-16T10:22:44.000Z</published>
    <updated>2022-02-21T12:19:07.870Z</updated>
    
    <content type="html"><![CDATA[<h1 id="简介"><a href="#简介" class="headerlink" title="简介"></a>简介</h1><p>BT Sync，跟 BT 下载一样，都是 <a href="https://en.wikipedia.org/wiki/BitTorrent_(company)">BitTorrent 公司</a>发明的，都是采用 P2P 协议来进行传输。</p><span id="more"></span><p>btsync 是分布式网盘 在这高速运作的信息化时代，使用云端来衔接工作和生活已经很常见了，但是各大网盘可能并没有那么安全，毫不夸张的说，其实恶意代码和漏洞早已和你如影随形。你甚至都不用反驳说这是阴谋论，不信你去看看各网盘的「用户条款」和「隐私政策」。</p><p>BTSync一个可以放在本地的网盘</p><h1 id="优点"><a href="#优点" class="headerlink" title="优点"></a>优点</h1><p>btsync 把自己的电脑作为网盘，不限空间流量，适合局域网同步。</p><ol><li>不需要有自己的服务器</li><li>不需要有公网 IP——如果两台设备都在【内网】，只要这两台设备都能访问到公网，就可以相互同步</li><li>文件数量【无】限制，文件大小【无】限制</li><li>支持多种网络形态——可以“公网上互相同步”，也可以是“局域网内相互同步”。</li><li>【没有】审查</li></ol><p>现在 Btsync 也叫 resilio 同步工具</p><h1 id="安装"><a href="#安装" class="headerlink" title="安装"></a>安装</h1><p>由于我使用的是windows，所以先记录下windows上安装的方式</p><h2 id="2-x"><a href="#2-x" class="headerlink" title="2.x"></a>2.x</h2><p>下载地址在这里：(<a href="https://www.resilio.com/">https://www.resilio.com</a>) ，(q内不能直接访问)，这里下载的就是比较新的版本，也就是2.x，下面也会有1.4.111也就是最后一个1.x的版本</p><p>下载到之后就是很常规的下一步…</p><p><img src="https://cdn.jsdelivr.net/gh/zsxfa/CDN/img/md/2022/02/16/1645008308.png" alt="desc"></p><p>“选择性同步”功能是专业Pro版才有的，我们需要升级Pro版使用。</p><h2 id="升级Pro："><a href="#升级Pro：" class="headerlink" title="升级Pro："></a>升级Pro：</h2><p>安装该软件后，我们只需要双击License 授权许可证文件，就可以导入激活Pro版了。激活之后如下：</p><p><img src="https://cdn.jsdelivr.net/gh/zsxfa/CDN/img/md/2022/02/16/1645008588.png" alt="desc"></p><h2 id="1-4-111"><a href="#1-4-111" class="headerlink" title="1.4.111"></a>1.4.111</h2><p>下面是1.4.111的版本</p><p><img src="https://cdn.jsdelivr.net/gh/zsxfa/CDN/img/md/2022/02/16/1645016929.png" alt="desc"></p><h2 id="同步密钥的概念"><a href="#同步密钥的概念" class="headerlink" title="同步密钥的概念"></a>同步密钥的概念</h2><p>要使用 BT Sync 的功能，首先要了解“同步密钥”的概念。<br>　　每个参与同步的目录，都有其密钥。你只有拿到这个密钥，才能同步该目录的文件。<br>　　对于普通的使用场景，每个同步目录对应两个密钥：一个是“读写密钥”，另一个是“只读密钥”。顾名思义，拥有“读写密钥”的节点，可以修改同步目录的内容；反之，拥有“只读密钥”的节点，只能读取，无法修改——所谓的“无法修改”，就是说：即使你修改了同步目录的内容，修改结果也【不会】同步给其它节点（所以这种修改是【无】意义的）。<br>　　对于目前的 1.4.XXX 版本，这两种密钥的长度都是【33 个字符】。“读写密钥”总是以 A 开头；“只读密钥”总是以 B 开头。因此，密钥的有效长度是 32 个字符（有兴趣的同学可以去算一下，此密钥包含多少比特）。这么长的密钥，基本上不用担心被暴力猜解（至少10年之内不用担心）。</p><h2 id="如何接受同步"><a href="#如何接受同步" class="headerlink" title="如何接受同步"></a>如何接受同步</h2><p>获取一个只读的密钥，然后导入到btsync，是需要创建一个同步目录的(当前用户是具有写入权限的)</p><p>完成上述步骤之后，BT Sync 就把你选择的目录作为同步目录。</p><p>在这个同步目录里面会创建一个名为 <code>.sync</code> 的子目录。这个 <code>.sync</code> 目录会包含 BT Sync 的一些配置信息（可能该目录的密钥也在里面），避免把它给删了。</p><p>接受了某个同步目录之后，在 BT Sync 的主界面上，会显示该目录的信息。<br>　　这时候，你可以修改该“同步目录”的“选项参数”。（截图如下）</p><p><img src="https://cdn.jsdelivr.net/gh/zsxfa/CDN/img/md/2022/02/16/1645017695.png" alt="desc"></p><p><img src="https://cdn.jsdelivr.net/gh/zsxfa/CDN/img/md/2022/02/16/1645017852.png" alt="desc"></p><h2 id="如何发起同步"><a href="#如何发起同步" class="headerlink" title="如何发起同步"></a>如何发起同步</h2><p>选择添加文件，然后选择一个目录，由于你是发起方，所以你默认就具有了“读写密钥”。这个“读写密钥”很重要，【<strong>不可轻易泄露</strong>】。一旦泄露，得到读写密钥的节点，就可以修改这个目录的内容。</p><p>前面提到，同步目录下的 <code>.sync</code> 目录会包含一些配置文件（可能也含有密钥）。所以，为了保险起见，当发起【多个】同步目录的时候，这几个目录相互之间【不要】嵌套包含。</p><h2 id="某些全局的选项"><a href="#某些全局的选项" class="headerlink" title="某些全局的选项"></a>某些全局的选项</h2><ol><li>如果你的 BT Sync 使用 SOCKS 代理联网，【强烈建议】勾选“使用代理服务器用于主机名解析”这个复选框。</li><li>BT Sync 默认会使用当前系统的主机名，作为它的节点名（也叫“设备名”）。<br>如果你对隐私比较在意，建议到全局选项的界面中，把 BT Sync 的设备名修改掉，改成一个跟你本人真实身份无关的名称。</li></ol>]]></content>
    
    
    <summary type="html">&lt;h1 id=&quot;简介&quot;&gt;&lt;a href=&quot;#简介&quot; class=&quot;headerlink&quot; title=&quot;简介&quot;&gt;&lt;/a&gt;简介&lt;/h1&gt;&lt;p&gt;BT Sync，跟 BT 下载一样，都是 &lt;a href=&quot;https://en.wikipedia.org/wiki/BitTorrent_(company)&quot;&gt;BitTorrent 公司&lt;/a&gt;发明的，都是采用 P2P 协议来进行传输。&lt;/p&gt;</summary>
    
    
    
    
  </entry>
  
  <entry>
    <title>Tor浏览器设置</title>
    <link href="http://zsxfa.cn/2022/02/16/Tor%E6%B5%8F%E8%A7%88%E5%99%A8%E8%AE%BE%E7%BD%AE/"/>
    <id>http://zsxfa.cn/2022/02/16/Tor%E6%B5%8F%E8%A7%88%E5%99%A8%E8%AE%BE%E7%BD%AE/</id>
    <published>2022-02-16T03:34:02.000Z</published>
    <updated>2022-02-17T07:32:34.213Z</updated>
    
    <content type="html"><![CDATA[<h1 id="Tor浏览器设置"><a href="#Tor浏览器设置" class="headerlink" title="Tor浏览器设置"></a>Tor浏览器设置</h1><h2 id="是什么"><a href="#是什么" class="headerlink" title="是什么"></a>是什么</h2><p>Tor 浏览器使用 Tor 网络保护您的隐私和匿名性。使用 Tor 网络有两个主要好处：</p><ul><li>您的互联网服务提供商和任何本地的监视者都将无法查看您的连接、跟踪您的网络活动，包括您所访问网站的名称和地址。</li><li>您使用的网站和服务的运营商以及任何监视它们的人都将看到连接来自 Tor 网络而不是您的互联网IP地址，并且不知道您是谁，除非您明确标识自己。</li></ul><span id="more"></span><p><strong>Tor 网络</strong>有世界各地志愿者运行的成千上万的服务器组成。每次 Tor Browser创建一个新的连接，会选择这些服务器中的三个<strong>Tor 中继器</strong>连接到互联网。以这样的方式加密整个网络旅程的每一条线路，使得中继本身并不知道它发送和接收数据的完整路径。</p><p>Tor 还会对整个网络采取加密通信。然而，此保护不会扩展到使用未加密通道访问的网站(即不支持HTTPS的网站)。</p><p>因为 Tor Browser 隐藏了你和访问网站之间的连接，它允许匿名浏览，并避免网络追踪。有助于绕过网络过滤，以便你可以访问(或发布内容)受到屏蔽的网站。</p><h2 id="下载地址"><a href="#下载地址" class="headerlink" title="下载地址"></a>下载地址</h2><ul><li>官网地址：<a href="https://www.torproject.org/download/">https://www.torproject.org/download/</a></li><li>Tor 完全使用说明 <a href="https://tb-manual.torproject.org/zh-CN/about/">https://tb-manual.torproject.org/zh-CN/about/</a></li><li>GitHub 源码托管 <a href="https://github.com/torproject">https://github.com/torproject</a> </li><li>Tor 项目中文页 <a href="https://www.torproject.org/zh-CN/">https://www.torproject.org/zh-CN/</a></li><li><strong>注意:</strong> 如果您所在的地区 Tor Project 的网站被屏蔽，您可以发送邮件获取下载链接，发邮件至**<a href="mailto:gettor@torproject.org">gettor@torproject.org</a><strong>，正文中写明你需要的版本(windows, osx 或是 linux)。你将会收到通过Dropbox, Google Docs 或 Github 的Tor Browser 存档链接。有关此功能的更多信息，请参考</strong><a href="https://www.torproject.org/">Tor Project website</a>**.</li></ul><h2 id="说明"><a href="#说明" class="headerlink" title="说明"></a>说明</h2><p>Tor 是一个由虚拟通道组成的网络，使您可以提高自己在互联网上的隐私和安全性。Tor 会将您的流量通过 Tor 网络内的三个随机的服务器（也称节点）发送。链路中的最后一个中继（即“出口节点”）将流量发送到公共互联网。</p><p>Tor 的一些特性使得<code>其匿名性略高于普通浏览器的无痕浏览模式</code>：参考 <a href="https://support.google.com/chrome/answer/7440301?co=GENIE.Platform=Android&hl=zh-Hans">Chrome 无痕浏览的工作原理</a>；以及 Tor 安全设置说明：<a href="https://tb-manual.torproject.org/zh-CN/security-settings">https://tb-manual.torproject.org/zh-CN/security-settings</a></p><p>访问 <a href="https://www.cip.cc/">https://www.cip.cc/</a> 或 <a href="https://whoer.net/zh%E6%9F%A5%E7%9C%8B%E4%BD%A0%E7%9A%84IP%EF%BC%9B%E6%97%A2%E4%B8%8D%E6%98%AF%E4%BD%A0%E7%9A%84%E7%9C%9F%E5%AE%9EIP%EF%BC%88%E7%BD%91%E7%BB%9C%E8%BF%90%E8%90%A5%E5%95%86%E5%88%86%E9%85%8D%E7%9A%84IP%EF%BC%89%EF%BC%8C%E4%B9%9F%E4%B8%8D%E6%98%AF%E4%BD%A0%E7%9A%84%E4%BB%A3%E7%90%86IP%EF%BC%8C%E8%80%8C%E6%98%AF">https://whoer.net/zh查看你的IP；既不是你的真实IP（网络运营商分配的IP），也不是你的代理IP，而是</a> Tor 的三层叠加的最后一层 IP；</p><h2 id="配置（前置代理）"><a href="#配置（前置代理）" class="headerlink" title="配置（前置代理）"></a>配置（前置代理）</h2><ol><li><p>下载好后校验不再细说，看这里：<a href="https://support.torproject.org/tbb/how-to-verify-signature/">https://support.torproject.org/tbb/how-to-verify-signature/</a></p></li><li><p>选择网络配置，勾选“我使用代理连接至互联网/ I use a proxy connect to the Internet”，这里也可以使用网桥的方式进行连接，不过只有meek-azure可用(我当前的版本是11.0),速度很慢，所以我这里选择使用一个前置代理</p><p><img src="https://cdn.jsdelivr.net/gh/zsxfa/CDN/img/md/2022/02/16/1644981392.png" alt="desc"></p></li><li><p>这里的地址填写127.0.0.1，端口可以去查看自己代理本地端口。</p></li><li><p>如果是V2RayN的话，需要在core设置里面<strong>取消勾选“开启流量监测”</strong></p></li><li><p>我这里使用的是WinXray,需要改的地方是在下图所示</p><p><img src="https://cdn.jsdelivr.net/gh/zsxfa/CDN/img/md/2022/02/16/1644981568.png" alt="desc"></p><p><strong>一定要把Sniffing的Enable的值改为false</strong>。</p></li><li><p>然后就可以正常连接了，测试连接的方式是可以访问<a href="https://check.torproject.org/">https://check.torproject.org/</a> 查看效果</p><p><img src="https://cdn.jsdelivr.net/gh/zsxfa/CDN/img/md/2022/02/16/1644981714.png" alt="desc"></p><p>如果你想使用与Tor Project 无关的服务来验证你的 IP 地址，有许多选择。支持<em>https</em>加密的如下网站(这意味着服务提供商以外的人难以”伪造”结果)：</p><ul><li><a href="https://www.iplocation.net/">https://www.iplocation.net/</a></li><li><a href="https://www.ip2location.com/">https://www.ip2location.com/</a></li></ul></li><li><p>也可以查看整个请求链路经过哪些节点</p><p><img src="https://cdn.jsdelivr.net/gh/zsxfa/CDN/img/md/2022/02/16/1644981837.png" alt="desc"></p></li></ol><h2 id="配置文件"><a href="#配置文件" class="headerlink" title="配置文件"></a>配置文件</h2><p>修改 TOR 的配置文件，规避不安全国家的节点。</p><p>TOR的配置文件名叫torrc，这是一个文本文件，用记事本就可以打开。</p><p>在该文件末尾，加入下面这行（ExcludeNodes 表示排除这些国家/地区的节点，strictnode 表示强制执行）。</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">ExcludeNodes &#123;cn&#125;,&#123;hk&#125;,&#123;mo&#125;</span><br><span class="line">strictnodes 1</span><br></pre></td></tr></table></figure><p>如果不设置 strictnode 1，TOR 客户端首先也会规避 ExcludeNodes 列出的这些国家。但如果 TOR 客户端找不到可用的线路，就会去尝试位于排除列表中的节点。<br>如果设置了 strictnode 1，即使 TOR 客户端找不到可用的线路，也不会去尝试这些国家的节点。</p><p>如果你对安全性的要求比较高，可以把这些国家也列入 TOR 的排除节点列表。</p><blockquote><p>北朝鲜 {kp}<br>伊朗 {ir}<br>叙利亚 {sy}<br>巴基斯坦 {pk}<br>古巴 {cu}<br>越南 {vn}</p></blockquote><p>待补充…</p>]]></content>
    
    
    <summary type="html">&lt;h1 id=&quot;Tor浏览器设置&quot;&gt;&lt;a href=&quot;#Tor浏览器设置&quot; class=&quot;headerlink&quot; title=&quot;Tor浏览器设置&quot;&gt;&lt;/a&gt;Tor浏览器设置&lt;/h1&gt;&lt;h2 id=&quot;是什么&quot;&gt;&lt;a href=&quot;#是什么&quot; class=&quot;headerlink&quot; title=&quot;是什么&quot;&gt;&lt;/a&gt;是什么&lt;/h2&gt;&lt;p&gt;Tor 浏览器使用 Tor 网络保护您的隐私和匿名性。使用 Tor 网络有两个主要好处：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;您的互联网服务提供商和任何本地的监视者都将无法查看您的连接、跟踪您的网络活动，包括您所访问网站的名称和地址。&lt;/li&gt;
&lt;li&gt;您使用的网站和服务的运营商以及任何监视它们的人都将看到连接来自 Tor 网络而不是您的互联网IP地址，并且不知道您是谁，除非您明确标识自己。&lt;/li&gt;
&lt;/ul&gt;</summary>
    
    
    
    <category term="Security" scheme="http://zsxfa.cn/categories/Security/"/>
    
    
    <category term="Tor 安全 代理 浏览器" scheme="http://zsxfa.cn/tags/Tor-%E5%AE%89%E5%85%A8-%E4%BB%A3%E7%90%86-%E6%B5%8F%E8%A7%88%E5%99%A8/"/>
    
  </entry>
  
  <entry>
    <title>win10设置</title>
    <link href="http://zsxfa.cn/2022/02/15/win10%E8%AE%BE%E7%BD%AE/"/>
    <id>http://zsxfa.cn/2022/02/15/win10%E8%AE%BE%E7%BD%AE/</id>
    <published>2022-02-15T13:47:22.000Z</published>
    <updated>2022-04-18T01:33:07.307Z</updated>
    
    <content type="html"><![CDATA[<hr><span id="more"></span><h1 id="命令行设置"><a href="#命令行设置" class="headerlink" title="命令行设置"></a>命令行设置</h1><h2 id="cmd中文乱码解决"><a href="#cmd中文乱码解决" class="headerlink" title="cmd中文乱码解决"></a>cmd中文乱码解决</h2><h2 id="临时解决方案："><a href="#临时解决方案：" class="headerlink" title="临时解决方案："></a>临时解决方案：</h2><p>修改cmd窗口字符编码为UTF-8</p><p><strong>命令行中执行：</strong></p><blockquote><p>chcp 65001</p></blockquote><p>这两条命令只在当前窗口生效，重启后恢复之前的编码。</p><h2 id="永久解决方案"><a href="#永久解决方案" class="headerlink" title="永久解决方案"></a>永久解决方案</h2><ol><li><p>win+R 输入regedit 进入注册表</p></li><li><p>找到 HKEY_CURRENT_USER\Console%SystemRoot%_system32_cmd.exe codepage值改为 936（十进制）或 3a8（十六进制）。</p></li><li><p>重启cmd后生效</p></li><li><p>对于Power shell修改同样，只需在第2步修改<br>%SystemRoot%_system32_WindowsPowerShell_v1.0_powershell.exe 下的项。</p></li></ol><h3 id="部分字符编码对应代码："><a href="#部分字符编码对应代码：" class="headerlink" title="部分字符编码对应代码："></a>部分字符编码对应代码：</h3><p>65001——UTF-8</p><p>936——简体中文</p><p>950——繁体中文</p><p>437——美国/加拿大英语</p><p>932——日文</p><p>949——韩文</p><p>866——俄文</p><h2 id="给cmd设置代理"><a href="#给cmd设置代理" class="headerlink" title="给cmd设置代理"></a>给cmd设置代理</h2><ol><li><p>这个时候可以先查看一下当前cmd的网络信息，通过curl cip.cc测试</p><p><img src="https://cdn.jsdelivr.net/gh/zsxfa/CDN/img/md/2022/02/15/1644934919.png" alt="desc"></p><p>发现是自己本地的地址</p></li><li><p>接着再找到自己代理的端口(我这里是1082)在命令行中输入</p></li></ol><p><strong>cmd命令行:(不用socks5)(临时设置)(也可放置环境变量)</strong></p><blockquote><p>set http_proxy=<a href="http://127.0.0.1:1082/">http://127.0.0.1:1082</a></p><p>set https_proxy=<a href="http://127.0.0.1:1082/">http://127.0.0.1:1082</a></p></blockquote><p>接着再进行测试，发现就是代理后的地址了</p><p><img src="https://cdn.jsdelivr.net/gh/zsxfa/CDN/img/md/2022/02/15/1644935339.png" alt="desc"></p><h3 id="补充：PowerShell"><a href="#补充：PowerShell" class="headerlink" title="补充：PowerShell"></a>补充：PowerShell</h3><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta prompt_">$</span><span class="language-bash"><span class="built_in">env</span>:http_proxy=<span class="string">&quot;http://127.0.0.1:1080&quot;</span></span></span><br><span class="line"><span class="meta prompt_">$</span><span class="language-bash"><span class="built_in">env</span>:https_proxy=<span class="string">&quot;http://127.0.0.1:1080&quot;</span></span></span><br></pre></td></tr></table></figure><h1 id="win10端口号8080被占用"><a href="#win10端口号8080被占用" class="headerlink" title="win10端口号8080被占用"></a>win10端口号8080被占用</h1><ol><li><p>可以通过<code>netstat -ano</code>命令列出所有端口的情况，找到被占用的端口<img src="https://cdn.jsdelivr.net/gh/zsxfa/CDN/img/md/2022/03/12/1647065407.png" alt="desc"></p></li><li><p>输入命令<code>netstat -aon|findstr “8080”</code> 找对应的PID</p><p><img src="https://cdn.jsdelivr.net/gh/zsxfa/CDN/img/md/2022/03/12/1647065510.png" alt="desc"></p></li><li><p>打开任务管理器找到pid的进程,结束掉就可以了</p></li></ol><h1 id="win10开机优化"><a href="#win10开机优化" class="headerlink" title="win10开机优化"></a>win10开机优化</h1><p>win10的系统，时间长了之后只开机就占用了很多的内存，本机是16G内存，有时开机就会占用7,8个G的内存…</p><h2 id="1-禁用一些服务"><a href="#1-禁用一些服务" class="headerlink" title="1.禁用一些服务"></a>1.禁用一些服务</h2><p>打开任务管理器（在电脑下面横条右键任务管理器）；</p><p><img src="https://cdn.jsdelivr.net/gh/zsxfa/CDN/img/md/2022/04/07/1649292286.png" alt="desc"></p><p>点击 “服务”，点击“打开服务”</p><p><img src="https://cdn.jsdelivr.net/gh/zsxfa/CDN/img/md/2022/04/07/1649292326.png" alt="desc"></p><p>以下这些服务都可以禁用，主要是windows10的更新服务</p><p><img src="https://cdn.jsdelivr.net/gh/zsxfa/CDN/img/md/2022/04/07/1649292537.png" alt="desc"></p><h2 id="2-禁用superfetch-Sysmain-服务"><a href="#2-禁用superfetch-Sysmain-服务" class="headerlink" title="2.禁用superfetch(Sysmain)服务"></a>2.禁用superfetch(Sysmain)服务</h2><p>这个服务是很占用内存的</p><p>功能描述：</p><p>在Windows XP操作系统中，微软对虚拟内存技术做了进一步改进，发展出了预取技术（Prefetch），预取技术的基本思路是，在载入某个程序之前，预先从硬盘上中载入一部分该程序运行所需的数据到物理内存中，这样便能加快程序的启动速度。</p><p>简述：就是一个提前加载缓存，然后你打开应用就快一点，其实也快不了多少。但是将会多占你2~3G内存条内存。（备注：每次系统更新都会自动开启这个服务，所以建议先禁用系统更新）</p><p>系统版本不同，可能名称不同，其他名称【Sysmain】</p><p><img src="https://cdn.jsdelivr.net/gh/zsxfa/CDN/img/md/2022/04/07/1649292706.png" alt="desc"></p><h2 id="3-非分页缓冲很高"><a href="#3-非分页缓冲很高" class="headerlink" title="3.非分页缓冲很高"></a>3.非分页缓冲很高</h2><p><img src="https://cdn.jsdelivr.net/gh/zsxfa/CDN/img/md/2022/04/07/1649292806.png" alt="desc"></p><p><strong>解决办法：</strong></p><p>1、运行cmd窗口</p><p>2、把这个代码站进去，点击回车：</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">sc config Ndu start=disabled</span><br></pre></td></tr></table></figure><h1 id="win10C盘空间不足"><a href="#win10C盘空间不足" class="headerlink" title="win10C盘空间不足"></a>win10C盘空间不足</h1><h2 id="1-清理系统临时文件"><a href="#1-清理系统临时文件" class="headerlink" title="1.清理系统临时文件"></a>1.清理系统临时文件</h2><p>用<code>win+r</code>键，打开运行窗口，输入<code>%temp%</code>然后回车，进入一个文件夹，这个文件夹中保存的都是系统临时文件。</p><p> 比如说网页浏览记录、各类收藏夹、安装软件等工作时留下来的临时文件，都是垃圾文件来的，可以全部删除。</p><p>不过很多缓存垃圾不能删除，会出现一个弹窗，你在“为所有当前项目选择执行此操作”前面打钩，随后点击跳过就行了。</p><h2 id="2-清理windows升级留下的windows-old文件"><a href="#2-清理windows升级留下的windows-old文件" class="headerlink" title="2.清理windows升级留下的windows.old文件"></a>2.清理windows升级留下的windows.old文件</h2><p>windows升级之后，会将旧的系统文件放在windows.old文件夹，目的是防止升级之后系统出现bug等问题，让用户可以回滚到之前的windows版本。</p><p>如果系统安装之后经过几天的使用，都没有发现问题的话就可以将这个文件清理掉，因为它占用了10G左右。操作如下：</p><p>打开“此电脑”，右键点击c盘，选择“属性”，打开“磁盘清理”。</p><p><img src="https://cdn.jsdelivr.net/gh/zsxfa/CDN/img/md/2022/04/09/1649466244.png" alt="desc"></p><p>找到“以前的windows安装”选项，勾选它，点击确定清理。</p>]]></content>
    
    
    <summary type="html">&lt;hr&gt;</summary>
    
    
    
    <category term="Windows" scheme="http://zsxfa.cn/categories/Windows/"/>
    
    
    <category term="命令行 代理" scheme="http://zsxfa.cn/tags/%E5%91%BD%E4%BB%A4%E8%A1%8C-%E4%BB%A3%E7%90%86/"/>
    
  </entry>
  
  <entry>
    <title>阿里云盘配置本地影音库</title>
    <link href="http://zsxfa.cn/2022/02/05/%E9%98%BF%E9%87%8C%E4%BA%91%E7%9B%98%E9%85%8D%E7%BD%AE%E6%9C%AC%E5%9C%B0%E5%BD%B1%E9%9F%B3%E5%BA%93/"/>
    <id>http://zsxfa.cn/2022/02/05/%E9%98%BF%E9%87%8C%E4%BA%91%E7%9B%98%E9%85%8D%E7%BD%AE%E6%9C%AC%E5%9C%B0%E5%BD%B1%E9%9F%B3%E5%BA%93/</id>
    <published>2022-02-05T08:53:14.000Z</published>
    <updated>2022-02-09T02:12:08.004Z</updated>
    
    <content type="html"><![CDATA[<h1 id="阿里云盘挂载到本地"><a href="#阿里云盘挂载到本地" class="headerlink" title="阿里云盘挂载到本地"></a>阿里云盘挂载到本地</h1><p>最近有一款名叫 CloudDrive 的工具相当的火，关于它的文章铺天盖地，简单的说，就是可以把阿里云盘挂载成本地磁盘，方便同步管理的同时，还可以调用第三方的播放器或文本编辑器。</p><span id="more"></span><p>CloudDrive 可以实现什么功能呢？</p><p>它可以把包括阿里云盘在内的一种网盘挂载到本地，可以访问资源，可以进行删除、重命名等操作，如果是视频资源，可以直接观看，加载速度非常快</p><h2 id="具体步骤："><a href="#具体步骤：" class="headerlink" title="具体步骤："></a>具体步骤：</h2><h3 id="1-下载安装"><a href="#1-下载安装" class="headerlink" title="1.下载安装"></a>1.下载安装</h3><p><a href="https://www.aliyundrive.com/s/QjZBJK4LjrR">CloudDrive下载地址， 提取码: 92vq</a></p><p>安装好后，浏览器会自动打开「<a href="http://localhost:9798」的网页。">http://localhost:9798」的网页。</a></p><h3 id="2-注册登录"><a href="#2-注册登录" class="headerlink" title="2.注册登录"></a>2.注册登录</h3><p>直接注册一个账号就可以了，登录之后如下：</p><p><img src="https://cdn.jsdelivr.net/gh/zsxfa/CDN/img/md/2022/02/05/1644052118.png" alt="desc"></p><p>登陆的话可以使用token或者扫描二维码进行登录。</p><h3 id="3-挂载本地"><a href="#3-挂载本地" class="headerlink" title="3.挂载本地"></a>3.挂载本地</h3><p><img src="https://cdn.jsdelivr.net/gh/zsxfa/CDN/img/md/2022/02/05/1644052288.png" alt="desc"></p><p><img src="https://cdn.jsdelivr.net/gh/zsxfa/CDN/img/md/2022/02/05/1644052441.png" alt="desc"></p><p>挂载成功后就是这样：</p><p><img src="https://cdn.jsdelivr.net/gh/zsxfa/CDN/img/md/2022/02/05/1644052487.png" alt="desc"></p><h2 id="tips"><a href="#tips" class="headerlink" title="tips"></a>tips</h2><ul><li>看到有人说挂载的阿里云盘可以直接充当度盘的下载目录，这个没有试过，不过应该是可行的</li><li><strong>可以用阿里云盘搭建一个本地的影片库如下</strong></li></ul><h1 id="阿里云盘搭建影音库"><a href="#阿里云盘搭建影音库" class="headerlink" title="阿里云盘搭建影音库"></a>阿里云盘搭建影音库</h1><p>这里使用的是KODI这款软件</p><p>Kodi（以前称为XBMC）是一个免费的开源媒体播放器，支持众多平台， Windows、 Mac OS X、Linux、Android、 iOS 等等版本，甚至还有电视盒子，其实效果最好的就是在盒子上，毕竟大屏看效果会更棒。</p><p>它之所以厉害，是因为可以安装太多功能强大、种类丰富的扩展插件，从而实现<strong>自动适配电影信息</strong>、<strong>下载字幕</strong>、<strong>在线看全网视频</strong>、<strong>看电视直播</strong>等超多功能。</p><h2 id="1-KODI的下载"><a href="#1-KODI的下载" class="headerlink" title="1.KODI的下载"></a>1.KODI的下载</h2><p><a href="https://www.aliyundrive.com/s/uRVKqXHijt4">KODI下载地址，提取码vy69</a></p><h2 id="2-设置语言"><a href="#2-设置语言" class="headerlink" title="2.设置语言"></a>2.设置语言</h2><ul><li><p>设置-&gt;interface-&gt;Skin-FontsS</p><p>这里需要修改字体，否则可能会乱码</p><p><strong>把 Fonts 中的 Skin default 修改为 Arial based。</strong></p></li><li><p>再依次选择 Regional-Language，此次可以看到语言默认为英文。点击 Language 选项。选择中文简体。</p><p>下载完成后，界面就是中文的了。</p></li></ul><h2 id="3-设置电影库"><a href="#3-设置电影库" class="headerlink" title="3.设置电影库"></a>3.设置电影库</h2><p>设置完成后，接下来进入整体，要告诉 kodi，我电脑上都有什么好片子，都放在哪里，也就是手动导入电影存放目录。</p><p>在主界面选择电影菜单中的进入文件区，</p><p><img src="https://cdn.jsdelivr.net/gh/zsxfa/CDN/img/md/2022/02/05/1644053249.png" alt="desc"></p><p>在进入文件区后选择添加视频。如果你使用移动硬盘的话这里会有一个移动硬盘选项。然后选择浏览。选择你电影资源文件夹存放的那个盘。</p><p><img src="https://cdn.jsdelivr.net/gh/zsxfa/CDN/img/md/2022/02/05/1644053340.png" alt="desc"></p><p><img src="https://cdn.jsdelivr.net/gh/zsxfa/CDN/img/md/2022/02/05/1644053366.png" alt="desc"></p><p>选择之后，直接点击确定即可。</p><p>紧接着是设置内容的界面，点击红框中的选项：该目录包含。</p><p><img src="https://cdn.jsdelivr.net/gh/zsxfa/CDN/img/md/2022/02/05/1644053463.png" alt="desc"></p><p>如果是美剧的就选择剧集。</p><p><img src="https://cdn.jsdelivr.net/gh/zsxfa/CDN/img/md/2022/02/05/1644053504.png" alt="desc"></p><p>然后就是下图的界面，选择信息提供者那里默认的是 The Movie Database，这里有个知识点。</p><p>The Movie Database 是「电影刮削器」的一种，其作用就是自动从网上下载对应的图文信息对电影信息进行补充。</p><p><img src="https://cdn.jsdelivr.net/gh/zsxfa/CDN/img/md/2022/02/05/1644053566.png" alt="desc"></p><p>「电影刮削器」会根据下图的命名规则去网站检索对应的电影</p><p><img src="https://cdn.jsdelivr.net/gh/zsxfa/CDN/img/md/2022/02/05/1644053601.png" alt="desc"></p><p><strong>剧集</strong>可以按照以下格式，先创建一个剧集的文件夹：</p><blockquote><p>S01E01  01代表季数和集数</p></blockquote><h1 id="KODI插件"><a href="#KODI插件" class="headerlink" title="KODI插件"></a>KODI插件</h1><h2 id="xbmc-addons-chinese-2-0-0"><a href="#xbmc-addons-chinese-2-0-0" class="headerlink" title="xbmc-addons-chinese-2.0.0"></a>xbmc-addons-chinese-2.0.0</h2><p>由于kodi主要是英文的插件，我们可以安装xbmc-addons-chinese-2.0.0管理中文用户的插件库</p><ol><li>安装本插件库，按照使用的Kodi版本下载相应zip安装包<ul><li><a href="https://github.com/taxigps/xbmc-addons-chinese/raw/matrix/repo/repository.xbmc-addons-chinese/repository.xbmc-addons-chinese-2.0.0.zip">repository.xbmc-addons-chinese-2.0.0.zip</a> for Kodi 19</li></ul></li><li>然后 And then:<ul><li>进入Kodi系统 Launch Kodi</li><li>选择 系统-设置-插件 Navigate to System | Settings | Add-ons</li><li>选择 从zip文件安装 Select Install from zip file</li><li>浏览目录找到刚下载的zip安装包 Browse to the directory where the new downloaded zip file is being stored.</li><li>选择 确定 Select OK</li></ul></li></ol><h3 id="安装插件-Install-Add-ons"><a href="#安装插件-Install-Add-ons" class="headerlink" title="安装插件 Install Add-ons"></a>安装插件 Install Add-ons</h3><ul><li>点击 从库安装 Click Get Add-ons</li><li>选择中文插件库 Select Chinese Add-ons Repository</li><li>选择你要安装的插件 Select the appropriate Add-ons from the display categories</li><li>点击安装插件 Click to install the Add-on</li></ul><h3 id="插件功能-Features"><a href="#插件功能-Features" class="headerlink" title="插件功能 Features"></a>插件功能 Features</h3><h4 id="视频插件-Video-Add-ons"><a href="#视频插件-Video-Add-ons" class="headerlink" title="视频插件 Video Add-ons"></a>视频插件 Video Add-ons</h4><ul><li>哆啦搜索 - plugin.video.duolasousuo - 哆啦搜索视频插件<code>(new)</code></li><li>韩剧视频 - plugin.video.hanju - 韩剧视频Kodi插件<code>(new)</code></li></ul><h4 id="字幕插件-Subtitle-Add-ons"><a href="#字幕插件-Subtitle-Add-ons" class="headerlink" title="字幕插件 Subtitle Add-ons"></a>字幕插件 Subtitle Add-ons</h4><ul><li>Shooter - service.subtitles.shooter - Shooter subtitle service</li><li>zimuku - service.subtitles.zimuku - Search and download subtitles from <a href="http://www.zimuku.la/">zimuku.la</a></li></ul><h2 id="PVR-IPTV-Simple-Client"><a href="#PVR-IPTV-Simple-Client" class="headerlink" title="PVR IPTV Simple Client"></a>PVR IPTV Simple Client</h2><p><strong>它是一个是通过KODI观看IPTV电视直播的插件</strong></p><h3 id="安装插件"><a href="#安装插件" class="headerlink" title="安装插件"></a>安装插件</h3><ul><li>点击 从库安装</li><li>选择PVR客户端</li><li>向下拉，找到PVR IPTV Simple Client插件。</li><li>点击安装插件 Click to install the Add-on</li></ul><h3 id="视频源的加载与播放"><a href="#视频源的加载与播放" class="headerlink" title="视频源的加载与播放"></a>视频源的加载与播放</h3><ul><li>安装结束后，回到插件主界面，选择我的插件。</li><li>选择PVR客户端。</li><li>目前只安装了PVR IPTV Simple Client插件，所以直接选就好了。</li><li>点击设置。</li></ul><p><img src="https://cdn.jsdelivr.net/gh/zsxfa/CDN/img/md/2022/02/07/1644239963.png" alt="desc"></p><p>远程M3U播放器列表URL：<a href="https://iptv-org.github.io/iptv/index.m3u">https://iptv-org.github.io/iptv/index.m3u</a></p><p><a href="https://github.com/imDazui/Tvlist-awesome-m3u-m3u8">项目地址：https://github.com/imDazui/Tvlist-awesome-m3u-m3u8</a></p><ul><li>回到KODI主界面，选择电视。</li></ul><p><img src="https://cdn.jsdelivr.net/gh/zsxfa/CDN/img/md/2022/02/07/1644240354.png" alt="desc"></p>]]></content>
    
    
    <summary type="html">&lt;h1 id=&quot;阿里云盘挂载到本地&quot;&gt;&lt;a href=&quot;#阿里云盘挂载到本地&quot; class=&quot;headerlink&quot; title=&quot;阿里云盘挂载到本地&quot;&gt;&lt;/a&gt;阿里云盘挂载到本地&lt;/h1&gt;&lt;p&gt;最近有一款名叫 CloudDrive 的工具相当的火，关于它的文章铺天盖地，简单的说，就是可以把阿里云盘挂载成本地磁盘，方便同步管理的同时，还可以调用第三方的播放器或文本编辑器。&lt;/p&gt;</summary>
    
    
    
    <category term="interesting" scheme="http://zsxfa.cn/categories/interesting/"/>
    
    
    <category term="阿里云盘 KODI" scheme="http://zsxfa.cn/tags/%E9%98%BF%E9%87%8C%E4%BA%91%E7%9B%98-KODI/"/>
    
  </entry>
  
  <entry>
    <title>hexo个性化设置</title>
    <link href="http://zsxfa.cn/2022/02/04/hexo%E4%B8%AA%E6%80%A7%E5%8C%96%E8%AE%BE%E7%BD%AE/"/>
    <id>http://zsxfa.cn/2022/02/04/hexo%E4%B8%AA%E6%80%A7%E5%8C%96%E8%AE%BE%E7%BD%AE/</id>
    <published>2022-02-04T14:54:02.000Z</published>
    <updated>2022-04-18T01:57:53.693Z</updated>
    
    <content type="html"><![CDATA[<h1 id="hexo个性化设置"><a href="#hexo个性化设置" class="headerlink" title="hexo个性化设置"></a>hexo个性化设置</h1><p>补一补之前忘记写的内容…</p><span id="more"></span><h2 id="hexo主题配置"><a href="#hexo主题配置" class="headerlink" title="hexo主题配置"></a>hexo主题配置</h2><p><a href="https://hexo.io/themes/">Themes of Hexo</a>官网提供许多主题模板，可以依照喜好选择，本篇以<a href="https://github.com/next-theme/hexo-theme-next">Next</a>为例</p><ol><li><p>进入hexo项目文件夹，输入命令</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">git clone https://github.com/next-theme/hexo-theme-next themes/next</span><br></pre></td></tr></table></figure></li><li><p>打开<strong>站点配置文件</strong>（路径：根目录/_config.yml），添加基本配置并修改主题为Next</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">theme: next</span><br></pre></td></tr></table></figure></li></ol><h3 id="菜单设置"><a href="#菜单设置" class="headerlink" title="菜单设置"></a>菜单设置</h3><ol><li><p>默认的菜单只有首页和归档两个，可以添加菜单，打开<strong>主题配置文件</strong>（路径：根目录/themes/next/_config.yml），修改内容，根据需要删除前面注释即可启用</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line">menu:</span><br><span class="line">  home: / || home                          //首页</span><br><span class="line">  archives: /archives/ || archive          //归档</span><br><span class="line"><span class="meta prompt_">  #</span><span class="language-bash">categories: /categories/ || th          //分类</span></span><br><span class="line"><span class="meta prompt_">  #</span><span class="language-bash">tags: /tags/ || tags                    //标签</span></span><br><span class="line"><span class="meta prompt_">  #</span><span class="language-bash">about: /about/ || user                  //关于</span></span><br><span class="line"><span class="meta prompt_">  #</span><span class="language-bash">schedule: /schedule/ || calendar        //日程表</span></span><br><span class="line"><span class="meta prompt_">  #</span><span class="language-bash">sitemap: /sitemap.xml || sitemap        //站点地图</span></span><br><span class="line"><span class="meta prompt_">  #</span><span class="language-bash">commonweal: /404/ || heartbeat          //404</span></span><br></pre></td></tr></table></figure></li><li><p>将菜单设置的注释去掉后，需进行创建，以categories和tags为例，删除menu对应注释后，输入命令</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">hexo new page categories（tags等）</span><br></pre></td></tr></table></figure></li><li><p>把文章归入分类只需在文章的顶部标题下方添加<code>categories</code>字段，即可自动创建分类名并加入对应的分类中</p><p>把文章添加标签只需在文章的顶部标题下方添加<code>tags</code>字段，即可自动创建标签名并归入对应的标签中</p></li></ol><p><img src="https://cdn.jsdelivr.net/gh/zsxfa/CDN/img/md/2022/02/19/1645276037.png" alt="desc"></p><h3 id="主题样式设置"><a href="#主题样式设置" class="headerlink" title="主题样式设置"></a>主题样式设置</h3><ol><li><p>Next主题有多种选择，根据需要删除前面注释即可启用，同样是在/themes/next/_config.yml中配置</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta prompt_"># </span><span class="language-bash">Schemes</span></span><br><span class="line"><span class="meta prompt_">#</span><span class="language-bash">scheme: Muse</span></span><br><span class="line"><span class="meta prompt_">#</span><span class="language-bash">scheme: Mist</span></span><br><span class="line">scheme: Pisces</span><br><span class="line"><span class="meta prompt_">#</span><span class="language-bash">scheme: Gemini</span></span><br></pre></td></tr></table></figure></li></ol><h3 id="侧边栏设置"><a href="#侧边栏设置" class="headerlink" title="侧边栏设置"></a>侧边栏设置</h3><ol><li><p>打开<strong>主题配置文件</strong>找到<code>sidebar</code>字段</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><span class="line">sidebar:</span><br><span class="line"><span class="meta prompt_"># </span><span class="language-bash">Sidebar Position - 侧栏位置（只对Pisces | Gemini两种风格有效）</span></span><br><span class="line">  position: left        //靠左放置</span><br><span class="line"><span class="meta prompt_">  #</span><span class="language-bash">position: right      //靠右放置</span></span><br><span class="line"><span class="meta prompt_"></span></span><br><span class="line"><span class="meta prompt_"># </span><span class="language-bash">Sidebar Display - 侧栏显示时机（只对Muse | Mist两种风格有效）</span></span><br><span class="line"><span class="meta prompt_">  #</span><span class="language-bash">display: post        //默认行为，在文章页面（拥有目录列表）时显示</span></span><br><span class="line">  display: always       //在所有页面中都显示</span><br><span class="line"><span class="meta prompt_">  #</span><span class="language-bash">display: hide        //在所有页面中都隐藏（可以手动展开）</span></span><br><span class="line"><span class="meta prompt_">  #</span><span class="language-bash">display: remove      //完全移除</span></span><br><span class="line"></span><br><span class="line">  offset: 12            //文章间距（只对Pisces | Gemini两种风格有效）</span><br><span class="line"></span><br><span class="line">  b2t: false            //返回顶部按钮（只对Pisces | Gemini两种风格有效）</span><br><span class="line"></span><br><span class="line">  scrollpercent: true   //返回顶部按钮的百分比</span><br></pre></td></tr></table></figure></li></ol><h3 id="搜索设置"><a href="#搜索设置" class="headerlink" title="搜索设置"></a>搜索设置</h3><ol><li><p>需要安装插件，输入命令</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">npm install hexo-generator-searchdb --save</span><br></pre></td></tr></table></figure></li><li><p>打开<strong>站点配置文件,根目录/_config.yml</strong>找到<code>Extensions</code>在下面添加</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta prompt_"># </span><span class="language-bash">搜索</span></span><br><span class="line">search:</span><br><span class="line">  path: search.xml</span><br><span class="line">  field: post</span><br><span class="line">  format: html</span><br><span class="line">  limit: 10000</span><br></pre></td></tr></table></figure><p>打开<strong>主题配置文件</strong>找到<code>Local search</code>，将<code>enable</code>设置为<code>true</code></p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">local_search:</span><br><span class="line">  enable: true</span><br></pre></td></tr></table></figure></li></ol><p><img src="https://cdn.jsdelivr.net/gh/zsxfa/CDN/img/md/2022/02/19/1645276120.png" alt="desc"></p><h3 id="添加阅读全文按钮"><a href="#添加阅读全文按钮" class="headerlink" title="添加阅读全文按钮"></a>添加阅读全文按钮</h3><p>首页文章显示部分，可以通过再文章中添加<code>&lt;!--more --&gt;</code>显示部分，并添加阅读全文按钮</p><h3 id="本地测试"><a href="#本地测试" class="headerlink" title="本地测试"></a>本地测试</h3><ol><li><p>输入命令</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">hexo c</span><br><span class="line">hexo g </span><br><span class="line">hexo s</span><br></pre></td></tr></table></figure></li><li><p>然后就可以在localhost:4000进行本地查看了</p></li></ol><p><img src="https://cdn.jsdelivr.net/gh/zsxfa/CDN/img/md/2022/02/19/1645276174.png" alt="desc"></p><h2 id="hexo-Typora显示图片问题"><a href="#hexo-Typora显示图片问题" class="headerlink" title="hexo+Typora显示图片问题"></a>hexo+Typora显示图片问题</h2><h3 id="本地设置"><a href="#本地设置" class="headerlink" title="本地设置"></a>本地设置</h3><p>利用Typora编写Markdown文件，构建页面后访问网站存在图片不显示的问题，可通过以下方法解决此问题</p><ul><li><p>打开<strong>站点配置文件</strong>修改<code>post_asset_folder</code>为<code>true</code></p></li><li><p>打开Typora，点击文件—偏好设置—图像，修改为如下设置</p><p><img src="https://cdn.jsdelivr.net/gh/zsxfa/CDN/img/md/2022/02/17/1645097078.png" alt="desc"></p></li><li><p>打开Powershell，输入命令</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">npm install hexo-asset-image-for-hexo5 --save</span><br></pre></td></tr></table></figure></li></ul><h3 id="Github做图床"><a href="#Github做图床" class="headerlink" title="Github做图床"></a>Github做图床</h3><p>具体做法如下：</p><p><a href="https://zhuanlan.zhihu.com/p/76951130">免费CDN：jsDelivr+Github 使用方法</a></p><ul><li>图片保存在github仓库，是有1个G的容量限制的，不过可以创建多个仓库对吧</li></ul><p><a href="https://github.com/jsdelivr/jsdelivr">这里是jsDelivr的地址</a>现在写这篇文章的时候也是可以用的。</p><p>​        到这里，就会发现另一个问题，就是在使用图片的时候需要先上传到GitHub仓库中，然后通过将图片地址变成jsDelivr加速后的地址，就像这样：</p><figure class="highlight awk"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">https:<span class="regexp">//</span>raw.githubusercontent.com<span class="regexp">/你的用户名/</span>你的仓库名<span class="regexp">/master/</span>文件路径</span><br><span class="line">https:<span class="regexp">//</span>cdn.jsdelivr.net<span class="regexp">/gh/</span>你的用户名<span class="regexp">/你的仓库名/</span>文件路径</span><br></pre></td></tr></table></figure><p>这个过程其实是很麻烦的…当然是不能容忍，于是就在网上去找一些<code>简便操作</code>，发现倒是有很多人写过关于粘贴图片时候返回加速后的链接的内容，不过很多都是七牛云等等…不过还是找到了一个可以在粘贴图片的时候将图片上传到GitHub同时返回jsDelivr的链接地址</p><p>项目地址是这个<a href="https://github.com/treeyh/soc-makedown-pic-picker"></a>实测可用。</p><p>当然这个也是需要去安装一个软件<a href="https://www.autohotkey.com/download/">AutoHotkey</a>,这个可以去运行一些windows脚本语言，可以去绑定快捷键完成操作等等…下面就是它的脚本：</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line">;上传图片github，剪切板markdown</span><br><span class="line">;#==win</span><br><span class="line">;!==Alt</span><br><span class="line">;^==Ctrl</span><br><span class="line">;+==shift</span><br><span class="line">;=====================================================</span><br><span class="line">^+v::</span><br><span class="line">&#123;</span><br><span class="line">runwait, python &#123;你本地的文件路径&#125;\src\github\github_pic_picker.py, , Hide</span><br><span class="line">send ^v</span><br><span class="line">return</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>​        配置之后就可以不用麻烦的去拼接地址了！！！</p><h2 id="添加音乐"><a href="#添加音乐" class="headerlink" title="添加音乐"></a>添加音乐</h2><h3 id="网易云外链"><a href="#网易云外链" class="headerlink" title="网易云外链"></a>网易云外链</h3><ol><li><p>在网易云音乐中打开你想要插入的音乐页面，点击 <strong>生成外联播放器</strong>。</p></li><li><p>在网页中调整好播放器插件后，复制下方的HTML代码。以侧边栏为例，修改<strong>blog\themes\next\layout\_macro</strong>的<strong>sidebar.swig</strong>文件，添加刚刚复制的外链代码，放在&lt;aside class=”sidebar”&gt;标签中</p><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">iframe</span> <span class="attr">frameborder</span>=<span class="string">&quot;no&quot;</span> <span class="attr">border</span>=<span class="string">&quot;0&quot;</span> <span class="attr">marginwidth</span>=<span class="string">&quot;0&quot;</span> <span class="attr">marginheight</span>=<span class="string">&quot;0&quot;</span> <span class="attr">width</span>=<span class="string">330</span> <span class="attr">height</span>=<span class="string">86</span> <span class="attr">src</span>=<span class="string">&quot;//music.163.com/outchain/player?type=2&amp;id=28946040&amp;auto=1&amp;height=66&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">iframe</span>&gt;</span></span><br></pre></td></tr></table></figure><p><img src="https://cdn.jsdelivr.net/gh/zsxfa/CDN/img/md/2022/02/19/1645275973.png" alt="desc"></p><p>这种网易云音乐外链的方式有很多局限性，因此推荐使用aplayer</p></li></ol><h3 id="使用aplayer"><a href="#使用aplayer" class="headerlink" title="使用aplayer"></a>使用aplayer</h3><p>Aplayer是一个开源的，网页端的播放器，这是它的<a href="https://aplayer.js.org/#/zh-Hans/">使用文档</a>，这个播放器可以支持播放本地自定义的音频、歌词、专辑封面等等，但是由于我是想直接使用网络端的歌单，所以直接跳过了这一步，本地使用方法可以直接参考使用文档，写的很详细。</p><p>接下来的重头戏是直接使用meting实现网络歌单，我是想在所有页面的固定位置显示这个播放模块，正好aplayer自带的吸底模式(翻译为fixed，有点难理解)符合我的要求，它会始终出现在网页的左下角，配合pjax实现不刷新内容,大赞！</p><ol><li><p>添加依赖</p><p>找到主题的页面布局文件，<code>\themes\next\layout\ _layout.swig</code><br>首先在body中添加依赖：</p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">link</span> <span class="attr">rel</span>=<span class="string">&quot;stylesheet&quot;</span> <span class="attr">href</span>=<span class="string">&quot;https://cdn.jsdelivr.net/npm/aplayer@1.10.1/dist/APlayer.min.css&quot;</span>&gt;</span><span class="comment">&lt;!--APlayer的样式--&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">script</span> <span class="attr">src</span>=<span class="string">&quot;https://cdn.jsdelivr.net/npm/aplayer@1.10.1/dist/APlayer.min.js&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">script</span>&gt;</span><span class="comment">&lt;!--APlayer的依赖--&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">script</span> <span class="attr">src</span>=<span class="string">&quot;https://cdn.jsdelivr.net/npm/meting@2/dist/Meting.min.js&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">script</span>&gt;</span><span class="comment">&lt;!--Meting的依赖--&gt;</span></span><br></pre></td></tr></table></figure></li><li><p>这里我们指定了版本，因为meting的新版本和aplayer有奇怪的兼容性问题…<br>然后就是使用metingjs了，首先附一个官方的<a href="https://github.com/metowolf/MetingJS">使用文档</a>，使用方法也非常的简单：在<code>D:\Blogs\blog\themes\next\layout\_macro\sidebar.swig</code>文件中配置</p><figure class="highlight abnf"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">&lt;meting-js</span><br><span class="line">server<span class="operator">=</span><span class="string">&quot;netease&quot;</span></span><br><span class="line">    type<span class="operator">=</span><span class="string">&quot;playlist&quot;</span></span><br><span class="line">    autoplay<span class="operator">=</span>f </span><br><span class="line">    fixed<span class="operator">=</span>true </span><br><span class="line">    id<span class="operator">=</span><span class="string">&quot;7267391672&quot;</span>&gt; </span><br><span class="line">&lt;/meting-js&gt;</span><br></pre></td></tr></table></figure><ul><li>server: 歌单的服务商，比如netease代表网易云，tencent代表qq音乐等等</li><li>type: 类型，单曲或歌单</li><li>autoplay: 打开网页自动播放</li><li>fixed: 使用吸底模式</li><li>id: 歌单的id，在网页端可以直接查看</li></ul></li><li><p>保存，重启服务之后发现已经出现了吸底的浮窗</p></li></ol><h4 id="pjax的配置"><a href="#pjax的配置" class="headerlink" title="pjax的配置"></a>pjax的配置</h4><ol><li><p>配置完aplayer，接下来就是配置跨页面不刷新了。由于我使用的是next主题，其实next主题已经想到了可能是用的pjax，所以我们只需要安装依赖，并且在config中启用即可。</p></li><li><p>首先安装依赖</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">cd themes/next</span><br><span class="line">git clone https://github.com/theme-next/theme-next-pjax source/lib/pjax</span><br></pre></td></tr></table></figure></li><li><p>然后我们只需要在next的_config.yml中找到pjax选项，将false改为true即可</p></li></ol><p><img src="https://cdn.jsdelivr.net/gh/zsxfa/CDN/img/md/2022/02/21/1645444404.png" alt="desc"></p><h4 id="自定义歌词颜色"><a href="#自定义歌词颜色" class="headerlink" title="自定义歌词颜色"></a>自定义歌词颜色</h4><p>上面可以发现，在<code>\themes\next\layout\ _layout.swig</code>中<code>APlayer.min.css</code>文件是从远程引用的，我们需要下载到这个文件进行修改</p><p>找到<code>.aplayer .aplayer-lrc p.aplayer-lrc-current</code></p><figure class="highlight css"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="selector-class">.aplayer</span> <span class="selector-class">.aplayer-lrc</span> <span class="selector-tag">p</span><span class="selector-class">.aplayer-lrc-current</span> &#123;</span><br><span class="line">    </span><br><span class="line">    <span class="attribute">opacity</span>:<span class="number">1</span>;</span><br><span class="line">    <span class="attribute">overflow</span>:visible;</span><br><span class="line">    <span class="attribute">height</span>:auto<span class="meta">!important</span>;</span><br><span class="line">    <span class="attribute">min-height</span>:<span class="number">16px</span></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>修改如下</p><figure class="highlight css"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line"><span class="selector-class">.aplayer</span> <span class="selector-class">.aplayer-lrc</span> <span class="selector-tag">p</span><span class="selector-class">.aplayer-lrc-current</span> &#123;</span><br><span class="line">    </span><br><span class="line">    <span class="comment">/* 大小 */</span></span><br><span class="line">    <span class="attribute">font-size</span>: <span class="number">17px</span>;</span><br><span class="line">    <span class="comment">/* 颜色 */</span></span><br><span class="line">    <span class="attribute">color</span>: <span class="number">#1b82f1</span>;</span><br><span class="line">    <span class="attribute">opacity</span>: <span class="number">1</span>;</span><br><span class="line">    <span class="attribute">overflow</span>: visible;</span><br><span class="line">    <span class="attribute">height</span>: auto <span class="meta">!important</span>;</span><br><span class="line">    <span class="attribute">min-height</span>: <span class="number">16px</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>最后替换一下链接就可以了。</p><p><img src="https://cdn.jsdelivr.net/gh/zsxfa/CDN/img/md/2022/02/24/1645694441.png" alt="desc"></p><h2 id="添加动态背景"><a href="#添加动态背景" class="headerlink" title="添加动态背景"></a>添加动态背景</h2><p>修改<code>\themes\next\layout\_layout.swig</code></p><p>在 <code>&lt; /body&gt;</code>之前添加代码(注意不要放在<code>&lt; /head&gt;</code>的后面)</p><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">&#123;% if theme.canvas_nest %&#125;</span><br><span class="line"><span class="tag">&lt;<span class="name">script</span> <span class="attr">type</span>=<span class="string">&quot;text/javascript&quot;</span> <span class="attr">src</span>=<span class="string">&quot;//cdn.bootcss.com/canvas-nest.js/1.0.0/canvas-nest.min.js&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br><span class="line">&#123;% endif %&#125;</span><br></pre></td></tr></table></figure><p>修改配置文件</p><p>打开 <code>/themes/next/_config.yml</code>,在里面添加如下代码：(可以放在最后面)</p><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"># --------------------------------------------------------------</span><br><span class="line"># background settings</span><br><span class="line"># --------------------------------------------------------------</span><br><span class="line"># add canvas-nest effect</span><br><span class="line"># see detail from https://github.com/hustcc/canvas-nest.js</span><br><span class="line">canvas_nest: true</span><br></pre></td></tr></table></figure><p>如果想要自定义线条的话，设置如下：</p><p>在上一步修改 <code>_layout.swig</code>中，把刚才的这些代码：</p><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">&#123;% if theme.canvas_nest %&#125;</span><br><span class="line"><span class="tag">&lt;<span class="name">script</span> <span class="attr">type</span>=<span class="string">&quot;text/javascript&quot;</span> <span class="attr">src</span>=<span class="string">&quot;//cdn.bootcss.com/canvas-nest.js/1.0.0/canvas-nest.min.js&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br><span class="line">&#123;% endif %&#125;</span><br></pre></td></tr></table></figure><p>改为</p><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">&#123;% if theme.canvas_nest %&#125;</span><br><span class="line"><span class="tag">&lt;<span class="name">script</span> <span class="attr">type</span>=<span class="string">&quot;text/javascript&quot;</span></span></span><br><span class="line"><span class="tag"><span class="attr">color</span>=<span class="string">&quot;0,0,255&quot;</span> <span class="attr">opacity</span>=<span class="string">&#x27;0.7&#x27;</span> <span class="attr">zIndex</span>=<span class="string">&quot;-2&quot;</span> <span class="attr">count</span>=<span class="string">&quot;99&quot;</span> <span class="attr">src</span>=<span class="string">&quot;//cdn.bootcss.com/canvas-nest.js/1.0.0/canvas-nest.min.js&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br><span class="line">&#123;% endif %&#125;</span><br></pre></td></tr></table></figure><h3 id="配置项说明"><a href="#配置项说明" class="headerlink" title="配置项说明"></a>配置项说明</h3><ul><li><code>color</code> ：线条颜色, 默认: <code>&#39;0,0,0&#39;</code>；三个数字分别为(R,G,B)</li><li><code>opacity</code>: 线条透明度（0~1）, 默认: <code>0.5</code></li><li><code>count</code>: 线条的总数量, 默认: <code>150</code></li><li><code>zIndex:</code> 背景的z-index属性，css属性用于控制所在层的位置, 默认: <code>-1</code></li></ul><h2 id="添加背景图片"><a href="#添加背景图片" class="headerlink" title="添加背景图片"></a>添加背景图片</h2><p>设置背景图片<br>将想要的背景图片放入<code> themes/next/source/images</code>。打开<code> \blog\source\_data\styles.styl</code> 文件，添加以下代码即可：</p><figure class="highlight css"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="selector-tag">body</span> &#123;</span><br><span class="line">    <span class="attribute">background</span>:<span class="built_in">url</span>(<span class="string">/images/yourbackground.jpg</span>);</span><br><span class="line">    <span class="attribute">background-repeat</span>: no-repeat;</span><br><span class="line">    <span class="attribute">background-attachment</span>:fixed; //不重复</span><br><span class="line">    <span class="attribute">background-size</span>: cover;      //填充</span><br><span class="line">    <span class="attribute">background-position</span>:<span class="number">50%</span> <span class="number">50%</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>background:url 为图片路径，也可以直接使用链接。<br>background-repeat：若果背景图片不能全屏，那么是否平铺显示，充满屏幕<br>background-attachment：背景是否随着网页上下滚动而滚动，fixed 为固定<br>background-size：图片展示大小，这里设置 100%，100% 的意义为：如果背景图片不能全屏，那么是否通过拉伸的方式将背景强制拉伸至全屏显示。</p><h2 id="博客内容透明化"><a href="#博客内容透明化" class="headerlink" title="博客内容透明化"></a>博客内容透明化</h2><p>NexT 主题的博客文章均是不透明的，这样读者就不能好好欣赏背景图片了，下面的方法可以使博客内容透明化：</p><p>在 <code>themes/next/source/css/_custom/custom.styl</code> 中添加以下内容：</p><figure class="highlight css"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br></pre></td><td class="code"><pre><span class="line">//博客内容透明化</span><br><span class="line">//文章内容的透明度设置</span><br><span class="line"><span class="selector-class">.content-wrap</span> &#123;</span><br><span class="line">  <span class="attribute">opacity</span>: <span class="number">0.9</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="selector-class">.content</span> &#123;</span><br><span class="line"><span class="attribute">border-radius</span>: <span class="number">20px</span>; //文章背景设置圆角</span><br><span class="line"><span class="attribute">padding</span>: <span class="number">80px</span> <span class="number">30px</span> <span class="number">10px</span> <span class="number">30px</span>;</span><br><span class="line"><span class="attribute">background</span>:<span class="built_in">rgba</span>(<span class="number">255</span>, <span class="number">255</span>, <span class="number">255</span>, <span class="number">0.2</span>) none repeat scroll <span class="meta">!important</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">//侧边框的透明度设置</span><br><span class="line"><span class="selector-class">.sidebar</span> &#123;</span><br><span class="line">  <span class="attribute">opacity</span>: <span class="number">0.9</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">//菜单栏的透明度设置</span><br><span class="line"><span class="selector-class">.header-inner</span> &#123;</span><br><span class="line">  <span class="attribute">background</span>: <span class="built_in">rgba</span>(<span class="number">255</span>,<span class="number">255</span>,<span class="number">255</span>,<span class="number">0.9</span>);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">//搜索框（local-search）的透明度设置</span><br><span class="line"><span class="selector-class">.popup</span> &#123;</span><br><span class="line">  <span class="attribute">opacity</span>: <span class="number">0.9</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="selector-class">.tag-cloud-tags</span>&#123;</span><br><span class="line"><span class="attribute">margin-top</span>: <span class="number">3%</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="selector-class">.tag-cloud</span> <span class="selector-tag">a</span> &#123;</span><br><span class="line">-webkit-<span class="attribute">box-shadow</span>: <span class="number">0</span> <span class="number">1px</span> <span class="number">3px</span> <span class="built_in">rgba</span>(<span class="number">0</span>,<span class="number">0</span>,<span class="number">0</span>,.<span class="number">12</span>),</span><br><span class="line"><span class="number">0</span> <span class="number">1px</span> <span class="number">2px</span> <span class="built_in">rgba</span>(<span class="number">0</span>, <span class="number">0</span>, <span class="number">0</span>, .<span class="number">24</span>);</span><br><span class="line">-moz-<span class="attribute">box-shadow</span>: <span class="number">0</span> <span class="number">1px</span> <span class="number">3px</span> <span class="built_in">rgba</span>(<span class="number">0</span>,<span class="number">0</span>,<span class="number">0</span>, .<span class="number">12</span>),</span><br><span class="line"><span class="number">0</span> <span class="number">1px</span> <span class="number">2px</span> <span class="built_in">rgba</span>(<span class="number">0</span>,<span class="number">0</span>,<span class="number">0</span>, .<span class="number">24</span>);</span><br><span class="line"><span class="attribute">box-shadow</span>: <span class="number">0</span> <span class="number">1px</span> <span class="number">3px</span> <span class="built_in">rgba</span>(<span class="number">0</span>, <span class="number">0</span>,<span class="number">0</span> .<span class="number">12</span>),</span><br><span class="line"><span class="number">0</span> <span class="number">1px</span> <span class="number">2px</span> <span class="built_in">rgba</span>(<span class="number">0</span>,<span class="number">0</span>,<span class="number">0</span>, .<span class="number">24</span>);</span><br><span class="line"><span class="attribute">transition</span>: .<span class="number">2s</span> ease-out;</span><br><span class="line"><span class="attribute">padding</span>: <span class="number">2px</span> <span class="number">10px</span>;</span><br><span class="line"><span class="attribute">margin</span>: <span class="number">8px</span>;</span><br><span class="line"><span class="attribute">background</span>: <span class="number">#eee</span>;</span><br><span class="line"><span class="attribute">border-bottom</span>: none;</span><br><span class="line"><span class="attribute">border-radius</span>: <span class="number">12px</span>;</span><br><span class="line"><span class="attribute">box-shadow</span>: <span class="number">0</span> <span class="number">1px</span> <span class="number">3px</span> <span class="number">#6f42c1</span>, <span class="number">0</span> <span class="number">1px</span> <span class="number">2px</span> <span class="number">#d9534f</span>;</span><br><span class="line"><span class="attribute">display</span>: inline-block;</span><br><span class="line">&#125;</span><br><span class="line"><span class="selector-class">.tag-cloud</span> <span class="selector-tag">a</span><span class="selector-pseudo">:hover</span>&#123;</span><br><span class="line"><span class="attribute">text-decoration</span>: none;</span><br><span class="line"><span class="attribute">background</span>: <span class="number">#64ceaa</span>;</span><br><span class="line"><span class="attribute">color</span>: <span class="number">#fff</span> <span class="meta">!important</span>;</span><br><span class="line">-webkit-<span class="attribute">box-shadow</span>: <span class="number">0</span> <span class="number">8px</span> <span class="number">16px</span> <span class="number">0</span> <span class="built_in">rgba</span>(<span class="number">0</span>,<span class="number">0</span>,<span class="number">0</span>,.<span class="number">2</span>),</span><br><span class="line"><span class="number">0</span> <span class="number">6px</span> <span class="number">20px</span> <span class="number">0</span> <span class="built_in">rgba</span>(<span class="number">0</span>, <span class="number">0</span>, <span class="number">0</span>, .<span class="number">19</span>);</span><br><span class="line">-moz-<span class="attribute">box-shadow</span>: <span class="number">0</span> <span class="number">8px</span> <span class="number">16px</span> <span class="number">0</span> <span class="built_in">rgba</span>(<span class="number">0</span>,<span class="number">0</span>,<span class="number">0</span>, .<span class="number">2</span>),</span><br><span class="line"><span class="number">0</span> <span class="number">6px</span> <span class="number">20px</span> <span class="number">0</span> <span class="built_in">rgba</span>(<span class="number">0</span>,<span class="number">0</span>,<span class="number">0</span>, .<span class="number">19</span>);</span><br><span class="line"><span class="attribute">box-shadow</span>: <span class="number">0</span> <span class="number">8px</span> <span class="number">16px</span> <span class="number">0</span> <span class="built_in">rgba</span>(<span class="number">0</span>, <span class="number">0</span>,<span class="number">0</span> .<span class="number">2</span>),</span><br><span class="line"><span class="number">0</span> <span class="number">6px</span> <span class="number">20px</span> <span class="number">0</span> <span class="built_in">rgba</span>(<span class="number">0</span>,<span class="number">0</span>,<span class="number">0</span>, .<span class="number">19</span>);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>注意：其中 header-inner 不能使用 opacity 进行配置。因为 header-inner 包含 header.swig 中的所有内容。若使用 opacity 进行配置，子结点会出很多问题。</p><p>无_custom/custom.styl 文件时，在根目录source下创建 _data文件夹创建styles.styl文件加入css代码，主题_config.yml 文件修改：</p><figure class="highlight yaml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line"><span class="attr">custom_file_path:</span></span><br><span class="line">  <span class="comment">#head: source/_data/head.swig</span></span><br><span class="line">  <span class="comment">#header: source/_data/header.swig</span></span><br><span class="line">  <span class="comment">#sidebar: source/_data/sidebar.swig</span></span><br><span class="line">  <span class="comment">#postMeta: source/_data/post-meta.swig</span></span><br><span class="line">  <span class="comment">#postBodyEnd: source/_data/post-body-end.swig</span></span><br><span class="line">  <span class="comment">#footer: source/_data/footer.swig</span></span><br><span class="line">  <span class="comment">#bodyEnd: source/_data/body-end.swig</span></span><br><span class="line">  <span class="comment">#variable: source/_data/variables.styl</span></span><br><span class="line">  <span class="comment">#mixin: source/_data/mixins.styl</span></span><br><span class="line">  <span class="attr">style:</span> <span class="string">source/_data/styles.styl</span></span><br></pre></td></tr></table></figure><p><img src="https://cdn.jsdelivr.net/gh/zsxfa/CDN/img/md/2022/02/21/1645454150.png" alt="desc"></p><h2 id="修改博客字体颜色"><a href="#修改博客字体颜色" class="headerlink" title="修改博客字体颜色"></a>修改博客字体颜色</h2><p>在根目录source下的 _data文件夹下的tyles.styl文件加入css代码</p><figure class="highlight css"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">//修改字体颜色</span><br><span class="line"><span class="selector-tag">body</span> &#123;</span><br><span class="line">    <span class="attribute">color</span>: <span class="number">#000</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="修改标题栏背景图片"><a href="#修改标题栏背景图片" class="headerlink" title="修改标题栏背景图片"></a>修改标题栏背景图片</h2><p>在根目录source下的 _data文件夹下的tyles.styl文件加入css代码</p><figure class="highlight css"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">//标题栏</span><br><span class="line"><span class="selector-class">.site-brand-container</span> &#123;</span><br><span class="line">  <span class="attribute">background</span>: <span class="built_in">url</span>(<span class="string">/images/titlebackground.jpg</span>); </span><br><span class="line">  <span class="attribute">background-size</span>: cover;      //填充</span><br><span class="line">    <span class="attribute">background-position</span>:<span class="number">50%</span> <span class="number">50%</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="修改文章底部的那个带-号的标签"><a href="#修改文章底部的那个带-号的标签" class="headerlink" title="修改文章底部的那个带#号的标签"></a>修改文章底部的那个带#号的标签</h2><p>具体实现方法</p><p>修改模板/themes/next/layout/_macro/post.swig，搜索 rel=”tag”&gt;，将 # 换成<i class="fa fa-tag"></i></p><p><img src="https://cdn.jsdelivr.net/gh/zsxfa/CDN/img/md/2022/02/19/1645275901.png" alt="desc"></p><h2 id="修改分类层级显示"><a href="#修改分类层级显示" class="headerlink" title="修改分类层级显示"></a>修改分类层级显示</h2><h3 id="修改-post-njk"><a href="#修改-post-njk" class="headerlink" title="修改 post.njk"></a>修改 post.njk</h3><p><strong>打开</strong>　<code>\blog\themes\next\layout\_macro\post.swig</code></p><p>查找</p><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">&#123;&#123; __(&#x27;symbol.comma&#x27;) &#125;&#125;</span><br></pre></td></tr></table></figure><p>改为</p><figure class="highlight handlebars"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="template-variable">&#123;&#123; <span class="name">__</span>(<span class="name">&#x27;&gt;&#x27;</span>) &#125;&#125;</span></span><br></pre></td></tr></table></figure><h2 id="在每篇文章末尾统一添加“本文结束”标记"><a href="#在每篇文章末尾统一添加“本文结束”标记" class="headerlink" title="在每篇文章末尾统一添加“本文结束”标记"></a>在每篇文章末尾统一添加“本文结束”标记</h2><p>在路径 <strong>\themes\next\layout\_macro</strong> 中新建 <strong>passage-end-tag.swig</strong> 文件,并添加以下内容：</p><p>这里的图标名称来自于<a href="http://fontawesome.io/icons/">FontAwesome icon</a>。</p><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">div</span>&gt;</span></span><br><span class="line">    &#123;% if not is_index %&#125;</span><br><span class="line">        <span class="tag">&lt;<span class="name">div</span> <span class="attr">style</span>=<span class="string">&quot;text-align:center;color: #ccc;font-size:14px;&quot;</span>&gt;</span>-------------文章结束感谢阅读-------------<span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">    &#123;% endif %&#125;</span><br><span class="line"><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br></pre></td></tr></table></figure><p>接着打开<strong>\themes\next\layout\_macro\post.swig</strong>文件，在post-body 之后， post-footer之前添加</p><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">&#123;% include &#x27;passage-end-tag.swig&#x27; %&#125;</span><br></pre></td></tr></table></figure><p>然后打开主题配置文件（_config.yml),在末尾添加：</p><figure class="highlight yaml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 文章末尾添加“本文结束”标记</span></span><br><span class="line"><span class="attr">passage_end_tag:</span></span><br><span class="line">  <span class="attr">enabled:</span> <span class="literal">true</span></span><br></pre></td></tr></table></figure><h2 id="设置网站图标"><a href="#设置网站图标" class="headerlink" title="设置网站图标"></a>设置网站图标</h2><p>默认的网站图标是一个N，当然是需要制定一个图了，在网上找到图后，将其放在/themes/next/source/images里面，然后在主题配置文件中修改下图所示图片位置</p><figure class="highlight yaml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="attr">favicon:</span></span><br><span class="line">  <span class="comment">#small: /images/favicon-16x16-next.png</span></span><br><span class="line">  <span class="attr">medium:</span> <span class="string">/images/alien.png</span></span><br><span class="line">  <span class="comment">#apple_touch_icon: /images/apple-touch-icon-next.png</span></span><br><span class="line">  <span class="comment">#safari_pinned_tab: /images/logo.svg</span></span><br><span class="line">  <span class="comment">#android_manifest: /images/manifest.json</span></span><br><span class="line">  <span class="comment">#ms_browserconfig: /images/browserconfig.xml</span></span><br></pre></td></tr></table></figure><h2 id="hexo添加tag-cloud"><a href="#hexo添加tag-cloud" class="headerlink" title="hexo添加tag cloud"></a>hexo添加tag cloud</h2><p>首先执行命令：</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">npm install hexo-tag-cloud</span><br></pre></td></tr></table></figure><p>然后需要你去修改主题的 tagcloud 的模板</p><ol><li><p>sidebar中添加：</p><p>找到文件 <code>next/layout/_macro/sidebar.swig</code>, 然后添加如下内容。</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line">&#123;% if site.tags.length &gt; 1 %&#125;</span><br><span class="line">&lt;script type=&quot;text/javascript&quot; charset=&quot;utf-8&quot; src=&quot;&#123;&#123; url_for(&#x27;/js/tagcloud.js&#x27;) &#125;&#125;&quot;&gt;&lt;/script&gt;</span><br><span class="line">&lt;script type=&quot;text/javascript&quot; charset=&quot;utf-8&quot; src=&quot;&#123;&#123; url_for(&#x27;/js/tagcanvas.js&#x27;) &#125;&#125;&quot;&gt;&lt;/script&gt;</span><br><span class="line">&lt;div class=&quot;widget-wrap&quot;&gt;</span><br><span class="line">    &lt;h3 class=&quot;widget-title&quot;&gt;Tag Cloud&lt;/h3&gt;</span><br><span class="line">    &lt;div id=&quot;myCanvasContainer&quot; class=&quot;widget tagcloud&quot;&gt;</span><br><span class="line">        &lt;canvas width=&quot;250&quot; height=&quot;250&quot; id=&quot;resCanvas&quot; style=&quot;width:100%&quot;&gt;</span><br><span class="line">            &#123;&#123; list_tags() &#125;&#125;</span><br><span class="line">        &lt;/canvas&gt;</span><br><span class="line">    &lt;/div&gt;</span><br><span class="line">&lt;/div&gt;</span><br><span class="line">&#123;% endif %&#125;</span><br><span class="line"></span><br><span class="line">&#123;%- if theme.back2top.enable and theme.back2top.sidebar %&#125;...</span><br></pre></td></tr></table></figure></li><li><p>tag页添加：</p><p>在themes/next/layout/page.swig中添加代码效果如下：</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line">&#123;% if site.tags.length &gt; 1 %&#125;</span><br><span class="line">&lt;script type=&quot;text/javascript&quot; charset=&quot;utf-8&quot; src=&quot;/js/tagcloud.js&quot;&gt;&lt;/script&gt;</span><br><span class="line">&lt;script type=&quot;text/javascript&quot; charset=&quot;utf-8&quot; src=&quot;/js/tagcanvas.js&quot;&gt;&lt;/script&gt;</span><br><span class="line">&lt;div class=&quot;widget-wrap&quot;&gt;</span><br><span class="line">   &lt;div id=&quot;myCanvasContainer&quot; class=&quot;widget tagcloud&quot; style=&quot;margin-left: 33%;&quot;&gt;</span><br><span class="line">      &lt;canvas width=&quot;400&quot; height=&quot;400&quot; id=&quot;resCanvas&quot; style=&quot;width=100%&quot;&gt;</span><br><span class="line">           &#123;&#123; list_tags() &#125;&#125;</span><br><span class="line">      &lt;/canvas&gt;</span><br><span class="line">    &lt;/div&gt;</span><br><span class="line">&lt;/div&gt;</span><br><span class="line">&#123;% endif %&#125; </span><br><span class="line">&#123;% elif page.type === &#x27;categories&#x27; %&#125;...</span><br></pre></td></tr></table></figure><p>效果：</p><p><img src="https://cdn.jsdelivr.net/gh/zsxfa/CDN/img/md/2022/02/20/1645352927.png" alt="desc"></p></li></ol><h3 id="自定义"><a href="#自定义" class="headerlink" title="自定义"></a>自定义</h3><p> 在博客的根目录，找到<code>_config.yml</code>文件，最后添加如下的配置项:</p><figure class="highlight yaml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># hexo-tag-cloud</span></span><br><span class="line"><span class="attr">tag_cloud:</span></span><br><span class="line">    <span class="attr">textFont:</span> <span class="string">Trebuchet</span> <span class="string">MS,</span> <span class="string">Helvetica</span></span><br><span class="line">    <span class="attr">textColor:</span> <span class="string">&#x27;#00f&#x27;</span> </span><br><span class="line">    <span class="attr">textHeight:</span> <span class="number">25</span></span><br><span class="line">    <span class="attr">outlineColor:</span> <span class="string">&#x27;#E2E1D1&#x27;</span></span><br><span class="line">    <span class="attr">maxSpeed:</span> <span class="number">0.5</span></span><br></pre></td></tr></table></figure><blockquote><p>textColor: ‘#00f’ 字体颜色<br>textHeight: 25 字体高度，根据部署的效果调整<br>maxSpeed: 0.5 文字滚动速度，根据自己喜好调整</p></blockquote><h2 id="添加live2d模型"><a href="#添加live2d模型" class="headerlink" title="添加live2d模型"></a>添加live2d模型</h2><ol><li><p>命令行输入 <code>npm install --save hexo-helper-live2d</code> 获取插件。、</p></li><li><p>输入 <code>npm install [name]</code> 即可下载相应的模型，将 <code>[name]</code> 更换成模型名称即可，更多模型选择<a href="https://link.juejin.cn/?target=https://github.com/xiazeyu/live2d-widget-models">点击获取</a>，各个模型的预览请<a href="https://link.juejin.cn/?target=https://huaji8.top/post/live2d-plugin-2.0/">访问这里</a>。</p></li><li><p>打开站点目录下的 <code>_config.yml</code> 文件，添加如下代码：</p><figure class="highlight yaml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br></pre></td><td class="code"><pre><span class="line"><span class="attr">live2d:</span></span><br><span class="line">    <span class="attr">enable:</span> <span class="literal">true</span></span><br><span class="line">    <span class="attr">scriptFrom:</span> <span class="string">local</span></span><br><span class="line">    <span class="attr">pluginRootPath:</span> <span class="string">live2dw/</span> <span class="comment"># 插件在站点上的根目录(相对路径)</span></span><br><span class="line">    <span class="attr">pluginJsPath:</span> <span class="string">lib/</span> <span class="comment"># 脚本文件相对与插件根目录路径</span></span><br><span class="line">    <span class="attr">pluginModelPath:</span> <span class="string">assets/</span> <span class="comment"># 模型文件相对与插件根目录路径</span></span><br><span class="line">    <span class="attr">tagMode:</span> <span class="literal">false</span> <span class="comment"># 标签模式, 是否仅替换 live2dtag标签而非插入到所有页面中</span></span><br><span class="line">    <span class="attr">debug:</span> <span class="literal">false</span></span><br><span class="line">    <span class="attr">model:</span></span><br><span class="line">        <span class="attr">use:</span> <span class="string">live2d-widget-model-hijiki</span> <span class="comment"># 模型名字</span></span><br><span class="line">        <span class="attr">scale:</span> <span class="number">1</span></span><br><span class="line">        <span class="attr">hHeadPos:</span> <span class="number">0.5</span></span><br><span class="line">        <span class="attr">vHeadPos:</span> <span class="number">0.618</span></span><br><span class="line">    <span class="attr">display:</span></span><br><span class="line">        <span class="attr">superSample:</span> <span class="number">2</span></span><br><span class="line">        <span class="attr">width:</span> <span class="number">150</span>  <span class="comment"># 显示位置及大小 我设置的250*500</span></span><br><span class="line">        <span class="attr">height:</span> <span class="number">300</span></span><br><span class="line">        <span class="attr">position:</span> <span class="string">right</span></span><br><span class="line">        <span class="attr">hOffset:</span> <span class="number">0</span></span><br><span class="line">        <span class="attr">vOffset:</span> <span class="number">-20</span></span><br><span class="line">    <span class="attr">mobile:</span></span><br><span class="line">        <span class="attr">show:</span> <span class="literal">false</span>  <span class="comment"># 手机显示开关，建议关闭</span></span><br><span class="line">        <span class="attr">scale:</span> <span class="number">0.5</span></span><br><span class="line">    <span class="attr">react:</span></span><br><span class="line">        <span class="attr">opacityDefault:</span> <span class="number">0.7</span> <span class="comment"># 模型透明度</span></span><br><span class="line">        <span class="attr">opacityOnHover:</span> <span class="number">0.2</span></span><br></pre></td></tr></table></figure></li><li><p>我们在<code>node_modules</code>目录下面找到<code>live2d-widget-model-hijiki</code>这个文件夹，把这个文件夹复制下来 找到我们的<code>hexo</code>博客的根目录(因为我们是在根目录的<code>_config.yml</code>里添加的配置)新建一个文件夹叫做<code>live2d_models</code>，把刚刚我们复制的文件粘贴过来</p></li><li><p>在配置文件中把<code>use</code>后面改成我们复制在<code>live2d_models</code>文件夹里面的模型目录名称，这样我们就完成了修改</p></li></ol><p><img src="https://cdn.jsdelivr.net/gh/zsxfa/CDN/img/md/2022/02/20/1645359445.png" alt="desc"></p><h2 id="添加鼠标点击效果"><a href="#添加鼠标点击效果" class="headerlink" title="添加鼠标点击效果"></a>添加鼠标点击效果</h2><h3 id="爱心效果"><a href="#爱心效果" class="headerlink" title="爱心效果"></a>爱心效果</h3><ol><li><p>在 <code>themes/你选择的主题/source/js</code> 下新建文件 <code>heart.js</code> ，添加：</p><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br></pre></td><td class="code"><pre><span class="line">!(<span class="keyword">function</span> (<span class="params">e, t, a</span>) &#123;</span><br><span class="line">  <span class="keyword">function</span> <span class="title function_">n</span>(<span class="params"></span>) &#123;</span><br><span class="line">    <span class="title function_">c</span>(</span><br><span class="line">      <span class="string">&quot;.heart&#123;width: 10px;height: 10px;position: fixed;background: #f00;transform: rotate(45deg);-webkit-transform: rotate(45deg);-moz-transform: rotate(45deg);&#125;.heart:after,.heart:before&#123;content: &#x27;&#x27;;width: inherit;height: inherit;background: inherit;border-radius: 50%;-webkit-border-radius: 500%;-moz-border-radius: 50%;position: fixed;&#125;.heart:after&#123;top: -5px;&#125;.heart:before&#123;left: -5px;&#125;&quot;</span></span><br><span class="line">    ),</span><br><span class="line">      <span class="title function_">o</span>(),</span><br><span class="line">      <span class="title function_">r</span>();</span><br><span class="line">  &#125;</span><br><span class="line">  <span class="keyword">function</span> <span class="title function_">r</span>(<span class="params"></span>) &#123;</span><br><span class="line">    <span class="keyword">for</span> (<span class="keyword">var</span> e = <span class="number">0</span>; e &lt; d.<span class="property">length</span>; e++)</span><br><span class="line">      d[e].<span class="property">alpha</span> &lt;= <span class="number">0</span></span><br><span class="line">        ? (t.<span class="property">body</span>.<span class="title function_">removeChild</span>(d[e].<span class="property">el</span>), d.<span class="title function_">splice</span>(e, <span class="number">1</span>))</span><br><span class="line">        : (d[e].<span class="property">y</span>--,</span><br><span class="line">          (d[e].<span class="property">scale</span> += <span class="number">0.004</span>),</span><br><span class="line">          (d[e].<span class="property">alpha</span> -= <span class="number">0.013</span>),</span><br><span class="line">          (d[e].<span class="property">el</span>.<span class="property">style</span>.<span class="property">cssText</span> =</span><br><span class="line">            <span class="string">&quot;left:&quot;</span> +</span><br><span class="line">            d[e].<span class="property">x</span> +</span><br><span class="line">            <span class="string">&quot;px;top:&quot;</span> +</span><br><span class="line">            d[e].<span class="property">y</span> +</span><br><span class="line">            <span class="string">&quot;px;opacity:&quot;</span> +</span><br><span class="line">            d[e].<span class="property">alpha</span> +</span><br><span class="line">            <span class="string">&quot;;transform:scale(&quot;</span> +</span><br><span class="line">            d[e].<span class="property">scale</span> +</span><br><span class="line">            <span class="string">&quot;,&quot;</span> +</span><br><span class="line">            d[e].<span class="property">scale</span> +</span><br><span class="line">            <span class="string">&quot;) rotate(45deg);background:&quot;</span> +</span><br><span class="line">            d[e].<span class="property">color</span> +</span><br><span class="line">            <span class="string">&quot;;z-index:99999&quot;</span>));</span><br><span class="line">    <span class="title function_">requestAnimationFrame</span>(r);</span><br><span class="line">  &#125;</span><br><span class="line">  <span class="keyword">function</span> <span class="title function_">o</span>(<span class="params"></span>) &#123;</span><br><span class="line">    <span class="keyword">var</span> t = <span class="string">&quot;function&quot;</span> == <span class="keyword">typeof</span> e.<span class="property">onclick</span> &amp;&amp; e.<span class="property">onclick</span>;</span><br><span class="line">    e.<span class="property">onclick</span> = <span class="keyword">function</span> (<span class="params">e</span>) &#123;</span><br><span class="line">      t &amp;&amp; <span class="title function_">t</span>(), <span class="title function_">i</span>(e);</span><br><span class="line">    &#125;;</span><br><span class="line">  &#125;</span><br><span class="line">  <span class="keyword">function</span> <span class="title function_">i</span>(<span class="params">e</span>) &#123;</span><br><span class="line">    <span class="keyword">var</span> a = t.<span class="title function_">createElement</span>(<span class="string">&quot;div&quot;</span>);</span><br><span class="line">    (a.<span class="property">className</span> = <span class="string">&quot;heart&quot;</span>),</span><br><span class="line">      d.<span class="title function_">push</span>(&#123;</span><br><span class="line">        <span class="attr">el</span>: a,</span><br><span class="line">        <span class="attr">x</span>: e.<span class="property">clientX</span> - <span class="number">5</span>,</span><br><span class="line">        <span class="attr">y</span>: e.<span class="property">clientY</span> - <span class="number">5</span>,</span><br><span class="line">        <span class="attr">scale</span>: <span class="number">1</span>,</span><br><span class="line">        <span class="attr">alpha</span>: <span class="number">1</span>,</span><br><span class="line">        <span class="attr">color</span>: <span class="title function_">s</span>(),</span><br><span class="line">      &#125;),</span><br><span class="line">      t.<span class="property">body</span>.<span class="title function_">appendChild</span>(a);</span><br><span class="line">  &#125;</span><br><span class="line">  <span class="keyword">function</span> <span class="title function_">c</span>(<span class="params">e</span>) &#123;</span><br><span class="line">    <span class="keyword">var</span> a = t.<span class="title function_">createElement</span>(<span class="string">&quot;style&quot;</span>);</span><br><span class="line">    a.<span class="property">type</span> = <span class="string">&quot;text/css&quot;</span>;</span><br><span class="line">    <span class="keyword">try</span> &#123;</span><br><span class="line">      a.<span class="title function_">appendChild</span>(t.<span class="title function_">createTextNode</span>(e));</span><br><span class="line">    &#125; <span class="keyword">catch</span> (t) &#123;</span><br><span class="line">      a.<span class="property">styleSheet</span>.<span class="property">cssText</span> = e;</span><br><span class="line">    &#125;</span><br><span class="line">    t.<span class="title function_">getElementsByTagName</span>(<span class="string">&quot;head&quot;</span>)[<span class="number">0</span>].<span class="title function_">appendChild</span>(a);</span><br><span class="line">  &#125;</span><br><span class="line">  <span class="keyword">function</span> <span class="title function_">s</span>(<span class="params"></span>) &#123;</span><br><span class="line">    <span class="keyword">return</span> (</span><br><span class="line">      <span class="string">&quot;rgb(&quot;</span> +</span><br><span class="line">      ~~(<span class="number">255</span> * <span class="title class_">Math</span>.<span class="title function_">random</span>()) +</span><br><span class="line">      <span class="string">&quot;,&quot;</span> +</span><br><span class="line">      ~~(<span class="number">255</span> * <span class="title class_">Math</span>.<span class="title function_">random</span>()) +</span><br><span class="line">      <span class="string">&quot;,&quot;</span> +</span><br><span class="line">      ~~(<span class="number">255</span> * <span class="title class_">Math</span>.<span class="title function_">random</span>()) +</span><br><span class="line">      <span class="string">&quot;)&quot;</span></span><br><span class="line">    );</span><br><span class="line">  &#125;</span><br><span class="line">  <span class="keyword">var</span> d = [];</span><br><span class="line">  (e.<span class="property">requestAnimationFrame</span> = (<span class="keyword">function</span> (<span class="params"></span>) &#123;</span><br><span class="line">    <span class="keyword">return</span> (</span><br><span class="line">      e.<span class="property">requestAnimationFrame</span> ||</span><br><span class="line">      e.<span class="property">webkitRequestAnimationFrame</span> ||</span><br><span class="line">      e.<span class="property">mozRequestAnimationFrame</span> ||</span><br><span class="line">      e.<span class="property">oRequestAnimationFrame</span> ||</span><br><span class="line">      e.<span class="property">msRequestAnimationFrame</span> ||</span><br><span class="line">      <span class="keyword">function</span> (<span class="params">e</span>) &#123;</span><br><span class="line">        <span class="built_in">setTimeout</span>(e, <span class="number">1e3</span> / <span class="number">60</span>);</span><br><span class="line">      &#125;</span><br><span class="line">    );</span><br><span class="line">  &#125;)()),</span><br><span class="line">    <span class="title function_">n</span>();</span><br><span class="line">&#125;)(<span class="variable language_">window</span>, <span class="variable language_">document</span>);</span><br></pre></td></tr></table></figure></li><li><p><code>themes/你选择的主题/layout/_layout.swig</code>下添加：</p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">&lt;!-- 页面点击小红心 --&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">script</span> <span class="attr">type</span>=<span class="string">&quot;text/javascript&quot;</span> <span class="attr">src</span>=<span class="string">&quot;/js/heart.js&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br></pre></td></tr></table></figure></li></ol><p><img src="https://cdn.jsdelivr.net/gh/zsxfa/CDN/img/md/2022/02/20/1645359740.png" alt="desc"></p><h3 id="烟花爆炸效果"><a href="#烟花爆炸效果" class="headerlink" title="烟花爆炸效果"></a>烟花爆炸效果</h3><ol><li><p>在 <code>themes/你选择的主题/source/js</code> 下新建文件 <code>firework.js</code> ，添加：</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br><span class="line">116</span><br><span class="line">117</span><br><span class="line">118</span><br><span class="line">119</span><br><span class="line">120</span><br><span class="line">121</span><br><span class="line">122</span><br><span class="line">123</span><br><span class="line">124</span><br><span class="line">125</span><br><span class="line">126</span><br><span class="line">127</span><br><span class="line">128</span><br><span class="line">129</span><br><span class="line">130</span><br><span class="line">131</span><br><span class="line">132</span><br><span class="line">133</span><br><span class="line">134</span><br><span class="line">135</span><br><span class="line">136</span><br><span class="line">137</span><br><span class="line">138</span><br><span class="line">139</span><br><span class="line">140</span><br><span class="line">141</span><br><span class="line">142</span><br><span class="line">143</span><br><span class="line">144</span><br><span class="line">145</span><br><span class="line">146</span><br><span class="line">147</span><br><span class="line">148</span><br><span class="line">149</span><br><span class="line">150</span><br><span class="line">151</span><br><span class="line">152</span><br><span class="line">153</span><br><span class="line">154</span><br><span class="line">155</span><br><span class="line">156</span><br><span class="line">157</span><br><span class="line">158</span><br><span class="line">159</span><br><span class="line">160</span><br><span class="line">161</span><br><span class="line">162</span><br><span class="line">163</span><br><span class="line">164</span><br><span class="line">165</span><br><span class="line">166</span><br><span class="line">167</span><br><span class="line">168</span><br><span class="line">169</span><br><span class="line">170</span><br><span class="line">171</span><br><span class="line">172</span><br><span class="line">173</span><br><span class="line">174</span><br><span class="line">175</span><br><span class="line">176</span><br><span class="line">177</span><br><span class="line">178</span><br><span class="line">179</span><br><span class="line">180</span><br><span class="line">181</span><br><span class="line">182</span><br><span class="line">183</span><br><span class="line">184</span><br><span class="line">185</span><br><span class="line">186</span><br><span class="line">187</span><br><span class="line">188</span><br><span class="line">189</span><br><span class="line">190</span><br><span class="line">191</span><br><span class="line">192</span><br><span class="line">193</span><br><span class="line">194</span><br><span class="line">195</span><br><span class="line">196</span><br><span class="line">197</span><br><span class="line">198</span><br><span class="line">199</span><br><span class="line">200</span><br><span class="line">201</span><br><span class="line">202</span><br><span class="line">203</span><br><span class="line">204</span><br><span class="line">205</span><br><span class="line">206</span><br><span class="line">207</span><br><span class="line">208</span><br><span class="line">209</span><br><span class="line">210</span><br><span class="line">211</span><br><span class="line">212</span><br><span class="line">213</span><br><span class="line">214</span><br><span class="line">215</span><br><span class="line">216</span><br><span class="line">217</span><br><span class="line">218</span><br><span class="line">219</span><br><span class="line">220</span><br><span class="line">221</span><br><span class="line">222</span><br><span class="line">223</span><br><span class="line">224</span><br><span class="line">225</span><br><span class="line">226</span><br><span class="line">227</span><br><span class="line">228</span><br><span class="line">229</span><br><span class="line">230</span><br><span class="line">231</span><br><span class="line">232</span><br><span class="line">233</span><br><span class="line">234</span><br><span class="line">235</span><br><span class="line">236</span><br><span class="line">237</span><br><span class="line">238</span><br><span class="line">239</span><br><span class="line">240</span><br><span class="line">241</span><br><span class="line">242</span><br><span class="line">243</span><br><span class="line">244</span><br><span class="line">245</span><br><span class="line">246</span><br><span class="line">247</span><br><span class="line">248</span><br><span class="line">249</span><br><span class="line">250</span><br><span class="line">251</span><br><span class="line">252</span><br><span class="line">253</span><br><span class="line">254</span><br><span class="line">255</span><br><span class="line">256</span><br><span class="line">257</span><br><span class="line">258</span><br><span class="line">259</span><br><span class="line">260</span><br><span class="line">261</span><br><span class="line">262</span><br><span class="line">263</span><br><span class="line">264</span><br><span class="line">265</span><br><span class="line">266</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&quot;use strict&quot;</span>;</span><br><span class="line"><span class="keyword">function</span> <span class="title function_">updateCoords</span>(<span class="params">e</span>) &#123;</span><br><span class="line">  (pointerX =</span><br><span class="line">    (e.<span class="property">clientX</span> || e.<span class="property">touches</span>[<span class="number">0</span>].<span class="property">clientX</span>) -</span><br><span class="line">    canvasEl.<span class="title function_">getBoundingClientRect</span>().<span class="property">left</span>),</span><br><span class="line">    (pointerY =</span><br><span class="line">      e.<span class="property">clientY</span> || e.<span class="property">touches</span>[<span class="number">0</span>].<span class="property">clientY</span> - canvasEl.<span class="title function_">getBoundingClientRect</span>().<span class="property">top</span>);</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">function</span> <span class="title function_">setParticuleDirection</span>(<span class="params">e</span>) &#123;</span><br><span class="line">  <span class="keyword">var</span> t = (anime.<span class="title function_">random</span>(<span class="number">0</span>, <span class="number">360</span>) * <span class="title class_">Math</span>.<span class="property">PI</span>) / <span class="number">180</span>,</span><br><span class="line">    a = anime.<span class="title function_">random</span>(<span class="number">50</span>, <span class="number">180</span>),</span><br><span class="line">    n = [-<span class="number">1</span>, <span class="number">1</span>][anime.<span class="title function_">random</span>(<span class="number">0</span>, <span class="number">1</span>)] * a;</span><br><span class="line">  <span class="keyword">return</span> &#123; <span class="attr">x</span>: e.<span class="property">x</span> + n * <span class="title class_">Math</span>.<span class="title function_">cos</span>(t), <span class="attr">y</span>: e.<span class="property">y</span> + n * <span class="title class_">Math</span>.<span class="title function_">sin</span>(t) &#125;;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">function</span> <span class="title function_">createParticule</span>(<span class="params">e, t</span>) &#123;</span><br><span class="line">  <span class="keyword">var</span> a = &#123;&#125;;</span><br><span class="line">  <span class="keyword">return</span> (</span><br><span class="line">    (a.<span class="property">x</span> = e),</span><br><span class="line">    (a.<span class="property">y</span> = t),</span><br><span class="line">    (a.<span class="property">color</span> = colors[anime.<span class="title function_">random</span>(<span class="number">0</span>, colors.<span class="property">length</span> - <span class="number">1</span>)]),</span><br><span class="line">    (a.<span class="property">radius</span> = anime.<span class="title function_">random</span>(<span class="number">16</span>, <span class="number">32</span>)),</span><br><span class="line">    (a.<span class="property">endPos</span> = <span class="title function_">setParticuleDirection</span>(a)),</span><br><span class="line">    (a.<span class="property">draw</span> = <span class="keyword">function</span> (<span class="params"></span>) &#123;</span><br><span class="line">      ctx.<span class="title function_">beginPath</span>(),</span><br><span class="line">        ctx.<span class="title function_">arc</span>(a.<span class="property">x</span>, a.<span class="property">y</span>, a.<span class="property">radius</span>, <span class="number">0</span>, <span class="number">2</span> * <span class="title class_">Math</span>.<span class="property">PI</span>, !<span class="number">0</span>),</span><br><span class="line">        (ctx.<span class="property">fillStyle</span> = a.<span class="property">color</span>),</span><br><span class="line">        ctx.<span class="title function_">fill</span>();</span><br><span class="line">    &#125;),</span><br><span class="line">    a</span><br><span class="line">  );</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">function</span> <span class="title function_">createCircle</span>(<span class="params">e, t</span>) &#123;</span><br><span class="line">  <span class="keyword">var</span> a = &#123;&#125;;</span><br><span class="line">  <span class="keyword">return</span> (</span><br><span class="line">    (a.<span class="property">x</span> = e),</span><br><span class="line">    (a.<span class="property">y</span> = t),</span><br><span class="line">    (a.<span class="property">color</span> = <span class="string">&quot;#F00&quot;</span>),</span><br><span class="line">    (a.<span class="property">radius</span> = <span class="number">0.1</span>),</span><br><span class="line">    (a.<span class="property">alpha</span> = <span class="number">0.5</span>),</span><br><span class="line">    (a.<span class="property">lineWidth</span> = <span class="number">6</span>),</span><br><span class="line">    (a.<span class="property">draw</span> = <span class="keyword">function</span> (<span class="params"></span>) &#123;</span><br><span class="line">      (ctx.<span class="property">globalAlpha</span> = a.<span class="property">alpha</span>),</span><br><span class="line">        ctx.<span class="title function_">beginPath</span>(),</span><br><span class="line">        ctx.<span class="title function_">arc</span>(a.<span class="property">x</span>, a.<span class="property">y</span>, a.<span class="property">radius</span>, <span class="number">0</span>, <span class="number">2</span> * <span class="title class_">Math</span>.<span class="property">PI</span>, !<span class="number">0</span>),</span><br><span class="line">        (ctx.<span class="property">lineWidth</span> = a.<span class="property">lineWidth</span>),</span><br><span class="line">        (ctx.<span class="property">strokeStyle</span> = a.<span class="property">color</span>),</span><br><span class="line">        ctx.<span class="title function_">stroke</span>(),</span><br><span class="line">        (ctx.<span class="property">globalAlpha</span> = <span class="number">1</span>);</span><br><span class="line">    &#125;),</span><br><span class="line">    a</span><br><span class="line">  );</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">function</span> <span class="title function_">renderParticule</span>(<span class="params">e</span>) &#123;</span><br><span class="line">  <span class="keyword">for</span> (<span class="keyword">var</span> t = <span class="number">0</span>; t &lt; e.<span class="property">animatables</span>.<span class="property">length</span>; t++) &#123;</span><br><span class="line">    e.<span class="property">animatables</span>[t].<span class="property">target</span>.<span class="title function_">draw</span>();</span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">function</span> <span class="title function_">animateParticules</span>(<span class="params">e, t</span>) &#123;</span><br><span class="line">  <span class="keyword">for</span> (<span class="keyword">var</span> a = <span class="title function_">createCircle</span>(e, t), n = [], i = <span class="number">0</span>; i &lt; numberOfParticules; i++) &#123;</span><br><span class="line">    n.<span class="title function_">push</span>(<span class="title function_">createParticule</span>(e, t));</span><br><span class="line">  &#125;</span><br><span class="line">  anime</span><br><span class="line">    .<span class="title function_">timeline</span>()</span><br><span class="line">    .<span class="title function_">add</span>(&#123;</span><br><span class="line">      <span class="attr">targets</span>: n,</span><br><span class="line">      <span class="attr">x</span>: <span class="keyword">function</span> (<span class="params">e</span>) &#123;</span><br><span class="line">        <span class="keyword">return</span> e.<span class="property">endPos</span>.<span class="property">x</span>;</span><br><span class="line">      &#125;,</span><br><span class="line">      <span class="attr">y</span>: <span class="keyword">function</span> (<span class="params">e</span>) &#123;</span><br><span class="line">        <span class="keyword">return</span> e.<span class="property">endPos</span>.<span class="property">y</span>;</span><br><span class="line">      &#125;,</span><br><span class="line">      <span class="attr">radius</span>: <span class="number">0.1</span>,</span><br><span class="line">      <span class="attr">duration</span>: anime.<span class="title function_">random</span>(<span class="number">1200</span>, <span class="number">1800</span>),</span><br><span class="line">      <span class="attr">easing</span>: <span class="string">&quot;easeOutExpo&quot;</span>,</span><br><span class="line">      <span class="attr">update</span>: renderParticule,</span><br><span class="line">    &#125;)</span><br><span class="line">    .<span class="title function_">add</span>(&#123;</span><br><span class="line">      <span class="attr">targets</span>: a,</span><br><span class="line">      <span class="attr">radius</span>: anime.<span class="title function_">random</span>(<span class="number">80</span>, <span class="number">160</span>),</span><br><span class="line">      <span class="attr">lineWidth</span>: <span class="number">0</span>,</span><br><span class="line">      <span class="attr">alpha</span>: &#123; <span class="attr">value</span>: <span class="number">0</span>, <span class="attr">easing</span>: <span class="string">&quot;linear&quot;</span>, <span class="attr">duration</span>: anime.<span class="title function_">random</span>(<span class="number">600</span>, <span class="number">800</span>) &#125;,</span><br><span class="line">      <span class="attr">duration</span>: anime.<span class="title function_">random</span>(<span class="number">1200</span>, <span class="number">1800</span>),</span><br><span class="line">      <span class="attr">easing</span>: <span class="string">&quot;easeOutExpo&quot;</span>,</span><br><span class="line">      <span class="attr">update</span>: renderParticule,</span><br><span class="line">      <span class="attr">offset</span>: <span class="number">0</span>,</span><br><span class="line">    &#125;);</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">function</span> <span class="title function_">debounce</span>(<span class="params">e, t</span>) &#123;</span><br><span class="line">  <span class="keyword">var</span> a;</span><br><span class="line">  <span class="keyword">return</span> <span class="keyword">function</span> (<span class="params"></span>) &#123;</span><br><span class="line">    <span class="keyword">var</span> n = <span class="variable language_">this</span>,</span><br><span class="line">      i = <span class="variable language_">arguments</span>;</span><br><span class="line">    <span class="built_in">clearTimeout</span>(a),</span><br><span class="line">      (a = <span class="built_in">setTimeout</span>(<span class="keyword">function</span> (<span class="params"></span>) &#123;</span><br><span class="line">        e.<span class="title function_">apply</span>(n, i);</span><br><span class="line">      &#125;, t));</span><br><span class="line">  &#125;;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">var</span> canvasEl = <span class="variable language_">document</span>.<span class="title function_">querySelector</span>(<span class="string">&quot;.fireworks&quot;</span>);</span><br><span class="line"><span class="keyword">if</span> (canvasEl) &#123;</span><br><span class="line">  <span class="keyword">var</span> ctx = canvasEl.<span class="title function_">getContext</span>(<span class="string">&quot;2d&quot;</span>),</span><br><span class="line">    numberOfParticules = <span class="number">30</span>,</span><br><span class="line">    pointerX = <span class="number">0</span>,</span><br><span class="line">    pointerY = <span class="number">0</span>,</span><br><span class="line">    tap = <span class="string">&quot;mousedown&quot;</span>,</span><br><span class="line">    colors = [<span class="string">&quot;#FF1461&quot;</span>, <span class="string">&quot;#18FF92&quot;</span>, <span class="string">&quot;#5A87FF&quot;</span>, <span class="string">&quot;#FBF38C&quot;</span>],</span><br><span class="line">    setCanvasSize = <span class="title function_">debounce</span>(<span class="keyword">function</span> (<span class="params"></span>) &#123;</span><br><span class="line">      (canvasEl.<span class="property">width</span> = <span class="number">2</span> * <span class="variable language_">window</span>.<span class="property">innerWidth</span>),</span><br><span class="line">        (canvasEl.<span class="property">height</span> = <span class="number">2</span> * <span class="variable language_">window</span>.<span class="property">innerHeight</span>),</span><br><span class="line">        (canvasEl.<span class="property">style</span>.<span class="property">width</span> = <span class="variable language_">window</span>.<span class="property">innerWidth</span> + <span class="string">&quot;px&quot;</span>),</span><br><span class="line">        (canvasEl.<span class="property">style</span>.<span class="property">height</span> = <span class="variable language_">window</span>.<span class="property">innerHeight</span> + <span class="string">&quot;px&quot;</span>),</span><br><span class="line">        canvasEl.<span class="title function_">getContext</span>(<span class="string">&quot;2d&quot;</span>).<span class="title function_">scale</span>(<span class="number">2</span>, <span class="number">2</span>);</span><br><span class="line">    &#125;, <span class="number">500</span>),</span><br><span class="line">    render = <span class="title function_">anime</span>(&#123;</span><br><span class="line">      <span class="attr">duration</span>: <span class="number">1</span> / <span class="number">0</span>,</span><br><span class="line">      <span class="attr">update</span>: <span class="keyword">function</span> (<span class="params"></span>) &#123;</span><br><span class="line">        ctx.<span class="title function_">clearRect</span>(<span class="number">0</span>, <span class="number">0</span>, canvasEl.<span class="property">width</span>, canvasEl.<span class="property">height</span>);</span><br><span class="line">      &#125;,</span><br><span class="line">    &#125;);</span><br><span class="line">  <span class="variable language_">document</span>.<span class="title function_">addEventListener</span>(</span><br><span class="line">    tap,</span><br><span class="line">    <span class="keyword">function</span> (<span class="params">e</span>) &#123;</span><br><span class="line">      <span class="string">&quot;sidebar&quot;</span> !== e.<span class="property">target</span>.<span class="property">id</span> &amp;&amp;</span><br><span class="line">        <span class="string">&quot;toggle-sidebar&quot;</span> !== e.<span class="property">target</span>.<span class="property">id</span> &amp;&amp;</span><br><span class="line">        <span class="string">&quot;A&quot;</span> !== e.<span class="property">target</span>.<span class="property">nodeName</span> &amp;&amp;</span><br><span class="line">        <span class="string">&quot;IMG&quot;</span> !== e.<span class="property">target</span>.<span class="property">nodeName</span> &amp;&amp;</span><br><span class="line">        (render.<span class="title function_">play</span>(), <span class="title function_">updateCoords</span>(e), <span class="title function_">animateParticules</span>(pointerX, pointerY));</span><br><span class="line">    &#125;,</span><br><span class="line">    !<span class="number">1</span></span><br><span class="line">  ),</span><br><span class="line">    <span class="title function_">setCanvasSize</span>(),</span><br><span class="line">    <span class="variable language_">window</span>.<span class="title function_">addEventListener</span>(<span class="string">&quot;resize&quot;</span>, setCanvasSize, !<span class="number">1</span>);</span><br><span class="line">&#125;</span><br><span class="line">(<span class="string">&quot;use strict&quot;</span>);</span><br><span class="line"><span class="keyword">function</span> <span class="title function_">updateCoords</span>(<span class="params">e</span>) &#123;</span><br><span class="line">  (pointerX =</span><br><span class="line">    (e.<span class="property">clientX</span> || e.<span class="property">touches</span>[<span class="number">0</span>].<span class="property">clientX</span>) -</span><br><span class="line">    canvasEl.<span class="title function_">getBoundingClientRect</span>().<span class="property">left</span>),</span><br><span class="line">    (pointerY =</span><br><span class="line">      e.<span class="property">clientY</span> || e.<span class="property">touches</span>[<span class="number">0</span>].<span class="property">clientY</span> - canvasEl.<span class="title function_">getBoundingClientRect</span>().<span class="property">top</span>);</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">function</span> <span class="title function_">setParticuleDirection</span>(<span class="params">e</span>) &#123;</span><br><span class="line">  <span class="keyword">var</span> t = (anime.<span class="title function_">random</span>(<span class="number">0</span>, <span class="number">360</span>) * <span class="title class_">Math</span>.<span class="property">PI</span>) / <span class="number">180</span>,</span><br><span class="line">    a = anime.<span class="title function_">random</span>(<span class="number">50</span>, <span class="number">180</span>),</span><br><span class="line">    n = [-<span class="number">1</span>, <span class="number">1</span>][anime.<span class="title function_">random</span>(<span class="number">0</span>, <span class="number">1</span>)] * a;</span><br><span class="line">  <span class="keyword">return</span> &#123; <span class="attr">x</span>: e.<span class="property">x</span> + n * <span class="title class_">Math</span>.<span class="title function_">cos</span>(t), <span class="attr">y</span>: e.<span class="property">y</span> + n * <span class="title class_">Math</span>.<span class="title function_">sin</span>(t) &#125;;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">function</span> <span class="title function_">createParticule</span>(<span class="params">e, t</span>) &#123;</span><br><span class="line">  <span class="keyword">var</span> a = &#123;&#125;;</span><br><span class="line">  <span class="keyword">return</span> (</span><br><span class="line">    (a.<span class="property">x</span> = e),</span><br><span class="line">    (a.<span class="property">y</span> = t),</span><br><span class="line">    (a.<span class="property">color</span> = colors[anime.<span class="title function_">random</span>(<span class="number">0</span>, colors.<span class="property">length</span> - <span class="number">1</span>)]),</span><br><span class="line">    (a.<span class="property">radius</span> = anime.<span class="title function_">random</span>(<span class="number">16</span>, <span class="number">32</span>)),</span><br><span class="line">    (a.<span class="property">endPos</span> = <span class="title function_">setParticuleDirection</span>(a)),</span><br><span class="line">    (a.<span class="property">draw</span> = <span class="keyword">function</span> (<span class="params"></span>) &#123;</span><br><span class="line">      ctx.<span class="title function_">beginPath</span>(),</span><br><span class="line">        ctx.<span class="title function_">arc</span>(a.<span class="property">x</span>, a.<span class="property">y</span>, a.<span class="property">radius</span>, <span class="number">0</span>, <span class="number">2</span> * <span class="title class_">Math</span>.<span class="property">PI</span>, !<span class="number">0</span>),</span><br><span class="line">        (ctx.<span class="property">fillStyle</span> = a.<span class="property">color</span>),</span><br><span class="line">        ctx.<span class="title function_">fill</span>();</span><br><span class="line">    &#125;),</span><br><span class="line">    a</span><br><span class="line">  );</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">function</span> <span class="title function_">createCircle</span>(<span class="params">e, t</span>) &#123;</span><br><span class="line">  <span class="keyword">var</span> a = &#123;&#125;;</span><br><span class="line">  <span class="keyword">return</span> (</span><br><span class="line">    (a.<span class="property">x</span> = e),</span><br><span class="line">    (a.<span class="property">y</span> = t),</span><br><span class="line">    (a.<span class="property">color</span> = <span class="string">&quot;#F00&quot;</span>),</span><br><span class="line">    (a.<span class="property">radius</span> = <span class="number">0.1</span>),</span><br><span class="line">    (a.<span class="property">alpha</span> = <span class="number">0.5</span>),</span><br><span class="line">    (a.<span class="property">lineWidth</span> = <span class="number">6</span>),</span><br><span class="line">    (a.<span class="property">draw</span> = <span class="keyword">function</span> (<span class="params"></span>) &#123;</span><br><span class="line">      (ctx.<span class="property">globalAlpha</span> = a.<span class="property">alpha</span>),</span><br><span class="line">        ctx.<span class="title function_">beginPath</span>(),</span><br><span class="line">        ctx.<span class="title function_">arc</span>(a.<span class="property">x</span>, a.<span class="property">y</span>, a.<span class="property">radius</span>, <span class="number">0</span>, <span class="number">2</span> * <span class="title class_">Math</span>.<span class="property">PI</span>, !<span class="number">0</span>),</span><br><span class="line">        (ctx.<span class="property">lineWidth</span> = a.<span class="property">lineWidth</span>),</span><br><span class="line">        (ctx.<span class="property">strokeStyle</span> = a.<span class="property">color</span>),</span><br><span class="line">        ctx.<span class="title function_">stroke</span>(),</span><br><span class="line">        (ctx.<span class="property">globalAlpha</span> = <span class="number">1</span>);</span><br><span class="line">    &#125;),</span><br><span class="line">    a</span><br><span class="line">  );</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">function</span> <span class="title function_">renderParticule</span>(<span class="params">e</span>) &#123;</span><br><span class="line">  <span class="keyword">for</span> (<span class="keyword">var</span> t = <span class="number">0</span>; t &lt; e.<span class="property">animatables</span>.<span class="property">length</span>; t++) &#123;</span><br><span class="line">    e.<span class="property">animatables</span>[t].<span class="property">target</span>.<span class="title function_">draw</span>();</span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">function</span> <span class="title function_">animateParticules</span>(<span class="params">e, t</span>) &#123;</span><br><span class="line">  <span class="keyword">for</span> (<span class="keyword">var</span> a = <span class="title function_">createCircle</span>(e, t), n = [], i = <span class="number">0</span>; i &lt; numberOfParticules; i++) &#123;</span><br><span class="line">    n.<span class="title function_">push</span>(<span class="title function_">createParticule</span>(e, t));</span><br><span class="line">  &#125;</span><br><span class="line">  anime</span><br><span class="line">    .<span class="title function_">timeline</span>()</span><br><span class="line">    .<span class="title function_">add</span>(&#123;</span><br><span class="line">      <span class="attr">targets</span>: n,</span><br><span class="line">      <span class="attr">x</span>: <span class="keyword">function</span> (<span class="params">e</span>) &#123;</span><br><span class="line">        <span class="keyword">return</span> e.<span class="property">endPos</span>.<span class="property">x</span>;</span><br><span class="line">      &#125;,</span><br><span class="line">      <span class="attr">y</span>: <span class="keyword">function</span> (<span class="params">e</span>) &#123;</span><br><span class="line">        <span class="keyword">return</span> e.<span class="property">endPos</span>.<span class="property">y</span>;</span><br><span class="line">      &#125;,</span><br><span class="line">      <span class="attr">radius</span>: <span class="number">0.1</span>,</span><br><span class="line">      <span class="attr">duration</span>: anime.<span class="title function_">random</span>(<span class="number">1200</span>, <span class="number">1800</span>),</span><br><span class="line">      <span class="attr">easing</span>: <span class="string">&quot;easeOutExpo&quot;</span>,</span><br><span class="line">      <span class="attr">update</span>: renderParticule,</span><br><span class="line">    &#125;)</span><br><span class="line">    .<span class="title function_">add</span>(&#123;</span><br><span class="line">      <span class="attr">targets</span>: a,</span><br><span class="line">      <span class="attr">radius</span>: anime.<span class="title function_">random</span>(<span class="number">80</span>, <span class="number">160</span>),</span><br><span class="line">      <span class="attr">lineWidth</span>: <span class="number">0</span>,</span><br><span class="line">      <span class="attr">alpha</span>: &#123; <span class="attr">value</span>: <span class="number">0</span>, <span class="attr">easing</span>: <span class="string">&quot;linear&quot;</span>, <span class="attr">duration</span>: anime.<span class="title function_">random</span>(<span class="number">600</span>, <span class="number">800</span>) &#125;,</span><br><span class="line">      <span class="attr">duration</span>: anime.<span class="title function_">random</span>(<span class="number">1200</span>, <span class="number">1800</span>),</span><br><span class="line">      <span class="attr">easing</span>: <span class="string">&quot;easeOutExpo&quot;</span>,</span><br><span class="line">      <span class="attr">update</span>: renderParticule,</span><br><span class="line">      <span class="attr">offset</span>: <span class="number">0</span>,</span><br><span class="line">    &#125;);</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">function</span> <span class="title function_">debounce</span>(<span class="params">e, t</span>) &#123;</span><br><span class="line">  <span class="keyword">var</span> a;</span><br><span class="line">  <span class="keyword">return</span> <span class="keyword">function</span> (<span class="params"></span>) &#123;</span><br><span class="line">    <span class="keyword">var</span> n = <span class="variable language_">this</span>,</span><br><span class="line">      i = <span class="variable language_">arguments</span>;</span><br><span class="line">    <span class="built_in">clearTimeout</span>(a),</span><br><span class="line">      (a = <span class="built_in">setTimeout</span>(<span class="keyword">function</span> (<span class="params"></span>) &#123;</span><br><span class="line">        e.<span class="title function_">apply</span>(n, i);</span><br><span class="line">      &#125;, t));</span><br><span class="line">  &#125;;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">var</span> canvasEl = <span class="variable language_">document</span>.<span class="title function_">querySelector</span>(<span class="string">&quot;.fireworks&quot;</span>);</span><br><span class="line"><span class="keyword">if</span> (canvasEl) &#123;</span><br><span class="line">  <span class="keyword">var</span> ctx = canvasEl.<span class="title function_">getContext</span>(<span class="string">&quot;2d&quot;</span>),</span><br><span class="line">    numberOfParticules = <span class="number">30</span>,</span><br><span class="line">    pointerX = <span class="number">0</span>,</span><br><span class="line">    pointerY = <span class="number">0</span>,</span><br><span class="line">    tap = <span class="string">&quot;mousedown&quot;</span>,</span><br><span class="line">    colors = [<span class="string">&quot;#FF1461&quot;</span>, <span class="string">&quot;#18FF92&quot;</span>, <span class="string">&quot;#5A87FF&quot;</span>, <span class="string">&quot;#FBF38C&quot;</span>],</span><br><span class="line">    setCanvasSize = <span class="title function_">debounce</span>(<span class="keyword">function</span> (<span class="params"></span>) &#123;</span><br><span class="line">      (canvasEl.<span class="property">width</span> = <span class="number">2</span> * <span class="variable language_">window</span>.<span class="property">innerWidth</span>),</span><br><span class="line">        (canvasEl.<span class="property">height</span> = <span class="number">2</span> * <span class="variable language_">window</span>.<span class="property">innerHeight</span>),</span><br><span class="line">        (canvasEl.<span class="property">style</span>.<span class="property">width</span> = <span class="variable language_">window</span>.<span class="property">innerWidth</span> + <span class="string">&quot;px&quot;</span>),</span><br><span class="line">        (canvasEl.<span class="property">style</span>.<span class="property">height</span> = <span class="variable language_">window</span>.<span class="property">innerHeight</span> + <span class="string">&quot;px&quot;</span>),</span><br><span class="line">        canvasEl.<span class="title function_">getContext</span>(<span class="string">&quot;2d&quot;</span>).<span class="title function_">scale</span>(<span class="number">2</span>, <span class="number">2</span>);</span><br><span class="line">    &#125;, <span class="number">500</span>),</span><br><span class="line">    render = <span class="title function_">anime</span>(&#123;</span><br><span class="line">      <span class="attr">duration</span>: <span class="number">1</span> / <span class="number">0</span>,</span><br><span class="line">      <span class="attr">update</span>: <span class="keyword">function</span> (<span class="params"></span>) &#123;</span><br><span class="line">        ctx.<span class="title function_">clearRect</span>(<span class="number">0</span>, <span class="number">0</span>, canvasEl.<span class="property">width</span>, canvasEl.<span class="property">height</span>);</span><br><span class="line">      &#125;,</span><br><span class="line">    &#125;);</span><br><span class="line">  <span class="variable language_">document</span>.<span class="title function_">addEventListener</span>(</span><br><span class="line">    tap,</span><br><span class="line">    <span class="keyword">function</span> (<span class="params">e</span>) &#123;</span><br><span class="line">      <span class="string">&quot;sidebar&quot;</span> !== e.<span class="property">target</span>.<span class="property">id</span> &amp;&amp;</span><br><span class="line">        <span class="string">&quot;toggle-sidebar&quot;</span> !== e.<span class="property">target</span>.<span class="property">id</span> &amp;&amp;</span><br><span class="line">        <span class="string">&quot;A&quot;</span> !== e.<span class="property">target</span>.<span class="property">nodeName</span> &amp;&amp;</span><br><span class="line">        <span class="string">&quot;IMG&quot;</span> !== e.<span class="property">target</span>.<span class="property">nodeName</span> &amp;&amp;</span><br><span class="line">        (render.<span class="title function_">play</span>(), <span class="title function_">updateCoords</span>(e), <span class="title function_">animateParticules</span>(pointerX, pointerY));</span><br><span class="line">    &#125;,</span><br><span class="line">    !<span class="number">1</span></span><br><span class="line">  ),</span><br><span class="line">    <span class="title function_">setCanvasSize</span>(),</span><br><span class="line">    <span class="variable language_">window</span>.<span class="title function_">addEventListener</span>(<span class="string">&quot;resize&quot;</span>, setCanvasSize, !<span class="number">1</span>);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></li><li><p>在 <code>themes/你选择的主题/layout/_layout.swig</code> 下添加：</p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">canvas</span> <span class="attr">class</span>=<span class="string">&quot;fireworks&quot;</span> <span class="attr">style</span>=<span class="string">&quot;position: fixed;left: 0;top: 0;z-index: 1; pointer-events: none;&quot;</span> &gt;</span><span class="tag">&lt;/<span class="name">canvas</span>&gt;</span> </span><br><span class="line"><span class="tag">&lt;<span class="name">script</span> <span class="attr">type</span>=<span class="string">&quot;text/javascript&quot;</span> <span class="attr">src</span>=<span class="string">&quot;//cdn.bootcss.com/animejs/2.2.0/anime.min.js&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">script</span>&gt;</span> </span><br><span class="line"><span class="tag">&lt;<span class="name">script</span> <span class="attr">type</span>=<span class="string">&quot;text/javascript&quot;</span> <span class="attr">src</span>=<span class="string">&quot;/js/firework.js&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br></pre></td></tr></table></figure></li></ol><p><img src="https://cdn.jsdelivr.net/gh/zsxfa/CDN/img/md/2022/02/20/1645361568.png" alt="desc"></p><h2 id="添加网站运行时间"><a href="#添加网站运行时间" class="headerlink" title="添加网站运行时间"></a>添加网站运行时间</h2><ol><li><p>记录网站运行时间在页脚显示，所以在 <code>themes/你选择的主题/layout/_partial/footer.swig</code> 下添加：</p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">&lt;!--添加运行时间--&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">span</span> <span class="attr">id</span>=<span class="string">&quot;sitetime&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">span</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">script</span> <span class="attr">language</span>=<span class="string">javascript</span>&gt;</span><span class="language-javascript"></span></span><br><span class="line"><span class="language-javascript"><span class="keyword">function</span> <span class="title function_">siteTime</span>(<span class="params"></span>)&#123;</span></span><br><span class="line"><span class="language-javascript"><span class="variable language_">window</span>.<span class="built_in">setTimeout</span>(<span class="string">&quot;siteTime()&quot;</span>, <span class="number">1000</span>);</span></span><br><span class="line"><span class="language-javascript"><span class="keyword">var</span> seconds = <span class="number">1000</span>;</span></span><br><span class="line"><span class="language-javascript"><span class="keyword">var</span> minutes = seconds * <span class="number">60</span>;</span></span><br><span class="line"><span class="language-javascript"><span class="keyword">var</span> hours = minutes * <span class="number">60</span>;</span></span><br><span class="line"><span class="language-javascript"><span class="keyword">var</span> days = hours * <span class="number">24</span>;</span></span><br><span class="line"><span class="language-javascript"><span class="keyword">var</span> years = days * <span class="number">365</span>;</span></span><br><span class="line"><span class="language-javascript"><span class="keyword">var</span> today = <span class="keyword">new</span> <span class="title class_">Date</span>();</span></span><br><span class="line"><span class="language-javascript"><span class="keyword">var</span> todayYear = today.<span class="title function_">getFullYear</span>();</span></span><br><span class="line"><span class="language-javascript"><span class="keyword">var</span> todayMonth = today.<span class="title function_">getMonth</span>()+<span class="number">1</span>;</span></span><br><span class="line"><span class="language-javascript"><span class="keyword">var</span> todayDate = today.<span class="title function_">getDate</span>();</span></span><br><span class="line"><span class="language-javascript"><span class="keyword">var</span> todayHour = today.<span class="title function_">getHours</span>();</span></span><br><span class="line"><span class="language-javascript"><span class="keyword">var</span> todayMinute = today.<span class="title function_">getMinutes</span>();</span></span><br><span class="line"><span class="language-javascript"><span class="keyword">var</span> todaySecond = today.<span class="title function_">getSeconds</span>();</span></span><br><span class="line"><span class="language-javascript"><span class="comment">/* </span></span></span><br><span class="line"><span class="comment"><span class="language-javascript">      Date.UTC() -- 返回date对象距世界标准时间(UTC)1970年1月1日午夜之间的毫秒数(时间戳)</span></span></span><br><span class="line"><span class="comment"><span class="language-javascript">      year - 作为date对象的年份，为4位年份值</span></span></span><br><span class="line"><span class="comment"><span class="language-javascript">      month - 0-11之间的整数，做为date对象的月份</span></span></span><br><span class="line"><span class="comment"><span class="language-javascript">      day - 1-31之间的整数，做为date对象的天数</span></span></span><br><span class="line"><span class="comment"><span class="language-javascript">      hours - 0(午夜24点)-23之间的整数，做为date对象的小时数</span></span></span><br><span class="line"><span class="comment"><span class="language-javascript">      minutes - 0-59之间的整数，做为date对象的分钟数</span></span></span><br><span class="line"><span class="comment"><span class="language-javascript">      seconds - 0-59之间的整数，做为date对象的秒数</span></span></span><br><span class="line"><span class="comment"><span class="language-javascript">      microseconds - 0-999之间的整数，做为date对象的毫秒数</span></span></span><br><span class="line"><span class="comment"><span class="language-javascript">     */</span></span></span><br><span class="line"><span class="language-javascript"><span class="keyword">var</span> t1 = <span class="title class_">Date</span>.<span class="title function_">UTC</span>(<span class="number">2022</span>,<span class="number">01</span>,<span class="number">10</span>,<span class="number">20</span>,<span class="number">00</span>,<span class="number">00</span>); <span class="comment">//北京时间2018-2-13 00:00:00</span></span></span><br><span class="line"><span class="language-javascript"><span class="keyword">var</span> t2 = <span class="title class_">Date</span>.<span class="title function_">UTC</span>(todayYear,todayMonth,todayDate,todayHour,todayMinute,todaySecond);</span></span><br><span class="line"><span class="language-javascript"><span class="keyword">var</span> diff = t2-t1;</span></span><br><span class="line"><span class="language-javascript"><span class="keyword">var</span> diffYears = <span class="title class_">Math</span>.<span class="title function_">floor</span>(diff/years);</span></span><br><span class="line"><span class="language-javascript"><span class="keyword">var</span> diffDays = <span class="title class_">Math</span>.<span class="title function_">floor</span>((diff/days)-diffYears*<span class="number">365</span>);</span></span><br><span class="line"><span class="language-javascript"><span class="keyword">var</span> diffHours = <span class="title class_">Math</span>.<span class="title function_">floor</span>((diff-(diffYears*<span class="number">365</span>+diffDays)*days)/hours);</span></span><br><span class="line"><span class="language-javascript"><span class="keyword">var</span> diffMinutes = <span class="title class_">Math</span>.<span class="title function_">floor</span>((diff-(diffYears*<span class="number">365</span>+diffDays)*days-diffHours*hours)/minutes);</span></span><br><span class="line"><span class="language-javascript"><span class="keyword">var</span> diffSeconds = <span class="title class_">Math</span>.<span class="title function_">floor</span>((diff-(diffYears*<span class="number">365</span>+diffDays)*days-diffHours*hours-diffMinutes*minutes)/seconds);</span></span><br><span class="line"><span class="language-javascript"><span class="variable language_">document</span>.<span class="title function_">getElementById</span>(<span class="string">&quot;sitetime&quot;</span>).<span class="property">innerHTML</span>=<span class="string">&quot; 本站已运行&quot;</span>+<span class="comment">/*diffYears+&quot; 年 &quot;+*/</span>diffDays+<span class="string">&quot; 天 &quot;</span>+diffHours+<span class="string">&quot; 小时 &quot;</span>+diffMinutes+<span class="string">&quot; 分钟 &quot;</span>+diffSeconds+<span class="string">&quot; 秒&quot;</span>;</span></span><br><span class="line"><span class="language-javascript">&#125;</span></span><br><span class="line"><span class="language-javascript"><span class="title function_">siteTime</span>();</span></span><br><span class="line"><span class="language-javascript"></span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br><span class="line"><span class="comment">&lt;!--// 添加运行时间--&gt;</span></span><br></pre></td></tr></table></figure></li></ol><p><img src="https://cdn.jsdelivr.net/gh/zsxfa/CDN/img/md/2022/02/20/1645361979.png" alt="desc"></p><h2 id="添加浏览器标题恶搞"><a href="#添加浏览器标题恶搞" class="headerlink" title="添加浏览器标题恶搞"></a>添加浏览器标题恶搞</h2><ol><li><p>在用户切换标签页的时候，更改浏览器标题呼唤用户回归，在 <code>themes/你选择的主题/source/js</code> 下新建文件 <code>funny.js</code> ，添加：</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">var</span> <span class="title class_">OriginTitle</span> = <span class="variable language_">document</span>.<span class="property">title</span>;</span><br><span class="line"><span class="keyword">var</span> titleTime;</span><br><span class="line"><span class="variable language_">document</span>.<span class="title function_">addEventListener</span>(<span class="string">&#x27;visibilitychange&#x27;</span>, <span class="keyword">function</span> (<span class="params"></span>) &#123;</span><br><span class="line">    <span class="keyword">if</span> (<span class="variable language_">document</span>.<span class="property">hidden</span>) &#123;</span><br><span class="line">        <span class="comment">//$(&#x27;[rel=&quot;icon&quot;]&#x27;).attr(&#x27;href&#x27;, &quot;/funny.ico&quot;);</span></span><br><span class="line">        <span class="variable language_">document</span>.<span class="property">title</span> = <span class="string">&#x27;╭(°A°`)╮ 页面崩溃啦 ~&#x27;</span>;</span><br><span class="line">        <span class="built_in">clearTimeout</span>(titleTime);</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">else</span> &#123;</span><br><span class="line">        <span class="comment">//$(&#x27;[rel=&quot;icon&quot;]&#x27;).attr(&#x27;href&#x27;, &quot;/favicon.ico&quot;);</span></span><br><span class="line">        <span class="variable language_">document</span>.<span class="property">title</span> = <span class="string">&#x27;(ฅ&gt;ω&lt;*ฅ) 噫又好啦 ~&#x27;</span> + <span class="title class_">OriginTitle</span>;</span><br><span class="line">        titleTime = <span class="built_in">setTimeout</span>(<span class="keyword">function</span> (<span class="params"></span>) &#123;</span><br><span class="line">            <span class="variable language_">document</span>.<span class="property">title</span> = <span class="title class_">OriginTitle</span>;</span><br><span class="line">        &#125;, <span class="number">2000</span>);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;);</span><br></pre></td></tr></table></figure></li><li><p>其中的 <code>favicon.ico</code> 为正常显示图标，<code>funny.ico</code> 为用户切换后的图标，需要你自己设置</p></li></ol><h2 id="博客代码备份"><a href="#博客代码备份" class="headerlink" title="博客代码备份"></a>博客代码备份</h2><p>使用 <code>hexo d</code> 上传到 Github 的只是编译后的静态文件，博客的代码并没有上传到仓库里。</p><p>这样一旦你的博客代码丢失，你就无法继续更新了。</p><p>为了避免这种情况，我们要把博客代码也上传到仓库里，最好是上传到同一个仓库。</p><p>在本地文件根目录创建 <code>.gitignore</code> 文件，若存在修改为:</p><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">.DS_Store</span><br><span class="line">*.log</span><br><span class="line">node_modules/</span><br><span class="line">.deploy*/</span><br><span class="line">public/</span><br><span class="line">db.json</span><br></pre></td></tr></table></figure><p>在本地文件根目录中初始化 git</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">git init</span><br></pre></td></tr></table></figure><p>创建分支develop</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">git checkout -b develop</span><br></pre></td></tr></table></figure><p>提交到仓库，需要注意的事在提交之前要把themes目录下主题中的 <code>.git</code> 文件夹重命名或者删除，不然的话 git 会把主题当做子模块来处理。</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">git add .</span><br><span class="line">git commit -m &#x27;init&#x27;</span><br></pre></td></tr></table></figure><p>添加远程仓库</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">git remote add origin git@github.com:zsxfa/zsxfa.github.io.git</span><br></pre></td></tr></table></figure><p>push 到远程分支</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">git push origin develop</span><br></pre></td></tr></table></figure><h3 id="在别处使用"><a href="#在别处使用" class="headerlink" title="在别处使用"></a>在别处使用</h3><p>首先要克隆下这个项目</p><figure class="highlight crmsh"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">git <span class="keyword">clone</span> <span class="title">git</span>@github.com:zsxfa/zsxfa.github.io.git</span><br></pre></td></tr></table></figure><p>进入博客目录</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">cd</span> zsxfa.github.io</span><br></pre></td></tr></table></figure><p>切换到博客文件分支</p><figure class="highlight armasm"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="symbol">git</span> checkout -<span class="keyword">b</span> develop origin/develop</span><br></pre></td></tr></table></figure><p>安装hexo</p><figure class="highlight ada"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">npm install hexo <span class="comment">--save</span></span><br></pre></td></tr></table></figure><p>然后编辑、查看</p><figure class="highlight awk"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">hexo g    <span class="regexp">//</span>编译</span><br><span class="line">hexo s    <span class="regexp">//</span>浏览器查看 localhost:<span class="number">4000</span></span><br></pre></td></tr></table></figure><p>提交 git，若在提交过程中出现 <code>ERROR Deployer not found: git</code> 可执行 <code>npm install hexo-deployer-git --save</code> 后重新提交。</p><figure class="highlight ebnf"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="attribute">hexo d</span></span><br></pre></td></tr></table></figure><p>在写了新 markdown 文件后提交 git</p><figure class="highlight pgsql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">git <span class="keyword">add</span> .</span><br><span class="line">git <span class="keyword">commit</span> -m <span class="string">&#x27;新增博客&#x27;</span></span><br><span class="line">git push origin develop</span><br></pre></td></tr></table></figure><p>到此，我们以后只要写完博客发布后记得 push 一下就能实现备份了。</p><h2 id="添加彩色滚动变换字体"><a href="#添加彩色滚动变换字体" class="headerlink" title="添加彩色滚动变换字体"></a>添加彩色滚动变换字体</h2><p>在你想要添加彩色滚动变换字体的地方写入以下代码即可，其中文字可自行更改：</p><p>在<code>D:\Blogs\blog\themes\next\layout\_macro\sidebar.swig</code>中</p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">div</span> <span class="attr">id</span>=<span class="string">&quot;binft&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">script</span>&gt;</span><span class="language-javascript"></span></span><br><span class="line"><span class="language-javascript">    <span class="keyword">var</span> binft = <span class="keyword">function</span> (<span class="params">r</span>) &#123;</span></span><br><span class="line"><span class="language-javascript">      <span class="keyword">function</span> <span class="title function_">t</span>(<span class="params"></span>) &#123;</span></span><br><span class="line"><span class="language-javascript">        <span class="keyword">return</span> b[<span class="title class_">Math</span>.<span class="title function_">floor</span>(<span class="title class_">Math</span>.<span class="title function_">random</span>() * b.<span class="property">length</span>)]</span></span><br><span class="line"><span class="language-javascript">      &#125;  </span></span><br><span class="line"><span class="language-javascript">      <span class="keyword">function</span> <span class="title function_">e</span>(<span class="params"></span>) &#123;</span></span><br><span class="line"><span class="language-javascript">        <span class="keyword">return</span> <span class="title class_">String</span>.<span class="title function_">fromCharCode</span>(<span class="number">94</span> * <span class="title class_">Math</span>.<span class="title function_">random</span>() + <span class="number">33</span>)</span></span><br><span class="line"><span class="language-javascript">      &#125;</span></span><br><span class="line"><span class="language-javascript">      <span class="keyword">function</span> <span class="title function_">n</span>(<span class="params">r</span>) &#123;</span></span><br><span class="line"><span class="language-javascript">        <span class="keyword">for</span> (<span class="keyword">var</span> n = <span class="variable language_">document</span>.<span class="title function_">createDocumentFragment</span>(), i = <span class="number">0</span>; r &gt; i; i++) &#123;</span></span><br><span class="line"><span class="language-javascript">          <span class="keyword">var</span> l = <span class="variable language_">document</span>.<span class="title function_">createElement</span>(<span class="string">&quot;span&quot;</span>);</span></span><br><span class="line"><span class="language-javascript">          l.<span class="property">textContent</span> = <span class="title function_">e</span>(), l.<span class="property">style</span>.<span class="property">color</span> = <span class="title function_">t</span>(), n.<span class="title function_">appendChild</span>(l)</span></span><br><span class="line"><span class="language-javascript">        &#125;</span></span><br><span class="line"><span class="language-javascript">        <span class="keyword">return</span> n</span></span><br><span class="line"><span class="language-javascript">      &#125;</span></span><br><span class="line"><span class="language-javascript">      <span class="keyword">function</span> <span class="title function_">i</span>(<span class="params"></span>) &#123;</span></span><br><span class="line"><span class="language-javascript">        <span class="keyword">var</span> t = o[c.<span class="property">skillI</span>];</span></span><br><span class="line"><span class="language-javascript">        c.<span class="property">step</span> ? c.<span class="property">step</span>-- : (c.<span class="property">step</span> = g, c.<span class="property">prefixP</span> &lt; l.<span class="property">length</span> ? (c.<span class="property">prefixP</span> &gt;= <span class="number">0</span> &amp;&amp; (c.<span class="property">text</span> += l[c.<span class="property">prefixP</span>]), c.<span class="property">prefixP</span>++) : <span class="string">&quot;forward&quot;</span> === c.<span class="property">direction</span> ? c.<span class="property">skillP</span> &lt; t.<span class="property">length</span> ? (c.<span class="property">text</span> += t[c.<span class="property">skillP</span>], c.<span class="property">skillP</span>++) : c.<span class="property">delay</span> ? c.<span class="property">delay</span>-- : (c.<span class="property">direction</span> = <span class="string">&quot;backward&quot;</span>, c.<span class="property">delay</span> = a) : c.<span class="property">skillP</span> &gt; <span class="number">0</span> ? (c.<span class="property">text</span> = c.<span class="property">text</span>.<span class="title function_">slice</span>(<span class="number">0</span>, -<span class="number">1</span>), c.<span class="property">skillP</span>--) : (c.<span class="property">skillI</span> = (c.<span class="property">skillI</span> + <span class="number">1</span>) % o.<span class="property">length</span>, c.<span class="property">direction</span> = <span class="string">&quot;forward&quot;</span>)), r.<span class="property">textContent</span> = c.<span class="property">text</span>, r.<span class="title function_">appendChild</span>(<span class="title function_">n</span>(c.<span class="property">prefixP</span> &lt; l.<span class="property">length</span> ? <span class="title class_">Math</span>.<span class="title function_">min</span>(s, s + c.<span class="property">prefixP</span>) : <span class="title class_">Math</span>.<span class="title function_">min</span>(s, t.<span class="property">length</span> - c.<span class="property">skillP</span>))), <span class="built_in">setTimeout</span>(i, d)</span></span><br><span class="line"><span class="language-javascript">      &#125;</span></span><br><span class="line"><span class="language-javascript">      <span class="keyword">var</span> l = <span class="string">&quot;&quot;</span>,</span></span><br><span class="line"><span class="language-javascript">      o = [<span class="string">&quot;一别都门三改火，天涯踏尽红尘。&quot;</span>, <span class="string">&quot;依然一笑作春温。&quot;</span>,<span class="string">&quot;无波真古井，有节是秋筠。&quot;</span>, <span class="string">&quot;惆怅孤帆连夜发，送行淡月微云。&quot;</span>,<span class="string">&quot;尊前不用翠眉颦。&quot;</span>,<span class="string">&quot;人生如逆旅，我亦是行人。&quot;</span>].<span class="title function_">map</span>(<span class="keyword">function</span> (<span class="params">r</span>) &#123;</span></span><br><span class="line"><span class="language-javascript">      <span class="keyword">return</span> r + <span class="string">&quot;&quot;</span></span></span><br><span class="line"><span class="language-javascript">      &#125;),</span></span><br><span class="line"><span class="language-javascript">      a = <span class="number">2</span>,</span></span><br><span class="line"><span class="language-javascript">      g = <span class="number">1</span>,</span></span><br><span class="line"><span class="language-javascript">      s = <span class="number">5</span>,</span></span><br><span class="line"><span class="language-javascript">      d = <span class="number">75</span>,</span></span><br><span class="line"><span class="language-javascript">      b = [<span class="string">&quot;rgb(110,64,170)&quot;</span>, <span class="string">&quot;rgb(150,61,179)&quot;</span>, <span class="string">&quot;rgb(191,60,175)&quot;</span>, <span class="string">&quot;rgb(228,65,157)&quot;</span>, <span class="string">&quot;rgb(254,75,131)&quot;</span>, <span class="string">&quot;rgb(255,94,99)&quot;</span>, <span class="string">&quot;rgb(255,120,71)&quot;</span>, <span class="string">&quot;rgb(251,150,51)&quot;</span>, <span class="string">&quot;rgb(226,183,47)&quot;</span>, <span class="string">&quot;rgb(198,214,60)&quot;</span>, <span class="string">&quot;rgb(175,240,91)&quot;</span>, <span class="string">&quot;rgb(127,246,88)&quot;</span>, <span class="string">&quot;rgb(82,246,103)&quot;</span>, <span class="string">&quot;rgb(48,239,130)&quot;</span>, <span class="string">&quot;rgb(29,223,163)&quot;</span>, <span class="string">&quot;rgb(26,199,194)&quot;</span>, <span class="string">&quot;rgb(35,171,216)&quot;</span>, <span class="string">&quot;rgb(54,140,225)&quot;</span>, <span class="string">&quot;rgb(76,110,219)&quot;</span>, <span class="string">&quot;rgb(96,84,200)&quot;</span>],</span></span><br><span class="line"><span class="language-javascript">      c = &#123;</span></span><br><span class="line"><span class="language-javascript">        <span class="attr">text</span>: <span class="string">&quot;&quot;</span>,</span></span><br><span class="line"><span class="language-javascript">        <span class="attr">prefixP</span>: -s,</span></span><br><span class="line"><span class="language-javascript">        <span class="attr">skillI</span>: <span class="number">0</span>,</span></span><br><span class="line"><span class="language-javascript">        <span class="attr">skillP</span>: <span class="number">0</span>,</span></span><br><span class="line"><span class="language-javascript">        <span class="attr">direction</span>: <span class="string">&quot;forward&quot;</span>,</span></span><br><span class="line"><span class="language-javascript">        <span class="attr">delay</span>: a,</span></span><br><span class="line"><span class="language-javascript">        <span class="attr">step</span>: g</span></span><br><span class="line"><span class="language-javascript">      &#125;;</span></span><br><span class="line"><span class="language-javascript">      <span class="title function_">i</span>()</span></span><br><span class="line"><span class="language-javascript">      &#125;;</span></span><br><span class="line"><span class="language-javascript">      <span class="title function_">binft</span>(<span class="variable language_">document</span>.<span class="title function_">getElementById</span>(<span class="string">&#x27;binft&#x27;</span>));</span></span><br><span class="line"><span class="language-javascript">  </span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br></pre></td></tr></table></figure><p><img src="https://cdn.jsdelivr.net/gh/zsxfa/CDN/img/md/2022/02/21/1645432348.png" alt="desc"></p><h2 id="修改超链接的颜色"><a href="#修改超链接的颜色" class="headerlink" title="修改超链接的颜色"></a>修改超链接的颜色</h2><p>打开<code>\themes\next\source\css\_common\components\post</code>文件夹下的<code>post.styl</code>,添加以下css样式：</p><figure class="highlight css"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="selector-class">.post-body</span> <span class="selector-tag">p</span> <span class="selector-tag">a</span> &#123;</span><br><span class="line">  <span class="attribute">color</span>: <span class="number">#00ff00</span>;</span><br><span class="line">  <span class="attribute">border-bottom</span>: none;</span><br><span class="line">  &amp;<span class="selector-pseudo">:hover</span> &#123;</span><br><span class="line">    <span class="attribute">color</span>: <span class="number">#fc6423</span>;</span><br><span class="line">    <span class="attribute">text-decoration</span>: underline;</span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>其中选择<code>.post-body</code> 是为了不影响标题，选择 <code>p</code> 是为了不影响首页“阅读全文”的显示样式,颜色可以自己定义。</p><p><img src="https://cdn.jsdelivr.net/gh/zsxfa/CDN/img/md/2022/02/21/1645446067.png" alt="desc"></p><h2 id="文章添加阴影效果"><a href="#文章添加阴影效果" class="headerlink" title="文章添加阴影效果"></a>文章添加阴影效果</h2><p>打开<code>\themes\next\source\css\_common\components\post</code>文件夹下的<code>post.styl</code>,添加以下css样式：</p><figure class="highlight css"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">// 主页文章添加阴影效果</span><br><span class="line"> <span class="selector-class">.post</span> &#123;</span><br><span class="line">   <span class="attribute">margin-top</span>: <span class="number">0px</span>;</span><br><span class="line">   <span class="attribute">margin-bottom</span>: <span class="number">60px</span>;</span><br><span class="line">   <span class="attribute">padding</span>: <span class="number">25px</span>;</span><br><span class="line">   -webkit-<span class="attribute">box-shadow</span>: <span class="number">0</span> <span class="number">0</span> <span class="number">5px</span> <span class="built_in">rgba</span>(<span class="number">202</span>, <span class="number">203</span>, <span class="number">203</span>, .<span class="number">5</span>);</span><br><span class="line">   -moz-<span class="attribute">box-shadow</span>: <span class="number">0</span> <span class="number">0</span> <span class="number">5px</span> <span class="built_in">rgba</span>(<span class="number">202</span>, <span class="number">203</span>, <span class="number">204</span>, .<span class="number">5</span>);</span><br><span class="line">  &#125;</span><br></pre></td></tr></table></figure><h2 id="在博客底部添加访问量"><a href="#在博客底部添加访问量" class="headerlink" title="在博客底部添加访问量"></a>在博客底部添加访问量</h2><p>打开<code>/themes/next/_config.yml</code>,找到<code>busuanzi</code>，修改为以下参数：</p><figure class="highlight yaml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="attr">busuanzi_count:</span></span><br><span class="line">  <span class="attr">enable:</span> <span class="literal">true</span></span><br><span class="line">  <span class="attr">total_visitors:</span> <span class="literal">true</span></span><br><span class="line">  <span class="attr">total_visitors_icon:</span> <span class="string">user</span></span><br><span class="line">  <span class="attr">total_views:</span> <span class="literal">true</span></span><br><span class="line">  <span class="attr">total_views_icon:</span> <span class="string">eye</span></span><br></pre></td></tr></table></figure><p>在<code>themes\next\layout\_partial\footer.swig</code>中添加如下代码</p><figure class="highlight yaml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line"><span class="string">&lt;!--</span> <span class="string">新增访客统计代码</span> <span class="string">--&gt;</span></span><br><span class="line"><span class="string">&lt;div</span> <span class="string">class=&quot;busuanzi-count&quot;&gt;</span></span><br><span class="line"><span class="string">&lt;script</span> <span class="string">async</span> <span class="string">src=&quot;//busuanzi.ibruce.info/busuanzi/2.3/busuanzi.pure.mini.js&quot;&gt;&lt;/script&gt;</span></span><br><span class="line">    <span class="string">&lt;span</span> <span class="string">id=&quot;busuanzi_container_site_pv&quot;&gt;</span></span><br><span class="line"><span class="string">本站总访问量&lt;span</span> <span class="string">id=&quot;busuanzi_value_site_pv&quot;&gt;&lt;/span&gt;次</span></span><br><span class="line"><span class="string">&lt;/span&gt;</span></span><br><span class="line"><span class="string">&lt;span</span> <span class="string">class=&quot;post-meta-divider&quot;&gt;|&lt;/span&gt;</span></span><br><span class="line"><span class="string">&lt;span</span> <span class="string">id=&quot;busuanzi_container_site_uv&quot;&gt;</span></span><br><span class="line"><span class="string">本站访客数&lt;span</span> <span class="string">id=&quot;busuanzi_value_site_uv&quot;&gt;&lt;/span&gt;人次</span></span><br><span class="line"><span class="string">&lt;/span&gt;</span></span><br><span class="line"><span class="string">&lt;/div&gt;</span></span><br><span class="line"><span class="string">&lt;!--</span> <span class="string">新增访客统计代码</span> <span class="string">END--&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="string">&lt;script</span> <span class="string">async</span> <span class="string">src=&quot;//busuanzi.ibruce.info/busuanzi/2.3/busuanzi.pure.mini.js&quot;&gt;&lt;/script&gt;</span></span><br><span class="line"><span class="string">&lt;span</span> <span class="string">id=&quot;busuanzi_container_site_pv&quot;&gt;本站总访问量&lt;span</span> <span class="string">id=&quot;busuanzi_value_site_pv&quot;&gt;&lt;/span&gt;次&lt;/span&gt;</span></span><br></pre></td></tr></table></figure><p>pv的方式，单个用户连续点击n篇文章，记录n次访问量。</p><p>uv的方式，单个用户连续点击n篇文章，只记录1次访客数。</p><h2 id="博客标题设置"><a href="#博客标题设置" class="headerlink" title="博客标题设置"></a>博客标题设置</h2><p>　　这个相关的设置在<code>blog/_config.yml</code>中修改，如下图所示：</p><p><img src="https://cdn.jsdelivr.net/gh/zsxfa/CDN/img/md/2022/02/21/1645447298.png" alt="desc"></p><h2 id="文章字数、阅读时长统计"><a href="#文章字数、阅读时长统计" class="headerlink" title="文章字数、阅读时长统计"></a>文章字数、阅读时长统计</h2><p>打开博客根目录，运行以下命令，安装插件</p><p>复制</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">npm install hexo-symbols-count-time --save</span><br></pre></td></tr></table></figure><p>然后修改博客配置文件，在末尾添加以下代码：</p><figure class="highlight yaml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="attr">symbols_count_time:</span></span><br><span class="line">  <span class="attr">symbols:</span> <span class="literal">true</span>                <span class="comment"># 文章字数统计</span></span><br><span class="line">  <span class="attr">time:</span> <span class="literal">true</span>                   <span class="comment"># 文章阅读时长</span></span><br><span class="line">  <span class="attr">total_symbols:</span> <span class="literal">true</span>          <span class="comment"># 站点总字数统计</span></span><br><span class="line">  <span class="attr">total_time:</span> <span class="literal">true</span>             <span class="comment"># 站点总阅读时长</span></span><br><span class="line">  <span class="attr">exclude_codeblock:</span> <span class="literal">false</span>     <span class="comment"># 排除代码字数统计</span></span><br></pre></td></tr></table></figure><p>　　最后在主题配置文件里面，找到<code>symbols_count_time</code>,修改成以下内容：</p><figure class="highlight yaml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="attr">symbols_count_time:</span></span><br><span class="line">  <span class="attr">separated_meta:</span> <span class="literal">true</span>     <span class="comment"># 是否另起一行（true的话不和发表时间等同一行）</span></span><br><span class="line">  <span class="attr">item_text_post:</span> <span class="literal">true</span>     <span class="comment"># 首页文章统计数量前是否显示文字描述（本文字数、阅读时长）</span></span><br><span class="line">  <span class="attr">item_text_total:</span> <span class="literal">true</span>    <span class="comment"># 页面底部统计数量前是否显示文字描述（站点总字数、站点阅读时长）</span></span><br><span class="line">  <span class="attr">awl:</span> <span class="number">1.5</span>                 <span class="comment"># Average Word Length</span></span><br><span class="line">  <span class="attr">wpm:</span> <span class="number">100</span>                 <span class="comment"># Words Per Minute（每分钟阅读词数）</span></span><br><span class="line">  <span class="attr">suffix:</span> <span class="string">mins.</span></span><br></pre></td></tr></table></figure><h2 id="阅读进度条"><a href="#阅读进度条" class="headerlink" title="阅读进度条"></a>阅读进度条</h2><p>在主题配置文件中搜索<code>reading_progress</code>，找到如下代码段：</p><figure class="highlight yaml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># Reading progress bar</span></span><br><span class="line"><span class="attr">reading_progress:</span></span><br><span class="line">  <span class="attr">enable:</span> <span class="literal">true</span></span><br></pre></td></tr></table></figure><p>将<code>enable</code>设为true来启用</p><h2 id="博客背景动画效果canvas-ribbon"><a href="#博客背景动画效果canvas-ribbon" class="headerlink" title="博客背景动画效果canvas_ribbon"></a>博客背景动画效果canvas_ribbon</h2><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">git clone https://github.com/theme-next/theme-next-canvas-ribbon source/lib/canvas-ribbon</span><br></pre></td></tr></table></figure><p>在主题配置文件中, 搜索: canvas_nest, 修改为自定义值即可.</p><figure class="highlight yaml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br></pre></td><td class="code"><pre><span class="line"><span class="attr">canvas_nest:</span></span><br><span class="line">  <span class="attr">enable:</span> <span class="literal">false</span></span><br><span class="line">  <span class="attr">onmobile:</span> <span class="literal">true</span></span><br><span class="line">  <span class="attr">color:</span> <span class="string">&quot;0,0,255&quot;</span></span><br><span class="line">  <span class="attr">opacity:</span> <span class="number">0.5</span></span><br><span class="line">  <span class="attr">zIndex:</span> <span class="number">-1</span></span><br><span class="line">  <span class="attr">count:</span> <span class="number">99</span></span><br><span class="line"></span><br><span class="line"><span class="attr">three:</span></span><br><span class="line">  <span class="attr">enable:</span> <span class="literal">false</span></span><br><span class="line">  <span class="attr">delay:</span> <span class="literal">false</span></span><br><span class="line">  <span class="attr">three_waves:</span> <span class="literal">true</span></span><br><span class="line">  <span class="attr">canvas_lines:</span> <span class="literal">true</span></span><br><span class="line">  <span class="attr">canvas_sphere:</span> <span class="literal">true</span></span><br><span class="line"></span><br><span class="line"><span class="attr">canvas_ribbon:</span></span><br><span class="line">  <span class="attr">enable:</span> <span class="literal">true</span></span><br><span class="line">  <span class="attr">size:</span> <span class="number">300</span></span><br><span class="line">  <span class="attr">alpha:</span> <span class="number">0.6</span></span><br><span class="line">  <span class="attr">zIndex:</span> <span class="number">-1</span></span><br></pre></td></tr></table></figure><h2 id="内容里的代码块新增复制按钮"><a href="#内容里的代码块新增复制按钮" class="headerlink" title="内容里的代码块新增复制按钮"></a>内容里的代码块新增复制按钮</h2><p>主题配置文件中</p><figure class="highlight yaml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="attr">codeblock:</span></span><br><span class="line">  <span class="attr">copy_button:</span></span><br><span class="line">    <span class="attr">enable:</span> <span class="literal">false</span>      <span class="comment"># 增加复制按钮的开关</span></span><br><span class="line">    <span class="attr">show_result:</span> <span class="literal">false</span> <span class="comment"># 点击复制完后是否显示 复制成功 结果提示</span></span><br></pre></td></tr></table></figure><p><img src="https://cdn.jsdelivr.net/gh/zsxfa/CDN/img/md/2022/02/21/1645453024.png" alt="desc"></p><h2 id="文章原创申明"><a href="#文章原创申明" class="headerlink" title="文章原创申明"></a>文章原创申明</h2><figure class="highlight yaml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="attr">creative_commons:</span></span><br><span class="line">  <span class="attr">license:</span> <span class="string">by-nc-sa</span></span><br><span class="line">  <span class="attr">sidebar:</span> <span class="literal">false</span></span><br><span class="line">  <span class="attr">post:</span> <span class="literal">true</span>       <span class="comment"># 默认显示版权信息</span></span><br><span class="line">  <span class="attr">language:</span></span><br></pre></td></tr></table></figure><h2 id="添加标题底部横线"><a href="#添加标题底部横线" class="headerlink" title="添加标题底部横线"></a>添加标题底部横线</h2><p><strong>打开</strong>　<code>\blog\source\_data\styles.styl</code></p><p><strong>添加</strong></p><figure class="highlight css"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="selector-tag">h1</span>, <span class="selector-tag">h2</span>, <span class="selector-tag">h3</span>, <span class="selector-tag">h4</span>, <span class="selector-tag">h5</span>, <span class="selector-tag">h6</span> &#123;</span><br><span class="line">  <span class="attribute">border-bottom</span>: <span class="number">2px</span> solid <span class="number">#8c8c8c</span>;</span><br><span class="line">  <span class="attribute">padding</span>: <span class="number">0</span> <span class="number">5%</span> <span class="number">2px</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="记忆浏览位置"><a href="#记忆浏览位置" class="headerlink" title="记忆浏览位置"></a>记忆浏览位置</h2><p><strong>关闭本页，重新打开，将返回刚才的浏览进度。</strong></p><p><strong>打开</strong>　<code>\hexo-theme-next\source\js\custom\custom.js</code></p><p><strong>添加</strong>　</p><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// 记忆浏览位置</span></span><br><span class="line">$(<span class="keyword">function</span>(<span class="params"></span>) &#123;</span><br><span class="line">  <span class="keyword">if</span> (<span class="variable language_">localStorage</span>.<span class="property">tempScrollTop</span>) &#123;</span><br><span class="line">    $(<span class="variable language_">window</span>).<span class="title function_">scrollTop</span>(<span class="variable language_">localStorage</span>.<span class="property">tempScrollTop</span>);</span><br><span class="line">  &#125;</span><br><span class="line">&#125;);</span><br><span class="line">$(<span class="variable language_">window</span>).<span class="title function_">on</span>(<span class="string">&quot;scroll&quot;</span>, <span class="keyword">function</span>(<span class="params"></span>) &#123;</span><br><span class="line">  <span class="variable language_">localStorage</span>.<span class="title function_">setItem</span>(<span class="string">&quot;tempScrollTop&quot;</span>, $(<span class="variable language_">window</span>).<span class="title function_">scrollTop</span>());</span><br><span class="line">&#125;);</span><br><span class="line"><span class="variable language_">window</span>.<span class="property">onbeforeunload</span> = <span class="keyword">function</span>(<span class="params"></span>) &#123;</span><br><span class="line">  <span class="keyword">var</span> tempScrollTop = $(<span class="variable language_">window</span>).<span class="title function_">scrollTop</span>();</span><br><span class="line">  <span class="variable language_">localStorage</span>.<span class="title function_">setItem</span>(<span class="string">&quot;tempScrollTop&quot;</span>, tempScrollTop);</span><br><span class="line">&#125;;</span><br></pre></td></tr></table></figure><h2 id="添加Github丝带或者角标"><a href="#添加Github丝带或者角标" class="headerlink" title="添加Github丝带或者角标"></a>添加Github丝带或者角标</h2><p>首先先点击<a href="https://github.com/blog/273-github-ribbons">这里</a>或者<a href="http://tholman.com/github-corners/">这里</a>挑选自己喜欢的样式，并复制代码。</p><p>打开<code>themes/next/layout/_layout.swig</code>文件，在<div class="headband"></div>下面一行添加代码，并把<code>href</code>改为你的博客地址</p><p><img src="https://cdn.jsdelivr.net/gh/zsxfa/CDN/img/md/2022/02/22/1645518273.png" alt="desc"></p><h2 id="添加RSS订阅"><a href="#添加RSS订阅" class="headerlink" title="添加RSS订阅"></a>添加RSS订阅</h2><p>首先在博客的根目录<code>/blog</code>，安装Hexo插件，插件会放在<code>node_modules</code>这个文件夹。</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">npm install --save hexo-generator-feed</span><br></pre></td></tr></table></figure><p>　　接下来打开<code>/blog/_config.yml</code>文件，在末尾添加</p><p>复制</p><figure class="highlight yaml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># RSS订阅</span></span><br><span class="line"><span class="attr">plugin:</span> <span class="string">hexo-generator-feed</span></span><br></pre></td></tr></table></figure><p>　　然后打开<code>/blog/themes/next/_config.yml</code>文件,找到rss，添加参数</p><p>复制</p><figure class="highlight yaml"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="attr">RSS:</span> <span class="string">/atom.xml</span> <span class="string">||</span> <span class="string">fa</span> <span class="string">fa-rss</span></span><br></pre></td></tr></table></figure><p><img src="https://cdn.jsdelivr.net/gh/zsxfa/CDN/img/md/2022/02/22/1645520134.png" alt="desc"></p><p>但是这个RSS链接是放在每篇文章的底部的，而我想要把 RSS 放在侧边栏里，这样会更加简洁明了一些，因此对 next 主题进行了一些小修改。</p><p>具体的修改思路为，先安装 <a href="https://www.npmjs.com/package/hexo-generator-feed">hexo-generator-feed</a> 插件用来生成 RSS feed 接口文件，然后把 RSS 链接部分的代码写进 next 主题的侧边栏模版，把代码需要引用的设置（比如说 RSS 显示的图标、颜色、文本等）写在 next 主题的配置文件 <code>_config.yml</code> 中。</p><ol><li><p>由于上面已经安装过了，所以这里不再重复安装</p></li><li><p>安装好了之后可以在 hexo 博客配置文件 <code>_config.yml</code> 中，添加该插件的配置，比如说使用 Atom 协议还是 RSS2.0 协议，最多在 feed 文件中生成多少条博客内容等：</p><figure class="highlight yaml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># hexo/_config.yml</span></span><br><span class="line"><span class="attr">feed:</span></span><br><span class="line">  <span class="attr">type:</span> <span class="string">atom</span>  <span class="comment"># 使用 Atom 协议</span></span><br><span class="line">  <span class="attr">path:</span> <span class="string">atom.xml</span>  <span class="comment"># 生成的 feed 文件路径</span></span><br><span class="line">  <span class="attr">limit:</span> <span class="number">20</span>  <span class="comment"># 最多生成20条博文</span></span><br></pre></td></tr></table></figure></li><li><p>打开 next 主题的配置文件 <code>next/_config.yml</code> ，在 <code>Sidebar Settings</code> 部分的最后添加以下设置，以便在后面的模版文件中进行引用：</p><figure class="highlight yaml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># next/_config.yml</span></span><br><span class="line"><span class="attr">sidebar_rss:</span></span><br><span class="line">  <span class="attr">text:</span> <span class="string">RSS</span></span><br><span class="line">  <span class="attr">icon:</span> <span class="string">fa</span> <span class="string">fa-rss</span></span><br><span class="line">  <span class="attr">color:</span> <span class="string">burlywood</span></span><br><span class="line">  <span class="attr">link:</span> <span class="string">atom.xml</span></span><br></pre></td></tr></table></figure><p>其中，<code>text</code> 是RSS 在侧边栏显示的文本，<code>icon</code> 即 RSS 的 <a href="https://fontawesome.com/icons">Font Awesome</a> 小图标，<code>color</code> 即 RSS 的颜色（因为想要突出它所以设置为 CSS 的 burlywood 色，当然也可以不设置或者设置为其它颜色），<code>link</code> 即前面 RSS feed 插件生成的链接，一般为 <code>atom.xml</code></p></li><li><p>打开 sidebar 的模版文件 <code>next/layout/_partials/sidebar/site-overview.swig</code> ，在适当的位置（建议为社交链接部分的上面，如果加在最后的话，则 RSS 便位于侧边栏的最底端）插入以下代码：</p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line">&#123;%- if theme.sidebar_rss %&#125;</span><br><span class="line">  <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">&quot;&quot;</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">a</span> <span class="attr">target</span>=<span class="string">&quot;_blank&quot;</span> <span class="attr">class</span>=<span class="string">&quot;social-link&quot;</span> <span class="attr">href</span>=<span class="string">&quot;&#123;&#123; url_for(theme.sidebar_rss.link) &#125;&#125;&quot;</span> <span class="attr">style</span>=<span class="string">&quot;color: &#123;&#123; theme.sidebar_rss.color &#125;&#125;;&quot;</span>&gt;</span></span><br><span class="line">      <span class="tag">&lt;<span class="name">span</span> <span class="attr">class</span>=<span class="string">&quot;icon&quot;</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">i</span> <span class="attr">class</span>=<span class="string">&quot;&#123;&#123; theme.sidebar_rss.icon &#125;&#125;&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">i</span>&gt;</span></span><br><span class="line">      <span class="tag">&lt;/<span class="name">span</span>&gt;</span></span><br><span class="line">      <span class="tag">&lt;<span class="name">span</span> <span class="attr">class</span>=<span class="string">&quot;label&quot;</span>&gt;</span>&#123;&#123; theme.sidebar_rss.text &#125;&#125;<span class="tag">&lt;/<span class="name">span</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">a</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">&#123;%- endif %&#125;</span><br></pre></td></tr></table></figure></li></ol><p><img src="https://cdn.jsdelivr.net/gh/zsxfa/CDN/img/md/2022/02/22/1645521337.png" alt="desc"></p><h2 id="侧边栏添加社交图标"><a href="#侧边栏添加社交图标" class="headerlink" title="侧边栏添加社交图标"></a>侧边栏添加社交图标</h2><p>打开主题配置文件<code>_config.yml</code>，搜索<code>social:</code>,在<a href="http://fontawesome.io/icons/">图标库</a>找自己喜欢的小图标，并将名字复制在如下位置，保存即可</p><figure class="highlight yaml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="attr">social:</span></span><br><span class="line">  <span class="attr">GitHub:</span> <span class="string">https://github.com/zsxfa</span> <span class="string">||</span> <span class="string">fab</span> <span class="string">fa-github</span></span><br><span class="line">  <span class="attr">E-Mail:</span> <span class="string">mailto:zsxfa125689@163.com</span> <span class="string">||</span> <span class="string">fa</span> <span class="string">fa-envelope</span></span><br><span class="line">  <span class="attr">CSDN:</span> <span class="string">https://blog.csdn.net/m0_46132054</span> <span class="string">||</span> <span class="string">copyright</span></span><br></pre></td></tr></table></figure><p><img src="https://cdn.jsdelivr.net/gh/zsxfa/CDN/img/md/2022/02/22/1645522819.png" alt="desc"></p><h2 id="阅读进度百分比"><a href="#阅读进度百分比" class="headerlink" title="阅读进度百分比"></a>阅读进度百分比</h2><blockquote><blockquote><p>修改<code>主题配置文件</code>，修改<code>back2top</code>：</p></blockquote><figure class="highlight yaml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="attr">back2top:</span></span><br><span class="line">  <span class="attr">enable:</span> <span class="literal">true</span> <span class="comment"># 开启 back to top 按钮</span></span><br><span class="line">  <span class="comment"># Back to top in sidebar.</span></span><br><span class="line">  <span class="attr">sidebar:</span> <span class="literal">true</span> <span class="comment"># true 表示在侧边栏显示，false则在侧下角</span></span><br><span class="line">  <span class="comment"># Scroll percent label in b2t button.</span></span><br><span class="line">  <span class="attr">scrollpercent:</span> <span class="literal">true</span> <span class="comment"># 开启进度百分比</span></span><br></pre></td></tr></table></figure></blockquote><p><img src="https://cdn.jsdelivr.net/gh/zsxfa/CDN/img/md/2022/02/22/1645525684.png" alt="desc"></p><h2 id="放大图片"><a href="#放大图片" class="headerlink" title="放大图片"></a>放大图片</h2><blockquote><p>开启 fancybox开关即可：</p></blockquote><figure class="highlight yaml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># FancyBox is a tool that offers a nice and elegant way to add zooming functionality for images.</span></span><br><span class="line"><span class="comment"># For more information: https://fancyapps.com/fancybox</span></span><br><span class="line"><span class="attr">fancybox:</span> <span class="literal">true</span></span><br></pre></td></tr></table></figure><h2 id="添加评论系统"><a href="#添加评论系统" class="headerlink" title="添加评论系统"></a>添加评论系统</h2><p>Hexo的NexT主题本身就集成了一些评论系统，目前比较多人用的有畅言、来必力livere、Gitment、Gitalk、Disqus等。</p><p>网上搜索了一下发现畅言需要备案，Disqus需要FQ，Gitment和Gitalk类似，都需要GitHub账号。我这里使用的是来必力livere</p><p>来必力：<a href="https://livere.com/">https://livere.com</a>（来自韩国，可以使用邮箱注册。）</p><p>来必力是一个可以用国内账号评论且不需实名的评论系统</p><h3 id="获取livere-uid"><a href="#获取livere-uid" class="headerlink" title="获取livere uid"></a>获取livere uid</h3><p>点击<a href="https://livere.com/%E9%A1%B5%E9%9D%A2">https://livere.com/页面</a> 上方的安装，选择免费的city版本。填写真实的网站信息</p><p><img src="https://cdn.jsdelivr.net/gh/zsxfa/CDN/img/md/2022/02/22/1645532567.png" alt="desc"></p><p><img src="https://cdn.jsdelivr.net/gh/zsxfa/CDN/img/md/2022/02/22/1645532897.png" alt="desc"></p><p>复制其中的data-uid字段。</p><p>编辑文件themes/next/_config.yml，启用livere评论系统。如下所示：</p><figure class="highlight yaml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line"><span class="attr">comments:</span></span><br><span class="line">  <span class="comment"># Available values: tabs | buttons</span></span><br><span class="line">  <span class="attr">style:</span> <span class="string">tabs</span></span><br><span class="line">  <span class="comment"># Choose a comment system to be displayed by default.</span></span><br><span class="line">  <span class="comment"># Available values: changyan | disqus | disqusjs | gitalk | livere | valine</span></span><br><span class="line">  <span class="attr">active:</span> <span class="string">livere</span></span><br><span class="line">  <span class="comment"># Setting `true` means remembering the comment system selected by the visitor.</span></span><br><span class="line">  <span class="attr">storage:</span> <span class="literal">true</span></span><br><span class="line">  <span class="comment"># Lazyload all comment systems.</span></span><br><span class="line">  <span class="attr">lazyload:</span> <span class="literal">false</span></span><br></pre></td></tr></table></figure><p>定位到livere_uid字段，粘贴上刚刚复制的UID。</p><figure class="highlight yaml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># LiveRe comments system</span></span><br><span class="line"><span class="comment"># You can get your uid from https://livere.com/insight/myCode (General web site)</span></span><br><span class="line"><span class="attr">livere_uid:</span> <span class="comment"># &lt;your_uid&gt;</span></span><br></pre></td></tr></table></figure><p>然后就可以看看效果了</p><p><img src="https://cdn.jsdelivr.net/gh/zsxfa/CDN/img/md/2022/02/22/1645536629.png" alt="desc"></p><p>不过此时在tags和categories侧边栏也都会有评论，在此类页面想要禁用的只需要在<code>source</code>文件夹下的相应<code>md</code>文件的头部信息中添加<code>comments: false</code>即可。示例代码如下所示：</p><figure class="highlight apache"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="attribute">title</span>: test</span><br><span class="line"><span class="attribute">date</span>: <span class="number">2022</span>-<span class="number">02</span>-<span class="number">04</span> <span class="number">21</span>:<span class="number">49</span>:<span class="number">23</span></span><br><span class="line"><span class="attribute">comments</span>: false</span><br></pre></td></tr></table></figure><h2 id="SEO优化"><a href="#SEO优化" class="headerlink" title="SEO优化"></a>SEO优化</h2><p>现在网站还没有被搜索引擎收录,搜索引擎是搜索不到的，需要进行SEO优化</p><p>生成sitemap文件，需要两种hexo插件，</p><blockquote><p>hexo-generator-sitemap 供谷歌使用；</p><p>hexo-generator-baidu-sitemap 供百度使用；</p></blockquote><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">npm install hexo-generator-sitemap --save-dev</span><br><span class="line">npm install hexo-generator-baidu-sitemap --save-dev</span><br></pre></td></tr></table></figure><p>安装完成后，重启hexo，执行hexo g后，在public目录下生成对应的<code>sitemap.xml</code>文件,即已完成站点地图的生成。</p><p>本地可以通过下面地址访问到sitemap文件。</p><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="attr">http</span>:<span class="comment">//localhost:4000/sitemap.xml</span></span><br><span class="line"><span class="attr">http</span>:<span class="comment">//localhost:4000/baidusitemap.xml</span></span><br></pre></td></tr></table></figure><p>确认可以访问到后，部署到网站</p><h3 id="谷歌搜索配置"><a href="#谷歌搜索配置" class="headerlink" title="谷歌搜索配置"></a>谷歌搜索配置</h3><p>首先你需要一个谷歌账号，然后使用<a href="https://search.google.com/search-console/about">Google Search Console服务</a>，点击立即使用！</p><p>选择第二种，填写你的Github Page主页地址后点击继续，记得地址前面的协议<code>https://</code>别忘了</p><h4 id="验证所有权"><a href="#验证所有权" class="headerlink" title="验证所有权"></a>验证所有权</h4><p>随后你可以看到如下几种方式用以验证你对站点资源的所有权</p><p><img src="https://cdn.jsdelivr.net/gh/zsxfa/CDN/img/md/2022/02/23/1645598444.png" alt="desc"></p><p>打开<strong>主题配置文件</strong>（<code>/themes/next/_config.yml</code>），找到如下片段：</p><figure class="highlight yaml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># Google Webmaster tools verification.</span></span><br><span class="line"><span class="comment"># See: https://www.google.com/webmasters</span></span><br><span class="line"><span class="attr">google_site_verification:</span> </span><br></pre></td></tr></table></figure><p>在Google Search Console选择HTML标记验证，Google会提供如下的元标记</p><figure class="highlight yaml"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="string">&lt;meta</span> <span class="string">name=&quot;google-site-verification&quot;</span> <span class="string">content=&quot;xxxxxx&quot;</span> <span class="string">/&gt;</span></span><br></pre></td></tr></table></figure><p>将<code>content=</code>后面的xxxxx填到<strong>主题配置文件</strong>的<code>google_site_verification: </code>之后，记得冒号后需留一空格，同时不要忘记引号：</p><figure class="highlight yaml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># Google Webmaster tools verification.</span></span><br><span class="line"><span class="comment"># See: https://www.google.com/webmasters</span></span><br><span class="line"><span class="attr">google_site_verification:</span> <span class="string">&quot;xxxxxx&quot;</span></span><br></pre></td></tr></table></figure><p>保存文件,进行部署，部署成功后，回到Google Search Console，点击验证、完成。</p><h4 id="请求编入索引"><a href="#请求编入索引" class="headerlink" title="请求编入索引"></a>请求编入索引</h4><p>来到Google Search Console，点击左侧边栏中的网址检查，输入你的Github Page主页。</p><ul><li>如果显示网址已收录到Google，可以跳过本部分直接看到<strong>提交站点地图</strong></li><li>如果显示网址未收录，点击右下角的请求编入索引，一般来说一到两天后Google就会收录。</li></ul><h4 id="提交站点地图"><a href="#提交站点地图" class="headerlink" title="提交站点地图"></a>提交站点地图</h4><p>还是Google Search Console，点击左侧边栏中的站点地图，添加新的站点地图，在主站地址后面填入<code>sitemap.xml</code>，即与前面生成的站点地图文件名称相同！</p><p>一开始，Google有可能显示无法获取站点地图，我这里报了这样的错误，后来发现是没有在hexo的_config.yml配置文件中正确填写我们的博客网址。</p><p><img src="https://cdn.jsdelivr.net/gh/zsxfa/CDN/img/md/2022/02/23/1645601753.png" alt="desc"></p><p><strong>解决办法：</strong></p><p>编辑hexo的配置文件_comfig.yml<br>找到url:这一行</p><figure class="highlight yaml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># URL</span></span><br><span class="line"><span class="comment">## Set your site url here. For example, if you use GitHub Page, set url as &#x27;https://username.github.io/project&#x27;</span></span><br><span class="line"><span class="attr">url:</span> <span class="string">http://example.com</span></span><br></pre></td></tr></table></figure><p>将example.com改为你自己的网址，再次部署后，添加站点地图</p><p><img src="https://cdn.jsdelivr.net/gh/zsxfa/CDN/img/md/2022/02/23/1645602020.png" alt="desc"></p><h4 id="测试"><a href="#测试" class="headerlink" title="测试"></a>测试</h4><ul><li>在Google搜索site: username.github.io，可以看到你的博客主页</li></ul>]]></content>
    
    
    <summary type="html">&lt;h1 id=&quot;hexo个性化设置&quot;&gt;&lt;a href=&quot;#hexo个性化设置&quot; class=&quot;headerlink&quot; title=&quot;hexo个性化设置&quot;&gt;&lt;/a&gt;hexo个性化设置&lt;/h1&gt;&lt;p&gt;补一补之前忘记写的内容…&lt;/p&gt;</summary>
    
    
    
    <category term="建站小记" scheme="http://zsxfa.cn/categories/%E5%BB%BA%E7%AB%99%E5%B0%8F%E8%AE%B0/"/>
    
    
    <category term="Hexo" scheme="http://zsxfa.cn/tags/Hexo/"/>
    
  </entry>
  
  <entry>
    <title>spring注解原理-AOP原理</title>
    <link href="http://zsxfa.cn/2022/02/04/spring%E6%B3%A8%E8%A7%A3%E5%8E%9F%E7%90%86-AOP%E5%8E%9F%E7%90%86/"/>
    <id>http://zsxfa.cn/2022/02/04/spring%E6%B3%A8%E8%A7%A3%E5%8E%9F%E7%90%86-AOP%E5%8E%9F%E7%90%86/</id>
    <published>2022-02-04T13:05:38.000Z</published>
    <updated>2022-02-16T03:53:03.370Z</updated>
    
    <content type="html"><![CDATA[<h1 id="1-搭建一个AOP测试环境"><a href="#1-搭建一个AOP测试环境" class="headerlink" title="1. 搭建一个AOP测试环境"></a>1. 搭建一个AOP测试环境</h1><h2 id="什么是AOP？"><a href="#什么是AOP？" class="headerlink" title="什么是AOP？"></a>什么是AOP？</h2><p>AOP（Aspect Orient Programming），直译过来就是面向切面编程。AOP是一种编程思想，是面向对象编程（OOP）的一种补充。面向对象编程将程序抽象成各个层次的对象，而面向切面编程是将程序抽象成各个切面。</p><span id="more"></span><p>比如，在《Spring实战（第4版）》中有如下一张图描述了AOP的大体模型。</p><p><img src="https://cdn.jsdelivr.net/gh/zsxfa/CDN/img/md/2022/01/28/1643333428.png" alt="desc"></p><p>从这张图中，我们可以看出：所谓切面，其实就相当于应用对象间的横切点，我们可以将其单独抽象为单独的模块。</p><p><strong>AOP是指在程序的运行期间动态地将某段代码切入到指定方法、指定位置进行运行的编程方式。AOP的底层是使用动态代理实现的。</strong></p><h2 id="实战案例"><a href="#实战案例" class="headerlink" title="实战案例"></a>实战案例</h2><h3 id="（一）导入AOP依赖"><a href="#（一）导入AOP依赖" class="headerlink" title="（一）导入AOP依赖"></a>（一）导入AOP依赖</h3><p>要想搭建AOP环境，首先，我们就需要在项目的pom.xml文件中引入AOP的依赖，如下所示。</p><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>org.springframework<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>spring-aspects<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">version</span>&gt;</span>4.3.12.RELEASE<span class="tag">&lt;/<span class="name">version</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br></pre></td></tr></table></figure><p>其实，Spring AOP对面向切面编程做了一些简化操作，我们只需要加上几个核心注解，AOP就能工作起来。</p><h3 id="（二）定义目标类"><a href="#（二）定义目标类" class="headerlink" title="（二）定义目标类"></a>（二）定义目标类</h3><p>在com.zsxfa.aop包下创建一个业务逻辑类，例如MathCalculator，用于处理数学计算上的一些逻辑。比如，我们在MathCalculator类中定义了一个除法操作，返回两个整数类型值相除之后的结果，如下所示。</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">MathCalculator</span> &#123;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> <span class="type">int</span> <span class="title function_">div</span><span class="params">(<span class="type">int</span> i, <span class="type">int</span> j)</span> &#123;</span><br><span class="line">        System.out.println(<span class="string">&quot;MathCalculator...div...&quot;</span>);</span><br><span class="line">        <span class="keyword">return</span> i / j;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>现在，我们希望在以上这个业务逻辑类中的除法运算之前，记录一下日志，例如记录一下哪个方法运行了，用的参数是什么，运行结束之后它的返回值又是什么，顺便可以将其打印出来，还有如果运行出异常了，那么就捕获一下异常信息。</p><p>或者，你会有这样一个需求，即希望在业务逻辑运行的时候将日志进行打印，而且是在方法运行之前、方法运行结束、方法出现异常等等位置，都希望会有日志打印出来。</p><h3 id="（三）定义切面类"><a href="#（三）定义切面类" class="headerlink" title="（三）定义切面类"></a>（三）定义切面类</h3><p>在com.zsxfa.aop包下创建一个切面类，例如LogAspects，在该切面类中定义几个打印日志的方法，以这些方法来动态地感知MathCalculator类中的div()方法的运行情况。如果需要切面类来动态地感知目标类方法的运行情况，那么就需要使用Spring AOP中的一系列通知方法了。</p><p>AOP中的通知方法及其对应的注解与含义如下：</p><ul><li>前置通知（对应的注解是@Before）：在目标方法运行之前运行</li><li>后置通知（对应的注解是@After）：在目标方法运行结束之后运行，<strong>无论目标方法是正常结束还是异常结束都会执行</strong></li><li>返回通知（对应的注解是@AfterReturning）：在目标方法正常返回之后运行</li><li>异常通知（对应的注解是@AfterThrowing）：在目标方法运行出现异常之后运行</li><li>环绕通知（对应的注解是@Around）：动态代理，我们可以直接手动推进目标方法运行（joinPoint.procced()）</li></ul><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">LogAspects</span> &#123;</span><br><span class="line"></span><br><span class="line">    <span class="comment">// @Before：在目标方法（即div方法）运行之前切入，public int com.zsxfa.aop.MathCalculator.div(int, int)这一串就是切入点表达式，指定在哪个方法切入</span></span><br><span class="line">    <span class="meta">@Before(&quot;public int com.zsxfa.aop.MathCalculator.*(..)&quot;)</span></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">logStart</span><span class="params">()</span> &#123;</span><br><span class="line">        System.out.println(<span class="string">&quot;除法运行......@Before，参数列表是：&#123;&#125;&quot;</span>);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">// 在目标方法（即div方法）结束时被调用</span></span><br><span class="line">    <span class="meta">@After(&quot;public int com.zsxfa.aop.MathCalculator.*(..)&quot;)</span></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">logEnd</span><span class="params">()</span> &#123;</span><br><span class="line">        System.out.println(<span class="string">&quot;除法结束......@After&quot;</span>);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">// 在目标方法（即div方法）正常返回了，有返回值，被调用</span></span><br><span class="line">    <span class="meta">@AfterReturning(&quot;public int com.zsxfa.aop.MathCalculator.*(..)&quot;)</span></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">logReturn</span><span class="params">()</span> &#123;</span><br><span class="line">        System.out.println(<span class="string">&quot;除法正常返回......@AfterReturning，运行结果是：&#123;&#125;&quot;</span>);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">// 在目标方法（即div方法）出现异常，被调用</span></span><br><span class="line">    <span class="meta">@AfterThrowing(&quot;public int com.zsxfa.aop.MathCalculator.*(..)&quot;)</span></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">logException</span><span class="params">()</span> &#123;</span><br><span class="line">        System.out.println(<span class="string">&quot;除法出现异常......异常信息：&#123;&#125;&quot;</span>);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p><code>public int com.meimeixia.aop.MathCalculator.*(..)&quot;</code>，其实它就是切入点表达式，即指定在哪个方法切入。如果要在每一个通知方法上都写上这个，有什么好的方法吗？</p><p>如果切入点表达式都一样的情况下，那么我们可以抽取出一个公共的切入点表达式，就像下面这样。</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">LogAspects</span> &#123;</span><br><span class="line"></span><br><span class="line"><span class="comment">// 如果切入点表达式都一样的情况下，那么我们可以抽取出一个公共的切入点表达式</span></span><br><span class="line"><span class="meta">@Pointcut(&quot;execution(public int com.zsxfa.aop.MathCalculator.*(..))&quot;)</span></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">pointCut</span><span class="params">()</span> &#123;&#125;</span><br><span class="line"><span class="comment">/*********代码省略*********/</span></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>pointCut()方法就是抽取出来的一个公共的切入点表达式，其实该方法的方法名随便写啥都行，但是方法体中啥都别写。</p><p>那么问题来了，如何在每一个通知方法上引用这个公共的切入点表达式呢？这得分两种情况来讨论，<strong>第一种情况，如果是本类引用</strong>，那么可以像下面这样写。</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">LogAspects</span> &#123;</span><br><span class="line"></span><br><span class="line">        <span class="comment">// 如果切入点表达式都一样的情况下，那么我们可以抽取出一个公共的切入点表达式</span></span><br><span class="line">        <span class="meta">@Pointcut(&quot;execution(public int com.zsxfa.aop.MathCalculator.*(..))&quot;)</span></span><br><span class="line">        <span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">pointCut</span><span class="params">()</span> &#123;&#125;</span><br><span class="line"></span><br><span class="line">        <span class="comment">// @Before：在目标方法（即div方法）运行之前切入，public int com.zsxfa.aop.MathCalculator.div(int, int)这一串就是切入点表达式，指定在哪个方法切入</span></span><br><span class="line">        <span class="comment">// @Before(&quot;public int com.zsxfa.aop.MathCalculator.*(..)&quot;)</span></span><br><span class="line">        <span class="meta">@Before(&quot;pointCut()&quot;)</span></span><br><span class="line">        <span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">logStart</span><span class="params">()</span> &#123;</span><br><span class="line">            System.out.println(<span class="string">&quot;除法运行......@Before，参数列表是：&#123;&#125;&quot;</span>);</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="comment">/*********代码省略*********/</span></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p><strong>第二种情况，如果是外部类（即其他的切面类）引用，那么就得在通知注解中写方法的全名了</strong>，例如，</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">LogAspects</span> &#123;</span><br><span class="line"></span><br><span class="line"><span class="comment">// 如果切入点表达式都一样的情况下，那么我们可以抽取出一个公共的切入点表达式</span></span><br><span class="line"><span class="meta">@Pointcut(&quot;execution(public int com.zsxfa.aop.MathCalculator.*(..))&quot;)</span></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">pointCut</span><span class="params">()</span> &#123;&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">// @Before：在目标方法（即div方法）运行之前切入，public int com.zsxfa.aop.MathCalculator.div(int, int)这一串就是切入点表达式，指定在哪个方法切入</span></span><br><span class="line"><span class="comment">// @Before(&quot;public int com.zsxfa.aop.MathCalculator.*(..)&quot;)</span></span><br><span class="line"><span class="meta">@Before(&quot;pointCut()&quot;)</span></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">logStart</span><span class="params">()</span> &#123;</span><br><span class="line">System.out.println(<span class="string">&quot;除法运行......@Before，参数列表是：&#123;&#125;&quot;</span>);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">// 在目标方法（即div方法）结束时被调用</span></span><br><span class="line"><span class="comment">// @After(&quot;pointCut()&quot;)</span></span><br><span class="line"><span class="meta">@After(&quot;com.zsxfa.aop.LogAspects.pointCut()&quot;)</span></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">logEnd</span><span class="params">()</span> &#123;</span><br><span class="line">System.out.println(<span class="string">&quot;除法结束......@After&quot;</span>);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">// 在目标方法（即div方法）正常返回了，有返回值，被调用</span></span><br><span class="line"><span class="meta">@AfterReturning(&quot;pointCut()&quot;)</span></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">logReturn</span><span class="params">()</span> &#123;</span><br><span class="line">System.out.println(<span class="string">&quot;除法正常返回......@AfterReturning，运行结果是：&#123;&#125;&quot;</span>);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">// 在目标方法（即div方法）出现异常，被调用</span></span><br><span class="line"><span class="meta">@AfterThrowing(&quot;pointCut()&quot;)</span></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">logException</span><span class="params">()</span> &#123;</span><br><span class="line">System.out.println(<span class="string">&quot;除法出现异常......异常信息：&#123;&#125;&quot;</span>);</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>然后，必须告诉Spring哪个类是切面类，要做到这一点很简单，只需要给切面类上加上一个@Aspect注解即可。</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">@Aspect</span></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">LogAspects</span> &#123;</span><br><span class="line">    <span class="comment">/*********代码省略*********/</span></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="（四）将目标类和切面类加入到IOC容器"><a href="#（四）将目标类和切面类加入到IOC容器" class="headerlink" title="（四）将目标类和切面类加入到IOC容器"></a>（四）将目标类和切面类加入到IOC容器</h3><p>在com.zsxfa.config包中，新建一个配置类，例如MainConfigOfAOP，并使用@Configuration注解标注这是一个Spring的配置类，同时使用@EnableAspectJAutoProxy注解开启基于注解的AOP模式。在MainConfigOfAOP配置类中，使用@Bean注解将业务逻辑类（目标方法所在类）和切面类都加入到IOC容器中，如下所示。</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">@Configuration</span></span><br><span class="line"><span class="meta">@EnableAspectJAutoProxy</span></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">MainConfigOfAOP</span> &#123;</span><br><span class="line"></span><br><span class="line">    <span class="comment">// 将业务逻辑类（目标方法所在类）加入到容器中</span></span><br><span class="line">    <span class="meta">@Bean</span></span><br><span class="line">    <span class="keyword">public</span> MathCalculator <span class="title function_">calculator</span><span class="params">()</span> &#123;</span><br><span class="line">        <span class="keyword">return</span> <span class="keyword">new</span> <span class="title class_">MathCalculator</span>();</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">// 将切面类加入到容器中</span></span><br><span class="line">    <span class="meta">@Bean</span></span><br><span class="line">    <span class="keyword">public</span> LogAspects <span class="title function_">logAspects</span><span class="params">()</span> &#123;</span><br><span class="line">        <span class="keyword">return</span> <span class="keyword">new</span> <span class="title class_">LogAspects</span>();</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>一定不要忘了给MainConfigOfAOP配置类标注@EnableAspectJAutoProxy注解哟！在Spring中，未来会有很多的@EnableXxx注解，它们的作用都是开启某一项功能，来替换我们以前的那些配置文件。</p><h3 id="（五）测试"><a href="#（五）测试" class="headerlink" title="（五）测试"></a>（五）测试</h3><p>首先，在com.zsxfa.test包中创建一个单元测试类，例如IOCTest_AOP，并在该测试类中创建一个test01()方法，如下所示。</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">IOCTest_AOP</span> &#123;</span><br><span class="line"></span><br><span class="line"><span class="meta">@Test</span></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">test01</span><span class="params">()</span> &#123;</span><br><span class="line"><span class="type">AnnotationConfigApplicationContext</span> <span class="variable">applicationContext</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">AnnotationConfigApplicationContext</span>(MainConfigOfAOP.class);</span><br><span class="line"></span><br><span class="line"><span class="comment">// 不要自己创建这个对象</span></span><br><span class="line"><span class="comment">// MathCalculator mathCalculator = new MathCalculator();</span></span><br><span class="line"><span class="comment">// mathCalculator.div(1, 1);</span></span><br><span class="line"></span><br><span class="line"><span class="comment">// 我们要使用Spring容器中的组件</span></span><br><span class="line"><span class="type">MathCalculator</span> <span class="variable">mathCalculator</span> <span class="operator">=</span> applicationContext.getBean(MathCalculator.class);</span><br><span class="line">mathCalculator.div(<span class="number">1</span>, <span class="number">1</span>);</span><br><span class="line"></span><br><span class="line"><span class="comment">// 关闭容器</span></span><br><span class="line">applicationContext.close();</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>然后，运行以上IOCTest_AOP类中的test01()方法，输出的结果信息如下所示。</p><p><img src="https://cdn.jsdelivr.net/gh/zsxfa/CDN/img/md/2022/01/28/1643335054.png" alt="desc"></p><p>可以看到，执行了切面类中的方法，并打印出了相关信息。<strong>但是并没有打印参数列表和运行结果。</strong></p><p>如果需要在切面类中打印出参数列表和运行结果，那么该怎么办呢？</p><p>要想打印出参数列表和运行结果，就需要对LogAspects切面类中的方法进行优化，优化后的结果如下所示。</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">@Aspect</span></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">LogAspects</span> &#123;</span><br><span class="line"></span><br><span class="line">    <span class="comment">// 如果切入点表达式都一样的情况下，那么我们可以抽取出一个公共的切入点表达式</span></span><br><span class="line">    <span class="comment">// 1. 本类引用</span></span><br><span class="line">    <span class="comment">// 2. 如果是外部类，即其他的切面类引用，那就在这@After(&quot;...&quot;)写的是方法的全名，而我们就要把切入点写在这儿@Pointcut(&quot;...&quot;)</span></span><br><span class="line">    <span class="meta">@Pointcut(&quot;execution(public int com.zsxfa.aop.MathCalculator.*(..))&quot;)</span></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">pointCut</span><span class="params">()</span> &#123;&#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">// @Before：在目标方法（即div方法）运行之前切入，public int com.meimeixia.aop.MathCalculator.div(int, int)这一串就是切入点表达式，指定在哪个方法切入</span></span><br><span class="line">    <span class="comment">// @Before(&quot;public int com.meimeixia.aop.MathCalculator.*(..)&quot;)</span></span><br><span class="line">    <span class="meta">@Before(&quot;pointCut()&quot;)</span></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">logStart</span><span class="params">(JoinPoint joinPoint)</span> &#123;</span><br><span class="line">        <span class="comment">// System.out.println(&quot;除法运行......@Before，参数列表是：&#123;&#125;&quot;);</span></span><br><span class="line"></span><br><span class="line">        Object[] args = joinPoint.getArgs(); <span class="comment">// 拿到参数列表，即目标方法运行需要的参数列表</span></span><br><span class="line">        System.out.println(joinPoint.getSignature().getName() + <span class="string">&quot;运行......@Before，参数列表是：&#123;&quot;</span> + Arrays.asList(args) + <span class="string">&quot;&#125;&quot;</span>);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">// 在目标方法（即div方法）结束时被调用</span></span><br><span class="line">    <span class="comment">// @After(&quot;pointCut()&quot;)</span></span><br><span class="line">    <span class="meta">@After(&quot;com.zsxfa.aop.LogAspects.pointCut()&quot;)</span></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">logEnd</span><span class="params">(JoinPoint joinPoint)</span> &#123;</span><br><span class="line">        <span class="comment">// System.out.println(&quot;除法结束......@After&quot;);</span></span><br><span class="line"></span><br><span class="line">        System.out.println(joinPoint.getSignature().getName() + <span class="string">&quot;结束......@After&quot;</span>);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">// 在目标方法（即div方法）正常返回了，有返回值，被调用</span></span><br><span class="line">    <span class="comment">// @AfterReturning(&quot;pointCut()&quot;)</span></span><br><span class="line">    <span class="meta">@AfterReturning(value=&quot;pointCut()&quot;, returning=&quot;result&quot;)</span> <span class="comment">// returning来指定我们这个方法的参数谁来封装返回值</span></span><br><span class="line">    <span class="comment">/*</span></span><br><span class="line"><span class="comment">     * 如果方法正常返回，我们还想拿返回值，那么返回值又应该怎么拿呢？</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">logReturn</span><span class="params">(JoinPoint joinPoint, Object result)</span> &#123; <span class="comment">// 一定要注意：JoinPoint这个参数要写，一定不能写到后面，它必须出现在参数列表的第一位，否则Spring也是无法识别的，就会报错</span></span><br><span class="line">        <span class="comment">// System.out.println(&quot;除法正常返回......@AfterReturning，运行结果是：&#123;&#125;&quot;);</span></span><br><span class="line">        System.out.println(joinPoint.getSignature().getName() + <span class="string">&quot;正常返回......@AfterReturning，运行结果是：&#123;&quot;</span> + result + <span class="string">&quot;&#125;&quot;</span>);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">// 在目标方法（即div方法）出现异常，被调用</span></span><br><span class="line">    <span class="meta">@AfterThrowing(&quot;pointCut()&quot;)</span></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">logException</span><span class="params">()</span> &#123;</span><br><span class="line">        System.out.println(<span class="string">&quot;除法出现异常......异常信息：&#123;&#125;&quot;</span>);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p><strong>这里，需要注意的是，JoinPoint参数一定要放在参数列表的第一位，否则Spring是无法识别的，那自然就会报错了。</strong></p><p>此时，我们再次运行IOCTest_AOP类中的test01()方法，输出的结果信息如下所示。</p><p><img src="https://cdn.jsdelivr.net/gh/zsxfa/CDN/img/md/2022/01/28/1643335365.png" alt="desc"></p><p>如果目标方法运行时出现了异常，而我们又想拿到这个异常信息，那么该怎么办呢？只须对LogAspects切面类中的logException()方法进行优化即可，优化后的结果如下所示。</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// 在目标方法（即div方法）出现异常，被调用</span></span><br><span class="line"><span class="comment">// @AfterThrowing(&quot;pointCut()&quot;)</span></span><br><span class="line"><span class="meta">@AfterThrowing(value=&quot;pointCut()&quot;, throwing=&quot;exception&quot;)</span></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">logException</span><span class="params">(JoinPoint joinPoint, Exception exception)</span> &#123;</span><br><span class="line">    <span class="comment">// System.out.println(&quot;除法出现异常......异常信息：&#123;&#125;&quot;);</span></span><br><span class="line">    </span><br><span class="line">    System.out.println(joinPoint.getSignature().getName() + <span class="string">&quot;出现异常......异常信息：&#123;&quot;</span> + exception + <span class="string">&quot;&#125;&quot;</span>);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>可以看到，JoinPoint参数是放在了参数列表的第一位。</p><p>接下来，我们就在MathCalculator类的div()方法中模拟抛出一个除零异常，来测试下异常情况，如下所示。</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">IOCTest_AOP</span> &#123;</span><br><span class="line"></span><br><span class="line"><span class="meta">@Test</span></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">test01</span><span class="params">()</span> &#123;</span><br><span class="line"><span class="type">AnnotationConfigApplicationContext</span> <span class="variable">applicationContext</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">AnnotationConfigApplicationContext</span>(MainConfigOfAOP.class);</span><br><span class="line"></span><br><span class="line"><span class="comment">// 不要自己创建这个对象</span></span><br><span class="line"><span class="comment">// MathCalculator mathCalculator = new MathCalculator();</span></span><br><span class="line"><span class="comment">// mathCalculator.div(1, 1);</span></span><br><span class="line"></span><br><span class="line"><span class="comment">// 我们要使用Spring容器中的组件</span></span><br><span class="line"><span class="type">MathCalculator</span> <span class="variable">mathCalculator</span> <span class="operator">=</span> applicationContext.getBean(MathCalculator.class);</span><br><span class="line">mathCalculator.div(<span class="number">1</span>, <span class="number">0</span>);</span><br><span class="line"></span><br><span class="line"><span class="comment">// 关闭容器</span></span><br><span class="line">applicationContext.close();</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>此时，我们运行以上test01()方法，输出的结果信息如下所示。</p><p><img src="https://cdn.jsdelivr.net/gh/zsxfa/CDN/img/md/2022/01/28/1643335478.png" alt="desc"></p><p>可以看到，正确的输出了切面中打印的信息，包括除零异常的信息。</p><p>至此，我们的AOP测试环境就搭建成功了。</p><h3 id="（六）小结"><a href="#（六）小结" class="headerlink" title="（六）小结"></a>（六）小结</h3><p>搭建AOP测试环境时，虽然步骤繁多，但是我们只要牢牢记住以下三点，就会无往而不利了。</p><ol><li>将切面类和业务逻辑组件（目标方法所在类）都加入到容器中，并且要告诉Spring哪个类是切面类（标注了@Aspect注解的那个类）。</li><li>在切面类上的每个通知方法上标注通知注解，告诉Spring何时何地运行，当然最主要的是要写好切入点表达式，这个切入点表达式可以参照官方文档来写。</li><li><strong>开启基于注解的AOP模式，即加上@EnableAspectJAutoProxy注解，这是最关键的一点。</strong></li></ol><h1 id="2-EnableAspectJAutoProxy注解"><a href="#2-EnableAspectJAutoProxy注解" class="headerlink" title="2. @EnableAspectJAutoProxy注解"></a>2. @EnableAspectJAutoProxy注解</h1><p>在配置类上添加@EnableAspectJAutoProxy注解，便能够开启注解版的AOP功能。也就是说，如果要使注解版的AOP功能起作用的话，那么就得需要在配置类上添加@EnableAspectJAutoProxy注解。我们先来看下@EnableAspectJAutoProxy注解的源码，如下所示。</p><p><img src="https://cdn.jsdelivr.net/gh/zsxfa/CDN/img/md/2022/01/29/1643460460.png" alt="desc"></p><p>从源码中可以看出，@EnableAspectJAutoProxy注解使用@Import注解给容器中引入了AspectJAutoProxyRegister组件。那么，这个AspectJAutoProxyRegistrar组件又是什么呢？我们继续点进去到AspectJAutoProxyRegistrar类的源码中，如下所示。</p><p><img src="https://cdn.jsdelivr.net/gh/zsxfa/CDN/img/md/2022/01/29/1643460550.png" alt="desc"></p><p>可以看到AspectJAutoProxyRegistrar类实现了ImportBeanDefinitionRegistrar接口。我们再点进去到ImportBeanDefinitionRegistrar接口的源码中，如下所示。</p><p><img src="https://cdn.jsdelivr.net/gh/zsxfa/CDN/img/md/2022/01/29/1643460641.png" alt="desc"></p><p>看到ImportBeanDefinitionRegistrar这个接口,也就是说，我们可以通过ImportBeanDefinitionRegistrar接口实现将自定义的组件添加到IOC容器中。</p><p>也就是说， <strong>@EnableAspectJAutoProxy注解使用AspectJAutoProxyRegistrar对象自定义组件，并将相应的组件添加到了IOC容器中。</strong></p><p>那么，@EnableAspectJAutoProxy注解使用AspectJAutoProxyRegistrar对象向容器中注册了一个什么bean呢？</p><h2 id="调试Spring源码"><a href="#调试Spring源码" class="headerlink" title="调试Spring源码"></a>调试Spring源码</h2><p>首先，我们需要给这个AspectJAutoProxyRegistrar类打一个断点，断点就打在该类的registerBeanDefinitions()方法处，如下所示。</p><p><img src="https://cdn.jsdelivr.net/gh/zsxfa/CDN/img/md/2022/01/29/1643460919.png" alt="desc"></p><p>然后，我们以debug的方式来运行IOCTest_AOP类中的test01()方法。运行后程序进入到断点位置，如下所示。</p><p><img src="https://cdn.jsdelivr.net/gh/zsxfa/CDN/img/md/2022/01/29/1643461013.png" alt="desc"></p><p>可以看到，程序已经暂停在断点位置了。</p><p>我们还可以看到，在AspectJAutoProxyRegistrar类的registerBeanDefinitions()方法里面，首先调用了AopConfigUtils类的registerAspectJAnnotationAutoProxyCreatorIfNecessary()方法来注册registry，单看registerAspectJAnnotationAutoProxyCreatorIfNecessary()方法也不难理解，字面含义就是：如果需要的话，那么就注册一个AspectJAnnotationAutoProxyCreator组件。</p><p>接着，我们进入到AopConfigUtils类的registerAspectJAnnotationAutoProxyCreatorIfNecessary()方法中，如下所示。</p><p><img src="https://cdn.jsdelivr.net/gh/zsxfa/CDN/img/md/2022/01/29/1643461355.png" alt="desc"></p><p>在AopConfigUtils类的registerAspectJAnnotationAutoProxyCreatorIfNecessary()方法中，直接调用了重载的registerAspectJAnnotationAutoProxyCreatorIfNecessary()方法。我们继续跟进代码，如下所示。</p><p><img src="https://cdn.jsdelivr.net/gh/zsxfa/CDN/img/md/2022/01/29/1643461452.png" alt="desc"></p><p>可以看到在重载的registerAspectJAnnotationAutoProxyCreatorIfNecessary()方法中直接调用了registerOrEscalateApcAsRequired()方法，并且在registerOrEscalateApcAsRequired()方法中，传入了AnnotationAwareAspectJAutoProxyCreator.class对象。</p><p>我们继续跟进代码，如下所示。</p><p><img src="https://cdn.jsdelivr.net/gh/zsxfa/CDN/img/md/2022/01/29/1643461704.png" alt="desc"></p><p>我们可以看到，在registerOrEscalateApcAsRequired()方法中，接收到的Class对象的类型为org.springframework.aop.aspectj.annotation.AnnotationAwareAspectJAutoProxyCreator。</p><p>除此之外，我们还可以看到，在registerOrEscalateApcAsRequired()方法中会做一个判断，即首先判断registry（也就是IOC容器）是否包含名称为org.springframework.aop.config.internalAutoProxyCreator的bean，如下所示。</p><p><img src="https://cdn.jsdelivr.net/gh/zsxfa/CDN/img/md/2022/01/29/1643461898.png" alt="desc"></p><p>如果registry中包含名称为org.springframework.aop.config.internalAutoProxyCreator的bean，那么就进行相应的处理。从Spring的源码来看，就是将名称为org.springframework.aop.config.internalAutoProxyCreator的bean从容器中取出，并且判断cls对象的name值和apcDefinition的beanClassName值是否相等，<strong>若不相等</strong>，则获取apcDefinition和cls它俩的优先级，如果apcDefinition的优先级小于cls的优先级，那么将apcDefinition的beanClassName设置为cls的name值。相对来说，理解起来还是比较简单的。</p><p>由于我们这里是第一次运行程序，容器中应该还没有包含名称为org.springframework.aop.config.internalAutoProxyCreator的bean，所以此时并不会进入到if判断条件中。我们继续往下看代码，如下所示。</p><p><img src="https://cdn.jsdelivr.net/gh/zsxfa/CDN/img/md/2022/01/29/1643462059.png" alt="desc"></p><p>这儿，会使用RootBeanDefinition来创建一个bean的定义信息（即beanDefinition），并且将org.springframework.aop.aspectj.annotation.AnnotationAwareAspectJAutoProxyCreator的Class对象作为参数传递进来。</p><p>我们继续往下看代码，最终在AopConfigUtils类的registerOrEscalateApcAsRequired()方法中，会通过registry调用registerBeanDefinition()方法注册组件，如下所示。</p><p><img src="https://cdn.jsdelivr.net/gh/zsxfa/CDN/img/md/2022/01/29/1643462629.png" alt="desc"></p><p>注册的组件的类型是org.springframework.aop.aspectj.annotation.AnnotationAwareAspectJAutoProxyCreator，组件的名字是org.springframework.aop.config.internalAutoProxyCreator。</p><p>我们继续往下看代码，最终会回到AspectJAutoProxyRegistrar类的registerBeanDefinitions()方法中。</p><p><img src="https://cdn.jsdelivr.net/gh/zsxfa/CDN/img/md/2022/01/29/1643462778.png" alt="desc"></p><p>接下来，我们继续往下看代码，即查看AspectJAutoProxyRegistrar类中的registerBeanDefinitions()方法的源码，如下所示。</p><p><img src="https://cdn.jsdelivr.net/gh/zsxfa/CDN/img/md/2022/01/29/1643462866.png" alt="desc"></p><p>可以看到，通过AnnotationConfigUtils类的attributesFor()方法来获取@EnableAspectJAutoProxy注解的信息。接着，就是判断proxyTargetClass属性的值是否为true，若为true则调用AopConfigUtils类的forceAutoProxyCreatorToUseClassProxying()方法；继续判断exposeProxy属性的值是否为true，若为true则调用AopConfigUtils类的forceAutoProxyCreatorToExposeProxy()方法，其实就是暴露一些什么代理的这些bean。</p><p><strong>综上，向Spring的配置类上添加@EnableAspectJAutoProxy注解之后，会向IOC容器中注册AnnotationAwareAspectJAutoProxyCreator，翻译过来就叫注解装配模式的AspectJ切面自动代理创建器。</strong></p><p>这个AnnotationAwareAspectJAutoProxyCreator又是什么呢？别急，后面我们会核心研究它，现在我们只要知道在容器中注册了这样一个AnnotationAwareAspectJAutoProxyCreator组件就行了，至于注册的这个组件有什么功能呢？后面我们会继续研究它！其实，只要我们研究出来了，那么这个AOP的原理我们就彻底地知道了。</p><p>在研究它之前，我们来看下AnnotationAwareAspectJAutoProxyCreator类的结构图。</p><p><img src="https://cdn.jsdelivr.net/gh/zsxfa/CDN/img/md/2022/01/29/1643463406.png" alt="desc"></p><p>可以看到，它继承了很多很多东东，我们简单梳理下AnnotationAwareAspectJAutoProxyCreato类的核心继承关系，如下所示。</p><ul><li>AnnotationAwareAspectJAutoProxyCreator<ul><li>AspectJAwareAdvisorAutoProxyCreator（父类）<ul><li>AbstractAdvisorAutoProxyCreator（父类）<ul><li>AbstractAutoProxyCreator（父类）<ul><li>implements <strong>SmartInstantiationAwareBeanPostProcessor</strong>和<strong>BeanFactoryAware</strong>（两个接口）</li></ul></li></ul></li></ul></li></ul></li></ul><p>查看继承关系可以发现，此类实现了Aware与BeanPostProcessor接口，这两个接口都和Spring bean的初始化有关，由此可以推测此类的主要处理方法都来自于这两个接口中的实现方法。</p><h1 id="3-AnnotationAwareAspectJAutoProxyCreator组件"><a href="#3-AnnotationAwareAspectJAutoProxyCreator组件" class="headerlink" title="3. AnnotationAwareAspectJAutoProxyCreator组件"></a>3. AnnotationAwareAspectJAutoProxyCreator组件</h1><p>通过上面的继承关系，我们也知道了，它最终会实现两个接口，分别是：</p><ul><li>BeanPostProcessor：后置处理器，即在bean初始化完成前后做些事情</li><li>BeanFactoryAware：自动注入BeanFactory</li></ul><p>也就是说，AnnotationAwareAspectJAutoProxyCreator不仅是一个后置处理器，还是一个BeanFactoryAware接口的实现类。那么我们就来分析它作为后置处理器，到底做了哪些工作，以及它作为BeanFactoryAware接口的实现类，又做了哪些工作，只要把这个分析清楚，AOP的整个原理就差不多出来了。</p><h2 id="为AnnotationAwareAspectJAutoProxyCreator组件里面和后置处理器以及Aware接口有关的方法打上断点"><a href="#为AnnotationAwareAspectJAutoProxyCreator组件里面和后置处理器以及Aware接口有关的方法打上断点" class="headerlink" title="为AnnotationAwareAspectJAutoProxyCreator组件里面和后置处理器以及Aware接口有关的方法打上断点"></a>为AnnotationAwareAspectJAutoProxyCreator组件里面和后置处理器以及Aware接口有关的方法打上断点</h2><p>接下来，我们就要为AnnotationAwareAspectJAutoProxyCreator这个组件里面和后置处理器以及Aware接口有关的方法都打上断点，看一下它们何时运行，以及都做了些什么事。</p><p>在打断点之前，我们还是得小心分析一下，因为AnnotationAwareAspectJAutoProxyCreator这个组件的继承关系还是蛮复杂的。由于是从AbstractAutoProxyCreator这个抽象类开始实现SmartInstantiationAwareBeanPostProcessor以及BeanFactoryAware这俩接口的，如果我们直接来AnnotationAwareAspectJAutoProxyCreator这个类里面找与Aware接口以及BeanPostProcessor接口有关的方法，是极有可能找不到的，所以我们还是得从它的最开始的父类（即AbstractAutoProxyCreator）开始分析。</p><p>我们找到该抽象类，并在里面查找与Aware接口以及BeanPostProcessor接口有关的方法，结果都是可以找到的。该抽象类中的setBeanFactory()方法就是与Aware接口有关的方法，因此我们将断点打在该方法上，如下图所示。</p><p><img src="https://cdn.jsdelivr.net/gh/zsxfa/CDN/img/md/2022/01/30/1643544318.png" alt="desc"></p><p>此外，我们还得找到该抽象类中与BeanPostProcessor接口有关的方法，即只要发现有与后置处理器相关的逻辑，就给所有与后置处理器有关的逻辑都打上断点。打的断点有两处，一处是在postProcessBeforeInstantiation()方法上，如下图所示。</p><p><img src="https://cdn.jsdelivr.net/gh/zsxfa/CDN/img/md/2022/01/30/1643544399.png" alt="desc"></p><p>一处是在postProcessAfterInitialization()方法上，如下图所示。</p><p><img src="https://cdn.jsdelivr.net/gh/zsxfa/CDN/img/md/2022/01/30/1643544475.png" alt="desc"></p><p>接下来，我们再来看它的子类（即AbstractAdvisorAutoProxyCreator），从顶层开始一点一点往上分析。</p><p>在该抽象类中，我们只能找到一个与Aware接口有关的方法，即setBeanFactory()方法，虽然父类有setBeanFactory()方法，但是在这个子类里面已经把它重写了，因此最终调用的应该就是它。</p><p><img src="https://cdn.jsdelivr.net/gh/zsxfa/CDN/img/md/2022/01/30/1643544551.png" alt="desc"></p><p>大家注意，在重写的时候，在setBeanFactory()方法里面会调用一个initBeanFactory()方法。除此之外，该抽象类中就没有跟后置处理器有关的方法了。</p><p>接下来，我们就应该来看AspectJAwareAdvisorAutoProxyCreator这个类了，但由于这个类里面没有跟BeanPostProcessor接口有关的方法，所以我们就不必看这个类了，略过。</p><p>接下来，我们就要来看最顶层的类了，即AnnotationAwareAspectJAutoProxyCreator。查看该类时，发现有这样一个initBeanFactory()方法，我们在该方法上打上一个断点就好，如下图所示。</p><p><img src="https://cdn.jsdelivr.net/gh/zsxfa/CDN/img/md/2022/01/30/1643544663.png" alt="desc"></p><p>为什么在该类里面会有这个方法呢？因为我们在它的父类里面会调用setBeanFactory()方法，而在该方法里面又会调用initBeanFactory()方法，虽然父类里面有写，但是又被它的子类给重写了，所以说相当于父类中的setBeanFactory()方法还是得调用它。</p><p>那在该类中还有没有跟后置处理器有关的方法呢？没有了。</p><p>综上，我们通过简单的人工分析，为这个AnnotationAwareAspectJAutoProxyCreator类中有关后置处理器以及自动装配BeanFactoryAware接口的这些方法都打上了一些断点，接下来，我们就要来进行debug调试分析了。</p><p>不过在这之前，我们还得为MainConfigOfAOP配置类中的如下两个方法打上断点。</p><p><img src="https://cdn.jsdelivr.net/gh/zsxfa/CDN/img/md/2022/01/30/1643545054.png" alt="desc"></p><p>然后，我们就可以正式以debug模式来运行IOCTest_AOP测试类了，顺便分析一下整个流程。</p><h2 id="创建和注册AnnotationAwareAspectJAutoProxyCreator的过程"><a href="#创建和注册AnnotationAwareAspectJAutoProxyCreator的过程" class="headerlink" title="创建和注册AnnotationAwareAspectJAutoProxyCreator的过程"></a>创建和注册AnnotationAwareAspectJAutoProxyCreator的过程</h2><p>以debug模式来运行IOCTest_AOP测试类之后，会先来到AbstractAdvisorAutoProxyCreator类的setBeanFactory()方法中，如下图所示。</p><p><img src="https://cdn.jsdelivr.net/gh/zsxfa/CDN/img/md/2022/01/30/1643545248.png" alt="desc"></p><p>究竟是怎么来到这个setBeanFactory()方法中的啊？我们这就来分析一下，在左上角的方法调用栈中，仔细查找，就会在前面找到一个test01()方法，它其实就是IOCTest_AOP测试类中的测试方法，我们就从该方法开始分析，然后详细记录一下方法调用栈中整个的方法调用流程。</p><p>鼠标单击方法调用栈中的那个test01()方法，此时，我们会进入到IOCTest_AOP测试类中的test01()方法中，如下图所示。</p><p><img src="https://cdn.jsdelivr.net/gh/zsxfa/CDN/img/md/2022/01/30/1643545315.png" alt="desc"></p><p>可以看到这一步是传入主配置类来创建IOC容器，怎么创建的呢？我们点击方法调用栈中test01()方法上面的那个方法，就来到下面这个地方了。</p><p><img src="https://cdn.jsdelivr.net/gh/zsxfa/CDN/img/md/2022/01/30/1643545389.png" alt="desc"></p><p>可以看到，传入主配置类来创建IOC容器使用的是AnnotationConfigApplicationContext类的有参构造器，它具体分为下面三步：</p><ul><li>首先使用无参构造器创建对象</li><li>再来把主配置类注册进来</li><li>最后调用refresh()方法刷新容器，刷新容器就是要把容器中的所有bean都创建出来，也就是说这就像初始化容器一样</li></ul><p>接下来，我们来看看容器刷新是怎么做的？我们继续跟进方法调用栈，如下图所示，可以看到现在是定位到了AbstractApplicationContext抽象类的refresh()方法中。</p><p><img src="https://cdn.jsdelivr.net/gh/zsxfa/CDN/img/md/2022/01/30/1643545510.png" alt="desc"></p><p>以上refresh()方法中的代码还是蛮多的，所以又截了一张图，如下所示！</p><p><img src="https://cdn.jsdelivr.net/gh/zsxfa/CDN/img/md/2022/01/30/1643545678.png" alt="desc"></p><p>其中，该refresh()方法中有一行非常重要的代码，那就是：</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// Register bean processors that intercept bean creation.</span></span><br><span class="line">registerBeanPostProcessors(beanFactory);</span><br></pre></td></tr></table></figure><p>即注册bean的后置处理器。它的作用是什么呢？我们可以看一下它上面的注释，它就是用来方便拦截bean的创建的，那么这个后置处理器的注册逻辑又是什么样的呢？</p><p>我们继续跟进方法调用栈，可以看到现在是定位到了如下图所示的地方。</p><p><img src="https://cdn.jsdelivr.net/gh/zsxfa/CDN/img/md/2022/01/30/1643545780.png" alt="desc"></p><p>我们继续跟进方法调用栈，如下图所示，可以看到现在是定位到PostProcessorRegistrationDelegate类的registerBeanPostProcessors()方法中了。</p><p><img src="https://cdn.jsdelivr.net/gh/zsxfa/CDN/img/md/2022/01/30/1643545893.png" alt="desc"></p><p>以上registerBeanPostProcessors()方法中的代码还是蛮多的，所以又截了一张图，如下所示！</p><p><img src="https://cdn.jsdelivr.net/gh/zsxfa/CDN/img/md/2022/01/30/1643546176.png" alt="desc"></p><p>这个方法太长啊，但是没关系，我来帮大家分析一下，到底是怎么注册bean的后置处理器的。</p><ol><li><p>先按照类型拿到IOC容器中所有需要创建的后置处理器，即先获取IOC容器中已经定义了的需要创建对象的所有BeanPostProcessor。这可以从如下这行代码中得知：</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">String[] postProcessorNames = beanFactory.getBeanNamesForType(BeanPostProcessor.class, <span class="literal">true</span>, <span class="literal">false</span>);</span><br></pre></td></tr></table></figure><p>你可能要问了，为什么IOC容器中会有一些已定义的BeanPostProcessor呢？这是因为在前面创建IOC容器时，需要先传入配置类，而我们在解析配置类的时候，由于这个配置类里面有一个@EnableAspectJAutoProxy注解，对于该注解，我们之前也说过，它会为我们容器中注册一个AnnotationAwareAspectJAutoProxyCreator（后置处理器），这还仅仅是这个@EnableAspectJAutoProxy注解做的事，除此之外，容器中还有一些默认的后置处理器的定义。</p><p>所以，程序运行到这，容器中已经有一些我们将要用的后置处理器了，只不过现在还没创建对象，都只是一些定义，也就是说容器中有哪些后置处理器。</p></li><li><p>继续往下看这个registerBeanPostProcessors()方法，可以看到它里面还有其他的逻辑，如下所示：</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">beanFactory.addBeanPostProcessor(<span class="keyword">new</span> <span class="title class_">BeanPostProcessorChecker</span>(beanFactory, beanProcessorTargetCount));</span><br></pre></td></tr></table></figure><p>说的是给beanFactory中额外还加了一些其他的BeanPostProcessor，也就是说给容器中加别的BeanPostProcessor。</p></li><li><p>继续往下看这个registerBeanPostProcessors()方法，发现它里面还有这样的注释，如下所示：</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// Separate between BeanPostProcessors that implement PriorityOrdered,</span></span><br><span class="line"><span class="comment">// Ordered, and the rest.</span></span><br><span class="line">List&lt;BeanPostProcessor&gt; priorityOrderedPostProcessors = <span class="keyword">new</span> <span class="title class_">ArrayList</span>&lt;BeanPostProcessor&gt;();</span><br><span class="line"><span class="comment">/************下面是代码，省略************/</span></span><br></pre></td></tr></table></figure><p>说的是分离这些BeanPostProcessor，看哪些是实现了PriorityOrdered接口的，哪些又是实现了Ordered接口的，包括哪些是原生的没有实现什么接口的。所以，在这儿，对这些BeanPostProcessor还做了一些处理，所做的处理看以下代码便一目了然。</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">for</span> (String ppName : postProcessorNames) &#123;</span><br><span class="line">    <span class="keyword">if</span> (beanFactory.isTypeMatch(ppName, PriorityOrdered.class)) &#123;</span><br><span class="line">        <span class="type">BeanPostProcessor</span> <span class="variable">pp</span> <span class="operator">=</span> beanFactory.getBean(ppName, BeanPostProcessor.class);</span><br><span class="line">        priorityOrderedPostProcessors.add(pp);</span><br><span class="line">        <span class="keyword">if</span> (pp <span class="keyword">instanceof</span> MergedBeanDefinitionPostProcessor) &#123;</span><br><span class="line">            internalPostProcessors.add(pp);</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">else</span> <span class="keyword">if</span> (beanFactory.isTypeMatch(ppName, Ordered.class)) &#123;</span><br><span class="line">        orderedPostProcessorNames.add(ppName);</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">else</span> &#123;</span><br><span class="line">        nonOrderedPostProcessorNames.add(ppName);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>拿到IOC容器中所有这些BeanPostProcessor之后，是怎么处理的呢？它是来看我们这个BeanPostProcessor是不是实现了PriorityOrdered接口，我们不妨看一下PriorityOrdered接口的源码，如下图所示。</p><p><img src="https://cdn.jsdelivr.net/gh/zsxfa/CDN/img/md/2022/01/30/1643546886.png" alt="desc"></p><p>好了，现在我们知道了这样一个结论，那就是：<strong>IOC容器中的那些BeanPostProcessor可以实现PriorityOrdered以及Ordered这些接口来定义它们工作的优先级，即谁先前谁先后。</strong></p><p>回到代码中，就不难看到，它是在这儿将这些BeanPostProcessor做了一下划分，如果BeanPostProcessor实现了PriorityOrdered接口，那么就将其保存在名为priorityOrderedPostProcessors的List集合中，并且要是该BeanPostProcessor还是MergedBeanDefinitionPostProcessor这种类型的，则还得将其保存在名为internalPostProcessors的List集合中。</p></li><li><p>继续往下看这个registerBeanPostProcessors()方法，主要是看其中的注释，不难发现有以下三步：</p><ol><li>优先注册实现了PriorityOrdered接口的BeanPostProcessor</li><li>再给容器中注册实现了Ordered接口的BeanPostProcessor</li><li>最后再注册没实现优先级接口的BeanPostProcessor</li></ol><p>那么，所谓的注册BeanPostProcessor又是什么呢？我们还是来到程序停留的地方，为啥子程序会停留在这儿呢？因为咱们现在即将要创建的名称为internalAutoProxyCreator的组件（其实它就是我们之前经常讲的AnnotationAwareAspectJAutoProxyCreator）实现了Ordered接口，这只要查看AnnotationAwareAspectJAutoProxyCreator类的源码便知，一级一级地往上查.</p><p><img src="https://cdn.jsdelivr.net/gh/zsxfa/CDN/img/md/2022/01/30/1643545893.png" alt="desc"></p><p>可以看到，是先拿到要注册的BeanPostProcessor的名字，然后再从beanFactory中来获取。</p></li></ol><p>接下来，我们就要获取相应名字的BeanPostProcessor了，怎么获取呢？继续跟进方法调用栈，如下图所示，可以看到现在是定位到了AbstractBeanFactory抽象类的getBean()方法中。</p><p><img src="https://cdn.jsdelivr.net/gh/zsxfa/CDN/img/md/2022/01/30/1643548074.png" alt="desc"></p><p>我们继续跟进方法调用栈，如下图所示，可以看到现在是定位到了AbstractBeanFactory抽象类的doGetBean()方法中。</p><p><img src="https://cdn.jsdelivr.net/gh/zsxfa/CDN/img/md/2022/01/30/1643548115.png" alt="desc"></p><p>这个方法特别特别的长，这儿我就不再详细分析它了，只须关注程序停留的这行代码即可。这行代码的意思是调用getSingleton()方法来获取单实例的bean，但是呢，IOC容器中第一次并不会有这个bean，所以第一次获取它肯定是会有问题的。</p><p>我们继续跟进方法调用栈，如下图所示，可以看到现在是定位到了DefaultSingletonBeanRegistry类的getSingleton()方法中。</p><p><img src="https://cdn.jsdelivr.net/gh/zsxfa/CDN/img/md/2022/01/30/1643548171.png" alt="desc"></p><p>也就是说如果从IOC容器中第一次获取单实例的bean出现问题，也即获取不到时，那么就会调用singletonFactory的getObject()方法。</p><p>我们继续跟进方法调用栈，如下图所示，可以看到现在又定位到了AbstractBeanFactory抽象类的doGetBean()方法中。</p><p><img src="https://cdn.jsdelivr.net/gh/zsxfa/CDN/img/md/2022/01/30/1643548327.png" alt="desc"></p><p>可以发现，现在就是来创建bean的，也就是说如果获取不到那么就创建bean。<strong>咱们现在就是需要注册BeanPostProcessor，说白了，实际上就是创建BeanPostProcessor对象，然后保存在容器中。</strong></p><p>那么接下来，我们就来看看是如何创建出名称为internalAutoProxyCreator的BeanPostProcessor的，它的类型其实就是我们之前经常说的AnnotationAwareAspectJAutoProxyCreator。我们就以它为例，来看看它这个对象是怎么创建出来的。</p><p>我们继续跟进方法调用栈，如下图所示，可以看到现在是定位到了AbstractAutowireCapableBeanFactory抽象类的createBean()方法中。</p><p><img src="https://cdn.jsdelivr.net/gh/zsxfa/CDN/img/md/2022/01/30/1643548415.png" alt="desc"></p><p>接着再跟进方法调用栈，如下图所示，可以看到现在是定位到了AbstractAutowireCapableBeanFactory抽象类的doCreateBean()方法中。</p><p><img src="https://cdn.jsdelivr.net/gh/zsxfa/CDN/img/md/2022/01/30/1643548509.png" alt="desc"></p><p>程序停留在这儿，就是在初始化bean实例，说明bean实例已经创建好了，如果你要不信的话，那么可以往前翻阅该doCreateBean()方法，这时你应该会看到一个createBeanInstance()方法，说的就是bean实例的创建。创建的是哪个bean实例呢？就是名称为internalAutoProxyCreator的实例，该实例的类型就是我们之前经常说的AnnotationAwareAspectJAutoProxyCreator，即创建这个类型的实例。创建好了之后，就在程序停留的地方进行初始化。</p><p>所以，整个的过程就应该是下面这个样子的：</p><ol><li>首先创建bean的实例</li><li>然后给bean的各种属性赋值（即调用populateBean()方法）</li><li>接着初始化bean（即调用initializeBean()方法），这个初始化bean其实特别地重要，因为我们这个后置处理器就是在bean初始化的前后进行工作的。</li></ol><p>接下来，我们就来看看这个bean的实例是如何初始化的。继续跟进方法调用栈，如下图所示，可以看到现在是定位到了AbstractAutowireCapableBeanFactory抽象类的initializeBean()方法中。</p><p><img src="https://cdn.jsdelivr.net/gh/zsxfa/CDN/img/md/2022/01/30/1643548609.png" alt="desc"></p><p>详细分析一下<strong>初始化bean的流程</strong>。</p><ol><li><p>首先我们进入invokeAwareMethods()这个方法里面看一下，如下图所示。</p><p><img src="https://cdn.jsdelivr.net/gh/zsxfa/CDN/img/md/2022/01/30/1643548674.png" alt="desc"></p><p>其实，这个方法是来判断我们这个bean对象是不是Aware接口的，如果是，并且它还是BeanNameAware、BeanClassLoaderAware以及BeanFactoryAware这几个Aware接口中的其中一个，那么就调用相关的Aware接口方法，即处理Aware接口的方法回调。</p><p>现在当前的这个bean叫internalAutoProxyCreator，并且这个bean对象已经被创建出来了，创建出来的这个bean对象之前我们也分析过，它是有实现BeanFactoryAware接口的，故而会调用相关的Aware接口方法，这也是程序为什么会停留在invokeAwareMethods()这个方法的原因。</p></li><li><p>还是回到AbstractAutowireCapableBeanFactory抽象类的initializeBean()方法中，即程序停留的地方。如果invokeAwareMethods()这个方法执行完了以后，那么后续又会发生什么呢？</p><p>往下翻阅initializeBean()方法，会发现有一个叫applyBeanPostProcessorsBeforeInitialization的方法，如下图所示。</p><p><img src="https://cdn.jsdelivr.net/gh/zsxfa/CDN/img/md/2022/01/30/1643548853.png" alt="desc"></p><p>这个方法调用完以后，会返回一个被包装的bean。</p><p>该方法的意思其实就是应用后置处理器的postProcessBeforeInitialization()方法。我们可以进入该方法中去看一看，到底是怎么应用后置处理器的postProcessBeforeInitialization()方法的？</p><p><img src="https://cdn.jsdelivr.net/gh/zsxfa/CDN/img/md/2022/01/30/1643548915.png" alt="desc"></p><p>可以看到，它是拿到所有的后置处理器，然后再调用后置处理器的postProcessBeforeInitialization()方法，也就是说bean初始化之前后置处理器的调用在这儿。</p></li><li><p>还是回到程序停留的地方，继续往下翻阅initializeBean()方法，你会发现还有一个叫invokeInitMethods的方法，即执行自定义的初始化方法。</p><p>这个自定义的初始化方法呢，你可以用@bean注解来定义，指定一下初始化方法是什么，销毁方法又是什么，这个我们之前都说过了。</p></li><li><p>自定义的初始化方法执行完以后，又有一个叫applyBeanPostProcessorsAfterInitialization的方法，该方法的意思其实就是应用后置处理器的postProcessAfterInitialization()方法。我们可以进入该方法中去看一看，到底是怎么应用后置处理器的postProcessAfterInitialization()方法的？</p><p><img src="https://cdn.jsdelivr.net/gh/zsxfa/CDN/img/md/2022/01/30/1643549053.png" alt="desc"></p><p>依旧是拿到所有的后置处理器，然后再调用后置处理器的postProcessAfterInitialization()方法。</p><p>所以，后置处理器的这两个postProcessBeforeInitialization()与postProcessAfterInitialization()方法前后的执行，就是在这块体现的。我们在这儿也清楚地看到了。</p></li></ol><p>调用initializeBean()方法初始化bean的时候，还得执行那些Aware接口的方法，那到底怎么执行呢？正好我们知道，当前的这个bean它确实是实现了BeanFactoryAware接口。因此我们继续跟进方法调用栈，如下图所示，可以看到现在是定位到了AbstractAutowireCapableBeanFactory抽象类的invokeAwareMethods()方法中。</p><p><img src="https://cdn.jsdelivr.net/gh/zsxfa/CDN/img/md/2022/01/30/1643548674.png" alt="desc"></p><p>再继续跟进方法调用栈，如下图所示，可以看到现在是定位到了AbstractAdvisorAutoProxyCreator抽象类的setBeanFactory()方法中。</p><p><img src="https://cdn.jsdelivr.net/gh/zsxfa/CDN/img/md/2022/01/30/1643549212.png" alt="desc"></p><p>可以看到现在调用的是AbstractAdvisorAutoProxyCreator抽象类中的setBeanFactory()方法。我们要创建的是AnnotationAwareAspectJAutoProxyCreator对象，但是调用的却是它父类的setBeanFactory()方法。</p><p>接下来，按下<code>F6</code>快捷键让程序往下运行，父类的setBeanFactory()方法便会被调用，再按下<code>F6</code>快捷键让程序往下运行，一直让程序运行到如下图所示的这行代码处。</p><p><img src="https://cdn.jsdelivr.net/gh/zsxfa/CDN/img/md/2022/01/30/1643549315.png" alt="desc"></p><p>可以看到父类的setBeanFactory()方法被调用完了。然后按下<code>F6</code>快捷键继续让程序往下运行，这时会运行到如下这行代码处。</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">initBeanFactory((ConfigurableListableBeanFactory) beanFactory);</span><br></pre></td></tr></table></figure><p>该initBeanFactory()方法就是用来初始化BeanFactory的。我们按下F5快捷键进入到当前方法内部，如下图所示，可以看到调用到了AnnotationAwareAspectJAutoProxyCreator这个类的initBeanFactory()方法中了，即调到了我们要给容器中创建的AspectJ自动代理创建器的initBeanFactory()方法中。</p><p><img src="https://cdn.jsdelivr.net/gh/zsxfa/CDN/img/md/2022/01/30/1643549392.png" alt="desc"></p><p>接着按下<code>F6</code>快捷键继续让程序往下运行，运行完该方法，如下图所示。</p><p><img src="https://cdn.jsdelivr.net/gh/zsxfa/CDN/img/md/2022/01/30/1643549506.png" alt="desc"></p><p>可以看到这个initBeanFactory()方法创建了两个东西，一个叫ReflectiveAspectJAdvisorFactory，还有一个叫BeanFactoryAspectJAdvisorsBuilderAdapter，它相当于把之前创建的aspectJAdvisorFactory以及beanFactory重新包装了一下，就只是这样。</p><p>至此，整个这么一个流程下来以后，咱们的这个BeanPostProcessor，我们是以AnnotationAwareAspectJAutoProxyCreator（就是@EnableAspectJAutoProxy这个注解核心导入的BeanPostProcessor）为例来讲解的，就创建成功了。并且还调用了它的initBeanFactory()方法得到了一些什么aspectJAdvisorFactory和aspectJAdvisorsBuilder，这两个东西大家知道一下就行了。至此，整个initBeanFactory()方法我们就说完了，也就是说我们整个的后置处理器的注册以及创建过程就说完了。</p><p>我们还是回过头回顾一下，一开始的这行代码是用来注册后置处理器。</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// Register bean processors that intercept bean creation.</span></span><br><span class="line">registerBeanPostProcessors(beanFactory);</span><br></pre></td></tr></table></figure><p>应该知道，我们是以AnnotationAwareAspectJAutoProxyCreator为例来讲解的，现在你也应该知道整个后置处理器的创建以及注册流程了。</p><p>此刻，后置处理器已经在容器中注册进来了。所谓的注册又是什么呢？接下来，我们可以再来看一下，按下<code>F6</code>快捷键继续让程序往下运行，一直让程序运行到AbstractAutowireCapableBeanFactory抽象类的initializeBean()方法中的如下这行代码处。</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="type">Object</span> <span class="variable">wrappedBean</span> <span class="operator">=</span> bean;</span><br></pre></td></tr></table></figure><p>紧接着就是应用各种什么applyBeanPostProcessorsBeforeInitialization()方法或者applyBeanPostProcessorsAfterInitialization()方法了，我们继续按下F6快捷键让程序往下运行，一直让程序运行到如下图所示的这行代码处。</p><p><img src="https://cdn.jsdelivr.net/gh/zsxfa/CDN/img/md/2022/01/30/1643549770.png" alt="desc"></p><p>可以看到咱们要创建的后置处理器（即AnnotationAwareAspectJAutoProxyCreator）总算是创建完了。</p><p>继续按下<code>F6</code>快捷键让程序往下运行，一直让程序运行到如下图所示的这行代码处。</p><p><img src="https://cdn.jsdelivr.net/gh/zsxfa/CDN/img/md/2022/01/30/1643549828.png" alt="desc"></p><p>上面这行代码的意思是说，后置处理器创建完以后会添加到我们已创建的那个bean集合里面</p><p>继续按下<code>F6</code>快捷键让程序往下运行，一直让程序运行到如下图所示的230这行代码处。</p><p><img src="https://cdn.jsdelivr.net/gh/zsxfa/CDN/img/md/2022/01/30/1643549906.png" alt="desc"></p><p>可以看到，咱们这个BeanPostProcessor（即AnnotationAwareAspectJAutoProxyCreator）创建完了以后，会放进了一个叫什么internalPostProcessors的这个集合里面。</p><p>继续按下<code>F6</code>快捷键让程序往下运行，会调用sortPostProcessors()方法按照优先级给这些后置处理器们排一个序，程序再往下运行，就会调用到registerBeanPostProcessors()方法了，进到该方法中去看一下。</p><p><img src="https://cdn.jsdelivr.net/gh/zsxfa/CDN/img/md/2022/01/30/1643550107.png" alt="desc"></p><p>现在该知道所谓的注册是什么了吧😂！就是<strong>拿到所有的BeanPostProcessor，然后调用beanFactory的addBeanPostProcessor()方法将BeanPostProcessor注册到BeanFactory中。</strong></p><p>至此，整个BeanPostProcessor的创建以及注册过程，我们也就说完了</p><h1 id="4-BeanFactory的初始化"><a href="#4-BeanFactory的初始化" class="headerlink" title="4. BeanFactory的初始化"></a>4. BeanFactory的初始化</h1><p>AnnotationAwareAspectJAutoProxyCreator后置处理器之后，接下来就得完成BeanFactory的初始化工作了。</p><h2 id="完成BeanFactory的初始化工作"><a href="#完成BeanFactory的初始化工作" class="headerlink" title="完成BeanFactory的初始化工作"></a>完成BeanFactory的初始化工作</h2><p>我们还是以debug模式来运行IOCTest_AOP测试类，这时，应该还是会来到AbstractAdvisorAutoProxyCreator类的setBeanFactory()方法中，如下图所示。</p><p><img src="https://cdn.jsdelivr.net/gh/zsxfa/CDN/img/md/2022/01/31/1643621346.png" alt="desc"></p><p>在上一讲中，我们是从test01()方法开始一步一步研究慢慢分析到这儿的，所以这儿就不再重复地讲一遍了。那接下来该怎么办呢？我们按下<code>F8</code>快捷键直接运行到下一个断点，如下图所示，可以看到现在是定位到了AbstractAutoProxyCreator抽象类的setBeanFactory()方法中。</p><p><img src="https://cdn.jsdelivr.net/gh/zsxfa/CDN/img/md/2022/01/31/1643621428.png" alt="desc"></p><p>然后继续按下<code>F8</code>快捷键运行直到下一个断点，一直运行到如下图所示的这行代码处。</p><p><img src="https://cdn.jsdelivr.net/gh/zsxfa/CDN/img/md/2022/01/31/1643621501.png" alt="desc"></p><p>可以看到程序现在是停留在了AbstractAutoProxyCreator类的postProcessBeforeInstantiation()方法中，不过从方法调用栈中我们可以清楚地看到现在其实调用的是AnnotationAwareAspectJAutoProxyCreator的postProcessBeforeInstantiation()方法。</p><p>这个方法大家一定要引起注意，它跟我们之前经常讲到的后置处理器中的方法是有区别的。你不妨看一下BeanPostProcessor接口的源码，如下图所示，它里面有一个postProcessbeforeInitialization()方法。</p><p><img src="https://cdn.jsdelivr.net/gh/zsxfa/CDN/img/md/2022/01/31/1643621635.png" alt="desc"></p><p>而现在这个方法是叫postProcessBeforeInstantiation</p><p>你可能要问了，AnnotationAwareAspectJAutoProxyCreator它本身就是一个后置处理器，为何其中的方法叫postProcessBeforeInstantiation，而不是叫postProcessbeforeInitialization呢？因为后置处理器跟为后置处理器是不一样的，当前我们要用到的这个后置处理器（即<strong>AnnotationAwareAspectJAutoProxyCreator</strong>）实现的是一个叫<strong>SmartInstantiationAwareBeanPostProcessor</strong>的接口，而该接口继承的是<strong>InstantiationAwareBeanPostProcessor</strong>接口（它又继承了<strong>BeanPostProcessor</strong>接口），也就是说，<strong>AnnotationAwareAspectJAutoProxyCreator</strong>虽然是一个<strong>BeanPostProcessor</strong>，但是它却是<strong>InstantiationAwareBeanPostProcessor</strong>这种类型的，而<strong>InstantiationAwareBeanPostProcessor</strong>接口中声明的方法就叫<strong>postProcessBeforeInstantiation</strong>。</p><p><img src="https://cdn.jsdelivr.net/gh/zsxfa/CDN/img/md/2022/01/31/1643621843.png" alt="desc"></p><p>故而程序就停留到了AbstractAutoProxyCreator类的postProcessBeforeInstantiation()方法中。</p><p>那么你又要问了，为什么会来到这儿呢？我们同样可以仿照前面来大致地来探究一下，在左上角的方法调用栈中，仔细查找，就会在前面找到一个test01()方法，它其实就是IOCTest_AOP测试类中的测试方法，我们就从该方法开始分析。</p><p>鼠标单击方法调用栈中的那个test01()方法，此时，我们会进入到IOCTest_AOP测试类中的test01()方法中，如下图所示。</p><p><img src="https://cdn.jsdelivr.net/gh/zsxfa/CDN/img/md/2022/01/31/1643621937.png" alt="desc"></p><p>可以看到这一步还是传入主配置类来创建IOC容器，依旧会调用refresh()方法，如下图所示。</p><p><img src="https://cdn.jsdelivr.net/gh/zsxfa/CDN/img/md/2022/01/31/1643622011.png" alt="desc"></p><p>我们继续跟进方法调用栈，如下图所示，可以看到现在是定位到了AbstractApplicationContext抽象类的refresh()方法中。</p><p><img src="https://cdn.jsdelivr.net/gh/zsxfa/CDN/img/md/2022/01/31/1643622067.png" alt="desc"></p><p>可以看到，在这儿会调用finishBeanFactoryInitialization()方法，这是用来初始化剩下的单实例bean的。而在该方法前面，有一个叫registerBeanPostProcessors的方法，它是用来注册后置处理器的，这个方法在上一讲中，我已经讲得够透彻了。</p><p><img src="https://cdn.jsdelivr.net/gh/zsxfa/CDN/img/md/2022/01/31/1643622219.png" alt="desc"></p><p>注册完后置处理器之后，接下来就来到了finishBeanFactoryInitialization()方法处，以完成BeanFactory的初始化工作。所谓的完成BeanFactory的初始化工作，其实就是来创建剩下的单实例bean。为什么叫剩下的呢？因为IOC容器中的这些组件，比如一些BeanPostProcessor，早都已经在注册的时候就被创建了，所以会留一下没被创建的组件，让它们在这儿进行创建。</p><p>我们继续跟进方法调用栈，如下图所示，可以看到现在是定位到了AbstractApplicationContext抽象类的finishBeanFactoryInitialization()方法中。</p><p><img src="https://cdn.jsdelivr.net/gh/zsxfa/CDN/img/md/2022/01/31/1643622387.png" alt="desc"></p><p>也就是说，这儿会继续调用preInstantiateSingletons()方法来创建剩下的单实例bean。</p><p>继续跟进方法调用栈，如下图所示，可以看到现在是定位到了DefaultListableBeanFactory类的preInstantiateSingletons()方法中。</p><p><img src="https://cdn.jsdelivr.net/gh/zsxfa/CDN/img/md/2022/01/31/1643622494.png" alt="desc"></p><p>在这儿会调用getBean()方法来获取一个bean，那获取的是哪个bean呢？获取的是名称为<code>org.springframework.context.event.internalEventListenerProcessor</code>的bean，它跟我们目前的研究没什么关系。</p><p>既然没有关系，那为何还要获取这个bean呢？往前翻阅preInstantiateSingletons()方法，可以看到有一个for循环，它是来遍历一个beanNames的List集合的，这个beanNames又是什么呢？很明显它是一个List<String>集合，它里面保存的是容器中所有bean定义的名称，如下图所示。</p><p><img src="https://cdn.jsdelivr.net/gh/zsxfa/CDN/img/md/2022/01/31/1643622739.png" alt="desc"></p><p>所以，接下来，我们就可以讲讲完成BeanFactory的初始化工作的第一步了。</p><h2 id="完成BeanFactory的初始化工作的第一步"><a href="#完成BeanFactory的初始化工作的第一步" class="headerlink" title="完成BeanFactory的初始化工作的第一步"></a>完成BeanFactory的初始化工作的第一步</h2><p>遍历获取容器中所有的bean，并依次创建对象，注意是依次调用getBean()方法来创建对象的。</p><p>此刻，咱们是来到了第一个bean的创建，只不过它跟我们目前的研究没什么关系。我们可以以它的创建为例来看一下这个bean到底是怎么来创建的。</p><p>我们继续跟进方法调用栈，如下图所示，可以看到现在是定位到了AbstractBeanFactory抽象类的getBean()方法中。</p><p><img src="https://cdn.jsdelivr.net/gh/zsxfa/CDN/img/md/2022/01/31/1643622844.png" alt="desc"></p><p>再继续跟进方法调用栈，如下图所示，可以看到现在是定位到了AbstractBeanFactory抽象类的doGetBean()方法中。</p><p><img src="https://cdn.jsdelivr.net/gh/zsxfa/CDN/img/md/2022/01/31/1643622932.png" alt="desc"></p><p>可以看到，获取单实例bean调用的是getSingleton()方法，并且会返回一个sharedInstance对象。其实，从该方法上面的注释中也能看出，这儿是来创建bean实例的。</p><p>其实呢，在这儿创建之前，sharedInstance变量已经提前声明过了，我们往前翻阅doGetBean()方法，就能看到已声明的sharedInstance变量了。</p><p><img src="https://cdn.jsdelivr.net/gh/zsxfa/CDN/img/md/2022/01/31/1643629500.png" alt="desc"></p><p>可以清楚地看到，在如下这行代码处是来第一次获取单实例bean。</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// Eagerly check singleton cache for manually registered singletons.</span></span><br><span class="line"><span class="type">Object</span> <span class="variable">sharedInstance</span> <span class="operator">=</span> getSingleton(beanName);</span><br></pre></td></tr></table></figure><p>那到底是怎么获取的呢？其实从注释中可以知道，它会提前先检查单实例的缓存中是不是已经人工注册了一些单实例的bean，若是则获取。</p><h2 id="完成BeanFactory的初始化工作的第二步"><a href="#完成BeanFactory的初始化工作的第二步" class="headerlink" title="完成BeanFactory的初始化工作的第二步"></a>完成BeanFactory的初始化工作的第二步</h2><p>也就是说，这个bean的创建不是说一下就创建好了的，它得<strong>先从缓存中获取当前bean，如果能获取到，说明当前bean之前是被创建过的，那么就直接使用，否则的话再创建。</strong></p><p>往上翻阅AbstractBeanFactory抽象类的doGetBean()方法，可以看到有这样的逻辑：</p><p><img src="https://cdn.jsdelivr.net/gh/zsxfa/CDN/img/md/2022/01/31/1643629898.png" alt="desc"></p><p>可以看到，单实例bean是能获取就获取，不能获取才创建。<strong>Spring就是利用这个机制来保证我们这些单实例bean只会被创建一次，也就是说只要创建好的bean都会被缓存起来。</strong></p><p>继续跟进方法调用栈，如下图所示，可以看到现在是定位到了DefaultSingletonBeanRegistry类的getSingleton()方法中。</p><p><img src="https://cdn.jsdelivr.net/gh/zsxfa/CDN/img/md/2022/01/31/1643629964.png" alt="desc"></p><p>这儿是调用单实例工厂来进行创建单实例bean。</p><p>继续跟进方法调用栈，如下图所示，可以看到现在又定位到了AbstractBeanFactory抽象类的doGetBean()方法中。</p><p><img src="https://cdn.jsdelivr.net/gh/zsxfa/CDN/img/md/2022/01/31/1643630092.png" alt="desc"></p><p>可以看到又会调用createBean()方法来进行创建单实例bean。而在该方法前面是bean能获取到就不会再创建了。接下来，我们来看一下createBean()方法有什么好说的。</p><p>继续跟进方法调用栈，如下图所示，可以看到现在是定位到了AbstractAutowireCapableBeanFactory抽象类的createBean()方法中。</p><p><img src="https://cdn.jsdelivr.net/gh/zsxfa/CDN/img/md/2022/01/31/1643630172.png" alt="desc"></p><p>往上翻阅createBean()方法，发现可以拿到要创建的bean的定义信息，包括要创建的bean的类型是什么，它是否是单实例等等，如下图所示。</p><p><img src="https://cdn.jsdelivr.net/gh/zsxfa/CDN/img/md/2022/01/31/1643630545.png" alt="desc"></p><p>我们还是将关注点放在resolveBeforeInstantiation()方法上，当前程序也是停在了这一行，即473行。</p><p>该方法是来解析BeforeInstantiation的，这是啥子意思啊？我们可以看一下该方法上的注释，它是说给后置处理器一个机会，来返回一个代理对象，替代我们创建的目标的bean实例。也就是说，我们希望后置处理器在此能返回一个代理对象，如果能返回代理对象那当然就很好了，直接使用就得了，如果不能那么就得调用doCreateBean()方法来创建一个bean实例了。</p><p><img src="https://cdn.jsdelivr.net/gh/zsxfa/CDN/img/md/2022/01/31/1643630653.png" alt="desc"></p><p>我为什么要说这个方法呢？进入该方法里面看看你自然就懂了，点进去之后会发现该方法真的好长好长，我为了让大家能够更加清楚地看到这个方法的全貌，就截了如下一张图。</p><p><img src="https://cdn.jsdelivr.net/gh/zsxfa/CDN/img/md/2022/01/31/1643631207.png" alt="desc"></p><p>其实，这个doCreateBean()方法我们之前看过很多遍了，所做的事情无非就是：</p><ol><li>首先创建bean的实例</li><li>然后给bean的各种属性赋值</li><li>接着初始化bean<br>1）先执行Aware接口的方法<br>2）应用后置处理器的postProcessBeforeInitialization()方法<br>3）执行自定义的初始化方法<br>4）应用后置处理器的postProcessAfterInitialization()方法</li></ol><p>调用doCreateBean()方法才是真正的去创建一个bean实例。</p><p>我们还是来到程序停留的地方，即AbstractAutowireCapableBeanFactory抽象类的第473行。我们希望后置处理器在此能返回一个代理对象，如果能返回代理对象那当然就很好了，直接使用就得了。接下来，我们就要看看resolveBeforeInstantiation()方法里面具体是怎么做的了。</p><p>继续跟进方法调用栈，如下图所示，可以看到现在是定位到了AbstractAutowireCapableBeanFactory抽象类的resolveBeforeInstantiation()方法中，既然程序是停留在了此处，那说明并没有走后面调用doCreateBean()方法创建bean实例的流程，而是先来到这儿，希望后置处理器能返回一个代理对象。</p><p><img src="https://cdn.jsdelivr.net/gh/zsxfa/CDN/img/md/2022/01/31/1643631593.png" alt="desc"></p><p>可以看到，在该方法中，首先会拿到要创建的bean的定义信息，包括要创建的bean的类型是什么，它是否是单实例等等，然后看它是不是已经提前被解析过了什么什么，这儿都不算太重要，我们主要关注如下这几行代码：</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">bean = applyBeanPostProcessorsBeforeInstantiation(targetType, beanName);</span><br><span class="line"><span class="keyword">if</span> (bean != <span class="literal">null</span>) &#123;</span><br><span class="line">    bean = applyBeanPostProcessorsAfterInitialization(bean, beanName);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>这一块会调用两个方法，一个叫方法叫applyBeanPostProcessorsBeforeInstantiation，另一个方法叫applyBeanPostProcessorsAfterInitialization。</p><p>后置处理器会先尝试返回对象，怎么尝试返回呢？可以看到，是调用applyBeanPostProcessorsBeforeInstantiation()方法返回一个对象的，那这个方法是干啥的呢？我们继续跟进方法调用栈，如下图所示，可以看到现在是定位到了AbstractAutowireCapableBeanFactory抽象类的applyBeanPostProcessorsBeforeInstantiation()方法中。</p><p><img src="https://cdn.jsdelivr.net/gh/zsxfa/CDN/img/md/2022/01/31/1643631651.png" alt="desc"></p><p>我们发现，它是拿到所有的后置处理器，如果后置处理器是InstantiationAwareBeanPostProcessor这种类型的，那么就执行该后置处理器的postProcessBeforeInstantiation()方法。我为什么要说这个方法呢？因为现在遍历拿到的后置处理器是AnnotationAwareAspectJAutoProxyCreator这种类型的，如下图所示。</p><p><img src="https://cdn.jsdelivr.net/gh/zsxfa/CDN/img/md/2022/01/31/1643631742.png" alt="desc"></p><p>并且前面我也说了，它就是InstantiationAwareBeanPostProcessor这种类型的后置处理器，这种类型的后置处理器中声明的方法就叫postProcessBeforeInstantiation，而不是我们以前学的后置处理器中的叫postProcessbeforeInitialization的方法，也就是说后置处理器跟后置处理器是不一样的。</p><p>我们以前就知道，BeanPostProcessor是在bean对象创建完成初始化前后调用的。而在这儿我们也看到了，首先是会有一个判断，即判断后置处理器是不是InstantiationAwareBeanPostProcessor这种类型的，然后再尝试用后置处理器返回对象（当然了，是在创建bean实例之前）。</p><p>总之，我们可以得出一个结论：<strong>AnnotationAwareAspectJAutoProxyCreator会在任何bean创建之前，先尝试返回bean的实例。</strong></p><p>最后，我们继续跟进方法调用栈，如下图所示，可以看到终于又定位到了AbstractAutoProxyCreator抽象类的postProcessBeforeInstantiation()方法中。</p><p><img src="https://cdn.jsdelivr.net/gh/zsxfa/CDN/img/md/2022/01/31/1643631807.png" alt="desc"></p><p>为什么程序会来到这个方法中呢？想必你也非常清楚了，因为判断后置处理器是不是InstantiationAwareBeanPostProcessor这种类型时，轮到了AnnotationAwareAspectJAutoProxyCreator这个后置处理器，而它正好是InstantiationAwareBeanPostProcessor这种类型的，所以程序自然就会来到它的postProcessBeforeInstantiation()方法中。</p><p>呼应前面，我们现在是终于分析到了AnnotationAwareAspectJAutoProxyCreator这个后置处理器的postProcessBeforeInstantiation()方法中，也就是知道了程序是怎么到这儿来的。</p><p>最终，我们得出这样一个结论：<strong>AnnotationAwareAspectJAutoProxyCreator在所有bean创建之前，会有一个拦截，因为它是InstantiationAwareBeanPostProcessor这种类型的后置处理器，然后会调用它的postProcessBeforeInstantiation()方法。</strong></p><h1 id="5-AnnotationAwareAspectJAutoProxyCreator作为后置处理器"><a href="#5-AnnotationAwareAspectJAutoProxyCreator作为后置处理器" class="headerlink" title="5. AnnotationAwareAspectJAutoProxyCreator作为后置处理器"></a>5. AnnotationAwareAspectJAutoProxyCreator作为后置处理器</h1><p>前一讲中，我们一步一步分析到了AbstractAutoProxyCreator抽象类的postProcessBeforeInstantiation()方法中，其实，我们也知道现在调用的其实是AnnotationAwareAspectJAutoProxyCreator类的postProcessBeforeInstantiation()方法。</p><p>那么，在这一讲中，我们就来看看<strong>AnnotationAwareAspectJAutoProxyCreator</strong>作为后置处理器，它的<strong>postProcessBeforeInstantiation</strong>()方法都做了些什么。</p><h2 id="AnnotationAwareAspectJAutoProxyCreator作为后置处理器，它的作用是什么呢？"><a href="#AnnotationAwareAspectJAutoProxyCreator作为后置处理器，它的作用是什么呢？" class="headerlink" title="AnnotationAwareAspectJAutoProxyCreator作为后置处理器，它的作用是什么呢？"></a>AnnotationAwareAspectJAutoProxyCreator作为后置处理器，它的作用是什么呢？</h2><p>我们还是以debug模式来运行IOCTest_AOP测试类，这时，应该还是会来到AbstractAdvisorAutoProxyCreator类的setBeanFactory()方法中，如下图所示。</p><p><img src="https://cdn.jsdelivr.net/gh/zsxfa/CDN/img/md/2022/02/01/1643718302.png" alt="desc"></p><p>这些我们以前说过的方法就不再赘述一遍了。我们就按下<code>F8</code>快捷键运行直到下一个断点，一直运行到AbstractAutoProxyCreator类的postProcessBeforeInstantiation()方法中，如下图所示。</p><p><img src="https://cdn.jsdelivr.net/gh/zsxfa/CDN/img/md/2022/02/01/1643718477.png" alt="desc"></p><p>我们都知道，AnnotationAwareAspectJAutoProxyCreator是InstantiationAwareBeanPostProcessor这种类型的后置处理器，那么它的作用是什么呢？接下来我们就来分析分析。</p><h2 id="在每一个bean创建之前，调用postProcessBeforeInstantiation-方法"><a href="#在每一个bean创建之前，调用postProcessBeforeInstantiation-方法" class="headerlink" title="在每一个bean创建之前，调用postProcessBeforeInstantiation()方法"></a>在每一个bean创建之前，调用postProcessBeforeInstantiation()方法</h2><p>AnnotationAwareAspectJAutoProxyCreator作为后置处理器，它其中的一个作用就是在每一个bean创建之前，调用其postProcessBeforeInstantiation()方法。</p><p>接下来，我们来看看这个方法都做了哪些事情。此刻，是来创建容器中的第一个bean的，即EventListenerMethodProcessor，如下图所示。</p><p><img src="https://cdn.jsdelivr.net/gh/zsxfa/CDN/img/md/2022/02/01/1643718713.png" alt="desc"></p><p>在上一讲中，我们已经知道了，这块是一个循环创建，会循环创建每一个bean。像EventListenerMethodProcessor这样的bean，跟我们要研究的AOP原理没什么关系，所以我们并不关心这个bean的创建。我们主要关心MathCalculator（业务逻辑类）和LogAspects（切面类）这两个bean的创建。</p><p><img src="https://cdn.jsdelivr.net/gh/zsxfa/CDN/img/md/2022/02/01/1643718810.png" alt="desc"></p><p>我们要研究的是这两个bean在创建的时候，AnnotationAwareAspectJAutoProxyCreator这个后置处理器都做了些什么？</p><p>我们按下<code>F8</code>快捷键运行到下一个断点，可以看到这是在创建第一个bean，即EventListenerMethodProcessor。</p><p><img src="https://cdn.jsdelivr.net/gh/zsxfa/CDN/img/md/2022/02/01/1643718908.png" alt="desc"></p><p>继续按下<code>F8</code>快捷键运行到下一个断点，可以看到这是在创建第二个bean，即DefaultEventListenerFactory。</p><p><img src="https://cdn.jsdelivr.net/gh/zsxfa/CDN/img/md/2022/02/01/1643719136.png" alt="desc"></p><p>继续按下<code>F8</code>快捷键运行到下一个断点，又调用到了postProcessAfterInitialization()方法中。</p><p><img src="https://cdn.jsdelivr.net/gh/zsxfa/CDN/img/md/2022/02/01/1643719219.png" alt="desc"></p><p>你知道了什么结论了吗？是不是<strong>在每次创建bean的时候，都会先调用postProcessBeforeInstantiation()方法，然后再调用postProcessAfterInitialization()方法</strong>啊！</p><p>继续按下<code>F8</code>快捷键运行到下一个断点，可以看到这是在创建第三个bean，即MainConfigOfAOP。</p><p><img src="https://cdn.jsdelivr.net/gh/zsxfa/CDN/img/md/2022/02/01/1643719464.png" alt="desc"></p><p>也能看到，在创建这个bean时，先是调用了postProcessBeforeInstantiation()方法，继续按下<code>F8</code>快捷键运行到下一个断点，可以看到然后是再调用了postProcessAfterInitialization()方法。</p><p><img src="https://cdn.jsdelivr.net/gh/zsxfa/CDN/img/md/2022/02/01/1643719537.png" alt="desc"></p><p>要创建的这个bean是我们的主配置类，即MainConfigOfAOP，我们也不需要理它。继续按下<code>F8</code>快捷键运行到下一个断点，可以看到这是在创建第四个bean，即MathCalculator，这是我们需要关心的了。</p><p><img src="https://cdn.jsdelivr.net/gh/zsxfa/CDN/img/md/2022/02/01/1643719642.png" alt="desc"></p><p>按下<code>F6</code>快捷键让程序一步一步往下运行，可以看到先是拿到MathCalculator这个bean的名称（即calculator），然后再来判断名为targetSourcedBeans的Set集合里面是否包含有这个bean的名称，只不过此时该Set集合是一个空集合，接着再来判断名为advisedBeans的Map集合里面是否包含有这个bean的名称。所以，整个的流程应该是下面这样子的。</p><h2 id="先来判断当前bean是否在advisedBeans中"><a href="#先来判断当前bean是否在advisedBeans中" class="headerlink" title="先来判断当前bean是否在advisedBeans中"></a>先来判断当前bean是否在advisedBeans中</h2><p>首先我得说明一点，这里，我们只关心MathCalculator（业务逻辑类）和LogAspects（切面类）这两个bean的创建。</p><p>advisedBeans是个什么东西呢？它是一个Map集合，里面保存了所有需要增强的bean的名称。那什么又叫需要增强的bean呢？就是那些业务逻辑类，例如MathCalculator，因为它里面的那些方法是需要切面来切的，所以我们要执行它里面的方法，不能再像以前那么简单地执行了，得需要增强，这就是所谓的需要增强的bean。</p><p>当程序运行到如下这行代码时，我们来看一下，名为advisedBeans的Map集合里面是不包含MathCalculator这个bean的名称的，因为我们是第一次来处理这个bean。</p><p><img src="https://cdn.jsdelivr.net/gh/zsxfa/CDN/img/md/2022/02/01/1643720060.png" alt="desc"></p><p>也就是说，在这儿会判断当前的MathCalculator这个bean有没有在advisedBeans集合里面。</p><h2 id="再来判断当前bean是否是基础类型，或者是否是切面（标注了-Aspect注解的）"><a href="#再来判断当前bean是否是基础类型，或者是否是切面（标注了-Aspect注解的）" class="headerlink" title="再来判断当前bean是否是基础类型，或者是否是切面（标注了@Aspect注解的）"></a>再来判断当前bean是否是基础类型，或者是否是切面（标注了@Aspect注解的）</h2><p>继续按下<code>F6</code>快捷键让程序往下运行，可以看到又会做一个判断，即判断当前bean是否是基础类型，或者是否是标注了@Aspect注解的切面。</p><p><img src="https://cdn.jsdelivr.net/gh/zsxfa/CDN/img/md/2022/02/01/1643720213.png" alt="desc"></p><p>什么叫基础类型呢？所谓的基础类型就是当前bean是否是实现了Advice、Pointcut、Advisor以及AopInfrastructureBean这些接口。我们可以点进去isInfrastructureClass()方法里面大概看一看，如下图所示，你现在该知道所谓的基础类型是什么了吧。</p><p><img src="https://cdn.jsdelivr.net/gh/zsxfa/CDN/img/md/2022/02/01/1643720286.png" alt="desc"></p><p>其实，除了判断当前bean是否是基础类型之外，还有一个判断，那怎么看到这个判断呢？选中isInfrastructureClass()方法，按下<code>F5</code>快捷键进入该方法里面，就能看到这个判断了，即判断当前bean是否是标注了@Aspect注解的切面。</p><p><img src="https://cdn.jsdelivr.net/gh/zsxfa/CDN/img/md/2022/02/01/1643720491.png" alt="desc"></p><p>从上图中可以清楚地看到，还有一个叫isAspect的方法，它就是来判断当前bean是否是标注了@Aspect注解的切面的。那么它是怎么来判断的呢？我们可以进入该方法里面去看一看（选中该方法，然后按下<code>F5</code>快捷键即可进入），如下图所示，可以看到它是用hasAspectAnnotation()方法来判断当前bean有没有标注@Aspect注解的。</p><p><img src="https://cdn.jsdelivr.net/gh/zsxfa/CDN/img/md/2022/02/01/1643720605.png" alt="desc"></p><p>很显然，当前的这个bean（即MathCalculator）既不是基础类型，也不是标注了@Aspect注解的切面。所以，按下F6快捷键让程序继续往下运行，运行回postProcessBeforeInstantiation()方法中之后，isInfrastructureClass(beanClass)表达式的值就是false了。</p><p><img src="https://cdn.jsdelivr.net/gh/zsxfa/CDN/img/md/2022/02/01/1643720731.png" alt="desc"></p><h2 id="最后判断是否需要跳过"><a href="#最后判断是否需要跳过" class="headerlink" title="最后判断是否需要跳过"></a>最后判断是否需要跳过</h2><p>所谓的跳过，就是说不要再处理这个bean了。那跳过又是怎么判断的呢？我们可以按下<code>F5</code>快捷键进入shouldSkip()方法里面去看一看，如下图所示。</p><p><img src="https://cdn.jsdelivr.net/gh/zsxfa/CDN/img/md/2022/02/01/1643720791.png" alt="desc"></p><p>可以看到，它会在这儿执行一堆的业务逻辑，首先是调用findCandidateAdvisors()方法找到候选的增强器的集合。</p><p>继续按下<code>F6</code>快捷键让程序往下运行，检查candidateAdvisors变量，可以看到现在有4个增强器，什么叫增强器啊？<strong>增强器就是切面里面的那些通知方法。</strong> 而且第一个增强器就是logStart()方法，如下图所示。</p><p><img src="https://cdn.jsdelivr.net/gh/zsxfa/CDN/img/md/2022/02/01/1643721129.png" alt="desc"></p><p>第二个增强器是logEnd()方法，如下图所示。</p><p><img src="https://cdn.jsdelivr.net/gh/zsxfa/CDN/img/md/2022/02/01/1643721220.png" alt="desc"></p><p>第三个增强器是logReturn()方法，如下图所示。</p><p><img src="https://cdn.jsdelivr.net/gh/zsxfa/CDN/img/md/2022/02/01/1643721307.png" alt="desc"></p><p>第四个增强器是logException()方法，如下图所示。</p><p><img src="https://cdn.jsdelivr.net/gh/zsxfa/CDN/img/md/2022/02/01/1643721384.png" alt="desc"></p><p>总结：在shouldSkip()方法里面，首先会获取到以上这4个通知方法。也就是说，先来获取候选的增强器。所谓的增强器其实就是切面里面的那些通知方法，只不过，在这儿是把通知方法的详细信息包装成了一个Advisor，并将其存放在了一个List<Advisor>集合中，即增强器的集合，即是说，每一个通知方法都会被认为是一个增强器。</p><p>那么，每一个增强器的类型又是什么呢？检查一下candidateAdvisors变量便知，每一个封装通知方法的增强器都是InstantiationModelAwarePointcutAdvisor这种类型的。</p><p><img src="https://cdn.jsdelivr.net/gh/zsxfa/CDN/img/md/2022/02/01/1643721590.png" alt="desc"></p><p>获取到4个增强器之后，然后会来判断每一个增强器是不是AspectJPointcutAdvisor这种类型，如果是，那么返回true。很显然，每一个增强器并不是这种类型的，而是InstantiationModelAwarePointcutAdvisor这种类型的，因此程序并不会进入到那个if判断语句中。</p><p>继续按下<code>F6</code>快捷键让程序往下运行，一直运行到shouldSkip()方法中的最后一行代码处，可以看到，在shouldSkip()方法里面，最终会调用父类的shouldSkip()方法，如下图所示。</p><p><img src="https://cdn.jsdelivr.net/gh/zsxfa/CDN/img/md/2022/02/01/1643721694.png" alt="desc"></p><p>我们可以按下<code>F5</code>快捷键进入父类的shouldSkip()方法里面去看一看，如下图所示，发现它在这儿直接就返回false了。</p><p><img src="https://cdn.jsdelivr.net/gh/zsxfa/CDN/img/md/2022/02/01/1643721747.png" alt="desc"></p><p>继续按下<code>F6</code>快捷键让程序往下运行，一直运行回postProcessBeforeInstantiation()方法中，这时，我们可以知道，if判断语句中的第二个表达式的值就是false。</p><p><img src="https://cdn.jsdelivr.net/gh/zsxfa/CDN/img/md/2022/02/01/1643721854.png" alt="desc"></p><p>也就是说，shouldSkip()方法的返回值永远是false，而它就是用来判断是否需要跳过的，所以相当于就是说要跳过了。</p><p>好吧，跳过那就跳过吧！那就继续按下<code>F6</code>快捷键让程序往下运行，我们还是能看到当前这个bean的名字是叫calculator，而且还会拿到什么自定义的TargetSource，但这跟我们目前的研究没有关系，程序往下运行，最后将会直接返回null。</p><p><img src="https://cdn.jsdelivr.net/gh/zsxfa/CDN/img/md/2022/02/01/1643721946.png" alt="desc"></p><p>然后，按下<code>F8</code>快捷键运行到下一个断点，发现这时会来到主配置类的calculator()方法中。此刻，是要调用calculator()方法来创建MathCalculator对象了。</p><p><img src="https://cdn.jsdelivr.net/gh/zsxfa/CDN/img/md/2022/02/01/1643722016.png" alt="desc"></p><p>继续按下<code>F8</code>快捷键运行到下一个断点，可以发现当我们把MathCalculator对象创建完了以后，在这儿又会调用postProcessAfterInitialization()方法。</p><p><img src="https://cdn.jsdelivr.net/gh/zsxfa/CDN/img/md/2022/02/01/1643722079.png" alt="desc"></p><p>其实，上面我也已经说过了，<strong>在每次创建bean的时候，都会先调用postProcessBeforeInstantiation()方法，然后再调用postProcessAfterInitialization()方法。</strong></p><h2 id="创建完对象以后，调用postProcessAfterInitialization-方法"><a href="#创建完对象以后，调用postProcessAfterInitialization-方法" class="headerlink" title="创建完对象以后，调用postProcessAfterInitialization()方法"></a>创建完对象以后，调用postProcessAfterInitialization()方法</h2><p>前面我就已说过，AnnotationAwareAspectJAutoProxyCreator作为后置处理器，它的第一个作用。现在，我就来说说它的第二个作用，即在创建完对象以后，会调用其postProcessAfterInitialization()方法。</p><p>我们调用刚才的calculator()方法创建完MathCalculator对象以后，发现又会调用AnnotationAwareAspectJAutoProxyCreator（后置处理器）的postProcessAfterInitialization()方法。那么该方法又做了些什么事呢？</p><p>继续按下<code>F6</code>快捷键让程序往下运行，我们可以看到当前创建好的MathCalculator对象，并且这个bean的名字就叫calculator，也可以看到在这儿还做了一个判断，即判断名为earlyProxyReferences的Set集合里面是否包含当前bean，在该Set集合里面我们可以看到之前已经代理过了什么，目前该Set集合是一个空集合。这都不是我们要关注的内容，我们重点要关注的内容其实是那个叫wrapIfNecessary的方法。</p><p><img src="https://cdn.jsdelivr.net/gh/zsxfa/CDN/img/md/2022/02/01/1643722443.png" alt="desc"></p><p>什么情况是需要包装的呢？我们可以按下<code>F5</code>快捷键进入该方法里面去看一看，如下图所示。</p><p><img src="https://cdn.jsdelivr.net/gh/zsxfa/CDN/img/md/2022/02/01/1643722488.png" alt="desc"></p><p>我们继续按下<code>F6</code>快捷键让程序往下运行，可以看到：</p><ul><li><p>首先是拿到MathCalculator这个bean的名称（即calculator），然后再来判断名为targetSourcedBeans的Set集合里面是否包含有这个bean的名称，只不过此时该Set集合是一个空集合。</p></li><li><p>接着再来判断名为advisedBeans的Map集合里面是否包含有当前bean的名称。我在前面也说过了advisedBeans这个东东，它就是一个Map集合，里面保存了所有需要增强的bean的名称。</p><p>由于这儿是第一次来处理当前bean，所以名为advisedBeans的Map集合里面是不包含MathCalculator这个bean的名称的。</p></li><li><p>紧接着再来判断当前bean是否是基础类型，或者是否是切面（即标注了@Aspect注解的）。这儿是怎样来判断的，之前我已经详细地讲过了，故略过。</p></li></ul><p>上面这些东西都不是我们要关注的内容，我们重点要关注的内容其实是下面这个叫getAdvicesAndAdvisorsForBean的方法。</p><p><img src="https://cdn.jsdelivr.net/gh/zsxfa/CDN/img/md/2022/02/01/1643722676.png" alt="desc"></p><p>从该方法上面的注释中可以得知，它是用于创建代理对象的，从该方法的名称上（见名知义），我们也可以知道它是来获取当前bean的通知方法以及那些增强器的。</p><h2 id="获取当前bean的所有增强器"><a href="#获取当前bean的所有增强器" class="headerlink" title="获取当前bean的所有增强器"></a>获取当前bean的所有增强器</h2><p>调用getAdvicesAndAdvisorsForBean()方法获取当前bean的所有增强器，也就是那些通知方法，最终封装成这样一个<code>Object[] specificInterceptors</code>数组。</p><p>到底是怎么来获取当前bean的所有增强器的呢？我们可以按下<code>F5</code>快捷键进入getAdvicesAndAdvisorsForBean()方法里面去看一看，如下图所示。</p><p><img src="https://cdn.jsdelivr.net/gh/zsxfa/CDN/img/md/2022/02/01/1643723203.png" alt="desc"></p><p>可以看到，又会调用findEligibleAdvisors()方法来获取MathCalculator这个类型的所有增强器，也可以说成是可用的增强器。它又是怎么获取的呢？我们可以按下F5快捷键进入findEligibleAdvisors()方法里面去看一看，如下图所示，可以看到会先调用一个findCandidateAdvisors()方法来获取候选的所有增强器。</p><p><img src="https://cdn.jsdelivr.net/gh/zsxfa/CDN/img/md/2022/02/01/1643723248.png" alt="desc"></p><p>候选的所有增强器，前面我也说过了，有4个，就是切面里面定义的那4个通知方法。</p><p>按下<code>F6</code>快捷键让程序往下运行，可以看到会调用一个findAdvisorsThatCanApply()方法，见名知义，该方法是来找到那些可用的增强器的，以便可以应用到目标对象里面的目标方法中。</p><p><img src="https://cdn.jsdelivr.net/gh/zsxfa/CDN/img/md/2022/02/01/1643723290.png" alt="desc"></p><p>现在所要做的事情就是，<strong>找到候选的所有增强器，也就是说是来找哪些通知方法是需要切入到当前bean的目标方法中的。</strong></p><p>怎么找呢？我们继续按下<code>F5</code>快捷键进入findAdvisorsThatCanApply()方法里面去看一看，如下图所示，可以看到它是用AopUtils工具类来找到所有能用的增强器（通知方法）的。</p><p><img src="https://cdn.jsdelivr.net/gh/zsxfa/CDN/img/md/2022/02/01/1643723356.png" alt="desc"></p><p>又是怎么找的呢？我们继续按下<code>F5</code>快捷键进入AopUtils工具类的findAdvisorsThatCanApply()方法里面去看一看，如下图所示。</p><p><img src="https://cdn.jsdelivr.net/gh/zsxfa/CDN/img/md/2022/02/01/1643723407.png" alt="desc"></p><p>在按下<code>F6</code>快捷键让程序往下运行的过程中，我们可以看到，先是定义了一个保存可用增强器的LinkedList集合，即eligibleAdvisors。然后通过下面的一个for循环来遍历每一个增强器，在遍历的过程中，可以看到有两个&amp;&amp;判断条件，前面的那个是来判断每一个增强器是不是IntroductionAdvisor这种类型的，很明显，每一个增强器并不是这种类型的，它是InstantiationModelAwarePointcutAdvisor这种类型的，前面我也说过了。所以，程序压根就不会进入到这个if判断语句中。</p><p>程序继续往下运行，这时我们会看到还有一个for循环，它同样是来遍历每一个增强器的，在遍历的过程中，可以看到先是来判断每一个增强器是不是IntroductionAdvisor这种类型的，但很显然，并不是，然后再来利用canApply()方法判断每一个增强器是不是可用的，那什么是叫可用的呢？</p><p>我们可以按下<code>F5</code>快捷键进入canApply()方法里面去看一看，如下图所示。</p><p><img src="https://cdn.jsdelivr.net/gh/zsxfa/CDN/img/md/2022/02/01/1643723548.png" alt="desc"></p><p>在按下F6快捷键让程序往下运行的过程中，我们可以看到，这一块的逻辑就是用PointcutAdvisor（切入点表达式）开始来算一下每一个通知方法能不能匹配上，哈，现在每一个增强器（通知方法）都是能匹配上的哟！大家如果有兴趣的话，那么可以再深入研究下，但我想你肯定是没什么兴趣的，要看的东西太多了…</p><p>继续按下<code>F6</code>快捷键让程序往下运行，可以看到，现在程序是回到了findAdvisorsThatCanApply()方法的第二个for循环中，如下图所示。</p><p><img src="https://cdn.jsdelivr.net/gh/zsxfa/CDN/img/md/2022/02/01/1643723680.png" alt="desc"></p><p>由于现在第一个增强器（logStart()方法）是能匹配上的，即它肯定是能切入到目标对象的目标方法中的，也就是说这个增强器是可用的，所以它会被添加到名为eligibleAdvisors的LinkedList集合里面。</p><p><img src="https://cdn.jsdelivr.net/gh/zsxfa/CDN/img/md/2022/02/01/1643723796.png" alt="desc"></p><p>继续按下<code>F6</code>快捷键让程序往下运行，就会循环判断接下来的每一个增强器能不能用，若能用则添加到名为eligibleAdvisors的LinkedList集合中。</p><p>接着，继续按下<code>F6</code>快捷键让程序往下运行，一直运行回findEligibleAdvisors()方法中，如下图所示。</p><p><img src="https://cdn.jsdelivr.net/gh/zsxfa/CDN/img/md/2022/02/01/1643723904.png" alt="desc"></p><p>至此，终于<strong>获取到能在当前bean中使用的增强器</strong>了。</p><p>继续按下<code>F6</code>快捷键让程序往下运行，可以看到，在该方法中还对增强器做了一些排序，也就是说调用哪些通知方法，它们都是有顺序的。</p><p><img src="https://cdn.jsdelivr.net/gh/zsxfa/CDN/img/md/2022/02/01/1643724147.png" alt="desc"></p><p>继续按下<code>F6</code>快捷键让程序往下运行，这时程序会运行回getAdvicesAndAdvisorsForBean()方法中，最终能在当前bean中使用的增强器就获取到了，要是没获取到呢（即advisors集合为空），那么就会返回一个DO_NOT_PROXY，这个DO_NOT_PROXY其实就是null。很显然，这儿是获取到了，advisors集合并不会为空，所以程序最终会运行到下面这行代码处。</p><p><img src="https://cdn.jsdelivr.net/gh/zsxfa/CDN/img/md/2022/02/01/1643724357.png" alt="desc"></p><p>继续按下<code>F6</code>快捷键让程序往下运行，这时程序会运行回wrapIfNecessary()方法中，如下图所示。</p><p><img src="https://cdn.jsdelivr.net/gh/zsxfa/CDN/img/md/2022/02/01/1643724227.png" alt="desc"></p><p>现在这个叫specificInterceptors的<code>Object[]</code>数组里面已经具有了那些指定好的增强器，这些增强器其实就是要拦截目标方法执行的。</p><h2 id="小结"><a href="#小结" class="headerlink" title="小结"></a>小结</h2><p>以上这一小节的流程，我们可以归纳为：</p><ol><li>找到候选的所有增强器，也就是说是来找哪些通知方法是需要切入到当前bean的目标方法中的</li><li>获取到能在当前bean中使用的增强器</li><li>给增强器排序</li></ol><h2 id="保存当前bean在advisedBeans中，表示这个当前bean已经被增强处理了"><a href="#保存当前bean在advisedBeans中，表示这个当前bean已经被增强处理了" class="headerlink" title="保存当前bean在advisedBeans中，表示这个当前bean已经被增强处理了"></a>保存当前bean在advisedBeans中，表示这个当前bean已经被增强处理了</h2><p>接下来，继续按下<code>F6</code>快捷键让程序往下运行，当程序运行到下面这一行代码时，就会将当前bean添加到名为advisedBeans的Map集合中，表示这个当前bean已经被增强处理了。</p><p><img src="https://cdn.jsdelivr.net/gh/zsxfa/CDN/img/md/2022/02/01/1643724685.png" alt="desc"></p><p>当程序继续往下运行时，会发现有一个createProxy()方法，这个方法非常重要，它是来创建代理对象的。</p><h2 id="若当前bean需要增强，则创建当前bean的代理对象"><a href="#若当前bean需要增强，则创建当前bean的代理对象" class="headerlink" title="若当前bean需要增强，则创建当前bean的代理对象"></a>若当前bean需要增强，则创建当前bean的代理对象</h2><p>当程序运行到createProxy()方法处时，就会创建当前bean的代理对象，那么这个代理对象怎么创建的呢？</p><p>当然是进入到该方法中去看一看了，按下F5快捷键进入当前方法中,如下图所示。</p><p><img src="https://cdn.jsdelivr.net/gh/zsxfa/CDN/img/md/2022/02/01/1643724814.png" alt="desc"></p><p>继续按下<code>F6</code>快捷键让程序往下运行，运行到457这行代码处，可以看到是先拿到所有增强器，然后再把这些增强器保存到代理工厂（即proxyFactory）中。</p><p><img src="https://cdn.jsdelivr.net/gh/zsxfa/CDN/img/md/2022/02/01/1643724880.png" alt="desc"></p><p>接下来，继续按下<code>F6</code>快捷键让程序往下运行，直至运行到createProxy()方法的最后一行，如下图所示。</p><p><img src="https://cdn.jsdelivr.net/gh/zsxfa/CDN/img/md/2022/02/01/1643724924.png" alt="desc"></p><p>这行代码的意思是说，利用代理工厂帮我们创建一个代理对象，那它是怎么帮我们创建代理对象的呢？这得进入到代理工厂的getProxy()方法里面去看一看了，按下<code>F5</code>快捷键进入当前方法中，如下图所示。</p><p><img src="https://cdn.jsdelivr.net/gh/zsxfa/CDN/img/md/2022/02/01/1643725048.png" alt="desc"></p><p>可以看到，会先调用createAopProxy()方法来创建AOP代理。我们按下<code>F5</code>快捷键进入该方法中去看一看，如下图所示，可以看到是先得到AOP代理的创建工厂，然后再来创建AOP代理的。</p><p><img src="https://cdn.jsdelivr.net/gh/zsxfa/CDN/img/md/2022/02/01/1643725159.png" alt="desc"></p><p>我们继续按下<code>F5</code>快捷键进入当前方法中，再按下<code>F7</code>快捷键从当前方法里面退出来，getAopProxyFactory()方法就调用完了，也即AOP代理的创建工厂就获取到了。接下来，就是调用createAopProxy()方法为this对象创建AOP代理了。</p><p>那到底是怎么来创建创建AOP代理的呢？我们可以按下<code>F5</code>快捷键进入createAopProxy()方法中去看一看，如下图所示，这时Spring会自动决定，是为组件创建jdk的动态代理呢，还是为组件创建cglib的动态代理？</p><p><img src="https://cdn.jsdelivr.net/gh/zsxfa/CDN/img/md/2022/02/01/1643725247.png" alt="desc"></p><p>也就是说，会在这儿为组件创建代理对象，并且有两种形式的代理对象，它们分别是：</p><ul><li>一种是JdkDynamicAopProxy这种形式的，即jdk的动态代理</li><li>一种是ObjenesisCglibAopProxy这种形式的，即cglib的动态代理</li></ul><p>那么Spring是怎么自动决定是要创建jdk的动态代理，还是要创建cglib的动态代理呢？如果当前类是有实现接口的，那么就使用jdk来创建动态代理，如果当前类没有实现接口，例如MathCalculator类，此时jdk是没法创建动态代理的，那么自然就得使用cglib来创建动态代理了。而且，咱们可以让Spring强制使用cglib，关于这一点，后续如果有机会的话，那么我们再来探讨。</p><p>也就是说，不管怎么样，Spring都会在这儿为我们创建一个代理对象。很显然，现在是使用cglib来创建动态代理的。</p><p><img src="https://cdn.jsdelivr.net/gh/zsxfa/CDN/img/md/2022/02/01/1643725346.png" alt="desc"></p><p>我们继续按下<code>F6</code>快捷键让程序往下运行，一直让程序运行回wrapIfNecessary()方法中，如下图所示，这时createProxy()方法返回的proxy对象是一个通过Spring cglib增强了的代理对象。</p><p><img src="https://cdn.jsdelivr.net/gh/zsxfa/CDN/img/md/2022/02/01/1643725528.png" alt="desc"></p><p>我们继续按下<code>F6</code>快捷键让程序往下运行，一直让程序运行到applyBeanPostProcessorsAfterInitialization()方法中，如下图所示。</p><p><img src="https://cdn.jsdelivr.net/gh/zsxfa/CDN/img/md/2022/02/01/1643725580.png" alt="desc"></p><p>至此，刚才的那个wrapIfNecessary()方法就完全算是调用完了。</p><p>经过上面的分析，我们知道，<strong>wrapIfNecessary()方法调用完之后，最终会给容器中返回当前组件使用cglib增强了的代理对象。</strong></p><p>对于MathCalculator这个组件来说，以后从容器中获取到的就是该组件的代理对象，然后在执行其目标方法时，这个代理对象就会执行切面里面的通知方法。</p><h2 id="小结-1"><a href="#小结-1" class="headerlink" title="小结"></a>小结</h2><p>以上这一小节的流程，我们可以归纳为：</p><ol><li>获取所有增强器，所谓的增强器就是切面里面的那些通知方法。</li><li>然后再把这些增强器保存到代理工厂（即proxyFactory）中。</li><li>为当前组件创建代理对象，并且会有两种形式的代理对象，它们分别如下，最终Spring会自动决定，是为当前组件创建jdk的动态代理，还是创建cglib的动态代理。<ul><li>一种是JdkDynamicAopProxy这种形式的，即jdk的动态代理</li><li>一种是ObjenesisCglibAopProxy这种形式的，即cglib的动态代理</li></ul></li></ol><h1 id="6-目标方法的拦截逻辑"><a href="#6-目标方法的拦截逻辑" class="headerlink" title="6. 目标方法的拦截逻辑"></a>6. 目标方法的拦截逻辑</h1><p>在上一讲中，咱们分析了一下，AnnotationAwareAspectJAutoProxyCreator作为后置处理器，它的作用是什么。这一讲，将关注点放在目标方法的拦截逻辑上，研究研究目标方法执行之前，它是如何被拦截的。</p><p>打开IOCTest_AOP测试类的代码，并在目标方法运行的地方打上一个断点，如下图所示。</p><p><img src="https://cdn.jsdelivr.net/gh/zsxfa/CDN/img/md/2022/02/02/1643797401.png" alt="desc"></p><p>然后以debug模式来运行IOCTest_AOP测试类，这时，应该还是会来到AbstractAdvisorAutoProxyCreator抽象类的setBeanFactory()方法中，如下图所示。</p><p><img src="https://cdn.jsdelivr.net/gh/zsxfa/CDN/img/md/2022/02/02/1643804370.png" alt="desc"></p><p>程序是怎么一步一步到这儿的，我想之前我已经说得够明白了，这里我就不再赘述一遍了。那接下来该怎么办呢？我们按下<code>F8</code>快捷键让程序运行到下一个断点，一直运行到这个即将要执行的目标方法处，也就是说我们以前看过的方法就直接跳过了。</p><p><img src="https://cdn.jsdelivr.net/gh/zsxfa/CDN/img/md/2022/02/02/1643804513.png" alt="desc"></p><p>当程序运行到目标方法处之后，我们就得进入该方法中来看一看其执行流程了。不过在此之前，我们来看一下从容器中得到的MathCalculator对象，可以看到它确实是使用cglib增强了的代理对象，它里面还封装了好多的数据，如下图所示。</p><p><img src="https://cdn.jsdelivr.net/gh/zsxfa/CDN/img/md/2022/02/02/1643805406.png" alt="desc"></p><p>也就是说<strong>容器中存放的这个增强后的代理对象里面保存了所有通知方法的详细信息，以及还包括要切入的目标对象。</strong></p><p>接下来，我们按下<code>F5</code>快捷键进入目标方法中去看一看，这时，应该是来到了System类的getSecurityManager()方法中，如下图所示。</p><p><img src="https://cdn.jsdelivr.net/gh/zsxfa/CDN/img/md/2022/02/02/1643805675.png" alt="desc"></p><p>这儿牵扯到了jdk的那些类加载机制相关的东西，所以我们在这儿就不做过多研究了，再往下程序进入到了CglibAopProxy类的intercept()方法中，如下图所示。</p><p><img src="https://cdn.jsdelivr.net/gh/zsxfa/CDN/img/md/2022/02/02/1643806078.png" alt="desc"></p><p>见名知义，这个方法就是来拦截目标方法的执行的。也就是说，在执行目标方法之前，先让这个AOP代理来拦截一下。接下来，我们就来看看它的拦截逻辑。</p><h2 id="根据ProxyFactory对象获取将要执行的目标方法的拦截器链"><a href="#根据ProxyFactory对象获取将要执行的目标方法的拦截器链" class="headerlink" title="根据ProxyFactory对象获取将要执行的目标方法的拦截器链"></a>根据ProxyFactory对象获取将要执行的目标方法的拦截器链</h2><p>在按下<code>F6</code>快捷键让程序往下运行的过程中，可以看到前面都是一些变量的声明，直至程序运行到下面这行代码处。</p><p><img src="https://cdn.jsdelivr.net/gh/zsxfa/CDN/img/md/2022/02/02/1643806189.png" alt="desc"></p><p>这时，就拿到了我们要切的目标对象，即MathCalculator对象。接下来，我们就得仔细研究一下getInterceptorsAndDynamicInterceptionAdvice()方法了。</p><p>这个方法是啥意思呢？它的意思是说要根据ProxyFactory对象获取将要执行的目标方法的拦截器链（chain，chain翻译过来就是链的意思），其中，advised变量代表的是ProxyFactory对象，method参数代表的是即将要执行的目标方法（即div()方法）。</p><p>那么，目标方法的拦截器链到底是怎么获取的呢？这才是我们关注的核心。听起来，它是来拦截目标方法前后进行执行的，而在目标方法前后要执行的，其实就是切面里面的通知方法。所以，我们可以大胆猜测，这个拦截器链应该是来说先是怎么执行通知方法，然后再来怎么执行目标方法的。</p><p>回到主题，如果有拦截器链，那么这个拦截器链是怎么获取的呢？我们可以按下<code>F5</code>快捷键进入getInterceptorsAndDynamicInterceptionAdvice()方法中去看一看，进来以后可以看到有一些缓存，缓存就是要把这些获取到的东西保存起来，方便下一次直接使用。</p><p><img src="https://cdn.jsdelivr.net/gh/zsxfa/CDN/img/md/2022/02/02/1643806238.png" alt="desc"></p><p>然后按下<code>F6</code>快捷键让程序往下运行，直至运行到如下图所示的这行代码处。</p><p><img src="https://cdn.jsdelivr.net/gh/zsxfa/CDN/img/md/2022/02/02/1643806276.png" alt="desc"></p><p>可以看到，它是利用advisorChainFactory来获取目标方法的拦截器链的。那又是怎么获取的呢？我们按下<code>F5</code>快捷键进入getInterceptorsAndDynamicInterceptionAdvice()方法中看一看便知道了。</p><p><img src="https://cdn.jsdelivr.net/gh/zsxfa/CDN/img/md/2022/02/02/1643806529.png" alt="desc"></p><p>可以看到，先是在开头创建一个List<Object> interceptorList集合，然后在后面遍历所有增强器，并为该集合添加值，最后返回该集合。最终，整个拦截器链就会被封装到List集合中。接下来，我就来详细讲讲getInterceptorsAndDynamicInterceptionAdvice()方法，看这个方法都做了些什么？</p><h2 id="先创建一个List集合，来保存所有拦截器"><a href="#先创建一个List集合，来保存所有拦截器" class="headerlink" title="先创建一个List集合，来保存所有拦截器"></a>先创建一个List集合，来保存所有拦截器</h2><p>注意，在开头创建List集合时，其实已经为该集合赋好了长度，长度到底是多少呢？inspect一下config.getAdvisors()表达式的值便知道了，如下图所示。</p><p><img src="https://cdn.jsdelivr.net/gh/zsxfa/CDN/img/md/2022/02/02/1643806794.png" alt="desc"></p><p>很显然，该集合的长度是5，1个默认的ExposeInvocationInterceptor和4个增强器，这个List集合虽然有长度，但是现在是空的。另外，我们也知道，第一个增强器其实是一个异常通知，即AspectJAfterThrowingAdvice，因为我已在前面分析过了。</p><p>按下<code>F6</code>快捷键让程序往下运行，这时会有一个for循环，它是来遍历所有的Advisor的（一共有5个），每遍历出一个Advisor，便来判断它是不是PointcutAdvisor（和切入点有关的Advisor），若是则把这个Advisor传过来，然后包装成一个MethodInterceptor[]类型的interceptors，接着再把它添加到一开始创建的List集合中。</p><p><img src="https://cdn.jsdelivr.net/gh/zsxfa/CDN/img/md/2022/02/02/1643807010.png" alt="desc"></p><p>如果遍历出的Advisor不是PointcutAdvisor，而是IntroductionAdvisor，那么怎么办呢？同样是将这个Advisor传过来，然后包装成一个<code>Interceptor[]</code>类型的interceptors，最后再把它添加到一开始创建的List集合中。</p><p><img src="https://cdn.jsdelivr.net/gh/zsxfa/CDN/img/md/2022/02/02/1643807062.png" alt="desc"></p><p>或者，直接将遍历出的Advisor传进来，然后包装成一个<code>Interceptor[]</code>类型的interceptors，最后再把它添加到一开始创建的List集合中。</p><p><img src="https://cdn.jsdelivr.net/gh/zsxfa/CDN/img/md/2022/02/02/1643807096.png" alt="desc"></p><h2 id="遍历所有的增强器，将其转为Interceptor"><a href="#遍历所有的增强器，将其转为Interceptor" class="headerlink" title="遍历所有的增强器，将其转为Interceptor"></a>遍历所有的增强器，将其转为Interceptor</h2><p>我们按下<code>F6</code>快捷键让程序往下运行，让其运行到第61行代码处，即进入for循环中去遍历所有的Advisor。此时，inspect一下advisor变量的值，便能知道第一个增强器是ExposeInvocationInterceptor。</p><p>然后来判断这个Advisor是不是PointcutAdvisor，按下<code>F6</code>快捷键让程序继续往下运行，发现能进入到if判读语句中，说明这个Advisor确实是PointcutAdvisor。继续让程序往下运行，让其运行到第65行代码处，即：</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">MethodInterceptor[] interceptors = registry.getInterceptors(advisor);</span><br></pre></td></tr></table></figure><p>你可能要问了，遍历出每一个增强器之后，又是怎么将其转为Interceptor的呢？其实，答案就隐藏在上面这行代码中。</p><h3 id="转换第一个增强器"><a href="#转换第一个增强器" class="headerlink" title="转换第一个增强器"></a>转换第一个增强器</h3><p>我们按下<code>F5</code>快捷键进入getInterceptors()方法里面去一探究竟，如下图所示。</p><p><img src="https://cdn.jsdelivr.net/gh/zsxfa/CDN/img/md/2022/02/02/1643807507.png" alt="desc"></p><p>该方法的逻辑其实蛮简单的，就是先拿到增强器，然后判断这个增强器是不是MethodInterceptor这种类型的，若是则直接添加进名为interceptors的List集合里面，若不是则使用AdvisorAdapter（增强器的适配器）将这个增强器转为MethodInterceptor这种类型，然后再添加进List集合里面，反正不管如何，最后都会将该List集合转换成MethodInterceptor数组返回出去。</p><p>按下<code>F6</code>快捷键让程序往下运行，发现程序会进入到第一个if判断语句中，说明拿到的第一个增强器（即ExposeInvocationInterceptor）是MethodInterceptor这种类型的，那么自然就会将其添加进List集合中。</p><p><img src="https://cdn.jsdelivr.net/gh/zsxfa/CDN/img/md/2022/02/02/1643807565.png" alt="desc"></p><p>继续按下<code>F6</code>快捷键让程序往下运行，当程序运行到第85行代码处时，inspect一下adapters变量的值，发现它里面有3个增强器的适配器，它们分别是：</p><ol><li>MethodBeforeAdviceAdapter：专门来转前置通知的</li><li>AfterReturningAdviceAdapter：专门来返回置通知的</li><li>ThrowsAdviceAdapter：专门来异常置通知的</li></ol><p><img src="https://cdn.jsdelivr.net/gh/zsxfa/CDN/img/md/2022/02/02/1643807753.png" alt="desc"></p><p>此时，会使用到以上这3个增强器的适配器吗？并不会，因为程序继续往下运行的过程中，并不会进入到for循环里面的if判断语句中。</p><p>接着，让程序继续往下运行，直至getInterceptors()方法执行完毕，并且该方法运行完会返回一个MethodInterceptor数组，该数组只有一个元素，即拿到的第一个增强器（即ExposeInvocationInterceptor）。</p><p><img src="https://cdn.jsdelivr.net/gh/zsxfa/CDN/img/md/2022/02/02/1643809301.png" alt="desc"></p><p>让程序继续往下运行，这时程序就运行回getInterceptorsAndDynamicInterceptionAdvice()方法中了，如下图所示。</p><p><img src="https://cdn.jsdelivr.net/gh/zsxfa/CDN/img/md/2022/02/02/1643809522.png" alt="desc"></p><p>哎呀，第65行代码运行过去了，这不好，因为我们还想看看其他的增强器是怎么转成Interceptor的，那么这时该怎么办呢？我们可以点进getInterceptors()方法里面，然后在该方法处打上一个断点，接着便来看其他的增强器是怎么转成Interceptor的。</p><p><img src="https://cdn.jsdelivr.net/gh/zsxfa/CDN/img/md/2022/02/02/1643808132.png" alt="desc"></p><h3 id="转换第二个增强器"><a href="#转换第二个增强器" class="headerlink" title="转换第二个增强器"></a>转换第二个增强器</h3><p>此时，按下<code>F8</code>快捷键让程序运行到下一个断点，可以看到现在传递过来的是第二个Advisor，该Advisor持有的增强器是AspectJAfterThrowingAdvice，即异常通知。</p><p><img src="https://cdn.jsdelivr.net/gh/zsxfa/CDN/img/md/2022/02/02/1643809618.png" alt="desc"></p><p>在按下<code>F6</code>快捷键让程序往下运行的过程中，可以看到，先是判断拿到的第二个增强器是不是MethodInterceptor这种类型的。但很显然，它正好就是这种类型，你只要查看一下AspectJAfterThrowingAdvice类的源码便知道了，如下图所示，该类实现了MethodInterceptor接口。</p><p><img src="https://cdn.jsdelivr.net/gh/zsxfa/CDN/img/md/2022/02/02/1643809692.png" alt="desc"></p><p>既然是，那么自然就会将其添加进List集合中，如下图所示。</p><p><img src="https://cdn.jsdelivr.net/gh/zsxfa/CDN/img/md/2022/02/02/1643807565.png" alt="desc"></p><p>继续按下<code>F6</code>快捷键让程序往下运行，此时，会使用到那3个增强器的适配器吗？并不会，因为程序继续往下运行的过程中，并不会进入到for循环里面的if判断语句中。</p><p>当程序运行至getInterceptors()方法的最后一行代码时，该方法会返回一个MethodInterceptor数组，并且该数组只有一个元素，即拿到的第二个增强器（即AspectJAfterThrowingAdvice）。</p><p><img src="https://cdn.jsdelivr.net/gh/zsxfa/CDN/img/md/2022/02/02/1643809809.png" alt="desc"></p><h3 id="转换第三个增强器"><a href="#转换第三个增强器" class="headerlink" title="转换第三个增强器"></a>转换第三个增强器</h3><p>按下<code>F8</code>快捷键让程序运行到下一个断点，可以看到现在传递过来的是第三个Advisor，该Advisor持有的增强器是AspectJAfterReturningAdvice，即返回通知。</p><p><img src="https://cdn.jsdelivr.net/gh/zsxfa/CDN/img/md/2022/02/02/1643808610.png" alt="desc"></p><p>按下<code>F6</code>快捷键让程序往下运行，发现程序并不会进入到第一个if判断语句中，说明拿到的第三个增强器（即AspectJAfterReturningAdvice）并不是MethodInterceptor这种类型。也就是说有些通知方法是实现了MethodInterceptor接口的，也有些不是。 如果不是的话，那么该怎么办呢？这时，就要使用到增强器的适配器了。</p><p>让程序继续往下运行，可以看到现在使用的增强器的适配器是MethodBeforeAdviceAdapter，如下图所示。</p><p><img src="https://cdn.jsdelivr.net/gh/zsxfa/CDN/img/md/2022/02/02/1643808674.png" alt="desc"></p><p>该适配器是专门来转前置通知的，它能不能支持转换这个AspectJAfterReturningAdvice（返回通知）呢？很显然是肯定不支持的。</p><p>接着，让程序继续往下运行，可以看到现在使用的增强器的适配器是AfterReturningAdviceAdapter，如下图所示。</p><p><img src="https://cdn.jsdelivr.net/gh/zsxfa/CDN/img/md/2022/02/02/1643808779.png" alt="desc"></p><p>该适配器是专门来转返回通知的，很显然它肯定是支持转换这个AspectJAfterReturningAdvice（返回通知）的。那么，问题来了，该适配器是怎么将AspectJAfterReturningAdvice（返回通知）转换为Interceptor的呢？进入getInterceptor()方法里面一看便知，如下图所示，实际上就是拿到Advice（增强器），并将其包装成一个Interceptor而已。</p><p><img src="https://cdn.jsdelivr.net/gh/zsxfa/CDN/img/md/2022/02/02/1643808831.png" alt="desc"></p><p>当程序运行至getInterceptors()方法的最后一行代码时，该方法会返回一个MethodInterceptor数组，并且该数组只有一个元素，即拿到的第三个增强器（即AfterReturningAdviceInterceptor）。</p><p><img src="https://cdn.jsdelivr.net/gh/zsxfa/CDN/img/md/2022/02/02/1643808922.png" alt="desc"></p><h3 id="转换第四个增强器"><a href="#转换第四个增强器" class="headerlink" title="转换第四个增强器"></a>转换第四个增强器</h3><p>按下<code>F8</code>快捷键让程序运行到下一个断点，可以看到现在传递过来的是第四个Advisor，该Advisor持有的增强器是AspectJAfterAdvice，即后置通知。</p><p><img src="https://cdn.jsdelivr.net/gh/zsxfa/CDN/img/md/2022/02/02/1643810184.png" alt="desc"></p><p>然后，按下<code>F6</code>快捷键让程序往下运行，发现程序会进入到第一个if判断语句中，说明拿到的第四个增强器（即AspectJAfterAdvice）是MethodInterceptor这种类型的，那么自然就会将其添加进List集合中。</p><p>继续按下<code>F6</code>快捷键让程序往下运行，此时，会使用到那3个增强器的适配器吗？并不会，因为程序继续往下运行的过程中，并不会进入到for循环里面的if判断语句中。</p><p>当程序运行至getInterceptors()方法的最后一行代码时，该方法会返回一个MethodInterceptor数组，并且该数组只有一个元素，即拿到的第四个增强器（即AspectJAfterAdvice）。</p><p><img src="https://cdn.jsdelivr.net/gh/zsxfa/CDN/img/md/2022/02/02/1643810512.png" alt="desc"></p><h3 id="转换第五个增强器"><a href="#转换第五个增强器" class="headerlink" title="转换第五个增强器"></a>转换第五个增强器</h3><p>按下<code>F8</code>快捷键让程序运行到下一个断点，可以看到现在传递过来的是第五个Advisor，该Advisor持有的增强器是AspectJMethodBeforeAdvice，即前置通知。</p><p><img src="https://cdn.jsdelivr.net/gh/zsxfa/CDN/img/md/2022/02/02/1643810601.png" alt="desc"></p><p>然后，按下<code>F6</code>快捷键让程序往下运行，发现程序并不会进入到第一个if判断语句中，说明拿到的第五个增强器（即AspectJMethodBeforeAdvice）并不是MethodInterceptor这种类型。如果不是的话，那么该怎么办呢？这时，就要使用到增强器的适配器了。</p><p>让程序继续往下运行，可以看到现在使用的增强器的适配器是MethodBeforeAdviceAdapter，如下图所示。</p><p><img src="https://cdn.jsdelivr.net/gh/zsxfa/CDN/img/md/2022/02/02/1643810683.png" alt="desc"></p><p>该适配器是专门来转前置通知的，很显然它肯定是支持转换这个AspectJMethodBeforeAdvice（前置通知）的。该适配器是怎么转换的呢？其实很简单，就是拿到Advice（增强器），然后将其包装成一个Interceptor而已，这前面我也讲过了。</p><p><img src="https://cdn.jsdelivr.net/gh/zsxfa/CDN/img/md/2022/02/02/1643810794.png" alt="desc"></p><p>当程序运行至getInterceptors()方法的最后一行代码时，该方法会返回一个MethodInterceptor数组，并且该数组只有一个元素，即拿到的第五个增强器（即MethodBeforeAdviceInterceptor）。</p><p><img src="https://cdn.jsdelivr.net/gh/zsxfa/CDN/img/md/2022/02/02/1643810888.png" alt="desc"></p><p>接着，让程序继续往下运行，将整个转换流程走完，直至程序运行回getInterceptorsAndDynamicInterceptionAdvice()方法中，如下图所示。</p><p><img src="https://cdn.jsdelivr.net/gh/zsxfa/CDN/img/md/2022/02/02/1643810950.png" alt="desc"></p><p>紧接着，继续让程序往下运行，直至走完整个for循环，如下图所示，此时会返回一开始就创建的List集合。</p><p><img src="https://cdn.jsdelivr.net/gh/zsxfa/CDN/img/md/2022/02/02/1643811082.png" alt="desc"></p><p>可以看到，该List集合里面有5个拦截器，其中AspectJAfterThrowingAdvice和AspectJAfterAdvice这俩人家本来就是拦截器，而AfterReturningAdviceInterceptor和MethodBeforeAdviceInterceptor这俩是使用适配器重新转换之后的拦截器。</p><p>最后，继续让程序往下运行，直至运行回CglibAopProxy类的intercept()方法中，如下图所示。</p><p><img src="https://cdn.jsdelivr.net/gh/zsxfa/CDN/img/md/2022/02/02/1643811460.png" alt="desc"></p><p>此时，将要执行的目标方法的拦截器链就获取到了，<strong>拦截器链里面保存的其实就是每一个通知方法</strong>。</p><h2 id="如果有拦截器链，那么怎么做呢？"><a href="#如果有拦截器链，那么怎么做呢？" class="headerlink" title="如果有拦截器链，那么怎么做呢？"></a>如果有拦截器链，那么怎么做呢？</h2><p><strong>什么叫拦截器链呢？所谓的拦截器链其实就是每一个通知方法又被包装为了方法拦截器。</strong> 之后，目标方法的执行，就要使用到这个拦截器链机制。</p><p>如果真的获取到了拦截器链，那么接下来会怎么做呢？很明显，这时程序会进入到else分支语句中，然后将需要执行的目标对象、目标方法以及拦截器链等所有相关信息传入CglibMethodInvocation类的有参构造器中，来创建一个CglibMethodInvocation对象，接着会调用其proceed()方法，并且该方法会有一个返回值。</p><p><img src="https://cdn.jsdelivr.net/gh/zsxfa/CDN/img/md/2022/02/02/1643811877.png" alt="desc"></p><p>接下来，我们就来看看到底是怎么来new这个CglibMethodInvocation对象的。进入到CglibMethodInvocation匿名内部类的有参构造器中，如下图所示。</p><p><img src="https://cdn.jsdelivr.net/gh/zsxfa/CDN/img/md/2022/02/02/1643812129.png" alt="desc"></p><p>最后按下<code>F7</code>快捷键从当前方法里面退出来。至此，就new出来了这个CglibMethodInvocation对象。</p><p>new出来该对象以后，接下来就是来执行其proceed()方法了，相当于是来执行获取到的拦截器链，因为在new这个CglibMethodInvocation对象的时候，会把拦截器链传过来，传过来以后，势必就要执行该拦截器链了，而整个的执行过程其实就是触发拦截器链的调用过程。</p><h2 id="如果没有拦截器链，那么直接执行目标方法"><a href="#如果没有拦截器链，那么直接执行目标方法" class="headerlink" title="如果没有拦截器链，那么直接执行目标方法"></a>如果没有拦截器链，那么直接执行目标方法</h2><p>获取完拦截器链之后，如果这个链是空的，也就是说并没有获取到拦截器链，那么程序就会进入到if判断语句中执行如下这行代码。</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">retVal = methodProxy.invoke(target, argsToUse);</span><br></pre></td></tr></table></figure><p>这行代码的意思是什么呢？仔细看一下这行代码上面的注释，我们就能知道，它的意思是说将会跳过创建一个MethodInvocation对象，然后直接就来执行目标对象中的目标方法。</p><h1 id="7-拦截器链的执行过程"><a href="#7-拦截器链的执行过程" class="headerlink" title="7. 拦截器链的执行过程"></a>7. 拦截器链的执行过程</h1><p>通过上一讲的研究，我们知道，在目标方法执行之前，Spring会把所有的增强器转换为拦截器，并最终形成一个拦截器链，然后根据这个拦截器链new出一个CglibMethodInvocation对象，接着会调用其proceed()方法。</p><p>接下来，我们就来探究一下这个proceed()方法到底怎么执行的，你只要搞清楚了，那么你必然就能知道整个拦截器链的执行过程。更具体一点的说，你会知道目标方法的整个执行流程，即目标方法是怎么一执行，然后先来执行前置通知，接着再是目标方法，紧接着再是后置通知，最后再是返回通知或者异常通知的。</p><h2 id="拦截器链的执行过程"><a href="#拦截器链的执行过程" class="headerlink" title="拦截器链的执行过程"></a>拦截器链的执行过程</h2><p>我们还是以debug模式来运行IOCTest_AOP测试类，这时，应该还是会来到AbstractAdvisorAutoProxyCreator抽象类的setBeanFactory()方法中，如下图所示。</p><p><img src="https://cdn.jsdelivr.net/gh/zsxfa/CDN/img/md/2022/02/01/1643718302.png" alt="desc"></p><p>程序是怎么一步一步到这儿的，我想之前我已经说得够多的了，这里我就不再赘述一遍了。那接下来该怎么办呢？我们按下<code>F8</code>快捷键让程序运行到下一个断点，一直运行到这个即将要执行的目标方法处，也就是说我们以前看过的方法就直接跳过了。</p><p><img src="https://cdn.jsdelivr.net/gh/zsxfa/CDN/img/md/2022/02/03/1643891833.png" alt="desc"></p><p>然后我们继续按下<code>F8</code>快捷键让程序运行到下一个断点，这时程序会运行到DefaultAdvisorAdapterRegistry类的getInterceptors()方法中，如下图所示。</p><p><img src="https://cdn.jsdelivr.net/gh/zsxfa/CDN/img/md/2022/02/03/1643891926.png" alt="desc"></p><p>你是不是现在倍感熟悉，因为此时就是将遍历出的每一个增强器转成拦截器的过程，我在上一讲中也详细讲过了</p><p>我们不妨点击方法调用栈的下面一行看看，如下图所示，inspect一下config.getAdvisors()表达式的值，便能看到那5个增强器了。</p><p><img src="https://cdn.jsdelivr.net/gh/zsxfa/CDN/img/md/2022/02/03/1643892075.png" alt="desc"></p><p>还是回到DefaultAdvisorAdapterRegistry类的getInterceptors()方法中，继续按下F8快捷键让程序运行到下一个断点，反复4次之后，可以看到现在传递过来的是第五个Advisor，该Advisor持有的增强器是AspectJMethodBeforeAdvice，即前置通知。</p><p><img src="https://cdn.jsdelivr.net/gh/zsxfa/CDN/img/md/2022/02/03/1643892244.png" alt="desc"></p><p>接下来，按下<code>F6</code>快捷键让程序往下运行，一直运行到CglibAopProxy类的intercept()方法中，如下图所示。</p><p><img src="https://cdn.jsdelivr.net/gh/zsxfa/CDN/img/md/2022/02/03/1643892409.png" alt="desc"></p><p>此时，将要执行的目标方法的拦截器链就获取到了。</p><p>如果真的获取到了拦截器链，那么接下来会怎么做呢？很明显，这时程序会进入到else分支语句中，然后将需要执行的目标对象、目标方法以及拦截器链等所有相关信息传入CglibMethodInvocation类的有参构造器中，来创建一个CglibMethodInvocation对象。</p><p><img src="https://cdn.jsdelivr.net/gh/zsxfa/CDN/img/md/2022/02/03/1643892492.png" alt="desc"></p><p>那到底是怎么来new这个CglibMethodInvocation对象的呢？我们进入到CglibMethodInvocation匿名内部类的有参构造器中，如下图所示。</p><p><img src="https://cdn.jsdelivr.net/gh/zsxfa/CDN/img/md/2022/02/03/1643892630.png" alt="desc"></p><p>最后按下<code>F7</code>快捷键从当前方法里面退出来。至此，就new出来了这个CglibMethodInvocation对象。new出来该对象以后，接下来就是来执行其proceed()方法了。</p><p>以上就是上一讲中我们研究的内容。</p><p>接下来，我们就进去proceed()方法里面去看一看，它到底是怎么执行的。按下<code>F5</code>快捷键进入该方法中，可以看到，这儿首先是有一个成员变量，即currentInterceptorIndex，翻译过来应该是当前拦截器的索引。</p><p><img src="https://cdn.jsdelivr.net/gh/zsxfa/CDN/img/md/2022/02/03/1643892709.png" alt="desc"></p><p>该索引的默认值是-1，点进该成员变量里面一看便知。</p><p><img src="https://cdn.jsdelivr.net/gh/zsxfa/CDN/img/md/2022/02/03/1643892759.png" alt="desc"></p><p>然后，会在这儿做一个判断，即判断currentInterceptorIndex成员变量的值（也即索引的值）是否等于<code>this.interceptorsAndDynamicMethodMatchers.size() - 1</code>。你可能要问了，这个interceptorsAndDynamicMethodMatchers到底是什么啊？inspect一下它便知道了，如下图所示。</p><p><img src="https://cdn.jsdelivr.net/gh/zsxfa/CDN/img/md/2022/02/03/1643892934.png" alt="desc"></p><p>可以看到，interceptorsAndDynamicMethodMatchers其实就是一个ArrayList集合，它里面保存有5个拦截器。</p><p>也就是说，在这儿是来判断-1是否等于5-1的，很显然，并不相等。你又要问了，那什么时候相等呢？这得分两种情况来看：</p><ol><li>如果我们没有获取到拦截器链，那么该ArrayList集合必然就是空的，此时就相当于是在判断-1是否等于0-1</li><li>currentInterceptorIndex成员变量是来记录我们当前拦截器的索引的（从-1开始），有可能正好当前拦截器的索引为4，此时就相当于是在判断4是否等于5（拦截器总数）-1</li></ol><p>不管是哪种情况，程序都会进入到if判断语句中。就以第一种情况来说，此时并没有拦截器链，那么必然就会调用invokeJoinpoint()方法。我们可以点进该方法里面去一探究竟，发现进入到了ReflectiveMethodInvocation类的invokeJoinpoint()方法中，如下图所示。</p><p><img src="https://cdn.jsdelivr.net/gh/zsxfa/CDN/img/md/2022/02/03/1643893097.png" alt="desc"></p><p>再点进invokeJoinpointUsingReflection()方法里面，发现其实就是利用反射来执行目标方法，如下图所示。</p><p><img src="https://cdn.jsdelivr.net/gh/zsxfa/CDN/img/md/2022/02/03/1643893193.png" alt="desc"></p><p>所以，我们可以得出这样一个结论：<strong>如果没有拦截器链，或者当前拦截器的索引和拦截器总数-1的大小一样，那么便直接执行目标方法。</strong> 我们先分析到这，因为过一会就可以看到这个过程了。</p><p>好，我们还是回到proceed()方法里面，此时是来判断currentInterceptorIndex成员变量的值（即-1）是否等于拦截器总数（5）-1的，很显然并不相等，所以程序并不会进入到if判断语句中。</p><p>按下<code>F6</code>快捷键让程序往下运行，运行至第162行代码处时，可以看到会先让currentInterceptorIndex成员变量自增，即由-1自增为0，然后再从拦截器链里面获取第0号拦截器，即ExposeInvocationInterceptor。</p><p><img src="https://cdn.jsdelivr.net/gh/zsxfa/CDN/img/md/2022/02/03/1643893339.png" alt="desc"></p><p>也就是说，在proceed()方法里面，我们会先来获取到第0号拦截器。第0号拦截器我们拿到以后，那么接下来该怎么办呢？继续按下<code>F6</code>快捷键让程序往下运行，发现运行到了第179行代码处，如下图所示。</p><p><img src="https://cdn.jsdelivr.net/gh/zsxfa/CDN/img/md/2022/02/03/1643893441.png" alt="desc"></p><p>可以看到，会调用当前拦截器的invoke()方法，而且会将this指代的对象传入该方法中。那么this指代的又是哪一个对象呢？inspect一下this，我们便知道它指代的就是之前创建的CglibMethodInvocation对象。</p><p><img src="https://cdn.jsdelivr.net/gh/zsxfa/CDN/img/md/2022/02/03/1643893525.png" alt="desc"></p><p>接下来，我们就进去invoke()方法里面去看一看，它到底是怎么执行的。按下<code>F5</code>快捷键进入该方法中，可以看到，这儿是先从invocation里面get到一个MethodInvocation实例。</p><p><img src="https://cdn.jsdelivr.net/gh/zsxfa/CDN/img/md/2022/02/03/1643893578.png" alt="desc"></p><p>你不禁就要问了，这个invocation是啥？这个MethodInvocation又是啥？我来一一解答你的疑问，点击invocation成员变量进去看一下，可以看到它是一个ThreadLocal，ThreadLocal就是同一个线程来共享数据的，它要共享的数据就是MethodInvocation实例，而这个MethodInvocation实例其实就是之前创建的CglibMethodInvocation对象。</p><p><img src="https://cdn.jsdelivr.net/gh/zsxfa/CDN/img/md/2022/02/03/1643893637.png" alt="desc"></p><p>由于这是第一次，ThreadLocal里面还没有共享数据，因此接下来便会在当前线程中保存CglibMethodInvocation对象。然后就会来执行CglibMethodInvocation对象的proceed()方法，如下图所示。</p><p><img src="https://cdn.jsdelivr.net/gh/zsxfa/CDN/img/md/2022/02/03/1643893699.png" alt="desc"></p><p>说白了，<strong>执行拦截器的invoke()方法其实就是执行CglibMethodInvocation对象的proceed()方法。</strong></p><p>接下来，我们就再进去proceed()方法里面去看一看，它到底是怎么执行的。按下F5快捷键进入该方法中，你会发现这又是同样熟悉的那套，只不过现在是来判断currentInterceptorIndex成员变量的值（即0，因为自增过一次，所以已经由之前的-1变成了0）是否等于拦截器总数（5）-1的，很显然并不相等，所以程序并不会进入到if判断语句中。</p><p><img src="https://cdn.jsdelivr.net/gh/zsxfa/CDN/img/md/2022/02/03/1643892709.png" alt="desc"></p><p>继续按下<code>F6</code>快捷键让程序往下运行，运行至第162行代码处时，可以看到会先让currentInterceptorIndex成员变量自增，即由0自增为1，然后再从拦截器链里面获取第1号拦截器，即AspectJAfterThrowingAdvice。</p><p><img src="https://cdn.jsdelivr.net/gh/zsxfa/CDN/img/md/2022/02/03/1643894009.png" alt="desc"></p><p>也就是说，<strong>每执行一次proceed()方法，当前拦截器的索引（即currentInterceptorIndex成员变量）都会自增一次。</strong></p><p>第1号拦截器我们拿到以后，那么接下来该怎么办呢？继续按下<code>F6</code>快捷键让程序往下运行，发现运行到了第179行代码处，如下图所示。</p><p><img src="https://cdn.jsdelivr.net/gh/zsxfa/CDN/img/md/2022/02/03/1643894069.png" alt="desc"></p><p>可以看到，又会调用当前拦截器的invoke()方法，并且会将CglibMethodInvocation对象传入该方法中。</p><p>这时，你会发现，现在是从第一个拦截器（即ExposeInvocationInterceptor）锁定到了下一个拦截器（即AspectJAfterThrowingAdvice），而且我们也看到了，所有拦截器都会调用invoke()方法。</p><p>接着，我们就再进去invoke()方法里面去看一看，它到底是怎么执行的。按下<code>F5</code>快捷键进入该方法中，可以看到，当前拦截器（即AspectJAfterThrowingAdvice）的invoke()方法的执行逻辑是下面这样子的。</p><p><img src="https://cdn.jsdelivr.net/gh/zsxfa/CDN/img/md/2022/02/03/1643894124.png" alt="desc"></p><p>可以看到又是来调用CglibMethodInvocation对象的proceed()方法，其中mi变量指代的就是CglibMethodInvocation对象。</p><p>至此，我们可以得出这样一个结论：<strong>每执行一次proceed()方法，当前拦截器的索引（即currentInterceptorIndex成员变量）都会自增一次，并且还会拿到下一个拦截器。这个流程会不断地循环往复，直至拿到最后一个拦截器为止。</strong></p><p>接下来，我们就再进去proceed()方法里面去看一看，它到底是怎么执行的。按下<code>F5</code>快捷键进入该方法中，你会发现又是同样熟悉的那套，只不过现在是来判断currentInterceptorIndex成员变量的值（即1，因为自增过一次，所以已经由之前的0变成了1）是否等于拦截器总数（5）-1的，很显然并不相等，所以程序并不会进入到if判断语句中。</p><p><img src="https://cdn.jsdelivr.net/gh/zsxfa/CDN/img/md/2022/02/03/1643892709.png" alt="desc"></p><p>继续按下<code>F6</code>快捷键让程序往下运行，运行至第162行代码处时，可以看到会先让currentInterceptorIndex成员变量自增，即由1自增为2，然后再从拦截器链里面获取第2号拦截器，即AfterReturningAdviceInterceptor。</p><img src="https://cdn.jsdelivr.net/gh/zsxfa/CDN/img/md/2022/02/03/1643894359.png" alt="desc"  /><p>第2号拦截器我们拿到以后，那么接下来该怎么办呢？继续按下<code>F6</code>快捷键让程序往下运行，发现运行到了第179行代码处，如下图所示。</p><p><img src="https://cdn.jsdelivr.net/gh/zsxfa/CDN/img/md/2022/02/03/1643894464.png" alt="desc"></p><p>可以看到，又会调用当前拦截器的invoke()方法，并且会将CglibMethodInvocation对象传入该方法中。</p><p>这时，你会发现，现在是从上一个拦截器（即AspectJAfterThrowingAdvice）锁定到了当前这个拦截器（即AfterReturningAdviceInterceptor），可想而知，当前这个拦截器又该要锁定到下一个拦截器了。</p><p>接着，我们就再进去invoke()方法里面去看一看，它到底是怎么执行的。按下<code>F5</code>快捷键进入该方法中，可以看到，又是来调用CglibMethodInvocation对象的proceed()方法，其中mi变量指代的就是CglibMethodInvocation对象。</p><p><img src="https://cdn.jsdelivr.net/gh/zsxfa/CDN/img/md/2022/02/03/1643894551.png" alt="desc"></p><p>接下来，我们就再进去proceed()方法里面去看一看，它到底是怎么执行的。按下<code>F5</code>快捷键进入该方法中，你会发现又是同样熟悉的那套，只不过现在是来判断currentInterceptorIndex成员变量的值（即2，因为自增过一次，所以已经由之前的1变成了2）是否等于拦截器总数（5）-1的，很显然并不相等，所以程序并不会进入到if判断语句中。</p><p><img src="https://cdn.jsdelivr.net/gh/zsxfa/CDN/img/md/2022/02/03/1643892709.png" alt="desc"></p><p>继续按下<code>F6</code>快捷键让程序往下运行，运行至第162行代码处时，可以看到会先让currentInterceptorIndex成员变量自增，即由2自增为3，然后再从拦截器链里面获取第3号拦截器，即AspectJAfterAdvice。</p><p><img src="https://cdn.jsdelivr.net/gh/zsxfa/CDN/img/md/2022/02/03/1643894742.png" alt="desc"></p><p>第3号拦截器我们拿到以后，那么接下来该怎么办呢？继续按下<code>F6</code>快捷键让程序往下运行，发现运行到了第179行代码处，如下图所示。</p><p><img src="https://cdn.jsdelivr.net/gh/zsxfa/CDN/img/md/2022/02/03/1643894904.png" alt="desc"></p><p>可以看到，又会调用当前拦截器的invoke()方法，并且会将CglibMethodInvocation对象传入该方法中。</p><p>这时，你会发现，现在是从上一个拦截器（即AfterReturningAdviceInterceptor）锁定到了当前这个拦截器（即AspectJAfterAdvice），可想而知，当前这个拦截器又该要锁定到下一个拦截器了。</p><p>接着，我们就再进去invoke()方法里面去看一看，它到底是怎么执行的。按下<code>F5</code>快捷键进入该方法中，可以看到，又是来调用CglibMethodInvocation对象的proceed()方法，其中mi变量指代的就是CglibMethodInvocation对象。</p><p><img src="https://cdn.jsdelivr.net/gh/zsxfa/CDN/img/md/2022/02/03/1643894983.png" alt="desc"></p><p>现在，你是否明白了这样一个道理，就是<strong>invoke()方法里面会调用proceed()方法，而这个proceed()方法又是寻找下一个拦截器</strong>？</p><p>接下来，我们就再进去proceed()方法里面去看一看，它到底是怎么执行的。按下<code>F5</code>快捷键进入该方法中，你会发现又是同样熟悉的那套，只不过现在是来判断currentInterceptorIndex成员变量的值（即3，因为自增过一次，所以已经由之前的2变成了3）是否等于拦截器总数（5）-1的，很显然并不相等，所以程序并不会进入到if判断语句中。</p><p><img src="https://cdn.jsdelivr.net/gh/zsxfa/CDN/img/md/2022/02/03/1643892709.png" alt="desc"></p><p>继续按下<code>F6</code>快捷键让程序往下运行，运行至第162行代码处时，可以看到会先让currentInterceptorIndex成员变量自增，即由3自增为4，然后再从拦截器链里面获取第4号拦截器，即MethodBeforeAdviceInterceptor，它已是最后一个拦截器了。</p><p><img src="https://cdn.jsdelivr.net/gh/zsxfa/CDN/img/md/2022/02/03/1643895217.png" alt="desc"></p><p>最后一个拦截器我们拿到以后，那么接下来该怎么办呢？继续按下<code>F6</code>快捷键让程序往下运行，发现运行到了第179行代码处，如下图所示。</p><p><img src="https://cdn.jsdelivr.net/gh/zsxfa/CDN/img/md/2022/02/03/1643895256.png" alt="desc"></p><p>可以看到，又会调用当前拦截器的invoke()方法，并且会将CglibMethodInvocation对象传入该方法中。</p><p>这时，你会发现，现在是从上一个拦截器（即AspectJAfterAdvice）锁定到了当前最后这个拦截器（即MethodBeforeAdviceInterceptor）。</p><p>接着，我们就再进去invoke()方法里面去看一看，它到底是怎么执行的。按下<code>F5</code>快捷键进入该方法中，可以看到，现在这个invoke()方法里面的逻辑有点变化，它会先调用前置通知，再来调用CglibMethodInvocation对象的proceed()方法，其中mi变量指代的就是CglibMethodInvocation对象。</p><p><img src="https://cdn.jsdelivr.net/gh/zsxfa/CDN/img/md/2022/02/03/1643895299.png" alt="desc"></p><h2 id="调用前置通知"><a href="#调用前置通知" class="headerlink" title="调用前置通知"></a>调用前置通知</h2><p>继续按下<code>F6</code>快捷键让程序往下运行，会发现MethodBeforeAdviceInterceptor这个拦截器总算是做一点事了，即调用前置通知，并且IDEA控制台也打印出了前置通知要输出的内容，如下图所示。</p><p><img src="https://cdn.jsdelivr.net/gh/zsxfa/CDN/img/md/2022/02/03/1643895393.png" alt="desc"></p><p>前置通知调用完之后，会再来调用CglibMethodInvocation对象的proceed()方法。</p><p>接下来，我们就再进去proceed()方法里面去看一看，它到底是怎么执行的。按下<code>F5</code>快捷键进入该方法中，你会发现又是同样熟悉的那套，只不过现在是来判断currentInterceptorIndex成员变量的值（即4，因为自增过一次，所以已经由之前的3变成了4）是否等于拦截器总数（5）-1的，很显然是相等的，所以程序会进入到if判断语句中。</p><p><img src="https://cdn.jsdelivr.net/gh/zsxfa/CDN/img/md/2022/02/03/1643892709.png" alt="desc"></p><p>这时，会直接利用反射来执行目标方法。继续按下<code>F6</code>快捷键让程序往下运行，你会看到IDEA控制台打印出了目标方法中要输出的内容，这表明目标方法已执行完了。</p><p><img src="https://cdn.jsdelivr.net/gh/zsxfa/CDN/img/md/2022/02/03/1643895548.png" alt="desc"></p><p>也就是说，<strong>前置通知调用完之后，接着是来调用目标方法的，并且目标方法调用完之后会返回到上一个拦截器（即AspectJAfterAdvice）中。</strong></p><h2 id="调用后置通知"><a href="#调用后置通知" class="headerlink" title="调用后置通知"></a>调用后置通知</h2><p>执行完目标方法并返回到上一个拦截器（即AspectJAfterAdvice）中之后，可以看到会在finally代码块中执行后置通知，因为AspectJAfterAdvice是一个后置通知的拦截器。</p><p>继续按下<code>F6</code>快捷键让程序往下运行，你会看到Eclipse控制台打印出了后置通知要输出的内容，这表明当前拦截器（即AspectJAfterAdvice）的invoke()方法就调用完了。</p><p><img src="https://cdn.jsdelivr.net/gh/zsxfa/CDN/img/md/2022/02/03/1643895606.png" alt="desc"></p><p>从上图中可以知道，调用完后置通知之后，再次返回到了第二个拦截器（即AspectJAfterThrowingAdvice）中。</p><h2 id="如果目标方法运行时没有抛异常，那么调用返回通知"><a href="#如果目标方法运行时没有抛异常，那么调用返回通知" class="headerlink" title="如果目标方法运行时没有抛异常，那么调用返回通知"></a>如果目标方法运行时没有抛异常，那么调用返回通知</h2><p>如果目标方法运行时没有抛异常，那么后置通知调用完之后，就应该返回到第三个拦截器（即AfterReturningAdviceInterceptor）中。</p><p>而目前的这个目标方法运行时抛了异常，那么在调用完后置通知之后，其实按理来说应该是要返回到第三个拦截器（即AfterReturningAdviceInterceptor）中的，但是这个拦截器并没有对异常进行处理，而是直接抛给了上一个拦截器（即AspectJAfterThrowingAdvice），所以，你会看到，最终是返回到了第二个拦截器（即AspectJAfterThrowingAdvice）中。</p><p><img src="https://cdn.jsdelivr.net/gh/zsxfa/CDN/img/md/2022/02/03/1643895606.png" alt="desc"></p><p>在这个拦截器的invoke()方法中才有catch语句捕获到异常。</p><p>我们可以来看一下AfterReturningAdviceInterceptor这个拦截器的invoke()方法，看看它到底是怎么执行的，如下图所示。</p><p><img src="https://cdn.jsdelivr.net/gh/zsxfa/CDN/img/md/2022/02/03/1643895890.png" alt="desc"></p><p>可以看到，只有下面这行代码执行时没有问题，才会调用返回通知。</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="type">Object</span> <span class="variable">retVal</span> <span class="operator">=</span> mi.proceed();</span><br></pre></td></tr></table></figure><p>而且，咱们在以上invoke()方法中，并没有看到try catch代码块，所以，一旦以上代码运行时抛了异常，那么便会直接抛给上一个拦截器。</p><p>也就是说，<strong>返回通知只有在目标方法运行没抛异常的时候才会被调用。</strong></p><h2 id="如果目标方法运行时抛异常，那么调用异常通知"><a href="#如果目标方法运行时抛异常，那么调用异常通知" class="headerlink" title="如果目标方法运行时抛异常，那么调用异常通知"></a>如果目标方法运行时抛异常，那么调用异常通知</h2><p>但是，现在目标方法运行时抛了异常，所以在后置通知调用完之后，返回到了第三个拦截器（即AfterReturningAdviceInterceptor）中。</p><p><img src="https://cdn.jsdelivr.net/gh/zsxfa/CDN/img/md/2022/02/03/1643895972.png" alt="desc"></p><p>该拦截器捕获到异常之后，便会调用异常通知。按下<code>F6</code>快捷键让程序往下运行，你会看到IDEA控制台打印出了异常通知要输出的内容，如下图所示。</p><p><img src="https://cdn.jsdelivr.net/gh/zsxfa/CDN/img/md/2022/02/03/1643896051.png" alt="desc"></p><p>异常通知调用完之后，如果有异常，整个的这个异常还会被抛出去，而且是一层一层地往上抛，有人处理就处理，没人处理就抛给虚拟机。</p><p>至此，整个拦截器链的执行过程，我们就知道的非常清楚了。更具体一点的说，我们知道了目标方法的整个执行流程，即先执行前置通知，然后再来执行目标方法，接着再来执行后置通知，这三步是固定的。最后，如果目标方法运行时没有抛异常，那么调用返回通知，如果目标方法运行时抛了异常，那么调用异常通知。</p><p><img src="https://cdn.jsdelivr.net/gh/zsxfa/CDN/img/md/2022/02/03/1643896113.png" alt="desc"></p><h2 id="小结-2"><a href="#小结-2" class="headerlink" title="小结"></a>小结</h2><p>整个拦截器链的执行过程，我们总结一下，其实就是链式获取每一个拦截器，然后执行拦截器的invoke()方法，每一个拦截器等待下一个拦截器执行完成并返回以后，再来执行其invoke()方法。通过拦截器链这种机制，保证了通知方法与目标方法的执行顺序。</p><h1 id="AOP原理总结"><a href="#AOP原理总结" class="headerlink" title="AOP原理总结"></a>AOP原理总结</h1><p>经过前面这7讲的学习，相信对AOP的原理有了一个更深入的认识，而且还是从源码角度去认识的。</p><p>最后，我们还需要对AOP原理做一个简单的总结，完美结束对其研究的旅程。</p><ol><li><p>利用@EnableAspectJAutoProxy注解来开启AOP功能</p></li><li><p>这个AOP功能是怎么开启的呢？主要是通过@EnableAspectJAutoProxy注解向IOC容器中注册一个AnnotationAwareAspectJAutoProxyCreator组件来做到这点的</p></li><li><p>AnnotationAwareAspectJAutoProxyCreator组件是一个后置处理器</p></li><li><p>该后置处理器是怎么工作的呢？在IOC容器创建的过程中，我们就能清楚地看到这个后置处理器是如何创建以及注册的，以及它的工作流程。</p><p><strong>a.</strong> 首先，在创建IOC容器的过程中，会调用refresh()方法来刷新容器，而在刷新容器的过程中有一步是来注册后置处理器的，如下所示：</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">registerBeanPostProcessors(beanFactory); <span class="comment">// 注册后置处理器，在这一步会创建AnnotationAwareAspectJAutoProxyCreator对象</span></span><br></pre></td></tr></table></figure><p>其实，这一步会为所有后置处理器都创建对象。</p><p><strong>b.</strong> 在刷新容器的过程中还有一步是来完成BeanFactory的初始化工作的，如下所示：</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">finishBeanFactoryInitialization(beanFactory); <span class="comment">// 完成BeanFactory的初始化工作。所谓的完成BeanFactory的初始化工作，其实就是来创建剩下的单实例bean的。</span></span><br></pre></td></tr></table></figure><p>很显然，剩下的单实例bean自然就包括MathCalculator（业务逻辑类）和LogAspects（切面类）这两个bean，因此这两个bean就是在这儿被创建的。</p><ul><li><p>创建业务逻辑组件和切面组件</p></li><li><p>在这两个组件创建的过程中，最核心的一点就是AnnotationAwareAspectJAutoProxyCreator（后置处理器）会来拦截这俩组件的创建过程</p></li><li><p>怎么拦截呢？主要就是在组件创建完成之后，判断组件是否需要增强。如需要，则会把切面里面的通知方法包装成增强器，然后再为业务逻辑组件创建一个代理对象。我们也认真仔细探究过了，在为业务逻辑组件创建代理对象的时候，使用的是cglib来创建动态代理的。当然了，如果业务逻辑类有实现接口，那么就使用jdk来创建动态代理。一旦这个代理对象创建出来了，那么它里面就会有所有的增强器。</p><p>这个代理对象创建完以后，IOC容器也就创建完了。接下来，便要来执行目标方法了。</p></li></ul></li><li><p>执行目标方法</p><p><strong>a.</strong> 此时，其实是代理对象来执行目标方法</p><p><strong>b.</strong> 使用CglibAopProxy类的intercept()方法来拦截目标方法的执行，拦截的过程如下：</p><ul><li><p>得到目标方法的拦截器链，所谓的拦截器链其实就是每一个通知方法又被包装为了方法拦截器，即MethodInterceptor</p></li><li><p>利用拦截器的链式机制，依次进入每一个拦截器中进行执行</p></li><li><p>最终，整个的执行效果就会有两套：</p><blockquote><p>目标方法正常执行：前置通知→目标方法→后置通知→返回通知</p><p>目标方法出现异常：前置通知→目标方法→后置通知→异常通知</p></blockquote></li></ul></li></ol>]]></content>
    
    
    <summary type="html">&lt;h1 id=&quot;1-搭建一个AOP测试环境&quot;&gt;&lt;a href=&quot;#1-搭建一个AOP测试环境&quot; class=&quot;headerlink&quot; title=&quot;1. 搭建一个AOP测试环境&quot;&gt;&lt;/a&gt;1. 搭建一个AOP测试环境&lt;/h1&gt;&lt;h2 id=&quot;什么是AOP？&quot;&gt;&lt;a href=&quot;#什么是AOP？&quot; class=&quot;headerlink&quot; title=&quot;什么是AOP？&quot;&gt;&lt;/a&gt;什么是AOP？&lt;/h2&gt;&lt;p&gt;AOP（Aspect Orient Programming），直译过来就是面向切面编程。AOP是一种编程思想，是面向对象编程（OOP）的一种补充。面向对象编程将程序抽象成各个层次的对象，而面向切面编程是将程序抽象成各个切面。&lt;/p&gt;</summary>
    
    
    
    <category term="Spring原理" scheme="http://zsxfa.cn/categories/Spring%E5%8E%9F%E7%90%86/"/>
    
    
    <category term="AOP" scheme="http://zsxfa.cn/tags/AOP/"/>
    
  </entry>
  
  <entry>
    <title>驾考细则</title>
    <link href="http://zsxfa.cn/2022/02/01/1.%E9%A9%BE%E8%80%83%E7%BB%86%E5%88%99/"/>
    <id>http://zsxfa.cn/2022/02/01/1.%E9%A9%BE%E8%80%83%E7%BB%86%E5%88%99/</id>
    <published>2022-02-01T03:34:46.000Z</published>
    <updated>2022-02-17T07:32:48.172Z</updated>
    
    <content type="html"><![CDATA[<p>关于考驾照的一些基本常识…</p><span id="more"></span><p>[TOC]</p><h1 id="1-申请年龄"><a href="#1-申请年龄" class="headerlink" title="1 申请年龄"></a>1 申请年龄</h1><blockquote><p>从高到低 26 24 21 20 18 </p></blockquote><ul><li>申请 <strong>大型客车</strong><blockquote><p>26到50周岁</p></blockquote></li><li>申请 <strong>牵引车</strong> <blockquote><p>24到50周岁</p></blockquote></li><li>申请 <strong>中型客车</strong><blockquote><p>21到50周岁</p></blockquote></li><li>申请 <strong>城市公交车 大型货车 无轨电车或有轨电车</strong><blockquote><p>20到50周岁 </p></blockquote></li><li>申请**低速载货汽车 三轮汽车 普通三轮摩托车 普通二轮摩托车或者轮式自行机械车(电动车?) <blockquote><p>18到60周岁</p></blockquote></li><li>申请 <strong>小型汽车 小型自动挡汽车 残疾人专用小型自动挡载客汽车 轻便摩托车准驾车型</strong> <blockquote><p>18到70周岁(C1和C2本)</p></blockquote></li></ul><h1 id="2-考试内容"><a href="#2-考试内容" class="headerlink" title="2 考试内容"></a>2 考试内容</h1><blockquote><p>科目一 道路交通安全法律法规和相关知识考试 90及格</p></blockquote><ul><li>机动车驾驶证申领和使用</li><li>机动车登记规定</li><li>道路通行 交通信号 </li><li>交通安全违法行为和交通事故处理</li><li>其他道路交通安全法律法规规章 </li></ul><blockquote><p>科目二 场地驾驶技能考试 80合格</p></blockquote><ul><li>起步 曲线行驶 直角转弯</li><li>侧方停车 坡道顶端停车 倒车入库</li></ul><blockquote><p>科目三 道路驾驶技能考试 90合格</p></blockquote><ul><li>上车准备</li><li>起步 直线行驶 加速档位操作</li><li>变更车道 靠边停车</li><li>直行通行路口 路口左转弯 路口右转弯</li><li>通过人行横道 通过学校区域 通过公共汽车站</li><li>夜间行驶 </li></ul><blockquote><p>科目四（科三俗称） 安全文明驾驶常识考试  </p></blockquote><ul><li>安全文明驾驶操作要求</li><li>恶劣气象和复杂道路的安全驾驶知识</li><li>爆胎等紧急情况下的临危处置方式</li><li>交通事故的处置方式</li></ul><h1 id="3-考试规定"><a href="#3-考试规定" class="headerlink" title="3 考试规定"></a>3 考试规定</h1><ol><li>按照科目一，二，三，四顺序依次进行，前一科目考试合格，才可以参加后一科目的考试</li><li>科目一合格后，车辆管理所在一日内核发<strong>驾驶技能准考证明</strong></li><li>驾驶技能准考证明有效期为<strong>三年</strong>，应当在有效期内完成剩余科目的考试。未在有效期完成的，已考试合格的科目成绩作废</li><li>科目三道路驾驶技能合格后才可以参加科目四的安全文明驾驶常识考试，安全文件驾驶常识考试不合格的，道路驾驶技能考试有效</li></ol><h1 id="4-约考规定"><a href="#4-约考规定" class="headerlink" title="4 约考规定"></a>4 约考规定</h1><ol><li> 预约每个科目考试一次，不合格可以补考一次，不加价补考或考试不合格的，本次考试终止，需要重新预约，科目二科目三应当在十日后预约</li><li> 驾驶技能准考证有效期内，<strong>科目二和科目三道路驾驶节能预约考试的次数不得超过5次</strong>,第五次不合格的，已合格科目成绩作废</li><li> 因故不能按照预约时间参加考试的，应当提前一申请取消预约，未参加预约考试的该次考试不合格。</li></ol><h1 id="5-合格标准"><a href="#5-合格标准" class="headerlink" title="5 合格标准"></a>5 合格标准</h1><ol><li>科目一满分100分 90分合格</li><li>科目二满分100分 大型客车，牵引车 中型客车 城市公交车 大型货车90分合格 其他准驾车型80分合格</li><li>科目三 科目四分别100分 都是90分合格</li></ol><h1 id="1-驾驶证和行驶证"><a href="#1-驾驶证和行驶证" class="headerlink" title="1 驾驶证和行驶证"></a>1 驾驶证和行驶证</h1><blockquote><p>驾驶证</p></blockquote><ol><li><p>按照驾驶证准驾车型驾驶机动车。</p></li><li><p>驾驶机动车时，随身携带。</p></li><li><p>驾驶证丢失损毁向<strong>驾驶证核发地</strong>车辆管理所申请补发</p></li></ol><blockquote><p>行驶证</p></blockquote><ol><li>驾驶机动车上道路行驶，应当随车携带机动车行驶证，悬挂机动车号牌，放置检验合格标志 保险标志</li><li>行驶证丢失损毁向<strong>机动车登记地</strong>车辆管理所申请补发 </li></ol><h1 id="2-机动车登记管理"><a href="#2-机动车登记管理" class="headerlink" title="2 机动车登记管理"></a>2 机动车登记管理</h1><ol><li>国家对机动车实行登记管理制度。</li><li>机动车经公安机关交通管理部门登记后，方可上路行驶</li><li>尚未登记的机动车，需要临时上路的，应当取得临时通行证 </li><li>下列情况需要申请变更登记<ol><li>更改车身颜色</li><li>更改车身或车架</li><li>更换发动机</li><li>更换整车</li><li>营运与非营运</li><li>所有迁入迁出相关区域</li></ol></li><li>达到报废的车辆<ol><li>公安机关在报废期满的2个月前通知登记人办理注销登记</li><li>机动车所有人在报废期满前交售给机动车回收企业</li><li>机动车回收企业将报废机动车的登记证书 号牌 行驶证交给公安机关交通管理部分进行注销</li><li>机动车所有人逾期不办理注销登记的，公安机关交通管理部分作废机动车登记证 号牌 行驶证</li></ol></li><li>机动车丢失申请注销登记的，机动车所有人应当提供身份证明，并交回机动车登记证</li></ol><h1 id="3-驾驶证准驾车型"><a href="#3-驾驶证准驾车型" class="headerlink" title="3 驾驶证准驾车型"></a>3 驾驶证准驾车型</h1><p>驾驶证         准驾车型</p><blockquote><p>四种</p></blockquote><p>大型客车A1  –&gt;  A B C1~C4 M</p><p>牵引车A2    –&gt;  A2 B C1~C4 M</p><blockquote><p>两种</p></blockquote><p>城市公交车A3 –&gt; A3 C1~C4</p><p>中型客车B1   –&gt; B1 C1~C4</p><p>大型货车B2   –&gt; B2 C1~C4</p><blockquote><p>一种</p></blockquote><p>小型汽车C1  –&gt; C1~C4</p><p>小型自动挡汽车C2  –&gt; C2</p><p>低速载货汽车C3 –&gt; C3 C4</p><p>三轮汽车C4  –&gt; C4</p><p>残疾人专用小型自动挡载客汽车C5 –&gt;C5</p><p>普通三轮摩托车D –&gt; D E F</p><p>普通二轮摩托车E –&gt; E F</p><p>轻便摩托车F –&gt; F</p><p>轮式自行机械车M –&gt; M</p><p>无轨电车N –&gt; N</p><p>有轨电车P –&gt; P</p><h1 id="4-实习期"><a href="#4-实习期" class="headerlink" title="4 实习期"></a>4 实习期</h1><ol><li>考试通过后的12个月为实习期，</li><li>实习期内驾驶基底层，在车后粘贴或者悬挂统一式样的实习标志</li><li>实习期内不得驾驶公共汽车，营运客车，警车，消防车，工程救险车和危险物品机动车，牵引车</li><li>实习期内上高速，应当有三年以上的驾驶人陪同</li><li>增加准驾车型的实习期，驾驶原准驾的机动车不受上述限制</li><li>新取得A和B级驾驶证的，实习期结束后，三十日内应当参加法律法规等知识考试，接受不少于半小时的交通事故案例警示教育</li></ol><h1 id="5-驾驶证审验"><a href="#5-驾驶证审验" class="headerlink" title="5 驾驶证审验"></a>5 驾驶证审验</h1><ol><li>应当按照法律法规定期到公安机关交通管理部门接受审验</li><li>A和B级驾驶证，应当在记分周期结束后三十日内接受审验，没有记分记录的，免除审验</li><li>发生交通事故造成人员伤亡承担同等以上责任未被吊销驾驶证的，应当在记分周期结束后三十日内接受审验</li><li>60周岁以上，记分周期结束后三十日内审验时应提交身体条件证明</li><li>异地从事营运机动车，在营运第车辆管理所登记一年后，可以在营运第参加审验</li><li>因故无法提交身体证明的，可以申请延期办理，延期期限最初不得超过三年，延期期间驾驶证不得驾驶机动车</li></ol><h1 id="6-驾驶证更换"><a href="#6-驾驶证更换" class="headerlink" title="6 驾驶证更换"></a>6 驾驶证更换</h1><ol><li>驾驶证损毁的，应当在三十日内申请更换</li><li>驾驶证有效期满九十日内申请更换</li><li>驾驶人迁入迁出应当申请更换</li><li>驾驶人在外地居住的，可以在居住地申请更换</li><li>驾驶证六年有效期内，每个记分周期均为满12分，换发十年有效证，十年到期更换长期有效驾驶证</li></ol><h1 id="7-驾驶证注销"><a href="#7-驾驶证注销" class="headerlink" title="7 驾驶证注销"></a>7 驾驶证注销</h1><ol><li>驾驶人死亡</li><li>日出注销申请</li><li>丧失民事行为，监护人提出申请 注销</li><li>身体条件不允许</li><li>妨碍安全驾驶疾病的</li><li>吸毒</li><li>驾驶证失效一年以上</li><li>60岁以上一个记分周期未提交身体条件证明，</li><li>残疾人三个记分周期未提交身体条件证明</li><li>60岁的无轨电车和有轨电车驾驶证</li><li>70岁以上的低速载货汽车 三轮汽车 轮式自行车</li><li>机动车驾驶证已吊销或撤销的</li></ol>]]></content>
    
    
    <summary type="html">&lt;p&gt;关于考驾照的一些基本常识…&lt;/p&gt;</summary>
    
    
    
    <category term="driving" scheme="http://zsxfa.cn/categories/driving/"/>
    
    
    <category term="驾考常识" scheme="http://zsxfa.cn/tags/%E9%A9%BE%E8%80%83%E5%B8%B8%E8%AF%86/"/>
    
  </entry>
  
  <entry>
    <title>科一考点速记</title>
    <link href="http://zsxfa.cn/2022/02/01/2.%E7%A7%91%E4%B8%80%E8%80%83%E7%82%B9%E9%80%9F%E8%AE%B0/"/>
    <id>http://zsxfa.cn/2022/02/01/2.%E7%A7%91%E4%B8%80%E8%80%83%E7%82%B9%E9%80%9F%E8%AE%B0/</id>
    <published>2022-02-01T03:05:43.000Z</published>
    <updated>2022-02-17T07:32:56.181Z</updated>
    
    <content type="html"><![CDATA[<h1 id="题目单元"><a href="#题目单元" class="headerlink" title="题目单元:"></a>题目单元:</h1><p>1，道路交通安全法律、法规和规章(其实就是驾照相关知识、能不能开灯、能不能超车、谁先行这些)</p><p>2，交通安全信号灯</p><p>3，安全行车、文明驾驶基础知识(主要包括应对各种路面状况的知识点，高速、交通意外、山路、窄路之类的)</p><p>4，机动车驾驶操作相关基础知识(仪表、车内信号灯、油门安全装置之类的东西)，共四部分内容 。</p><span id="more"></span><h1 id="驾照方面知识点-开车的法律基础"><a href="#驾照方面知识点-开车的法律基础" class="headerlink" title="驾照方面知识点[开车的法律基础]:"></a>驾照方面知识点[开车的法律基础]:</h1><p>驾驶证种类:c1(手动挡汽车，能开c2自动挡车c3低速载货车c4三轮汽车)、c2(能开自动挡汽车与自动挡载货车)。</p><h2 id="驾驶证年龄-申请-限制与驾驶证种类"><a href="#驾驶证年龄-申请-限制与驾驶证种类" class="headerlink" title="驾驶证年龄*申请*限制与驾驶证种类:"></a><strong>驾驶证年龄*申请*限制与驾驶证种类:</strong></h2><ul><li>18～70 c1手动挡汽车、c2自动挡汽车、残疾人专用驾驶车、轻摩托。</li><li>18～60 c3低速载货车、c4三轮汽车、二轮摩托、轮式机械车。</li><li>20～50城市公交、大型货车、无轨电车、有轨准驾车辆。</li><li>21～50中型客车</li><li>24～50牵引车</li><li>26～50大型载人车。</li><li>备注:驾驶人上70岁<strong>1年</strong>提交一次身体证明。</li></ul><p>上路二证:<strong>驾驶证(证明驾驶员准驾车辆类型，补办去找核发地车辆管理所)</strong>+**行驶证(允许车上路的证明，补办去找登记地车辆管理所)**。</p><h1 id="1、驾照"><a href="#1、驾照" class="headerlink" title="1、驾照"></a>1、驾照</h1><h2 id="假一吊二撤三醉五逃终生"><a href="#假一吊二撤三醉五逃终生" class="headerlink" title="假一吊二撤三醉五逃终生"></a>假一吊二撤三醉五逃终生</h2><p>假一：提交虚假材料考驾照，一年内不得重新申请；<br>吊二：被吊销驾照后，二年内不得重新申领；<br>撤三：（贿赂）被撤销驾照后，三年内不得重新申领；<br>醉五：醉酒肇事，五年内不得重新申领；<br>逃终生：肇事逃逸者，终生不得重新申领。</p><h2 id="吊销驾驶证的几种情况"><a href="#吊销驾驶证的几种情况" class="headerlink" title="吊销驾驶证的几种情况"></a>吊销驾驶证的几种情况</h2><p>（200-2000）元<br>1）超速50%<br>2）醉酒驾驶<br>3）<strong>驾驶拼装车</strong>或达到报废标准的机动车<br>4）将车交给驾驶证被吊销人员</p><h2 id="扣留驾驶证的几种情况"><a href="#扣留驾驶证的几种情况" class="headerlink" title="扣留驾驶证的几种情况"></a>扣留驾驶证的几种情况</h2><p>1）饮酒、醉酒后驾驶机动车  <strong>100ml血液中 醉酒：酒精含量&gt;=80mg 饮酒：酒精含量&gt;=20mg&amp;&amp;&lt;80mg</strong><br>2）机动车驾驶人将机动车交由未取得机动车驾驶证或者机动车驾驶证被吊销、暂扣的人驾驶的<br>3）机动车行驶超过规定时速百分之五十的<br>4）驾驶拼装或者已达到报废标准的机动车的<br>5）发生重大交通事故，构成犯罪的<br>6）在一个记分周期内累积记分达到12分的</p><h2 id="扣留机动车"><a href="#扣留机动车" class="headerlink" title="扣留机动车"></a>扣留机动车</h2><p>上路行驶的机动车<strong>未放置检验合格标志</strong>、<strong>保险标志</strong>、<strong>未携带行驶证</strong>、<strong>驾驶证</strong>、<strong>遮挡、污渍或不按规定安装号牌</strong>的，交警可以依法扣留机动车</p><h2 id="丢失、过期"><a href="#丢失、过期" class="headerlink" title="丢失、过期"></a>丢失、过期</h2><p><strong>驾驶证</strong>丢失、损毁后应当向机动车驾驶证的<strong>核发地、暂住地、居住地车辆管理所</strong>申请补发，换证，在此期间不得驾驶机动车</p><p><strong>行驶证</strong>相关是<strong>登记地</strong></p><p><strong>机动车号牌损毁</strong>：机动车<strong>所有人去登记地车辆管理所</strong></p><p>无证驾驶拘留15天</p><p><strong>过期不得驾驶机动车</strong>，过期继续使用会罚款20-200</p><h2 id="初次申领"><a href="#初次申领" class="headerlink" title="初次申领"></a>初次申领</h2><p>第一次有效期为6年，每个记分周期均未达到12分的，换发10年的，下次就是长期。</p><p>准考证明为3年，科二科三不得超过5次</p><p>18岁以上不设上限</p><p>三年内有注射毒品的，不得申请机动车驾驶证。</p><p><strong>实习期为12个月</strong></p><h2 id="更换"><a href="#更换" class="headerlink" title="更换"></a>更换</h2><p>在有效期满前90日内，向机动车核发地车辆管理所申请换证。<br>更改驾驶证信息要在30天内。</p><p>户籍迁出需要向迁入地的车辆管理所提出申请<br>在<strong>区域以外</strong>居住要向<strong>居住地管理所</strong>申请换证</p><h2 id="审验-驾驶证验人，行驶证验车"><a href="#审验-驾驶证验人，行驶证验车" class="headerlink" title="审验 驾驶证验人，行驶证验车"></a>审验 驾驶证验人，行驶证验车</h2><p>三种情况需要审验：<br>1、造成人员死亡未被吊销驾驶证的，记分周期结束后30日内到公安交管部门接受审验<br>2、驾驶证转到异地<br>3、驾驶证有效期满换证时</p><p><strong>没有按照规定参加审验仍然驾驶机动车的，处200-500罚款。</strong><br>因服兵役、出国等原因无法办理审验时，延期审验期限最长不超过3年</p><hr><h2 id="1证明3受理10调解15学习交罚款30变更信息"><a href="#1证明3受理10调解15学习交罚款30变更信息" class="headerlink" title="1证明3受理10调解15学习交罚款30变更信息"></a><strong>1证明3受理10调解15学习交罚款30变更信息</strong></h2><h2 id="换居补-抵登"><a href="#换居补-抵登" class="headerlink" title="换居补~抵登"></a><strong>换居补~抵登</strong></h2><h2 id="一次记1分"><a href="#一次记1分" class="headerlink" title="一次记1分"></a>一次记1分</h2><ul><li>不按规定使用灯光</li><li>不按规定会车</li><li>载货超过规定</li><li>未放置检验合格标志、保险标志、未携带行驶证、驾驶证</li></ul><h2 id="一次记2分"><a href="#一次记2分" class="headerlink" title="一次记2分"></a>一次记2分</h2><ol><li>行经交叉路口不按规定行车或停车</li><li>接打电话</li><li>未系安全带罚款50</li><li>前方排队时借道超车，占用车道</li></ol><h2 id="一次记3分"><a href="#一次记3分" class="headerlink" title="一次记3分"></a>一次记3分</h2><ol><li>高速路低于最低时速</li><li>驾驶禁止驶入高速的机动车</li><li>高速或城市快速路不按规定行驶</li><li><strong>普通道路</strong>经过人行横道不减速或<strong>逆行</strong></li><li>违反规定牵引挂车</li><li>发生故障不按规定使用灯光和设置警告标志的</li><li>禁停标志处停车</li><li>不按规定年检</li><li>超速不到20%</li></ol><h2 id="一次记6分"><a href="#一次记6分" class="headerlink" title="一次记6分"></a>一次记6分</h2><ol><li>不遵守交通信号灯的</li><li>不让校车的</li><li>违法占用应急车道的</li><li>疲劳驾驶</li><li>无证驾驶，欺骗手段补领驾驶证</li><li>高速上低能见度不按规定行驶</li><li>超速20%-50%</li><li>4小时不停车，休息时间少于20分</li></ol><blockquote><p><strong>Tip：掌握处罚1、2、3、6、12分的几种情况（很多人说没必要，但是我觉得知道处罚多少能让你自觉遵守交通规则）</strong></p></blockquote><h2 id="压线3闯6"><a href="#压线3闯6" class="headerlink" title="压线3闯6"></a>压线3闯6</h2><h2 id="一次记12分"><a href="#一次记12分" class="headerlink" title="一次记12分"></a>一次记12分</h2><p>1）<strong>驾驶与准驾车型不符的机动车的</strong><br>2）<strong>饮酒后驾驶机动车的</strong><br>4）造成交通事故后逃逸，尚不构成犯罪的 <strong>罚款200-2000</strong><br>5）上道路行驶的机动车未悬挂机动车号牌的，或者故意遮挡、污损、不按规定安装机动车号牌的<br>6）使用伪造、变造的机动车号牌、行驶证、驾驶证、校车标牌或者使用其他机动车号牌、行驶证的<br>7）驾驶机动车在<strong>高速公路</strong>上<strong>倒车、逆行、穿越中央分隔带掉头</strong>的<br>9）驾驶中型以上载客载货汽车、校车、危险物品运输车辆在高速公路、城市快速路上行驶<strong>超过规定时速20％</strong>以上或者在高速公路、城市快速路以外的道路上行驶<strong>超过规定时速50％</strong>以上，以及驾驶其他机动车行驶超过规定时速50%以上的<br>10）连续驾驶中型以上载客汽车、危险物品运输车辆<strong>超过4小时</strong>未停车休息或者停车休息时间少于20分钟的</p><h1 id="2、交通标志、标线"><a href="#2、交通标志、标线" class="headerlink" title="2、交通标志、标线"></a>2、交通标志、标线</h1><h2 id="交通信号："><a href="#交通信号：" class="headerlink" title="交通信号："></a>交通信号：</h2><ul><li>交通信号灯</li><li>交通标志</li><li>交通标线</li><li>交通警察指挥</li></ul><p>交通信号灯和交警指挥不一致时，按照<strong>交通信号灯通行</strong></p><p>铁道路口无交通信号和管理人员时停车确认安全后通过</p><p>交叉路口无交通信号时减速慢行</p><h2 id="交通标志："><a href="#交通标志：" class="headerlink" title="交通标志："></a>交通标志：</h2><p><strong>1、警告标志：警告车辆、行人注意危险地点的标志。</strong></p><p><img src="https://cdn.jsdelivr.net/gh/zsxfa/CDN/img/md/2022/02/07/1644204740.png" alt="desc"></p><p><strong>2、禁令标志：禁止或限制车辆、行人交通行为的标志。</strong></p><p><img src="https://cdn.jsdelivr.net/gh/zsxfa/CDN/img/md/2022/02/07/1644204684.png" alt="desc"></p><p><strong>3、禁令标志：禁止或限制车辆、行人交通行为的标志。</strong></p><p><img src="https://cdn.jsdelivr.net/gh/zsxfa/CDN/img/md/2022/02/07/1644204980.png" alt="desc"></p><p><strong>4、指路标志：传递道路方向、距离信息的标志。</strong></p><p><img src="https://cdn.jsdelivr.net/gh/zsxfa/CDN/img/md/2022/02/07/1644205047.png" alt="desc"></p><img src="https://cdn.jsdelivr.net/gh/zsxfa/CDN/img/md/2022/02/07/1644205277.png" alt="desc" style="zoom:200%;" /><p>5、旅游标志。</p><p><img src="https://cdn.jsdelivr.net/gh/zsxfa/CDN/img/md/2022/02/07/1644205357.png" alt="desc"></p><h2 id="道路交通标线"><a href="#道路交通标线" class="headerlink" title="道路交通标线"></a>道路交通标线</h2><p><strong>· 指示标线（虚线）</strong></p><p>· 警告标线</p><p><strong>· 禁止标线（实线）</strong></p><p><strong>导流线</strong></p><p><img src="https://cdn.jsdelivr.net/gh/zsxfa/CDN/img/md/2022/02/07/1644206136.png" alt="desc"></p><h2 id="重要图标意思"><a href="#重要图标意思" class="headerlink" title="重要图标意思"></a>重要图标意思</h2><p>两弯，反向；三弯，连续<br>黄底，注意行人；蓝底，人行横道<br><strong>潮汐车道，不同时段方向不同</strong><br>三角形，减速让行；八角，停车让行<br>红圈空白，禁止通行<br>红色禁令，黑色解除</p><h1 id="3、三个先行原则"><a href="#3、三个先行原则" class="headerlink" title="3、三个先行原则"></a>3、三个先行原则</h1><p>转弯车辆让直行车辆先行</p><p>右方道路来车先行</p><p>右转弯车让左转弯车辆先行</p><h1 id="4、开车必备"><a href="#4、开车必备" class="headerlink" title="4、开车必备"></a>4、开车必备</h1><p>两证两标一牌：</p><ul><li>随车携带机动车行驶证</li><li>随身携带机动车驾驶证</li><li>放置<strong>检验合格标志</strong></li><li>放置保险标志</li><li>悬挂机动车牌</li></ul><p>没带可能会被扣留车辆并且罚款</p><p><strong>伪造这些的话会被收缴，扣留机动车，处15日拘留，2000-5000元。</strong></p><h1 id="5、记分规则"><a href="#5、记分规则" class="headerlink" title="5、记分规则"></a>5、记分规则</h1><p>对交通违法行为进行依法处罚并且实现<strong>累积记分制度</strong></p><p>累积记分周期是12个月</p><p>扣到12分后，扣留机动车驾驶证，对其进行道路交通安全法律、法规教育，重新考试</p><p>驾驶人记分没有达到满分，有罚款没有缴纳的，记分转入下一记分周期</p><h1 id="6、行驶规则"><a href="#6、行驶规则" class="headerlink" title="6、行驶规则"></a>6、行驶规则</h1><p>没有划分机动车道、非机动车道和人行道的，机动车在道路中间通行，非机动车和行人在道路两侧通行</p><p>无.城3公4，有.城5公7：无道路中心线的道路，城市道路为每小时30公里，公路为每小时40管理，下同。</p><p><strong>以下情况速度不得超过30公里/时：</strong></p><ol><li>进出非机动车道，通过铁路道口、急弯路、窄路、窄桥时</li><li>掉头、转弯、下陡坡时</li><li>不良天气能见度低于50米时</li><li>在冰雪、泥泞的道路上行驶时</li><li>牵引发生故障的机动车时</li></ol><p>在有中心点的路口左转弯时要靠路口中心点左侧转弯</p><p><strong>高速最低车速：</strong></p><ul><li>两条车道是：100 60</li><li>三条车道是：110 90 60</li><li>四条车道是：110 90 90 60</li></ul><p>驶入高速公路要开启左转向灯，驶离高速公路要开启右转向灯</p><p><strong>高速公路上</strong></p><ul><li>车速超过100公里，保持100米车距</li><li>低于100公里，最小距离不得少于50米。</li></ul><ol><li>能见度200，车速60，车距100；</li><li>能见度100，车速40，车距50；</li><li>能见度50，车速不超过20，尽快跑路</li></ol><p><strong>急弯、坡道</strong></p><ul><li>机动车驶近急弯、坡道顶端等影响安全视距的路段以及超车或者遇有紧急情况时，<strong>应当减速慢行，并鸣喇叭示意</strong>。</li><li>机动车下陡坡时不能空挡滑行或熄火</li></ul><p><strong>超车</strong></p><p>机动车超车时，应当提前开启左转向灯，变换使用远、近光灯或者鸣喇叭</p><p>以下情况不得超车：</p><ul><li>前车正在左转弯、掉头、超车</li><li>与对面来车由会车可能的</li><li>前车为执行紧急任务的警车、消防车、救护车、工程救险车的</li><li><strong>经铁路道口</strong>、交叉路口、窄桥、弯道、陡坡、隧道、人行横道、市区交通流量大的路段等没有超车条件的</li></ul><p><strong>夜间超车</strong></p><ul><li>夜间视线不佳，应该变换使用远、近光灯提醒其他车辆</li></ul><p><strong>会车</strong></p><p>驾驶机动车在<strong>没有道路中心</strong>线的<strong>狭窄山路不靠山体的一方先行</strong></p><h1 id="7、车灯"><a href="#7、车灯" class="headerlink" title="7、车灯"></a>7、车灯</h1><p>夜间没有路灯、照明不良或者遇到有雾、雨、雪、沙尘、冰雹等低能见度情况下行驶时，应当开启前照灯、示廓灯和后位灯，<strong>但是！同方向行驶的后车与前车近距离行驶时，不得使用远光灯。</strong></p><p>机动车雾天行驶应当开启雾灯和危险报警闪光灯</p><p>夜间通过急弯、坡路、拱桥、人行横道或者没有交通信号灯控制的路口时，应当<strong>交替使用远近光灯</strong>示意。</p><p><strong>雨天不用远光灯</strong></p><p>变更车道时，应当提前开启转向灯，夜间还需变换使用远、近光灯或者鸣喇叭示意</p><p><strong>150米以外会车时改用近光灯</strong></p><h1 id="8、路上意外"><a href="#8、路上意外" class="headerlink" title="8、路上意外"></a>8、路上意外</h1><p>1、车后50米-100米处设置警告标志<br>2、开启危险报警闪光灯</p><p>若是<strong>夜间</strong>，要开启示廓灯和后位灯<br>若是<strong>高速公路</strong>，警告标志要在150米以外<br>由救援车、清障碍拖曳、牵引         牵引车时最高速度不超过30公里/小时</p><p>机动车发生故障，难以移动时<strong>开启危险报警闪光灯</strong>，普通公路在50-100设置警告标志，高速公路在150外，<strong>否则扣3分</strong></p><h1 id="9、停车规则"><a href="#9、停车规则" class="headerlink" title="9、停车规则"></a>9、停车规则</h1><p>公共汽车站、急救站、加油站、消防栓、消防队门前以及距离上述地点30米以内的路段，除了使用之外，不得停车</p><p>机动车在交叉路口、铁路道口、急弯路、宽度不足4米的窄路、桥梁、陡坡、隧道以及距离上述地点50米以内的路段，不得停车。</p><p>靠路边<strong>停车过程中</strong>提前<strong>开启右转向灯</strong></p><p>停车位：蓝免、白收、黄专</p><p>双实线停，双虚线减速</p><h1 id="10、处罚"><a href="#10、处罚" class="headerlink" title="10、处罚"></a>10、处罚</h1><p>追逐竞驶或醉酒：处拘役并处罚金</p><h2 id="饮酒处罚："><a href="#饮酒处罚：" class="headerlink" title="饮酒处罚："></a><strong>饮酒处罚：</strong></h2><ol><li>饮酒后驾驶：1000-2000，暂扣6个月</li><li>饮酒处罚后再次饮酒驾驶：10日拘留，1000-2000，吊销驾驶证</li><li>饮酒后驾驶营运机动车：15日拘留，5000元罚款，吊销驾驶证，五年内不得重新取得驾驶证</li></ol><h2 id="醉酒处罚："><a href="#醉酒处罚：" class="headerlink" title="醉酒处罚："></a><strong>醉酒处罚：</strong></h2><ol><li>醉酒后驾驶：依法追究刑事责任，吊销驾驶证，五年内不得重新取得驾驶证</li><li>醉酒后驾驶营运机动车：依法追究刑事责任，吊销驾驶证，十年内不得重新取得驾驶证，不得再驾驶营运机动车。</li></ol><p>饮酒或醉酒发生交通事故构成犯罪的，终身不得重新取得机动车驾驶证。</p><p>没有投保交强险的车辆交通警察可以予以扣留并且处罚金。</p><p>机动车造成道路、供电、通讯等设施损毁的，驾驶人应当报警等候处理，不得驶离</p><p>需要撤离不撤离导致交通堵塞的，对驾驶人员处以200元罚款。</p><h2 id="造成重大事故导致重伤、死亡的处罚："><a href="#造成重大事故导致重伤、死亡的处罚：" class="headerlink" title="造成重大事故导致重伤、死亡的处罚："></a><strong>造成重大事故导致重伤、死亡的处罚：</strong></h2><ul><li>处3年以下有期徒刑或者拘留</li></ul><h2 id="交通运输肇事逃逸："><a href="#交通运输肇事逃逸：" class="headerlink" title="交通运输肇事逃逸："></a><strong>交通运输肇事逃逸：</strong></h2><ul><li>3年以上7年以下</li></ul><h2 id="逃逸致人死亡的："><a href="#逃逸致人死亡的：" class="headerlink" title="逃逸致人死亡的："></a><strong>逃逸致人死亡的：</strong></h2><ul><li>7年以上有期徒刑</li></ul><h2 id="道路上追逐竞驶，情节恶劣："><a href="#道路上追逐竞驶，情节恶劣：" class="headerlink" title="道路上追逐竞驶，情节恶劣："></a><strong>道路上追逐竞驶，情节恶劣：</strong></h2><ul><li>处拘役，并处罚金</li></ul><h2 id="伪造、变造检验合格标志、保险标志："><a href="#伪造、变造检验合格标志、保险标志：" class="headerlink" title="伪造、变造检验合格标志、保险标志："></a><strong>伪造、变造检验合格标志、保险标志：</strong></h2><ul><li>扣留机动车，10日以下拘留，1000-3000</li></ul><h2 id="交通肇事罪："><a href="#交通肇事罪：" class="headerlink" title="交通肇事罪："></a><strong>交通肇事罪：</strong></h2><ol><li>酒后、吸食毒品后驾驶机动车辆的</li><li>无驾驶资格驾驶机动车辆</li><li>驾驶明知安全装置不全或失灵的机动车辆</li><li>无牌证、已报废车辆</li><li>严重超载驾驶</li><li>为逃避法律追究逃离事故现场的</li></ol><h2 id="危险驾驶罪："><a href="#危险驾驶罪：" class="headerlink" title="危险驾驶罪："></a><strong>危险驾驶罪：</strong></h2><ol><li>追逐竞驶、情节恶劣</li><li>醉酒驾驶</li><li>超载超速</li><li>运输危险品</li></ol><h2 id="罚款20-200"><a href="#罚款20-200" class="headerlink" title="罚款20-200"></a>罚款20-200</h2><ol><li>使用原来驾驶证</li><li>不贴实习标志</li><li>实习期驾驶不符合的车型，单独上高速</li><li>变更信息未及时申报</li></ol><h2 id="罚款200-500"><a href="#罚款200-500" class="headerlink" title="罚款200-500"></a>罚款200-500</h2><ol><li>驾驶证被扣用欺骗手段补领</li><li>逾期不参加审验</li></ol><h2 id="罚款200-2000"><a href="#罚款200-2000" class="headerlink" title="罚款200-2000"></a>罚款200-2000</h2><ol><li>把车给没有驾驶证的人或驾驶证被吊销</li><li>逃逸不犯罪</li><li>超速50%以上</li><li>开拼装车</li><li>造成交通严重阻塞，或财产损失的</li><li>安装报警器，标志灯具</li></ol><h2 id="罚款1000-2000"><a href="#罚款1000-2000" class="headerlink" title="罚款1000-2000"></a>罚款1000-2000</h2><ol><li>饮酒后驾驶，再次饮酒后驾驶</li></ol><h2 id="罚款2000-5000"><a href="#罚款2000-5000" class="headerlink" title="罚款2000-5000"></a>罚款2000-5000</h2><ol><li>伪造的号牌、行驶证、驾驶证</li></ol><h2 id="一审三受十调节，十五学习加罚款，三十变更，九十有效期"><a href="#一审三受十调节，十五学习加罚款，三十变更，九十有效期" class="headerlink" title="一审三受十调节，十五学习加罚款，三十变更，九十有效期"></a><strong>一审三受十调节，十五学习加罚款，三十变更，九十有效期</strong></h2><hr><p>看到以下这些关键词一般为<strong>正确</strong>做法：</p><ol><li>不准你做的：不准、不得、不应、不能、严禁、禁止、应当</li><li>让对方先走：减速让行、停车让行、礼让通行、减速避让</li><li>缓慢通过的：缓慢通过、减速、平稳、主键、慢慢通过、将速度降低、匀速下降</li><li>需要观察的：提前观察、仔细观察、认真观察、瞭望</li><li>保证安全的：间断轻踏、保证安全、确保安全、安全通过</li></ol><p>看到以下这些关键词一般为<strong>错误</strong>做法：</p><ol><li>不经考虑的：直接、立即、加速通过、迅速通过</li><li>反应过激的：紧急制动、急打方向盘、猛打方向盘、用力踩、迅速向左右躲避</li><li>不听话的：只要、可、可以</li></ol><p>1.处罚题：选择题题目中由<strong>“罚款罚金”</strong>直接选（注意20块钱的不选），没有出现罚款罚金的直接选<strong>“吊销”</strong></p><p>2.公里题：判断题中出现<strong>“30公里”</strong>和<strong>“100公里”</strong>都答对，其他都答错</p><p>3.违法题：判断题中出现<strong>“违法行为”</strong>都答对，“违章、违规行为”都答错。凡是要追究什么责任，都选“刑事责任”</p><p>4.灯光题：变换车道前都要开转向灯，只有驶入环岛是不同开转向灯的，所有使用“近光灯”都答对，单独使用“远光灯”都答错，雾天需要开雾灯</p><p>5.标志题：黄色三角形是注意跟警告标志，红色是禁止禁令标志，黑色是解除标志，蓝色是指示标志</p>]]></content>
    
    
    <summary type="html">&lt;h1 id=&quot;题目单元&quot;&gt;&lt;a href=&quot;#题目单元&quot; class=&quot;headerlink&quot; title=&quot;题目单元:&quot;&gt;&lt;/a&gt;题目单元:&lt;/h1&gt;&lt;p&gt;1，道路交通安全法律、法规和规章(其实就是驾照相关知识、能不能开灯、能不能超车、谁先行这些)&lt;/p&gt;
&lt;p&gt;2，交通安全信号灯&lt;/p&gt;
&lt;p&gt;3，安全行车、文明驾驶基础知识(主要包括应对各种路面状况的知识点，高速、交通意外、山路、窄路之类的)&lt;/p&gt;
&lt;p&gt;4，机动车驾驶操作相关基础知识(仪表、车内信号灯、油门安全装置之类的东西)，共四部分内容 。&lt;/p&gt;</summary>
    
    
    
    <category term="driving" scheme="http://zsxfa.cn/categories/driving/"/>
    
    
    <category term="科一" scheme="http://zsxfa.cn/tags/%E7%A7%91%E4%B8%80/"/>
    
  </entry>
  
  <entry>
    <title>spring注解原理-IOC4 自动装配</title>
    <link href="http://zsxfa.cn/2022/01/26/spring%E6%B3%A8%E8%A7%A3%E5%8E%9F%E7%90%86-IOC%204%20%E8%87%AA%E5%8A%A8%E8%A3%85%E9%85%8D/"/>
    <id>http://zsxfa.cn/2022/01/26/spring%E6%B3%A8%E8%A7%A3%E5%8E%9F%E7%90%86-IOC%204%20%E8%87%AA%E5%8A%A8%E8%A3%85%E9%85%8D/</id>
    <published>2022-01-26T12:16:50.000Z</published>
    <updated>2022-02-16T03:53:52.764Z</updated>
    
    <content type="html"><![CDATA[<p>自动装配原理…<span id="more"></span></p><p>[TOC]</p><h1 id="Autowired、-Qualifier、-Primary的自动装配"><a href="#Autowired、-Qualifier、-Primary的自动装配" class="headerlink" title="@Autowired、@Qualifier、@Primary的自动装配"></a>@Autowired、@Qualifier、@Primary的自动装配</h1><h2 id="Autowired注解"><a href="#Autowired注解" class="headerlink" title="@Autowired注解"></a>@Autowired注解</h2><p>@Autowired注解可以对<a href="https://so.csdn.net/so/search?q=%E7%B1%BB%E6%88%90%E5%91%98&spm=1001.2101.3001.7020">类成员</a>变量、方法和构造函数进行标注，完成自动装配的工作。@Autowired注解可以放在类、接口以及方法上。</p><p>在使用@Autowired注解之前，我们对一个bean配置属性时，是用如下XML配置文件的形式进行配置的。</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">&lt;property name=<span class="string">&quot;属性名&quot;</span> value=<span class="string">&quot; 属性值&quot;</span>/&gt;</span><br></pre></td></tr></table></figure><p>下面我们来看一下@Autowired注解的源码，如下所示。</p><p><img src="https://cdn.jsdelivr.net/gh/zsxfa/CDN/img/md/2022/01/27/1643247438.png" alt="desc"></p><p>这儿对@Autowired注解说明一下：</p><ol><li><p>@Autowired注解默认是优先按照类型去容器中找对应的组件，相当于是调用了如下这个方法：</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">applicationContext.getBean(类名.class);</span><br></pre></td></tr></table></figure><p>若找到则就赋值。</p></li><li><p>如果找到多个相同类型的组件，那么是将属性名称作为组件的id，到IOC容器中进行查找，这时就相当于是调用了如下这个方法：</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">applicationContext.getBean(<span class="string">&quot;组件的id&quot;</span>);</span><br></pre></td></tr></table></figure></li></ol><h2 id="Qualifier注解"><a href="#Qualifier注解" class="headerlink" title="@Qualifier注解"></a>@Qualifier注解</h2><p>@Autowired是根据类型进行自动装配的，如果需要按名称进行装配，那么就需要配合@Qualifier注解来使用了。</p><p>下面我们来看一下@Qualifier注解的源码，如下所示。</p><p><img src="https://cdn.jsdelivr.net/gh/zsxfa/CDN/img/md/2022/01/27/1643247705.png" alt="desc"></p><h2 id="Primary注解"><a href="#Primary注解" class="headerlink" title="@Primary注解"></a>@Primary注解</h2><p>在Spring中使用注解时，常常会使用到@Autowired这个注解，它默认是根据类型Type来自动注入的。但有些特殊情况，对同一个接口而言，可能会有几种不同的实现类，而在默认只会采取其中一种实现的情况下，就可以使用@Primary注解来标注优先使用哪一个实现类。</p><p>下面我们来看一下@Primary注解的源码，如下所示。</p><p><img src="https://cdn.jsdelivr.net/gh/zsxfa/CDN/img/md/2022/01/27/1643247848.png" alt="desc"></p><h1 id="自动装配"><a href="#自动装配" class="headerlink" title="自动装配"></a>自动装配</h1><p>在进行项目实战之前，我们先来说说什么是Spring组件的自动装配。Spring组件的自动装配就是<strong>Spring利用依赖注入，也就是我们通常所说的DI，完成对IOC容器中各个组件的依赖关系赋值。</strong></p><h2 id="测试-Autowired注解"><a href="#测试-Autowired注解" class="headerlink" title="测试@Autowired注解"></a>测试@Autowired注解</h2><p>这里，我们以之前项目中创建的BookDao、BookService和BookController为例进行说明。</p><ul><li><p>BookDao</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// 名字默认是类名首字母小写</span></span><br><span class="line"><span class="meta">@Repository</span></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">BookDao</span> &#123;</span><br><span class="line">    </span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></li><li><p>BookService</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">@Service</span></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">BookService</span> &#123;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Autowired</span></span><br><span class="line">    <span class="keyword">private</span> BookDao bookDao;</span><br><span class="line">    </span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">print</span><span class="params">()</span> &#123;</span><br><span class="line">        System.out.println(bookDao);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></li><li><p>BookController</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">@Controller</span></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">BookController</span> &#123;</span><br><span class="line">    </span><br><span class="line">    <span class="meta">@Autowired</span></span><br><span class="line">    <span class="keyword">private</span> BookService bookService;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></li></ul><p>可以看到，我们在BookService中使用@Autowired注解注入了BookDao，在BookController中使用@Autowired注解注入了BookService。为了方便测试，我们可以在BookService类中生成一个toString()方法，如下所示。</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">@Service</span></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">BookService</span> &#123;</span><br><span class="line"></span><br><span class="line"><span class="meta">@Autowired</span></span><br><span class="line"><span class="keyword">private</span> BookDao bookDao;</span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">print</span><span class="params">()</span> &#123;</span><br><span class="line">System.out.println(bookDao);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="meta">@Override</span></span><br><span class="line"><span class="keyword">public</span> String <span class="title function_">toString</span><span class="params">()</span> &#123;</span><br><span class="line"><span class="keyword">return</span> <span class="string">&quot;BookService [bookDao=&quot;</span> + bookDao + <span class="string">&quot;]&quot;</span>;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>为了更好的看到演示效果，我们在项目的com.zsxfa.config包下创建一个配置类，例如MainConfigOfAutowired，如下所示。</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">@ComponentScan(&#123;&quot;com.zsxfa.service&quot;, &quot;com.zsxfa.dao&quot;, &quot;com.zsxfa.controller&quot;&#125;)</span></span><br><span class="line"><span class="meta">@Configuration</span></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">MainConfigOfAutowired</span> &#123;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>接下来，我们便来测试一下上面的程序。在项目的src/test/java目录下的com.zsxfa.test包中创建一个单元测试类，例如IOCTest_Autowired，如下所示。</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">IOCTest_Autowired</span> &#123;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Test</span></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">test01</span><span class="params">()</span> &#123;</span><br><span class="line">        <span class="type">AnnotationConfigApplicationContext</span> <span class="variable">applicationContext</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">AnnotationConfigApplicationContext</span>(MainConfigOfAutowired.class);</span><br><span class="line"></span><br><span class="line">        <span class="type">BookService</span> <span class="variable">bookService</span> <span class="operator">=</span> applicationContext.getBean(BookService.class);</span><br><span class="line">        System.out.println(bookService);</span><br><span class="line"></span><br><span class="line">        applicationContext.close();</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>测试方法比较简单，这里我就不做过多说明了。然后，运行一下IOCTest_Autowired类中的test01()方法，得出的输出结果信息如下所示。</p><p><img src="https://cdn.jsdelivr.net/gh/zsxfa/CDN/img/md/2022/01/27/1643248268.png" alt="desc"></p><p>可以看到，输出了BookDao信息。</p><p><strong>那么问题来了，我们在BookService类中使用@Autowired注解注入的BookDao（最后输出了该BookDao的信息），和我们直接在Spring IOC容器中获取的BookDao是不是同一个对象呢？</strong></p><p>为了说明这一点，我们可以在IOCTest_Autowired类的test01()方法中添加获取BookDao对象的方法，并输出获取到的BookDao对象，如下所示。</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">IOCTest_Autowired</span> &#123;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Test</span></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">test01</span><span class="params">()</span> &#123;</span><br><span class="line">        <span class="type">AnnotationConfigApplicationContext</span> <span class="variable">applicationContext</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">AnnotationConfigApplicationContext</span>(MainConfigOfAutowired.class);</span><br><span class="line"></span><br><span class="line">        <span class="type">BookService</span> <span class="variable">bookService</span> <span class="operator">=</span> applicationContext.getBean(BookService.class);</span><br><span class="line">        System.out.println(bookService);</span><br><span class="line"></span><br><span class="line">        <span class="type">BookDao</span> <span class="variable">bookDao</span> <span class="operator">=</span> applicationContext.getBean(BookDao.class);</span><br><span class="line">        System.out.println(bookDao);</span><br><span class="line">        </span><br><span class="line">        applicationContext.close();</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p><img src="https://cdn.jsdelivr.net/gh/zsxfa/CDN/img/md/2022/01/27/1643248566.png" alt="desc"></p><p>可以看到，我们在BookService类中使用@Autowired注解注入的BookDao对象和直接从IOC容器中获取的BookDao对象是同一个对象。</p><p>你可能会问了，<strong>如果在Spring容器中存在对多个BookDao对象，那么这时又该如何处理呢？</strong></p><p>首先，为了更加直观的看到我们使用@Autowired注解装配的是哪个BookDao对象，我们得对BookDao类进行改造，为其加上一个lable字段，并为其赋一个默认值，如下所示。</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// 名字默认是类名首字母小写</span></span><br><span class="line"><span class="meta">@Repository</span></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">BookDao</span> &#123;</span><br><span class="line"></span><br><span class="line"><span class="keyword">private</span> <span class="type">String</span> <span class="variable">lable</span> <span class="operator">=</span> <span class="string">&quot;1&quot;</span>;</span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> String <span class="title function_">getLable</span><span class="params">()</span> &#123;</span><br><span class="line"><span class="keyword">return</span> lable;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">setLable</span><span class="params">(String lable)</span> &#123;</span><br><span class="line"><span class="built_in">this</span>.lable = lable;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="meta">@Override</span></span><br><span class="line"><span class="keyword">public</span> String <span class="title function_">toString</span><span class="params">()</span> &#123;</span><br><span class="line"><span class="keyword">return</span> <span class="string">&quot;BookDao [lable=&quot;</span> + lable + <span class="string">&quot;]&quot;</span>;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>然后，我们就在MainConfigOfAutowired配置类中注入一个BookDao对象，并且显示指定该对象在IOC容器中的bean的名称为bookDao2，并还为该对象的lable字段赋值为2，如下所示。</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">@ComponentScan(&#123;&quot;com.zsxfa.service&quot;, &quot;com.zsxfa.dao&quot;, &quot;com.zsxfa.controller&quot;&#125;)</span></span><br><span class="line"><span class="meta">@Configuration</span></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">MainConfigOfAutowired</span> &#123;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Bean(&quot;bookDao2&quot;)</span></span><br><span class="line">    <span class="keyword">public</span> BookDao <span class="title function_">bookDao</span><span class="params">()</span> &#123;</span><br><span class="line">        <span class="type">BookDao</span> <span class="variable">bookDao</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">BookDao</span>();</span><br><span class="line">        bookDao.setLable(<span class="string">&quot;2&quot;</span>);</span><br><span class="line">        <span class="keyword">return</span> bookDao;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>目前，在我们的IOC容器中就会注入两个BookDao对象。那此时，**@Autowired注解到底装配的是哪个BookDao对象呢？**</p><p>接着，我们来运行一下IOCTest_Autowired类中的test01()方法，发现输出的结果信息如下所示。</p><p><img src="https://cdn.jsdelivr.net/gh/zsxfa/CDN/img/md/2022/01/27/1643249310.png" alt="desc"></p><p>可以看到，结果信息输出了<code>lable=1</code>，这说明，**@Autowired注解默认是优先按照类型去容器中找对应的组件，找到就赋值；如果找到多个相同类型的组件，那么再将属性的名称作为组件的id，到IOC容器中进行查找。**</p><p><strong>那我们如何让@Autowired注解装配bookDao2呢？</strong> 其实很简单，我们只须将BookService类中的bookDao属性的名称全部修改为bookDao2即可，如下所示。</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">@Service</span></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">BookService</span> &#123;</span><br><span class="line"></span><br><span class="line"><span class="meta">@Autowired</span></span><br><span class="line"><span class="keyword">private</span> BookDao bookDao2;</span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">print</span><span class="params">()</span> &#123;</span><br><span class="line">System.out.println(bookDao2);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="meta">@Override</span></span><br><span class="line"><span class="keyword">public</span> String <span class="title function_">toString</span><span class="params">()</span> &#123;</span><br><span class="line"><span class="keyword">return</span> <span class="string">&quot;BookService [bookDao2=&quot;</span> + bookDao2 + <span class="string">&quot;]&quot;</span>;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>此时，我们再运行IOCTest_Autowired类中的test01()方法，输出的结果信息如下所示。</p><p><img src="https://cdn.jsdelivr.net/gh/zsxfa/CDN/img/md/2022/01/27/1643249291.png" alt="desc"></p><h2 id="测试-Qualifier注解"><a href="#测试-Qualifier注解" class="headerlink" title="测试@Qualifier注解"></a>测试@Qualifier注解</h2><p>从测试@Autowired注解的结果来看，**@Autowired注解默认是优先按照类型去容器中找对应的组件，找到就赋值；如果找到多个相同类型的组件，那么再将属性的名称作为组件的id，到IOC容器中进行查找。**</p><p>如果IOC容器中存在多个相同类型的组件时，那么我们可不可以显示指定@Autowired注解装配哪个组件呢？有些小伙伴肯定会说：废话！你都这么问了，那肯定可以啊！没错，确实是可以的！此时，@Qualifier注解就派上用场了！</p><p>在之前的测试案例中，Eclipse控制台中输出了<code>BookDao [lable=2]</code>，这说明@Autowired注解装配了bookDao2，那我们如何显示的让@Autowired注解装配bookDao呢？</p><p>比较简单，我们只需要在BookService类里面的bookDao2字段上添加@Qualifier注解，显示指定@Autowired注解装配bookDao即可，如下所示。</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">@Service</span></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">BookService</span> &#123;</span><br><span class="line"></span><br><span class="line"><span class="meta">@Qualifier(&quot;bookDao&quot;)</span></span><br><span class="line"><span class="meta">@Autowired</span></span><br><span class="line"><span class="keyword">private</span> BookDao bookDao2;</span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">print</span><span class="params">()</span> &#123;</span><br><span class="line">System.out.println(bookDao2);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="meta">@Override</span></span><br><span class="line"><span class="keyword">public</span> String <span class="title function_">toString</span><span class="params">()</span> &#123;</span><br><span class="line"><span class="keyword">return</span> <span class="string">&quot;BookService [bookDao2=&quot;</span> + bookDao2 + <span class="string">&quot;]&quot;</span>;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p><img src="https://cdn.jsdelivr.net/gh/zsxfa/CDN/img/md/2022/01/27/1643249446.png" alt="desc"></p><p>可以看到，此时尽管字段的名称为bookDao2，但是我们使用了@Qualifier注解显示指定了@Autowired注解装配bookDao对象，所以，最终的结果中输出了bookDao对象的信息。</p><h2 id="测试容器中无组件的情况"><a href="#测试容器中无组件的情况" class="headerlink" title="测试容器中无组件的情况"></a>测试容器中无组件的情况</h2><p>如果IOC容器中无相应的组件，那么会发生什么情况呢？这时我们可以做这样一件事情，先注释掉BookDao类上的@Repository注解</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// 名字默认是类名首字母小写</span></span><br><span class="line"><span class="comment">//@Repository</span></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">BookDao</span> &#123;</span><br><span class="line"></span><br><span class="line"><span class="keyword">private</span> <span class="type">String</span> <span class="variable">lable</span> <span class="operator">=</span> <span class="string">&quot;1&quot;</span>;</span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> String <span class="title function_">getLable</span><span class="params">()</span> &#123;</span><br><span class="line"><span class="keyword">return</span> lable;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">setLable</span><span class="params">(String lable)</span> &#123;</span><br><span class="line"><span class="built_in">this</span>.lable = lable;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="meta">@Override</span></span><br><span class="line"><span class="keyword">public</span> String <span class="title function_">toString</span><span class="params">()</span> &#123;</span><br><span class="line"><span class="keyword">return</span> <span class="string">&quot;BookDao [lable=&quot;</span> + lable + <span class="string">&quot;]&quot;</span>;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>然后再注释掉MainConfigOfAutowired配置类中的bookDao()方法上的@Bean注解，如下所示。</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">@Configuration</span></span><br><span class="line"><span class="meta">@ComponentScan(&#123;&quot;com.meimeixia.service&quot;, &quot;com.meimeixia.dao&quot;, &quot;com.meimeixia.controller&quot;&#125;)</span></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">MainConfigOfAutowired</span> &#123;</span><br><span class="line"></span><br><span class="line"><span class="comment">//@Bean(&quot;bookDao2&quot;)</span></span><br><span class="line"><span class="keyword">public</span> BookDao <span class="title function_">bookDao</span><span class="params">()</span> &#123;</span><br><span class="line"><span class="type">BookDao</span> <span class="variable">bookDao</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">BookDao</span>();</span><br><span class="line">bookDao.setLable(<span class="string">&quot;2&quot;</span>);</span><br><span class="line"><span class="keyword">return</span> bookDao;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>此时IOC容器中不再有任何BookDao对象了。</p><p>接着，我们再次运行IOCTest_Autowired类中的test01()方法，发现Eclipse控制台报了一个错误，如下。</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">org.springframework.beans.factory.UnsatisfiedDependencyException: Error creating bean with name <span class="string">&#x27;bookService&#x27;</span>: Unsatisfied dependency expressed through field <span class="string">&#x27;bookDao2&#x27;</span>; nested exception is org.springframework.beans.factory.NoSuchBeanDefinitionException: No qualifying bean of type <span class="string">&#x27;com.zsxfa.dao.BookDao&#x27;</span> available: expected at least <span class="number">1</span> bean which qualifies as autowire candidate. Dependency annotations: &#123;<span class="meta">@org</span>.springframework.beans.factory.annotation.Qualifier(value=bookDao), <span class="meta">@org</span>.springframework.beans.factory.annotation.Autowired(required=<span class="literal">true</span>)&#125;</span><br></pre></td></tr></table></figure><p>此时，Spring抛出了异常，未找到相应的bean对象，那我们能不能让Spring不报错呢？那肯定可以啊！抛出的异常信息中都给出了相应的提示。</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">&#123;<span class="meta">@org</span>.springframework.beans.factory.annotation.Qualifier(value=bookDao), <span class="meta">@org</span>.springframework.beans.factory.annotation.Autowired(required=<span class="literal">true</span>)&#125;</span><br></pre></td></tr></table></figure><p>解决方案就是在BookService类的@Autowired注解里面添加一个属性<code>required=false</code>，如下所示。</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">@Service</span></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">BookService</span> &#123;</span><br><span class="line"></span><br><span class="line"><span class="meta">@Qualifier(&quot;bookDao&quot;)</span></span><br><span class="line"><span class="meta">@Autowired(required=false)</span></span><br><span class="line"><span class="keyword">private</span> BookDao bookDao2;</span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">print</span><span class="params">()</span> &#123;</span><br><span class="line">System.out.println(bookDao2);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="meta">@Override</span></span><br><span class="line"><span class="keyword">public</span> String <span class="title function_">toString</span><span class="params">()</span> &#123;</span><br><span class="line"><span class="keyword">return</span> <span class="string">&quot;BookService [bookDao2=&quot;</span> + bookDao2 + <span class="string">&quot;]&quot;</span>;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>加上<code>required=false</code>这个玩意的意思就是说找到就装配，找不到就拉到，就别装配了。</p><p>此时，还需要将IOCTest_Autowired类的test01()方法中直接从IOC容器中获取BookDao对象的代码注释掉，如下所示。</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">IOCTest_Autowired</span> &#123;</span><br><span class="line"></span><br><span class="line"><span class="meta">@Test</span></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">test01</span><span class="params">()</span> &#123;</span><br><span class="line"><span class="type">AnnotationConfigApplicationContext</span> <span class="variable">applicationContext</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">AnnotationConfigApplicationContext</span>(MainConfigOfAutowired.class);</span><br><span class="line"></span><br><span class="line"><span class="type">BookService</span> <span class="variable">bookService</span> <span class="operator">=</span> applicationContext.getBean(BookService.class);</span><br><span class="line">System.out.println(bookService);</span><br><span class="line"></span><br><span class="line"><span class="comment">//BookDao bookDao = applicationContext.getBean(BookDao.class);</span></span><br><span class="line"><span class="comment">//System.out.println(bookDao);</span></span><br><span class="line"></span><br><span class="line">applicationContext.close();</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>紧接着，我们再次运行以上test01()方法，输出的结果信息如下所示。</p><p><img src="https://cdn.jsdelivr.net/gh/zsxfa/CDN/img/md/2022/01/27/1643249762.png" alt="desc"></p><p>可以看到，当为@Autowired注解添加属性<code>required=false</code>后，即使IOC容器中没有对应的对象，Spring也不会抛出异常了。不过，此时装配的对象就为null了。</p><p>测试完成后，我们还得恢复原样，即再次为BookDao类添加@Repository注解，并且在MainConfigOfAutowired配置类中的bookDao()方法上添加@Bean注解，好方便进一步的测试。</p><h2 id="测试-Primary注解"><a href="#测试-Primary注解" class="headerlink" title="测试@Primary注解"></a>测试@Primary注解</h2><p>在Spring中，对同一个接口而言，可能会有几种不同的实现类，而默认只会采取其中一种实现的情况下，就可以使用@Primary注解来标注优先使用哪一个实现类。</p><p>如果IOC容器中相同类型的组件有多个，那么我们不可避免地就要来回用@Qualifier注解来指定要装配哪个组件，这还是比较麻烦的，Spring正是帮我们考虑到了这样一种情况，就提供了这样一个比较强大的注解，即@Primary。我们可以利用这个注解让Spring进行自动装配的时候，默认使用首选的bean。</p><p>说了这么多，下面我们就用一个小例子来测试一下@Primary注解。</p><p>首先，我们在MainConfigOfAutowired配置类的bookDao()方法上添加上@Primary注解，如下所示。</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">@Configuration</span></span><br><span class="line"><span class="meta">@ComponentScan(&#123;&quot;com.zsxfa.service&quot;, &quot;com.zsxfa.dao&quot;, &quot;com.zsxfa.controller&quot;&#125;)</span></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">MainConfigOfAutowired</span> &#123;</span><br><span class="line"></span><br><span class="line"><span class="meta">@Primary</span></span><br><span class="line"><span class="meta">@Bean(&quot;bookDao2&quot;)</span></span><br><span class="line"><span class="keyword">public</span> BookDao <span class="title function_">bookDao</span><span class="params">()</span> &#123;</span><br><span class="line"><span class="type">BookDao</span> <span class="variable">bookDao</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">BookDao</span>();</span><br><span class="line">bookDao.setLable(<span class="string">&quot;2&quot;</span>);</span><br><span class="line"><span class="keyword">return</span> bookDao;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>注意：此时，我们需要注释掉BookService类中bookDao字段上的@Qualifier注解，这是因为@Qualifier注解为显示指定装配哪个组件，如果使用了@Qualifier注解，无论是否使用了@Primary注解，都会装配@Qualifier注解标注的对象。</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">@Service</span></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">BookService</span> &#123;</span><br><span class="line"></span><br><span class="line"><span class="comment">//@Qualifier(&quot;bookDao&quot;) // 要让首选装配起效果，@Qualifier自然就不能用了</span></span><br><span class="line"><span class="meta">@Autowired(required=false)</span></span><br><span class="line"><span class="keyword">private</span> BookDao bookDao;</span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">print</span><span class="params">()</span> &#123;</span><br><span class="line">System.out.println(bookDao);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="meta">@Override</span></span><br><span class="line"><span class="keyword">public</span> String <span class="title function_">toString</span><span class="params">()</span> &#123;</span><br><span class="line"><span class="keyword">return</span> <span class="string">&quot;BookService [bookDao=&quot;</span> + bookDao + <span class="string">&quot;]&quot;</span>;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>设置完成后，我们再次运行IOCTest_Autowired类中的test01()方法，输出的结果信息如下所示。</p><p><img src="https://cdn.jsdelivr.net/gh/zsxfa/CDN/img/md/2022/01/27/1643250008.png" alt="desc"></p><p>可以看到，此时lable的值为2，这说明装配了MainConfigOfAutowired配置类中注入的bookDao2。</p><p>那我们非要装配bookDao，可不可以呢？当然可以了，我们只须使用@Qualifier(“bookDao”)来显示指定装配bookDao即可。也就是说如果是在没有明确指定的情况下，那么就装配优先级最高的首选的那个bean，如果是在明确指定了的情况下，那么自然就是装配指定的那个bean了。</p><h1 id="Resource注解和-Inject注解"><a href="#Resource注解和-Inject注解" class="headerlink" title="@Resource注解和@Inject注解"></a>@Resource注解和@Inject注解</h1><h2 id="Resource注解"><a href="#Resource注解" class="headerlink" title="@Resource注解"></a>@Resource注解</h2><p>@Resource注解是Java规范里面的，也可以说它是JSR250规范里面定义的一个注解。该注解默认按照名称进行装配，名称可以通过name属性进行指定，如果没有指定name属性，当注解写在字段上时，那么默认取字段名将其作为组件的名称在IOC容器中进行查找，如果注解写在setter方法上，那么默认取属性名进行装配。当找不到与名称匹配的bean时才按照类型进行装配。但是需要注意的一点是，如果name属性一旦指定，那么就只会按照名称进行装配。</p><p>我们先看一下@Resource注解的源码，如下所示。</p><p><img src="https://cdn.jsdelivr.net/gh/zsxfa/CDN/img/md/2022/01/27/1643250318.png" alt="desc"></p><h2 id="Inject注解"><a href="#Inject注解" class="headerlink" title="@Inject注解"></a>@Inject注解</h2><p>@Inject注解也是Java规范里面的，也可以说它是JSR330规范里面定义的一个注解。该注解默认是根据参数名去寻找bean注入，支持Spring的@Primary注解优先注入，@Inject注解还可以增加@Named注解指定要注入的bean。</p><p>我们先看一下@Inject注解的源码，如下所示。</p><p><img src="https://cdn.jsdelivr.net/gh/zsxfa/CDN/img/md/2022/01/27/1643250595.png" alt="desc"></p><p><strong>温馨提示，要想使用@Inject注解，需要在项目的pom.xml文件中添加如下依赖，即导入javax.inject这个包。</strong></p><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>javax.inject<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>javax.inject<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">version</span>&gt;</span>1<span class="tag">&lt;/<span class="name">version</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br></pre></td></tr></table></figure><h2 id="测试-Resource注解"><a href="#测试-Resource注解" class="headerlink" title="测试@Resource注解"></a>测试@Resource注解</h2><p>首先，我们将项目中的BookService类标注在bookDao字段上的@Autowired注解和@Qualifier注解注释掉，然后添加上@Resource注解，如下所示。</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">@Service</span></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">BookService</span> &#123;</span><br><span class="line"></span><br><span class="line"><span class="comment">//@Qualifier(&quot;bookDao&quot;) // 要让首选装配起效果，@Qualifier自然就不能用了</span></span><br><span class="line"><span class="comment">//@Autowired(required=false)</span></span><br><span class="line"><span class="meta">@Resource</span></span><br><span class="line"><span class="keyword">private</span> BookDao bookDao;</span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">print</span><span class="params">()</span> &#123;</span><br><span class="line">System.out.println(bookDao);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="meta">@Override</span></span><br><span class="line"><span class="keyword">public</span> String <span class="title function_">toString</span><span class="params">()</span> &#123;</span><br><span class="line"><span class="keyword">return</span> <span class="string">&quot;BookService [bookDao=&quot;</span> + bookDao + <span class="string">&quot;]&quot;</span>;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>然后，我们运行一下IOCTest_Autowired类中的test01()方法，输出的结果信息如下所示。</p><p><img src="https://cdn.jsdelivr.net/gh/zsxfa/CDN/img/md/2022/01/27/1643250776.png" alt="desc"></p><p>可以看到，使用@Resource注解也能够自动装配组件，只不过此时自动装配的是lable为1的bookDao，而不是我们在MainConfigOfAutowired配置类中配置的优先装配的lable为2的bookDao。MainConfigOfAutowired配置类中配置的lable为2的bookDao如下所示。</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">@Configuration</span></span><br><span class="line"><span class="meta">@ComponentScan(&#123;&quot;com.meimeixia.service&quot;, &quot;com.meimeixia.dao&quot;, &quot;com.meimeixia.controller&quot;&#125;)</span></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">MainConfigOfAutowired</span> &#123;</span><br><span class="line"></span><br><span class="line"><span class="meta">@Primary</span></span><br><span class="line"><span class="meta">@Bean(&quot;bookDao2&quot;)</span></span><br><span class="line"><span class="keyword">public</span> BookDao <span class="title function_">bookDao</span><span class="params">()</span> &#123;</span><br><span class="line"><span class="type">BookDao</span> <span class="variable">bookDao</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">BookDao</span>();</span><br><span class="line">bookDao.setLable(<span class="string">&quot;2&quot;</span>);</span><br><span class="line"><span class="keyword">return</span> bookDao;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>这也进一步说明，**@Resource注解和@Autowired注解的功能是一样的，都能实现自动装配，只不过@Resource注解默认是按照组件名称（即属性的名称）进行装配的。虽然@Resource注解具备自动装配这一功能，但是它是不支持@Primary注解优先注入的功能的，而且也不能像@Autowired注解一样能添加<code>required=false</code>属性。**</p><p>我们在使用@Resource注解时，可以通过@Resource注解的name属性显示指定要装配的组件的名称。例如，我们要想装配lable为2的bookDao，只需要为@Resource注解添加 <code>name=&quot;bookDao2&quot;</code>属性即可，如下所示。</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">@Service</span></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">BookService</span> &#123;</span><br><span class="line"></span><br><span class="line"><span class="comment">//@Qualifier(&quot;bookDao&quot;) // 要让首选装配起效果，@Qualifier自然就不能用了</span></span><br><span class="line"><span class="comment">//@Autowired(required=false)</span></span><br><span class="line"><span class="meta">@Resource(name=&quot;bookDao2&quot;)</span></span><br><span class="line"><span class="keyword">private</span> BookDao bookDao;</span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">print</span><span class="params">()</span> &#123;</span><br><span class="line">System.out.println(bookDao);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="meta">@Override</span></span><br><span class="line"><span class="keyword">public</span> String <span class="title function_">toString</span><span class="params">()</span> &#123;</span><br><span class="line"><span class="keyword">return</span> <span class="string">&quot;BookService [bookDao=&quot;</span> + bookDao + <span class="string">&quot;]&quot;</span>;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>接着，我们再次运行IOCTest_Autowired类中的test01()方法，输出的结果信息如下所示。</p><p><img src="https://cdn.jsdelivr.net/gh/zsxfa/CDN/img/md/2022/01/27/1643250995.png" alt="desc"></p><p>可以看到，此时输出了lable为2的bookDao，说明@Resource注解可以通过name属性显示指定要装配的bean。</p><h2 id="测试-Inject注解"><a href="#测试-Inject注解" class="headerlink" title="测试@Inject注解"></a>测试@Inject注解</h2><p>在BookService类中，将@Resource注解注释掉，添加@Inject注解，如下所示。</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">@Service</span></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">BookService</span> &#123;</span><br><span class="line"></span><br><span class="line">    <span class="comment">//@Qualifier(&quot;bookDao&quot;) // 要让首选装配起效果，@Qualifier自然就不能用了</span></span><br><span class="line"><span class="comment">//@Autowired(required=false)</span></span><br><span class="line"><span class="comment">//    @Resource(name=&quot;bookDao2&quot;)</span></span><br><span class="line">    <span class="meta">@Inject</span></span><br><span class="line">    <span class="keyword">private</span> BookDao bookDao;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">print</span><span class="params">()</span> &#123;</span><br><span class="line">        System.out.println(bookDao);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="keyword">public</span> String <span class="title function_">toString</span><span class="params">()</span> &#123;</span><br><span class="line">        <span class="keyword">return</span> <span class="string">&quot;BookService [bookDao=&quot;</span> + bookDao + <span class="string">&quot;]&quot;</span>;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>修改完毕后，我们运行IOCTest_Autowired类中的test01()方法，输出的结果信息如下所示。</p><p><img src="https://cdn.jsdelivr.net/gh/zsxfa/CDN/img/md/2022/01/27/1643251094.png" alt="desc"></p><p>可以看到，使用@Inject注解默认输出的是lable为2的bookDao。这是因为@Inject注解和@Autowired注解一样，默认优先装配使用了@Primary注解标注的组件。</p><p>其实，这也进一步说明了，**@Inject注解和@Autowired注解的功能是一样的，都能实现自动装配，而且它俩都支持@Primary注解优先注入的功能。只不过，@Inject注解不能像@Autowired注解一样能添加<code>required=false</code>属性，因为它里面没啥属性。**</p><h2 id="Resource和-Inject这俩注解与-Autowired注解的区别"><a href="#Resource和-Inject这俩注解与-Autowired注解的区别" class="headerlink" title="@Resource和@Inject这俩注解与@Autowired注解的区别"></a>@Resource和@Inject这俩注解与@Autowired注解的区别</h2><h3 id="不同点"><a href="#不同点" class="headerlink" title="不同点"></a>不同点</h3><ul><li>@Autowired是Spring中的专有注解，而@Resource是Java中JSR250规范里面定义的一个注解，@Inject是Java中JSR330规范里面定义的一个注解</li><li>@Autowired支持参数<code>required=false</code>，而@Resource和@Inject都不支持</li><li>@Autowired和@Inject支持@Primary注解优先注入，而@Resource不支持</li><li>@Autowired通过@Qualifier指定注入特定bean，@Resource可以通过参数name指定注入bean，而@Inject需要通过@Named注解指定注入bean</li></ul><h3 id="相同点"><a href="#相同点" class="headerlink" title="相同点"></a>相同点</h3><p>三种注解都可以实现bean的自动装配。</p><h1 id="实现方法、构造器位置的自动装配"><a href="#实现方法、构造器位置的自动装配" class="headerlink" title="实现方法、构造器位置的自动装配"></a>实现方法、构造器位置的自动装配</h1><h2 id="再谈-Autowired注解"><a href="#再谈-Autowired注解" class="headerlink" title="再谈@Autowired注解"></a>再谈@Autowired注解</h2><p><img src="https://cdn.jsdelivr.net/gh/zsxfa/CDN/img/md/2022/01/27/1643247438.png" alt="desc"></p><p>我们通过@Autowired注解的源码可以看出，在@Autowired注解上标注有如下的注解信息。</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">@Target(&#123;ElementType.CONSTRUCTOR, ElementType.METHOD, ElementType.PARAMETER, ElementType.FIELD, ElementType.ANNOTATION_TYPE&#125;)</span></span><br></pre></td></tr></table></figure><p>可以看出@Autowired注解不仅可以标注在字段上，而且还可以标注在构造方法、实例方法以及参数上。</p><h2 id="案例准备"><a href="#案例准备" class="headerlink" title="案例准备"></a>案例准备</h2><p>首先，我们在项目中新建一个Boss类，在Boss类中有一个Car类的引用，并且我们使用@Component注解将Dog类加载到IOC容器中，如下所示。</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// 默认加在IOC容器中的组件，容器启动会调用无参构造器创建对象，然后再进行初始化、赋值等操作</span></span><br><span class="line"><span class="meta">@Component</span></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">Boss</span> &#123;</span><br><span class="line"></span><br><span class="line"><span class="keyword">private</span> Car car;</span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> Car <span class="title function_">getCar</span><span class="params">()</span> &#123;</span><br><span class="line"><span class="keyword">return</span> car;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">setCar</span><span class="params">(Car car)</span> &#123;</span><br><span class="line"><span class="built_in">this</span>.car = car;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="meta">@Override</span></span><br><span class="line"><span class="keyword">public</span> String <span class="title function_">toString</span><span class="params">()</span> &#123;</span><br><span class="line"><span class="keyword">return</span> <span class="string">&quot;Boss [car=&quot;</span> + car + <span class="string">&quot;]&quot;</span>;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>注意，Car类上也要标注@Component注解，即它也要被加载到IOC容器中。</p><p>新建好以上Boss类之后，我们还需要在MainConfigOfAutowired配置类的@ComponentScan注解中进行配置，使其能够扫描com.meimeixia.bean包下的类，如下所示。</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">@ComponentScan(&#123;&quot;com.zsxfa.service&quot;, &quot;com.zsxfa.dao&quot;, &quot;com.zsxfa.controller&quot;,&quot;com.zsxfa.bean&quot;&#125;)</span></span><br><span class="line"><span class="meta">@Configuration</span></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">MainConfigOfAutowired</span> &#123;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Primary</span></span><br><span class="line">    <span class="meta">@Bean(&quot;bookDao2&quot;)</span></span><br><span class="line">    <span class="keyword">public</span> BookDao <span class="title function_">bookDao</span><span class="params">()</span> &#123;</span><br><span class="line">        <span class="type">BookDao</span> <span class="variable">bookDao</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">BookDao</span>();</span><br><span class="line">        bookDao.setLable(<span class="string">&quot;2&quot;</span>);</span><br><span class="line">        <span class="keyword">return</span> bookDao;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>此时，我们就可以直接在Boss类中的car字段上添加@Autowired注解，使其自动装配。</p><h2 id="标注在实例方法上"><a href="#标注在实例方法上" class="headerlink" title="标注在实例方法上"></a>标注在实例方法上</h2><p>我们可以将@Autowired注解标注在setter方法上，如下所示。</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">@Autowired</span> </span><br><span class="line"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">setCar</span><span class="params">(Car car)</span> &#123;</span><br><span class="line">    <span class="built_in">this</span>.car = car;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p><strong>当@Autowired注解标注在方法上时，Spring容器在创建当前对象的时候，就会调用相应的方法为对象赋值。如果标注的方法存在参数时，那么方法使用的参数和自定义类型的值，需要从IOC容器中获取。</strong></p><p>然后，我们将IOCTest_Autowired类的test01()方法中有关获取和打印BookService信息的代码注释掉，新增获取和打印Boss信息的代码，如下所示。</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">IOCTest_Autowired</span> &#123;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Test</span></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">test01</span><span class="params">()</span> &#123;</span><br><span class="line">        <span class="type">AnnotationConfigApplicationContext</span> <span class="variable">applicationContext</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">AnnotationConfigApplicationContext</span>(MainConfigOfAutowired.class);</span><br><span class="line"></span><br><span class="line"><span class="comment">//BookService bookService = applicationContext.getBean(BookService.class);</span></span><br><span class="line"><span class="comment">//System.out.println(bookService);</span></span><br><span class="line"></span><br><span class="line"><span class="comment">//BookDao bookDao = applicationContext.getBean(BookDao.class);</span></span><br><span class="line"><span class="comment">//System.out.println(bookDao);</span></span><br><span class="line"></span><br><span class="line">        <span class="type">Boss</span> <span class="variable">boss</span> <span class="operator">=</span> applicationContext.getBean(Boss.class);</span><br><span class="line">        System.out.println(boss);</span><br><span class="line"></span><br><span class="line">        applicationContext.close();</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>运行以上test01()方法进行测试，可以看到，结果信息中输出了如下一行信息。</p><p><img src="https://cdn.jsdelivr.net/gh/zsxfa/CDN/img/md/2022/01/27/1643252468.png" alt="desc"></p><p>说明已经获取到了car的信息，也就是说可以将@Autowired注解标注在方法上。</p><p>为了验证最终的输出结果是否是从IOC容器中获取的，我们可以在IOCTest_Autowired类的test01()方法中直接获取Car对象的信息，如下所示。</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">IOCTest_Autowired</span> &#123;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Test</span></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">test01</span><span class="params">()</span> &#123;</span><br><span class="line">        <span class="type">AnnotationConfigApplicationContext</span> <span class="variable">applicationContext</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">AnnotationConfigApplicationContext</span>(MainConfigOfAutowired.class);</span><br><span class="line"></span><br><span class="line"><span class="comment">//BookService bookService = applicationContext.getBean(BookService.class);</span></span><br><span class="line"><span class="comment">//System.out.println(bookService);</span></span><br><span class="line"></span><br><span class="line"><span class="comment">//BookDao bookDao = applicationContext.getBean(BookDao.class);</span></span><br><span class="line"><span class="comment">//System.out.println(bookDao);</span></span><br><span class="line"></span><br><span class="line">        <span class="type">Boss</span> <span class="variable">boss</span> <span class="operator">=</span> applicationContext.getBean(Boss.class);</span><br><span class="line">        System.out.println(boss);</span><br><span class="line"></span><br><span class="line">        <span class="type">Car</span> <span class="variable">car</span> <span class="operator">=</span> applicationContext.getBean(Car.class);</span><br><span class="line">        System.out.println(car);</span><br><span class="line">        </span><br><span class="line">        applicationContext.close();</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>我们再次运行以上test01()方法进行测试，可以在输出的结果信息中看到如下两行内容。</p><p><img src="https://cdn.jsdelivr.net/gh/zsxfa/CDN/img/md/2022/01/27/1643252579.png" alt="desc"></p><p>这已然说明在Boss类中通过@Autowired注解获取到的Car对象和直接从IOC容器中获取到Car对象是同一个对象。</p><h2 id="标注在构造方法上"><a href="#标注在构造方法上" class="headerlink" title="标注在构造方法上"></a>标注在构造方法上</h2><p>在上面的案例中，我们在Boss类上使用了@Component注解，如下所示。</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// 默认加在IOC容器中的组件，容器启动会调用无参构造器创建对象，然后再进行初始化、赋值等操作</span></span><br><span class="line"><span class="meta">@Component</span></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">Boss</span> &#123;</span><br><span class="line"></span><br><span class="line"><span class="keyword">private</span> Car car;</span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> Car <span class="title function_">getCar</span><span class="params">()</span> &#123;</span><br><span class="line"><span class="keyword">return</span> car;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Autowired</span></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">setCar</span><span class="params">(Car car)</span> &#123;</span><br><span class="line"><span class="built_in">this</span>.car = car;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="meta">@Override</span></span><br><span class="line"><span class="keyword">public</span> String <span class="title function_">toString</span><span class="params">()</span> &#123;</span><br><span class="line"><span class="keyword">return</span> <span class="string">&quot;Boss [car=&quot;</span> + car + <span class="string">&quot;]&quot;</span>;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>此时，Spring会默认将该类加载进IOC容器中，IOC容器启动的时候默认会调用bean的无参构造器创建对象，然后再进行初始化、赋值等操作。</p><p>接下来，我们为Boss类添加一个有参构造方法，然后去除setCar()方法上的@Autowired注解，将@Autowired注解标注在有参构造方法上，并在构造方法中打印一条信息，如下所示。</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// 默认加在IOC容器中的组件，容器启动会调用无参构造器创建对象，然后再进行初始化、赋值等操作</span></span><br><span class="line"><span class="meta">@Component</span></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">Boss</span> &#123;</span><br><span class="line"></span><br><span class="line"><span class="keyword">private</span> Car car;</span><br><span class="line"></span><br><span class="line"><span class="meta">@Autowired</span></span><br><span class="line"><span class="keyword">public</span> <span class="title function_">Boss</span><span class="params">(Car car)</span> &#123;</span><br><span class="line"><span class="built_in">this</span>.car = car;</span><br><span class="line">System.out.println(<span class="string">&quot;Boss...有参构造器&quot;</span>);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> Car <span class="title function_">getCar</span><span class="params">()</span> &#123;</span><br><span class="line"><span class="keyword">return</span> car;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">setCar</span><span class="params">(Car car)</span> &#123;</span><br><span class="line"><span class="built_in">this</span>.car = car;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="meta">@Override</span></span><br><span class="line"><span class="keyword">public</span> String <span class="title function_">toString</span><span class="params">()</span> &#123;</span><br><span class="line"><span class="keyword">return</span> <span class="string">&quot;Boss [car=&quot;</span> + car + <span class="string">&quot;]&quot;</span>;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>接着，我们运行IOCTest_Autowired类中的test01()方法进行测试，可以看到输出结果信息中存在如下一行信息。</p><p><img src="https://cdn.jsdelivr.net/gh/zsxfa/CDN/img/md/2022/01/27/1643252752.png" alt="desc"></p><p>说明IOC容器在启动的时候调用了Boss类的有参构造方法。并且还可以从输出的如下两行信息中看出，通过Boss类的toString()方法打印出的Car对象和直接从IOC容器中获取的Car对象是同一个对象。</p><p><strong>使用@Autowired注解标注在构造方法上时，构造方法中的参数对象也是从IOC容器中获取的。</strong></p><p><strong>使用@Autowired注解标注在构造方法上时，如果组件中只有一个有参构造方法，那么这个有参构造方法上的@Autowired注解可以省略，并且参数位置的组件还是可以自动从IOC容器中获取。</strong></p><h2 id="标注在参数上"><a href="#标注在参数上" class="headerlink" title="标注在参数上"></a>标注在参数上</h2><p>我们也可以将@Autowired注解标注在参数上，例如，在Boss类中我们将构造方法上的@Autowired注解标注在构造方法的参数上，如下所示。</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="title function_">Boss</span><span class="params">(<span class="meta">@Autowired</span> Car car)</span> &#123;</span><br><span class="line">    <span class="built_in">this</span>.car = car;</span><br><span class="line">    System.out.println(<span class="string">&quot;Boss...有参构造器&quot;</span>);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>当然了，也可以将@Autowired注解标注在setter方法的参数上，如下所示。</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">setCar</span><span class="params">(<span class="meta">@Autowired</span> Car car)</span> &#123;</span><br><span class="line">    <span class="built_in">this</span>.car = car;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>最终的效果与标注在字段、实例方法和构造方法上的效果都是一样的。</p><p>结论：<strong>无论@Autowired注解是标注在字段上、实例方法上、构造方法上还是参数上，参数位置的组件都是从IOC容器中获取。</strong></p><p>如果Spring的bean中只有一个有参构造方法，并且这个有参构造方法只有一个参数，这个参数还是IOC容器中的对象，当@Autowired注解标注在这个构造方法的参数上时，那么我们可以将其省略掉，如下所示。</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="title function_">Boss</span><span class="params">(<span class="comment">/*@Autowired*/</span> Car car)</span> &#123;</span><br><span class="line">    <span class="built_in">this</span>.car = car;</span><br><span class="line">    System.out.println(<span class="string">&quot;Boss...有参构造器&quot;</span>);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="标注在方法位置"><a href="#标注在方法位置" class="headerlink" title="标注在方法位置"></a>标注在方法位置</h2><p>@Autowired注解可以标注在某个方法的位置上。这里，为了更好的演示效果，我们新建一个Color类，在Color类中有一个Car类型的成员变量，如下所示。</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">Color</span> &#123;</span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> Car car;</span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> Car <span class="title function_">getCar</span><span class="params">()</span> &#123;</span><br><span class="line"><span class="keyword">return</span> car;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">setCar</span><span class="params">(Car car)</span> &#123;</span><br><span class="line"><span class="built_in">this</span>.car = car;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="meta">@Override</span></span><br><span class="line"><span class="keyword">public</span> String <span class="title function_">toString</span><span class="params">()</span> &#123;</span><br><span class="line"><span class="keyword">return</span> <span class="string">&quot;Color [car=&quot;</span> + car + <span class="string">&quot;]&quot;</span>;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>然后，我们在MainConfigOfAutowired配置类中实例化Color类，如下所示。</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">@Bean</span></span><br><span class="line"><span class="keyword">public</span> Color <span class="title function_">color</span><span class="params">()</span> &#123;</span><br><span class="line">    <span class="type">Color</span> <span class="variable">color</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">Color</span>();</span><br><span class="line">    <span class="keyword">return</span> color;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>接着，我们在IOCTest_Autowired类中再创建一个test02()测试方法，如下所示。</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">@Test</span></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">test02</span><span class="params">()</span> &#123;</span><br><span class="line">    <span class="type">AnnotationConfigApplicationContext</span> <span class="variable">applicationContext</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">AnnotationConfigApplicationContext</span>(MainConfigOfAutowired.class);</span><br><span class="line">    </span><br><span class="line">    <span class="type">Color</span> <span class="variable">color</span> <span class="operator">=</span> applicationContext.getBean(Color.class);</span><br><span class="line">    System.out.println(color);</span><br><span class="line">    </span><br><span class="line">    applicationContext.close();</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>紧接着，运行以上test02()方法，发现在输出的结果信息中存在如下一行信息。</p><blockquote><p>Color [car=null]</p></blockquote><p>说明此时的Color对象中的Car对象为空。此时，我们可以将Car对象作为一个参数传递到MainConfigOfAutowired配置类的color()方法中，并且将该Car对象设置到Color对象中，如下所示。</p><figure class="highlight dos"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">@Bean</span><br><span class="line">public <span class="built_in">Color</span> <span class="built_in">color</span>(Car car) &#123;</span><br><span class="line">    <span class="built_in">Color</span> <span class="built_in">color</span> = new <span class="built_in">Color</span>();</span><br><span class="line">    <span class="built_in">color</span>.setCar(car);</span><br><span class="line">    return <span class="built_in">color</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>当然了，我们也可以使用@Autowired注解来标注color()方法中的car参数，就像下面这样。</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">@Bean</span></span><br><span class="line"><span class="keyword">public</span> Color <span class="title function_">color</span><span class="params">(<span class="meta">@Autowired</span> Car car)</span> &#123;</span><br><span class="line">    <span class="type">Color</span> <span class="variable">color</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">Color</span>();</span><br><span class="line">    color.setCar(car);</span><br><span class="line">    <span class="keyword">return</span> color;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>接下来，我们再次运行test02()方法，可以看到在输出的结果信息中存在如下一行信息。</p><p><img src="https://cdn.jsdelivr.net/gh/zsxfa/CDN/img/md/2022/01/27/1643253171.png" alt="desc"></p><p>说明Car对象被成功创建并设置到Color对象中了。</p><p>至此，我们可以得出结论：<strong>如果方法只有一个IOC容器中的对象作为参数，当@Autowired注解标注在这个方法的参数上时，我们可以将@Autowired注解省略掉。也就说@Bean注解标注的方法在创建对象的时候，方法参数的值是从IOC容器中获取的，此外，标注在这个方法的参数上的@Autowired注解可以省略。</strong></p><p><strong>其实，我们用到最多的还是把@Autowired注解标注在方法位置，即使用@Bean注解+方法参数这种形式，此时，该方法参数的值从IOC容器中获取，并且还可以默认不写@Autowired注解，因为效果都是一样的，都能实现自动装配！</strong></p><h1 id="Aware注入spring底层组件-amp-原理"><a href="#Aware注入spring底层组件-amp-原理" class="headerlink" title="Aware注入spring底层组件&amp;原理"></a>Aware注入spring底层组件&amp;原理</h1><p>自定义的组件要想使用Spring容器底层的一些组件，比如ApplicationContext（IOC容器）、底层的BeanFactory等等，那么只需要让自定义组件实现XxxAware接口即可。此时，Spring在创建对象的时候，会调用XxxAware接口中定义的方法注入相关的组件。</p><h2 id="XxxAware接口概览"><a href="#XxxAware接口概览" class="headerlink" title="XxxAware接口概览"></a>XxxAware接口概览</h2><p>其实，我们之前使用过XxxAware接口，例如，我们之前创建的Dog类，就实现了ApplicationContextAware接口，Dog类的源码如下所示。</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * ApplicationContextAwareProcessor这个类的作用是可以帮我们在组件里面注入IOC容器，</span></span><br><span class="line"><span class="comment"> * 怎么注入呢？我们想要IOC容器的话，比如我们这个Dog组件，只需要实现ApplicationContextAware接口就行</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="meta">@Component</span></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">Dog</span> <span class="keyword">implements</span> <span class="title class_">ApplicationContextAware</span> &#123;</span><br><span class="line"></span><br><span class="line"><span class="keyword">private</span> ApplicationContext applicationContext;</span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="title function_">Dog</span><span class="params">()</span> &#123;</span><br><span class="line">System.out.println(<span class="string">&quot;dog constructor...&quot;</span>);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">// 在对象创建完成并且属性赋值完成之后调用</span></span><br><span class="line"><span class="meta">@PostConstruct</span></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">init</span><span class="params">()</span> &#123; <span class="comment">// 在这儿打个断点调试一下</span></span><br><span class="line">System.out.println(<span class="string">&quot;dog...@PostConstruct...&quot;</span>);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">// 在容器销毁（移除）对象之前调用</span></span><br><span class="line"><span class="meta">@PreDestroy</span></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">destory</span><span class="params">()</span> &#123;</span><br><span class="line">System.out.println(<span class="string">&quot;dog...@PreDestroy...&quot;</span>);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="meta">@Override</span></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">setApplicationContext</span><span class="params">(ApplicationContext applicationContext)</span> <span class="keyword">throws</span> BeansException &#123; <span class="comment">// 在这儿打个断点调试一下</span></span><br><span class="line"><span class="comment">// TODO Auto-generated method stub</span></span><br><span class="line"><span class="built_in">this</span>.applicationContext = applicationContext;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>从以上Dog类的源码中可以看出，实现ApplicationContextAware接口的话，需要实现setApplicationContext()方法。在IOC容器启动并创建Dog对象时，Spring会调用setApplicationContext()方法，并且会将ApplicationContext对象传入到setApplicationContext()方法中，我们只需要在Dog类中定义一个ApplicationContext类型的成员变量来接收setApplicationContext()方法中的参数，那么便可以在Dog类的其他方法中使用ApplicationContext对象了。</p><p>其实，在Spring中，类似于ApplicationContextAware接口的设计有很多，本质上，Spring中形如XxxAware这样的接口都继承了Aware接口，我们来看下Aware接口的源码，如下所示。</p><p><img src="https://cdn.jsdelivr.net/gh/zsxfa/CDN/img/md/2022/01/27/1643253950.png" alt="desc"></p><p>可以看到，Aware接口是Spring 3.1版本中引入的接口，在Aware接口中，并未定义任何方法。</p><p>接下来，我们看看都有哪些接口继承了Aware接口，如下所示。</p><p><img src="https://cdn.jsdelivr.net/gh/zsxfa/CDN/img/md/2022/01/27/1643254495.png" alt="desc"></p><h2 id="XxxAware接口案例"><a href="#XxxAware接口案例" class="headerlink" title="XxxAware接口案例"></a>XxxAware接口案例</h2><p>接下来，我们就挑选几个常用的XxxAware接口来简单的说明一下。</p><p>ApplicationContextAware接口使用的比较多，我们先来说说这个接口，通过ApplicationContextAware接口我们可以获取到IOC容器。</p><p>首先，我们创建一个Red类，它得实现ApplicationContextAware接口，并在实现的setApplicationContext()方法中将ApplicationContext输出，如下所示。</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// *  * 以Red类为例来讲解ApplicationContextAware接口、BeanNameAware接口以及EmbeddedValueResolverAware接口</span></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">Red</span> <span class="keyword">implements</span> <span class="title class_">ApplicationContextAware</span> &#123;</span><br><span class="line"></span><br><span class="line"><span class="keyword">private</span> ApplicationContext applicationContext;</span><br><span class="line"></span><br><span class="line"><span class="meta">@Override</span></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">setApplicationContext</span><span class="params">(ApplicationContext applicationContext)</span> <span class="keyword">throws</span> BeansException &#123;</span><br><span class="line">System.out.println(<span class="string">&quot;传入的IOC：&quot;</span> + applicationContext);</span><br><span class="line"><span class="built_in">this</span>.applicationContext = applicationContext;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>其实，我们也可以让Red类同时实现几个XxxAware接口，例如，使Red类再实现一个BeanNameAware接口，我们可以通过BeanNameAware接口获取到当前bean在Spring容器中的名称，如下所示。</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//以Red类为例来讲解ApplicationContextAware接口、BeanNameAware接口以及EmbeddedValueResolverAware接口</span></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">Red</span> <span class="keyword">implements</span> <span class="title class_">ApplicationContextAware</span>, BeanNameAware &#123;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">private</span> ApplicationContext applicationContext;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">setApplicationContext</span><span class="params">(ApplicationContext applicationContext)</span> <span class="keyword">throws</span> BeansException &#123;</span><br><span class="line">        System.out.println(<span class="string">&quot;传入的IOC：&quot;</span> + applicationContext);</span><br><span class="line">        <span class="built_in">this</span>.applicationContext = applicationContext;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">//参数name：IOC容器创建当前对象时，为这个对象起的名字</span></span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">setBeanName</span><span class="params">(String name)</span> &#123;</span><br><span class="line">        System.out.println(<span class="string">&quot;当前bean的名字：&quot;</span> + name);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>当然了，我们可以再让Red类实现一个EmbeddedValueResolverAware接口，我们通过EmbeddedValueResolverAware接口能够获取到String值解析器，如下所示。</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//以Red类为例来讲解ApplicationContextAware接口、BeanNameAware接口以及EmbeddedValueResolverAware接口</span></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">Red</span> <span class="keyword">implements</span> <span class="title class_">ApplicationContextAware</span>, BeanNameAware, EmbeddedValueResolverAware &#123;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">private</span> ApplicationContext applicationContext;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">setApplicationContext</span><span class="params">(ApplicationContext applicationContext)</span> <span class="keyword">throws</span> BeansException &#123;</span><br><span class="line">        System.out.println(<span class="string">&quot;传入的IOC：&quot;</span> + applicationContext);</span><br><span class="line">        <span class="built_in">this</span>.applicationContext = applicationContext;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">//参数name：IOC容器创建当前对象时，为这个对象起的名字</span></span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">setBeanName</span><span class="params">(String name)</span> &#123;</span><br><span class="line">        System.out.println(<span class="string">&quot;当前bean的名字：&quot;</span> + name);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">//参数resolver：IOC容器启动时会自动地将这个String值的解析器传递过来给我们</span></span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">setEmbeddedValueResolver</span><span class="params">(StringValueResolver resolver)</span> &#123;</span><br><span class="line">        <span class="type">String</span> <span class="variable">resolveStringValue</span> <span class="operator">=</span> resolver.resolveStringValue(<span class="string">&quot;你好，$&#123;os.name&#125;，我的年龄是#&#123;20*18&#125;&quot;</span>);</span><br><span class="line">        System.out.println(<span class="string">&quot;解析的字符串：&quot;</span> + resolveStringValue);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>IOC容器启动时会自动地将String值的解析器（即StringValueResolver）传递过来给我们用，咱们可以用它来解析一些字符串，解析哪些字符串呢？比如包含<code>#&#123;&#125;</code>这样的字符串。我们可以看一下StringValueResolver类的源码，如下所示。</p><p><img src="https://cdn.jsdelivr.net/gh/zsxfa/CDN/img/md/2022/01/27/1643254774.png" alt="desc"></p><p>从描述中可以看出，它是用来帮我们解析那些String类型的值的，如果这个String类型的值里面有一些占位符，那么也会帮我们把这些占位符给解析出来，最后返回一个解析后的值。</p><p>接着，我们需要在Red类上标注@Component注解将该类添加到IOC容器中，如下所示。</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">@Component</span></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">Red</span> <span class="keyword">implements</span> <span class="title class_">ApplicationContextAware</span>, BeanNameAware, EmbeddedValueResolverAware &#123;</span><br></pre></td></tr></table></figure><p>最后，运行IOCTest_Autowired类中的test02()方法，输出的结果信息如下所示。</p><p><img src="https://cdn.jsdelivr.net/gh/zsxfa/CDN/img/md/2022/01/27/1643255209.png" alt="desc"></p><p>在自定义的组件中获取到的IOC容器和测试方法中获取到的IOC容器是不是同一个东东呢？带着这样一个疑问，不妨试试运行一下以下test02()方法。</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">@Test</span></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">test02</span><span class="params">()</span> &#123;</span><br><span class="line">    <span class="type">AnnotationConfigApplicationContext</span> <span class="variable">applicationContext</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">AnnotationConfigApplicationContext</span>(MainConfigOfAutowired.class);</span><br><span class="line">    </span><br><span class="line">    <span class="type">Color</span> <span class="variable">color</span> <span class="operator">=</span> applicationContext.getBean(Color.class);</span><br><span class="line">    System.out.println(color);</span><br><span class="line">    </span><br><span class="line">    System.out.println(applicationContext); <span class="comment">// 测试用到的IOC容器</span></span><br><span class="line">    </span><br><span class="line">    applicationContext.close();</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>可以看到输出了如下所示的结果信息。</p><p><img src="https://cdn.jsdelivr.net/gh/zsxfa/CDN/img/md/2022/01/27/1643255352.png" alt="desc"></p><p>这已然说明了在咱们自定义的组件中获取到的IOC容器和测试方法中获取到的IOC容器是同一个</p><h2 id="XxxAware原理"><a href="#XxxAware原理" class="headerlink" title="XxxAware原理"></a>XxxAware原理</h2><p>XxxAware接口的底层原理是由XxxAwareProcessor实现类实现的，也就是说每一个XxxAware接口都有它自己对应的XxxAwareProcessor实现类。 例如，我们这里以ApplicationContextAware接口为例，ApplicationContextAware接口的底层原理就是由ApplicationContextAwareProcessor类实现的。从ApplicationContextAwareProcessor类的源码可以看出，其实现了BeanPostProcessor接口，本质上是一个后置处理器。</p><p><img src="https://cdn.jsdelivr.net/gh/zsxfa/CDN/img/md/2022/01/27/1643255447.png" alt="desc"></p><p>接下来，我们就以分析ApplicationContextAware接口的原理为例，看看Spring是怎么将ApplicationContext对象注入到Red类中的。</p><p>首先，我们在Red类的setApplicationContext()方法上打一个断点，如下所示。</p><p><img src="https://cdn.jsdelivr.net/gh/zsxfa/CDN/img/md/2022/01/27/1643255496.png" alt="desc"></p><p>然后，我们以debug的方式来运行IOCTest_Autowired类中的test02()方法。</p><p><img src="https://cdn.jsdelivr.net/gh/zsxfa/CDN/img/md/2022/01/27/1643255623.png" alt="desc"></p><p>这里，我们可以看到，实际上ApplicationContext对象已经注入到Red类的setApplicationContext()方法中了。</p><p>接着，我们在IDEA的方法调用栈中找到postProcessBeforeInitialization()方法并鼠标单击它，如下所示，此时，自动定位到了postProcessBeforeInitialization()方法中。</p><p><img src="https://cdn.jsdelivr.net/gh/zsxfa/CDN/img/md/2022/01/27/1643255669.png" alt="desc"></p><p>其实，postProcessBeforeInitialization()方法所在的类就是ApplicationContextAwareProcessor。postProcessBeforeInitialization()方法的逻辑还算比较简单。</p><p>紧接着，我们来看下在postProcessBeforeInitialization()方法中调用的invokeAwareInterfaces()方法，如下所示。</p><p><img src="https://cdn.jsdelivr.net/gh/zsxfa/CDN/img/md/2022/01/27/1643255767.png" alt="desc"></p><h1 id="Profile"><a href="#Profile" class="headerlink" title="@Profile"></a>@Profile</h1><p>在实际的企业开发环境中，往往都会将环境分为开发环境、测试环境和生产环境，并且每个环境基本上都是互相隔离的，也就是说，开发环境、测试环境和生产环境它们之间是互不相通的。在以前的开发过程中，如果开发人员完成相应的功能模块并通过单元测试后，那么他会通过手动修改配置文件的形式，将项目的配置修改成测试环境，发布到测试环境中进行测试。测试通过后，再将配置修改为生产环境，发布到生产环境中。这样手动修改配置的方式，不仅增加了开发和运维的工作量，而且总是手工修改各项配置文件会很容易出问题。那么，有没有什么方式可以解决这些问题呢？答案是：有！通过@Profile注解就可以完全做到这点。</p><h2 id="Profile注解概述"><a href="#Profile注解概述" class="headerlink" title="@Profile注解概述"></a>@Profile注解概述</h2><p>在容器中如果存在同一类型的多个组件，那么可以使用@Profile注解标识要获取的是哪一个bean。也可以说@Profile注解是Spring为我们提供的可以根据当前环境，动态地激活和切换一系列组件的功能。这个功能在不同的环境使用不同的变量的情景下特别有用，例如，开发环境、测试环境、生产环境使用不同的数据源，在不改变代码的情况下，可以使用这个注解来动态地切换要连接的数据库。</p><p>接下来，我们来看下@Profile注解的源码，如下所示。</p><p><img src="https://cdn.jsdelivr.net/gh/zsxfa/CDN/img/md/2022/01/27/1643267392.png" alt="desc"></p><p>从其源码中我们可以得出如下三点结论：</p><ul><li> @Profile注解不仅可以标注在方法上，也可以标注在配置类上。</li><li>如果@Profile注解标注在配置类上，那么只有是在指定的环境的时候，整个配置类里面的所有配置才会生效。</li><li>如果一个bean上没有使用@Profile注解进行标注，那么这个bean在任何环境下都会被注册到IOC容器中，当然了，前提是在整个配置类生效的情况下。</li></ul><p>第一点很容易看出，勿须再说，后面两点如果你要是初次认识@Profile注解的话，那么是肯定看不出来的，得通过下面的讲解才能知道。</p><h2 id="实战案例"><a href="#实战案例" class="headerlink" title="实战案例"></a>实战案例</h2><p>接下来，我们就一起来看一个案例，即使用@Profile注解实现开发、测试和生产环境的配置和切换。这里，我们以开发过程中要用到的数据源为例。我们希望在开发环境中，数据源是连向A数据库的；在测试环境中，数据源是连向B数据库的，而且在这一过程中，测试人员压根就不需要改动任何代码；最终项目上线之后，数据源连向C数据库，而且最重要的一点是在整个过程中，我们不希望改动大量的代码，而实现数据源的切换。</p><h3 id="环境搭建"><a href="#环境搭建" class="headerlink" title="环境搭建"></a>环境搭建</h3><p>首先，我们需要在pom.xml文件中添加c3p0数据源和MySQL驱动的依赖，如下所示。</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line">&lt;dependency&gt;</span><br><span class="line">    &lt;groupId&gt;c3p0&lt;/groupId&gt;</span><br><span class="line">    &lt;artifactId&gt;c3p0&lt;/artifactId&gt;</span><br><span class="line">    &lt;version&gt;<span class="number">0.9</span><span class="number">.1</span><span class="number">.2</span>&lt;/version&gt;</span><br><span class="line">&lt;/dependency&gt;</span><br><span class="line">&lt;dependency&gt;</span><br><span class="line">    &lt;groupId&gt;mysql&lt;/groupId&gt;</span><br><span class="line">    &lt;artifactId&gt;mysql-connector-java&lt;/artifactId&gt;</span><br><span class="line">    &lt;version&gt;<span class="number">5.1</span><span class="number">.44</span>&lt;/version&gt;</span><br><span class="line">&lt;/dependency&gt;</span><br></pre></td></tr></table></figure><p>添加完以上依赖之后，我们还得在项目中新建一个配置类，例如MainConfigOfProfile，并在该配置类中模拟开发、测试、生产环境的数据源，如下所示。</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">@Configuration</span></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">MainConfigOfProfile</span> &#123;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Bean(&quot;testDataSource&quot;)</span></span><br><span class="line">    <span class="keyword">public</span> DataSource <span class="title function_">dataSourceTest</span><span class="params">()</span> <span class="keyword">throws</span> Exception &#123;</span><br><span class="line">        <span class="type">ComboPooledDataSource</span> <span class="variable">dataSource</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">ComboPooledDataSource</span>();</span><br><span class="line">        dataSource.setUser(<span class="string">&quot;root&quot;</span>);</span><br><span class="line">        dataSource.setPassword(<span class="string">&quot;123456&quot;</span>);</span><br><span class="line">        dataSource.setJdbcUrl(<span class="string">&quot;jdbc:mysql://localhost:3306/test&quot;</span>);</span><br><span class="line">        dataSource.setDriverClass(<span class="string">&quot;com.mysql.jdbc.Driver&quot;</span>);</span><br><span class="line">        <span class="keyword">return</span> dataSource;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Bean(&quot;devDataSource&quot;)</span></span><br><span class="line">    <span class="keyword">public</span> DataSource <span class="title function_">dataSourceDev</span><span class="params">()</span> <span class="keyword">throws</span> Exception &#123;</span><br><span class="line">        <span class="type">ComboPooledDataSource</span> <span class="variable">dataSource</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">ComboPooledDataSource</span>();</span><br><span class="line">        dataSource.setUser(<span class="string">&quot;root&quot;</span>);</span><br><span class="line">        dataSource.setPassword(<span class="string">&quot;123456&quot;</span>);</span><br><span class="line">        dataSource.setJdbcUrl(<span class="string">&quot;jdbc:mysql://localhost:3306/ssm_crud&quot;</span>);</span><br><span class="line">        dataSource.setDriverClass(<span class="string">&quot;com.mysql.jdbc.Driver&quot;</span>);</span><br><span class="line">        <span class="keyword">return</span> dataSource;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Bean(&quot;prodDataSource&quot;)</span></span><br><span class="line">    <span class="keyword">public</span> DataSource <span class="title function_">dataSourceProd</span><span class="params">()</span> <span class="keyword">throws</span> Exception &#123;</span><br><span class="line">        <span class="type">ComboPooledDataSource</span> <span class="variable">dataSource</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">ComboPooledDataSource</span>();</span><br><span class="line">        dataSource.setUser(<span class="string">&quot;root&quot;</span>);</span><br><span class="line">        dataSource.setPassword(<span class="string">&quot;123456&quot;</span>);</span><br><span class="line">        dataSource.setJdbcUrl(<span class="string">&quot;jdbc:mysql://localhost:3306/scw_0515&quot;</span>);</span><br><span class="line">        dataSource.setDriverClass(<span class="string">&quot;com.mysql.jdbc.Driver&quot;</span>);</span><br><span class="line">        <span class="keyword">return</span> dataSource;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>该配置类这样写，是一点儿问题都没有的，但你有没有想过这一点，在真实项目开发中，那些数据库连接的相关信息，例如用户名、密码以及MySQL数据库驱动类的全名，这些都是要抽取在一个配置文件中的。你想一想，是不是这么一回事啊！</p><p>因此，我们需要在项目的src/main/resources目录下新建一个配置文件，例如dbconfig.properties，在其中写上数据库连接的相关信息，如下所示。</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">db.user=root</span><br><span class="line">db.password=<span class="number">123456</span></span><br><span class="line">db.driverClass=com.mysql.jdbc.Driver</span><br></pre></td></tr></table></figure><p>那么如何在MainConfigOfProfile配置类中获取以上配置文件中的值呢？</p><p>该MainConfigOfProfile配置类实现了一个EmbeddedValueResolverAware接口，我们通过该接口能够获取到String值解析器。也就是说，IOC容器启动时会自动地将String值的解析器（即StringValueResolver）传递过来给我们用，咱们可以用它来解析一些字符串。</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">@PropertySource(&quot;classpath:/dbconfig.properties&quot;)</span> <span class="comment">// 加载外部的配置文件</span></span><br><span class="line"><span class="meta">@Configuration</span></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">MainConfigOfProfile</span> <span class="keyword">implements</span> <span class="title class_">EmbeddedValueResolverAware</span> &#123;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Value(&quot;$&#123;db.user&#125;&quot;)</span></span><br><span class="line">    <span class="keyword">private</span> String user;</span><br><span class="line">    <span class="keyword">private</span> StringValueResolver valueResolver;</span><br><span class="line">    <span class="keyword">private</span> String dirverClass;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Bean(&quot;testDataSource&quot;)</span></span><br><span class="line">    <span class="keyword">public</span> DataSource <span class="title function_">dataSourceTest</span><span class="params">(<span class="meta">@Value(&quot;$&#123;db.password&#125;&quot;)</span> String pwd)</span> <span class="keyword">throws</span> Exception &#123;</span><br><span class="line">        <span class="type">ComboPooledDataSource</span> <span class="variable">dataSource</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">ComboPooledDataSource</span>();</span><br><span class="line">        dataSource.setUser(user);</span><br><span class="line">        dataSource.setPassword(pwd);</span><br><span class="line">        dataSource.setJdbcUrl(<span class="string">&quot;jdbc:mysql://localhost:3306/test&quot;</span>);</span><br><span class="line">        dataSource.setDriverClass(<span class="string">&quot;com.mysql.jdbc.Driver&quot;</span>);</span><br><span class="line">        <span class="keyword">return</span> dataSource;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Bean(&quot;devDataSource&quot;)</span></span><br><span class="line">    <span class="keyword">public</span> DataSource <span class="title function_">dataSourceDev</span><span class="params">(<span class="meta">@Value(&quot;$&#123;db.password&#125;&quot;)</span> String pwd)</span> <span class="keyword">throws</span> Exception &#123;</span><br><span class="line">        <span class="type">ComboPooledDataSource</span> <span class="variable">dataSource</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">ComboPooledDataSource</span>();</span><br><span class="line">        dataSource.setUser(user);</span><br><span class="line">        dataSource.setPassword(pwd);</span><br><span class="line">        dataSource.setJdbcUrl(<span class="string">&quot;jdbc:mysql://localhost:3306/ssm_crud&quot;</span>);</span><br><span class="line">        dataSource.setDriverClass(dirverClass);</span><br><span class="line">        <span class="keyword">return</span> dataSource;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Bean(&quot;prodDataSource&quot;)</span></span><br><span class="line">    <span class="keyword">public</span> DataSource <span class="title function_">dataSourceProd</span><span class="params">(<span class="meta">@Value(&quot;$&#123;db.password&#125;&quot;)</span> String pwd)</span> <span class="keyword">throws</span> Exception &#123;</span><br><span class="line">        <span class="type">ComboPooledDataSource</span> <span class="variable">dataSource</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">ComboPooledDataSource</span>();</span><br><span class="line">        dataSource.setUser(user);</span><br><span class="line">        dataSource.setPassword(pwd);</span><br><span class="line">        dataSource.setJdbcUrl(<span class="string">&quot;jdbc:mysql://localhost:3306/scw_0515&quot;</span>);</span><br><span class="line">        dataSource.setDriverClass(dirverClass);</span><br><span class="line">        <span class="keyword">return</span> dataSource;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">setEmbeddedValueResolver</span><span class="params">(StringValueResolver resolver)</span> &#123;</span><br><span class="line">        <span class="built_in">this</span>.valueResolver = resolver;</span><br><span class="line">        dirverClass = valueResolver.resolveStringValue(<span class="string">&quot;$&#123;db.driverClass&#125;&quot;</span>);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>其实，这个配置类相对来说还算是比较简单的，其中使用<code>@Bean(&quot;devDataSource&quot;)</code>注解标注的是开发环境使用的数据源；使用<code>@Bean(&quot;testDataSource&quot;)</code>注解标注的是测试环境使用的数据源；使用<code>@Bean(&quot;prodDataSource&quot;)</code>注解标注的是生产环境使用的数据源。</p><p>接着，我们创建一个单元测试类，例如IOCTest_Profile，并在该类中新建一个test01()方法来进行测试，如下所示。</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">IOCTest_Profile</span> &#123;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Test</span></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">test01</span><span class="params">()</span> &#123;</span><br><span class="line">        <span class="type">AnnotationConfigApplicationContext</span> <span class="variable">applicationContext</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">AnnotationConfigApplicationContext</span>(MainConfigOfProfile.class);</span><br><span class="line"></span><br><span class="line">        String[] namesForType = applicationContext.getBeanNamesForType(DataSource.class);</span><br><span class="line">        <span class="keyword">for</span> (String name : namesForType) &#123;</span><br><span class="line">            System.out.println(name);</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        <span class="comment">// 关闭容器</span></span><br><span class="line">        applicationContext.close();</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>最后，运行以上test01()方法，输出的结果信息如下所示。</p><p><img src="https://cdn.jsdelivr.net/gh/zsxfa/CDN/img/md/2022/01/27/1643268334.png" alt="desc"></p><p>可以看到三种不同的数据源成功注册到了IOC容器中，说明我们的环境搭建成功了。</p><h3 id="根据环境注册bean"><a href="#根据环境注册bean" class="headerlink" title="根据环境注册bean"></a>根据环境注册bean</h3><p>我们成功搭建环境之后，接下来，就是要实现根据不同的环境来向IOC容器中注册相应的bean了。也就是说，我们要实现在开发环境注册开发环境下使用的数据源；在测试环境注册测试环境下使用的数据源；在生产环境注册生产环境下使用的数据源。此时，@Profile注解就显示出其强大的特性了。</p><p>我们在MainConfigOfProfile配置类中为每个数据源添加@Profile注解标识，如下所示。</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">@PropertySource(&quot;classpath:/dbconfig.properties&quot;)</span> <span class="comment">// 加载外部的配置文件</span></span><br><span class="line"><span class="meta">@Configuration</span></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">MainConfigOfProfile</span> <span class="keyword">implements</span> <span class="title class_">EmbeddedValueResolverAware</span> &#123;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Value(&quot;$&#123;db.user&#125;&quot;)</span></span><br><span class="line">    <span class="keyword">private</span> String user;</span><br><span class="line">    <span class="keyword">private</span> StringValueResolver valueResolver;</span><br><span class="line">    <span class="keyword">private</span> String dirverClass;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Profile(&quot;test&quot;)</span></span><br><span class="line">    <span class="meta">@Bean(&quot;testDataSource&quot;)</span></span><br><span class="line">    <span class="keyword">public</span> DataSource <span class="title function_">dataSourceTest</span><span class="params">(<span class="meta">@Value(&quot;$&#123;db.password&#125;&quot;)</span> String pwd)</span> <span class="keyword">throws</span> Exception &#123;</span><br><span class="line">        <span class="type">ComboPooledDataSource</span> <span class="variable">dataSource</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">ComboPooledDataSource</span>();</span><br><span class="line">        dataSource.setUser(user);</span><br><span class="line">        dataSource.setPassword(pwd);</span><br><span class="line">        dataSource.setJdbcUrl(<span class="string">&quot;jdbc:mysql://localhost:3306/test&quot;</span>);</span><br><span class="line">        dataSource.setDriverClass(<span class="string">&quot;com.mysql.jdbc.Driver&quot;</span>);</span><br><span class="line">        <span class="keyword">return</span> dataSource;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Profile(&quot;dev&quot;)</span> <span class="comment">// 定义了一个环境标识，只有当dev环境被激活以后，我们这个bean才能被注册进来</span></span><br><span class="line">    <span class="meta">@Bean(&quot;devDataSource&quot;)</span></span><br><span class="line">    <span class="keyword">public</span> DataSource <span class="title function_">dataSourceDev</span><span class="params">(<span class="meta">@Value(&quot;$&#123;db.password&#125;&quot;)</span> String pwd)</span> <span class="keyword">throws</span> Exception &#123;</span><br><span class="line">        <span class="type">ComboPooledDataSource</span> <span class="variable">dataSource</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">ComboPooledDataSource</span>();</span><br><span class="line">        dataSource.setUser(user);</span><br><span class="line">        dataSource.setPassword(pwd);</span><br><span class="line">        dataSource.setJdbcUrl(<span class="string">&quot;jdbc:mysql://localhost:3306/ssm_crud&quot;</span>);</span><br><span class="line">        dataSource.setDriverClass(dirverClass);</span><br><span class="line">        <span class="keyword">return</span> dataSource;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Profile(&quot;prod&quot;)</span></span><br><span class="line">    <span class="meta">@Bean(&quot;prodDataSource&quot;)</span></span><br><span class="line">    <span class="keyword">public</span> DataSource <span class="title function_">dataSourceProd</span><span class="params">(<span class="meta">@Value(&quot;$&#123;db.password&#125;&quot;)</span> String pwd)</span> <span class="keyword">throws</span> Exception &#123;</span><br><span class="line">        <span class="type">ComboPooledDataSource</span> <span class="variable">dataSource</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">ComboPooledDataSource</span>();</span><br><span class="line">        dataSource.setUser(user);</span><br><span class="line">        dataSource.setPassword(pwd);</span><br><span class="line">        dataSource.setJdbcUrl(<span class="string">&quot;jdbc:mysql://localhost:3306/scw_0515&quot;</span>);</span><br><span class="line">        dataSource.setDriverClass(dirverClass);</span><br><span class="line">        <span class="keyword">return</span> dataSource;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">setEmbeddedValueResolver</span><span class="params">(StringValueResolver resolver)</span> &#123;</span><br><span class="line">        <span class="built_in">this</span>.valueResolver = resolver;</span><br><span class="line">        dirverClass = valueResolver.resolveStringValue(<span class="string">&quot;$&#123;db.driverClass&#125;&quot;</span>);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>可以看到，我们使用<code>@Profile(&quot;dev&quot;)</code>注解来标识在开发环境下注册devDataSource；使用<code>@Profile(&quot;test&quot;)</code>注解来标识在测试环境下注册testDataSource；使用<code>@Profile(&quot;prod&quot;)</code>注解来标识在生产环境下注册prodDataDource。</p><p>此时，我们运行IOCTest_Profile类中的test01()方法，<strong>发现IDEA控制台并未输出任何结果信息。</strong> 说明我们为不同的数据源添加@Profile注解后，默认是不会向IOC容器中注册bean的，需要我们根据环境显示指定向IOC容器中注册相应的bean。</p><p><strong>换句话说，通过@Profile注解加了环境标识的bean，只有这个环境被激活的时候，相应的bean才会被注册到IOC容器中。</strong></p><p>如果我们需要一个默认的环境，那么该怎么办呢？此时，我们可以通过<code>@Profile(&quot;default&quot;)</code>注解来标识一个默认的环境，例如，我们将devDataSource环境标识为默认环境，如下所示。</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">@Profile(&quot;default&quot;)</span></span><br><span class="line"><span class="comment">// @Profile(&quot;dev&quot;) // 定义了一个环境标识，只有当dev环境被激活以后，我们这个bean才能被注册进来</span></span><br><span class="line"><span class="meta">@Bean(&quot;devDataSource&quot;)</span></span><br><span class="line"><span class="keyword">public</span> DataSource <span class="title function_">dataSourceDev</span><span class="params">(<span class="meta">@Value(&quot;$&#123;db.password&#125;&quot;)</span> String pwd)</span> <span class="keyword">throws</span> Exception &#123;</span><br><span class="line">    <span class="type">ComboPooledDataSource</span> <span class="variable">dataSource</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">ComboPooledDataSource</span>();</span><br><span class="line">    dataSource.setUser(user);</span><br><span class="line">    dataSource.setPassword(pwd);</span><br><span class="line">    dataSource.setJdbcUrl(<span class="string">&quot;jdbc:mysql://localhost:3306/ssm_crud&quot;</span>);</span><br><span class="line">    dataSource.setDriverClass(dirverClass);</span><br><span class="line">    <span class="keyword">return</span> dataSource;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>此时，我们运行IOCTest_Profile类中的test01()方法，输出的结果信息:</p><blockquote><p>devDataSource</p></blockquote><p>可以看到，我们在devDataSource数据源上使用<code>@Profile(&quot;default&quot;)</code>注解将其设置为默认的数据源，运行测试方法时IDEA控制台会输出devDataSource。</p><p>接下来，我们将devDataSource数据源上的<code>@Profile(&quot;default&quot;)</code>注解还原成<code>@Profile(&quot;dev&quot;)</code>注解，重新标识它为一个开发环境下注册的数据源，好方便下面的测试。</p><p>那么，我们如何根据不同的环境来注册相应的bean呢？例如，我们想在程序运行的时候，将其切换到测试环境下。</p><p>第一种方式就是根据命令行参数来确定环境，我们在运行程序的时候可以添加相应的命令行参数。例如，如果我们现在的环境是测试环境，那么可以在运行程序的时候添加如下命令行参数。</p><blockquote><p>-Dspring.profiles.active=test</p></blockquote><p><img src="https://cdn.jsdelivr.net/gh/zsxfa/CDN/img/md/2022/01/27/1643268819.png" alt="desc"></p><p>此时，点击<code>Run</code>按钮运行IOCTest_Profile类中的test01()方法，输出的结果信息如下所示。</p><blockquote><p>testDataSource</p></blockquote><p>第二种方式就是通过写代码的方式来激活某种环境，其实主要是通过AnnotationConfigApplicationContext类的无参构造方法来实现，具体步骤如下：</p><ol><li>在bean上加@Profile注解，其value属性值为环境标识，可以自定义</li><li>使用AnnotationConfigApplicationContext类的无参构造方法创建容器</li><li>设置容器环境，其值为第1步设置的环境标识</li><li>设置容器的配置类</li><li>刷新容器</li></ol><p>温馨提示：2、4、5步其实是AnnotationConfigApplicationContext类中带参构造方法的步骤，以上这几个步骤相当于是把其带参构造方法拆开，在其中插入一条语句设置容器环境，这些我们可以在AnnotationConfigApplicationContext类的带参构造方法中看到，如下所示。</p><p><img src="https://cdn.jsdelivr.net/gh/zsxfa/CDN/img/md/2022/01/27/1643268945.png" alt="desc"></p><p>好了，我们要开始正式编写代码来激活某种环境了。我们先在程序中调用AnnotationConfigApplicationContext类的无参构造方法来创建一个IOC容器，然后在容器进行初始化之前，为其设置相应的环境，接着再为容器设置主配置类，最后刷新一下容器。例如，我们将IOC容器设置为测试环境，如下所示。</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">@Test</span></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">test02</span><span class="params">()</span> &#123;</span><br><span class="line"><span class="comment">// 1. 使用无参构造器创建一个IOC容器</span></span><br><span class="line"><span class="type">AnnotationConfigApplicationContext</span> <span class="variable">applicationContext</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">AnnotationConfigApplicationContext</span>();</span><br><span class="line"><span class="comment">// 2. 在我们容器还没启动创建其他bean之前，先设置需要激活的环境（可以设置激活多个环境哟）</span></span><br><span class="line">applicationContext.getEnvironment().setActiveProfiles(<span class="string">&quot;test&quot;</span>);</span><br><span class="line"><span class="comment">// 3. 注册主配置类</span></span><br><span class="line">applicationContext.register(MainConfigOfProfile.class);</span><br><span class="line"><span class="comment">// 4. 启动刷新容器</span></span><br><span class="line">applicationContext.refresh();</span><br><span class="line"></span><br><span class="line">String[] namesForType = applicationContext.getBeanNamesForType(DataSource.class);</span><br><span class="line"><span class="keyword">for</span> (String name : namesForType) &#123;</span><br><span class="line">System.out.println(name);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">// 关闭容器</span></span><br><span class="line">applicationContext.close();</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>此时，我们运行以上test02()方法，输出的结果信息如下所示。</p><blockquote><p>testDataSource</p></blockquote><p>可以看到，IDEA控制台输出了testDataSource，说明我们成功将IOC容器的环境设置为了测试环境。</p><p>如果此时测试环境里面还有一些其他的组件，比如Yellow，</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">@Profile(&quot;test&quot;)</span></span><br><span class="line"><span class="meta">@Bean</span></span><br><span class="line"><span class="keyword">public</span> Yellow <span class="title function_">yellow</span><span class="params">()</span> &#123;</span><br><span class="line"><span class="keyword">return</span> <span class="keyword">new</span> <span class="title class_">Yellow</span>();</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>那么在测试环境被激活的情况下，测试环境下的所有bean都会被注册到IOC容器中。如果你要是不信的话，那么你可以试着修改一下IOCTest_Profile类中的test02()方法，即在其中获取Yellow组件并打印看看。</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">@Test</span></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">test02</span><span class="params">()</span> &#123;</span><br><span class="line"><span class="comment">// 1. 使用无参构造器创建一个IOC容器</span></span><br><span class="line"><span class="type">AnnotationConfigApplicationContext</span> <span class="variable">applicationContext</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">AnnotationConfigApplicationContext</span>();</span><br><span class="line"><span class="comment">// 2. 在我们容器还没启动创建其他bean之前，先设置需要激活的环境（可以设置激活多个环境哟）</span></span><br><span class="line">applicationContext.getEnvironment().setActiveProfiles(<span class="string">&quot;test&quot;</span>);</span><br><span class="line"><span class="comment">// 3. 注册主配置类</span></span><br><span class="line">applicationContext.register(MainConfigOfProfile.class);</span><br><span class="line"><span class="comment">// 4. 启动刷新容器</span></span><br><span class="line">applicationContext.refresh();</span><br><span class="line"></span><br><span class="line">String[] namesForType = applicationContext.getBeanNamesForType(DataSource.class);</span><br><span class="line"><span class="keyword">for</span> (String name : namesForType) &#123;</span><br><span class="line">System.out.println(name);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="type">Yellow</span> <span class="variable">yellow</span> <span class="operator">=</span> applicationContext.getBean(Yellow.class);</span><br><span class="line">System.out.println(yellow);</span><br><span class="line"></span><br><span class="line"><span class="comment">// 关闭容器</span></span><br><span class="line">applicationContext.close();</span><br><span class="line">&#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure><p>运行以上test02()方法，你将会看到如下所示的结果信息。</p><blockquote><p>testDataSource<br>com.zsxfa.bean.Yellow@50378a4</p></blockquote><p>这佐证了如果测试环境被激活，那么测试环境下的所有bean都会被注册到IOC容器中的这一结论。</p><p>@Profile注解不仅可以标注在方法上，也可以标注在配置类上。如果标注在配置类上，那么只有是在指定的环境的时候，整个配置类里面的所有配置才会生效。例如，我们在MainConfigOfProfile配置类上标注上<code>@Profile(&quot;dev&quot;)</code>注解，如下所示。</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">@Profile(&quot;dev&quot;)</span> <span class="comment">// @Profile注解除了能写到bean上，还能写到类上</span></span><br><span class="line"><span class="meta">@PropertySource(&quot;classpath:/dbconfig.properties&quot;)</span> <span class="comment">// 加载外部的配置文件</span></span><br><span class="line"><span class="meta">@Configuration</span></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">MainConfigOfProfile</span> <span class="keyword">implements</span> <span class="title class_">EmbeddedValueResolverAware</span> &#123;</span><br><span class="line"><span class="comment">/*********代码省略*********/</span></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>然后，我们来运行IOCTest_Profile类中的test02()方法，在运行该方法之前，记得要把获取Yellow组件并打印的两行代码给注释掉，要不然运行test02()方法之后，Eclipse控制台就会报错。这时，咱们再来运行test02()方法，会发现IDEA控制台中并未输出任何信息。</p><p><strong>这是因为我们在test02()方法中指定了当前的环境为测试环境，而MainConfigOfProfile配置类上标注的注解为<code>@Profile(&quot;dev&quot;)</code>，说明该配置类中的所有配置只有在开发环境下才会生效。所以，此时没有任何数据源注册到IOC容器中，自然IDEA控制台中就不会输出任何信息了。</strong></p><p>还记得在一开头就说过，<strong>如果一个bean上没有使用@Profile注解进行标注，那么这个bean在任何环境下都会被注册到IOC容器中</strong>吗？现在咱们就来验证这一点。</p><p>首先，我们要将MainConfigOfProfile配置类上标注的<code>@Profile(&quot;dev&quot;)</code>注解和yellow方法上的<code>@Profile(&quot;test&quot;)</code>给注释掉，好方便接下来的测试。</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//@Profile(&quot;dev&quot;) // @Profile注解除了能写到bean上，还能写到类上</span></span><br><span class="line"><span class="meta">@PropertySource(&quot;classpath:/dbconfig.properties&quot;)</span> <span class="comment">// 加载外部的配置文件</span></span><br><span class="line"><span class="meta">@Configuration</span></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">MainConfigOfProfile</span> <span class="keyword">implements</span> <span class="title class_">EmbeddedValueResolverAware</span> &#123;</span><br><span class="line"></span><br><span class="line"><span class="meta">@Value(&quot;$&#123;db.user&#125;&quot;)</span></span><br><span class="line"><span class="keyword">private</span> String user;</span><br><span class="line"></span><br><span class="line"><span class="keyword">private</span> StringValueResolver valueResolver;</span><br><span class="line"></span><br><span class="line"><span class="keyword">private</span> String dirverClass;</span><br><span class="line"></span><br><span class="line"><span class="comment">//@Profile(&quot;test&quot;)</span></span><br><span class="line"><span class="meta">@Bean</span></span><br><span class="line"><span class="keyword">public</span> Yellow <span class="title function_">yellow</span><span class="params">()</span> &#123;</span><br><span class="line"><span class="keyword">return</span> <span class="keyword">new</span> <span class="title class_">Yellow</span>();</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="meta">@Profile(&quot;test&quot;)</span></span><br><span class="line"><span class="meta">@Bean(&quot;testDataSource&quot;)</span></span><br><span class="line"><span class="keyword">public</span> DataSource <span class="title function_">dataSourceTest</span><span class="params">(<span class="meta">@Value(&quot;$&#123;db.password&#125;&quot;)</span> String pwd)</span> <span class="keyword">throws</span> Exception &#123;</span><br><span class="line"><span class="type">ComboPooledDataSource</span> <span class="variable">dataSource</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">ComboPooledDataSource</span>();</span><br><span class="line">dataSource.setUser(user);</span><br><span class="line">dataSource.setPassword(pwd);</span><br><span class="line">dataSource.setJdbcUrl(<span class="string">&quot;jdbc:mysql://localhost:3306/test&quot;</span>);</span><br><span class="line">dataSource.setDriverClass(dirverClass);</span><br><span class="line"><span class="keyword">return</span> dataSource;</span><br><span class="line">&#125;</span><br><span class="line"> </span><br><span class="line"><span class="comment">//@Profile(&quot;default&quot;)</span></span><br><span class="line"><span class="meta">@Profile(&quot;dev&quot;)</span> <span class="comment">// 定义了一个环境标识，只有当dev环境被激活以后，我们这个bean才能被注册进来</span></span><br><span class="line"><span class="meta">@Bean(&quot;devDataSource&quot;)</span></span><br><span class="line"><span class="keyword">public</span> DataSource <span class="title function_">dataSourceDev</span><span class="params">(<span class="meta">@Value(&quot;$&#123;db.password&#125;&quot;)</span> String pwd)</span> <span class="keyword">throws</span> Exception &#123;</span><br><span class="line"><span class="type">ComboPooledDataSource</span> <span class="variable">dataSource</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">ComboPooledDataSource</span>();</span><br><span class="line">dataSource.setUser(user);</span><br><span class="line">dataSource.setPassword(pwd);</span><br><span class="line">dataSource.setJdbcUrl(<span class="string">&quot;jdbc:mysql://localhost:3306/ssm_crud&quot;</span>);</span><br><span class="line">dataSource.setDriverClass(dirverClass);</span><br><span class="line"><span class="keyword">return</span> dataSource;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="meta">@Profile(&quot;prod&quot;)</span></span><br><span class="line"><span class="meta">@Bean(&quot;prodDataSource&quot;)</span></span><br><span class="line"><span class="keyword">public</span> DataSource <span class="title function_">dataSourceProd</span><span class="params">(<span class="meta">@Value(&quot;$&#123;db.password&#125;&quot;)</span> String pwd)</span> <span class="keyword">throws</span> Exception &#123;</span><br><span class="line"><span class="type">ComboPooledDataSource</span> <span class="variable">dataSource</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">ComboPooledDataSource</span>();</span><br><span class="line">dataSource.setUser(user);</span><br><span class="line">dataSource.setPassword(pwd);</span><br><span class="line">dataSource.setJdbcUrl(<span class="string">&quot;jdbc:mysql://localhost:3306/scw_0515&quot;</span>);</span><br><span class="line">dataSource.setDriverClass(dirverClass);</span><br><span class="line"><span class="keyword">return</span> dataSource;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="meta">@Override</span></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">setEmbeddedValueResolver</span><span class="params">(StringValueResolver resolver)</span> &#123;</span><br><span class="line"><span class="built_in">this</span>.valueResolver = resolver;</span><br><span class="line">dirverClass = valueResolver.resolveStringValue(<span class="string">&quot;$&#123;db.driverClass&#125;&quot;</span>);</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>接着，修改一下IOCTest_Profile类中的test02()方法，即放开获取Yellow组件并打印的两行代码。</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">@Test</span></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">test02</span><span class="params">()</span> &#123;</span><br><span class="line">    <span class="comment">// 1. 使用无参构造器创建一个IOC容器</span></span><br><span class="line">    <span class="type">AnnotationConfigApplicationContext</span> <span class="variable">applicationContext</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">AnnotationConfigApplicationContext</span>();</span><br><span class="line">    <span class="comment">// 2. 在我们容器还没启动创建其他bean之前，先设置需要激活的环境（可以设置激活多个环境哟）</span></span><br><span class="line">    applicationContext.getEnvironment().setActiveProfiles(<span class="string">&quot;test&quot;</span>);</span><br><span class="line">    <span class="comment">// 3. 注册主配置类</span></span><br><span class="line">    applicationContext.register(MainConfigOfProfile.class);</span><br><span class="line">    <span class="comment">// 4. 启动刷新容器</span></span><br><span class="line">    applicationContext.refresh();</span><br><span class="line"></span><br><span class="line">    String[] namesForType = applicationContext.getBeanNamesForType(DataSource.class);</span><br><span class="line">    <span class="keyword">for</span> (String name : namesForType) &#123;</span><br><span class="line">        System.out.println(name);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="type">Yellow</span> <span class="variable">yellow</span> <span class="operator">=</span> applicationContext.getBean(Yellow.class);</span><br><span class="line">    System.out.println(yellow);</span><br><span class="line"></span><br><span class="line">    <span class="comment">// 关闭容器</span></span><br><span class="line">    applicationContext.close();</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>可以看到，当前的环境指定为了开发环境，那么此时Yellow这个组件会被注册到IOC容器中吗？</p><p>紧接着，运行IOCTest_Profile类中的test02()方法，输出的结果信息如下所示。</p><blockquote><p>testDataSource<br>com.zsxfa.bean.Yellow@50378a4</p></blockquote><p>从以上输出结果中可以看到，Yellow组件上并没有使用@Profile注解进行标注，但是它在开发环境下被注册到IOC容器中了。</p><p>如果此时将当前的环境指定为生产环境，那么Yellow这个组件还会被注册到IOC容器中吗？</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">@Test</span></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">test02</span><span class="params">()</span> &#123;</span><br><span class="line"><span class="comment">// 1. 使用无参构造器创建一个IOC容器</span></span><br><span class="line"><span class="type">AnnotationConfigApplicationContext</span> <span class="variable">applicationContext</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">AnnotationConfigApplicationContext</span>();</span><br><span class="line"><span class="comment">// 2. 在我们容器还没启动创建其他bean之前，先设置需要激活的环境（可以设置激活多个环境哟）</span></span><br><span class="line">applicationContext.getEnvironment().setActiveProfiles(<span class="string">&quot;prod&quot;</span>);</span><br><span class="line"><span class="comment">// 3. 注册主配置类</span></span><br><span class="line">applicationContext.register(MainConfigOfProfile.class);</span><br><span class="line"><span class="comment">// 4. 启动刷新容器</span></span><br><span class="line">applicationContext.refresh();</span><br><span class="line"></span><br><span class="line">String[] namesForType = applicationContext.getBeanNamesForType(DataSource.class);</span><br><span class="line"><span class="keyword">for</span> (String name : namesForType) &#123;</span><br><span class="line">System.out.println(name);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="type">Yellow</span> <span class="variable">yellow</span> <span class="operator">=</span> applicationContext.getBean(Yellow.class);</span><br><span class="line">System.out.println(yellow);</span><br><span class="line"></span><br><span class="line"><span class="comment">// 关闭容器</span></span><br><span class="line">applicationContext.close();</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>运行以上test02()方法，发现输出的结果信息如下所示。</p><blockquote><p>prodDataSource<br>com.zsxfa.bean.Yellow@50378a4</p></blockquote><p>这进一步说明了，虽然Yellow组件上并没有使用@Profile注解进行标注，但是它也在生产环境下被注册到IOC容器中了。</p><p>至此，<strong>如果一个bean上没有使用@Profile注解进行标注，那么这个bean在任何环境下都会被注册到IOC容器中</strong>这一结论就得到完美证明了。</p>]]></content>
    
    
    <summary type="html">&lt;p&gt;自动装配原理…</summary>
    
    
    
    <category term="Spring原理" scheme="http://zsxfa.cn/categories/Spring%E5%8E%9F%E7%90%86/"/>
    
    
    <category term="IOC" scheme="http://zsxfa.cn/tags/IOC/"/>
    
  </entry>
  
  <entry>
    <title>spring注解原理--IOC3 属性赋值</title>
    <link href="http://zsxfa.cn/2022/01/26/spring%E6%B3%A8%E8%A7%A3%E5%8E%9F%E7%90%86-IOC%203%20%E5%B1%9E%E6%80%A7%E8%B5%8B%E5%80%BC/"/>
    <id>http://zsxfa.cn/2022/01/26/spring%E6%B3%A8%E8%A7%A3%E5%8E%9F%E7%90%86-IOC%203%20%E5%B1%9E%E6%80%A7%E8%B5%8B%E5%80%BC/</id>
    <published>2022-01-26T12:16:31.000Z</published>
    <updated>2022-02-16T03:53:48.220Z</updated>
    
    <content type="html"><![CDATA[<p>属性赋值可以用@Value和@PropertySource注解来实现…<span id="more"></span></p><p>[TOC]</p><h1 id="Value"><a href="#Value" class="headerlink" title="@Value"></a>@Value</h1><p>Spring中的@Value注解可以为bean中的属性赋值。我们先来看看@Value注解的源码，<!--more-->如下所示。</p><p><img src="https://cdn.jsdelivr.net/gh/zsxfa/CDN/img/md/2022/01/26/1643199851.png" alt="desc"></p><p>从@Value注解的源码中我们可以看出，@Value注解可以标注在字段、方法、参数以及注解上，而且在程序运行期间生效。</p><h2 id="Value注解的用法"><a href="#Value注解的用法" class="headerlink" title="@Value注解的用法"></a>@Value注解的用法</h2><h3 id="不通过配置文件注入属性的情况"><a href="#不通过配置文件注入属性的情况" class="headerlink" title="不通过配置文件注入属性的情况"></a>不通过配置文件注入属性的情况</h3><p>通过@Value注解将外部的值动态注入到bean的属性中，一般有如下这几种情况：</p><p>注入普通字符串</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">@Value(&quot;lisi&quot;)</span></span><br><span class="line"><span class="keyword">private</span> String name; <span class="comment">// 注入普通字符串</span></span><br></pre></td></tr></table></figure><p>注入操作系统属性</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">@Value(&quot;#&#123;systemProperties[&#x27;os.name&#x27;]&#125;&quot;)</span></span><br><span class="line"><span class="keyword">private</span> String systemPropertiesName; <span class="comment">// 注入操作系统属性</span></span><br></pre></td></tr></table></figure><p>注入SpEL表达式结果</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">@Value(&quot;#&#123; T(java.lang.Math).random() * 100.0 &#125;&quot;)</span></span><br><span class="line"><span class="keyword">private</span> <span class="type">double</span> randomNumber; <span class="comment">//注入SpEL表达式结果</span></span><br></pre></td></tr></table></figure><p>注入其他bean中属性的值</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">@Value(&quot;#&#123;person.name&#125;&quot;)</span></span><br><span class="line"><span class="keyword">private</span> String username; <span class="comment">// 注入其他bean中属性的值，即注入person对象的name属性中的值</span></span><br></pre></td></tr></table></figure><p>注入文件资源</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">@Value(&quot;classpath:/config.properties&quot;)</span></span><br><span class="line"><span class="keyword">private</span> Resource resourceFile; <span class="comment">// 注入文件资源</span></span><br></pre></td></tr></table></figure><p>注入URL资源</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">@Value(&quot;http://www.baidu.com&quot;)</span></span><br><span class="line"><span class="keyword">private</span> Resource url; <span class="comment">// 注入URL资源</span></span><br></pre></td></tr></table></figure><h3 id="通过配置文件注入属性的情况"><a href="#通过配置文件注入属性的情况" class="headerlink" title="通过配置文件注入属性的情况"></a>通过配置文件注入属性的情况</h3><p>首先，我们可以在项目的src/main/resources目录下新建一个属性文件，例如person.properties，其内容如下：</p><blockquote><p>person.nickName=zsxfa</p></blockquote><p>然后，我们新建一个MainConfigOfPropertyValues配置类，并在该类上使用@PropertySource注解读取外部配置文件中的key/value并保存到运行的环境变量中。</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">@PropertySource(value=&#123;&quot;classpath:/person.properties&quot;&#125;)</span></span><br><span class="line"><span class="meta">@Configuration</span></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">MainConfigOfPropertyValues</span> &#123;</span><br><span class="line">    <span class="meta">@Bean</span></span><br><span class="line">    <span class="keyword">public</span> Person <span class="title function_">person</span><span class="params">()</span> &#123;</span><br><span class="line">        <span class="keyword">return</span> <span class="keyword">new</span> <span class="title class_">Person</span>();</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>加载完外部的配置文件以后，接着我们就可以使用<code>$&#123;key&#125;</code>取出配置文件中key所对应的值，并将其注入到bean的属性中了。</p><figure class="highlight less"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line"><span class="variable">@Data</span></span><br><span class="line"><span class="variable">@NoArgsConstructor</span></span><br><span class="line"><span class="variable">@AllArgsConstructor</span></span><br><span class="line"><span class="variable">@Scope</span></span><br><span class="line">public class Person &#123;</span><br><span class="line"></span><br><span class="line">    <span class="variable">@Value</span>(<span class="string">&quot;Jachin&quot;</span>)</span><br><span class="line">    private String name;</span><br><span class="line">    <span class="variable">@Value</span>(<span class="string">&quot;#&#123;20-2&#125;&quot;</span>)</span><br><span class="line">    private Integer age;</span><br><span class="line"></span><br><span class="line">    <span class="variable">@Value</span>(<span class="string">&quot;$&#123;person.nickName&#125;&quot;</span>)</span><br><span class="line">    private String nickName; <span class="comment">// 昵称</span></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="Value中-···-和-···-的区别"><a href="#Value中-···-和-···-的区别" class="headerlink" title="@Value中#{···}和${···}的区别"></a>@Value中#{···}和${···}的区别</h3><p>我们在这里提供一个测试属性文件，例如advance_value_inject.properties，大致的内容如下所示。</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">server.name=server1,server2,server3</span><br><span class="line">author.name=liayun</span><br></pre></td></tr></table></figure><p>然后，新建一个AdvanceValueInject类，并在该类上使用@PropertySource注解读取外部属性文件中的key/value并保存到运行的环境变量中，即加载外部的advance_value_inject.properties属性文件。</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">@Component</span></span><br><span class="line"><span class="meta">@PropertySource(value=&#123;&quot;classpath:/advance_value_inject.properties&quot;&#125;)</span></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">AdvanceValueInject</span> &#123;</span><br><span class="line"></span><br><span class="line">    <span class="comment">// ···</span></span><br><span class="line"></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>以上准备工作做好之后，下面我们就来看看<code>$&#123;···&#125;</code>的用法。</p><h4 id="···-的用法"><a href="#···-的用法" class="headerlink" title="${···}的用法"></a>${···}的用法</h4><p>{}里面的内容必须符合SpEL表达式，通过@Value(“${spelDefault.value}”)我们可以获取属性文件中对应的值，但是如果属性文件中没有这个属性，那么就会报错。不过，我们可以通过赋予默认值来解决这个问题，如下所示。</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">@Value(&quot;$&#123;author.name:zsxfa&#125;&quot;)</span></span><br><span class="line"><span class="keyword">private</span> String name;</span><br></pre></td></tr></table></figure><p>上述代码的含义是表示向bean的属性中注入属性文件中的author.name属性所对应的值，如果属性文件中没有author.name这个属性，那么便向bean的属性中注入默认值zsxfa。</p><h4 id="···-的用法-1"><a href="#···-的用法-1" class="headerlink" title="#{···}的用法"></a>#{···}的用法</h4><p>{}里面的内容同样也是必须符合SpEL表达式。例如</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// SpEL：调用字符串Hello World的concat方法</span></span><br><span class="line"><span class="meta">@Value(&quot;#&#123;&#x27;Hello World&#x27;.concat(&#x27;!&#x27;)&#125;&quot;)</span></span><br><span class="line"><span class="keyword">private</span> String helloWorld;</span><br><span class="line"></span><br><span class="line"><span class="comment">// SpEL：调用字符串的getBytes方法，然后再调用其length属性</span></span><br><span class="line"><span class="meta">@Value(&quot;#&#123;&#x27;Hello World&#x27;.bytes.length&#125;&quot;)</span></span><br><span class="line"><span class="keyword">private</span> String helloWorldBytes;</span><br></pre></td></tr></table></figure><h4 id="···-和-···-的混合使用"><a href="#···-和-···-的混合使用" class="headerlink" title="${···}和#{···}的混合使用"></a>${···}和#{···}的混合使用</h4><p><code>$&#123;···&#125;</code>和<code>#&#123;···&#125;</code>可以混合使用，例如</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// SpEL：传入一个字符串，根据&quot;,&quot;切分后插入列表中， #&#123;&#125;和$&#123;&#125;配合使用时，注意不能反过来$&#123;&#125;在外面，而#&#123;&#125;在里面</span></span><br><span class="line"><span class="meta">@Value(&quot;#&#123;&#x27;$&#123;server.name&#125;&#x27;.split(&#x27;,&#x27;)&#125;&quot;)</span></span><br><span class="line"><span class="keyword">private</span> List&lt;String&gt; severs;</span><br></pre></td></tr></table></figure><p>上面片段的代码的执行顺序：通过<code>$&#123;server.name&#125;</code>从属性文件中获取值并进行替换，然后就变成了执行SpEL表达式<code>&#123;&#39;server1,server2,server3&#39;.split(&#39;,&#39;)&#125;</code>。</p><p>在上文中<code>#&#123;&#125;</code>在外面，<code>$&#123;&#125;</code>在里面可以执行成功，那么反过来是否可以呢？也就是说能否让<code>$&#123;&#125;</code>在外面，<code>#&#123;&#125;</code>在里面，就像下面这样呢？</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// SpEL：注意不能反过来，$&#123;&#125;在外面，而#&#123;&#125;在里面，因为这样会执行失败</span></span><br><span class="line"><span class="meta">@Value(&quot;$&#123;#&#123;&#x27;HelloWorld&#x27;.concat(&#x27;_&#x27;)&#125;&#125;&quot;)</span></span><br><span class="line"><span class="keyword">private</span> List&lt;String&gt; severs2;</span><br></pre></td></tr></table></figure><p>答案是不能。因为Spring执行<code>$&#123;&#125;</code>的时机要早于<code>#&#123;&#125;</code>，当Spring执行外层的<code>$&#123;&#125;</code>时，内部的<code>#&#123;&#125;</code>为空，所以会执行失败！</p><h3 id="小结"><a href="#小结" class="headerlink" title="小结"></a>小结</h3><ul><li><code>#&#123;···&#125;</code>：用于执行SpEl表达式，并将内容赋值给属性</li><li><code>$&#123;···&#125;</code>：主要用于加载外部属性文件中的值</li><li><code>$&#123;···&#125;</code>和<code>#&#123;···&#125;</code>可以混合使用，但是必须<code>#&#123;&#125;</code>在外面，<code>$&#123;&#125;</code>在里面</li></ul><h1 id="PropertySource加载配置文件"><a href="#PropertySource加载配置文件" class="headerlink" title="@PropertySource加载配置文件"></a>@PropertySource加载配置文件</h1><h2 id="PropertySource注解概述"><a href="#PropertySource注解概述" class="headerlink" title="@PropertySource注解概述"></a>@PropertySource注解概述</h2><p>@PropertySource注解是Spring 3.1开始引入的配置类注解。通过@PropertySource注解可以将properties配置文件中的key/value存储到Spring的Environment中，Environment接口提供了方法去读取配置文件中的值，参数是properties配置文件中定义的key值。当然了，也可以使用@Value注解用<code>$&#123;&#125;占位符</code>为bean的属性注入值。</p><p>我们来看一下@PropertySource注解的源代码，如下所示</p><p><img src="https://cdn.jsdelivr.net/gh/zsxfa/CDN/img/md/2022/01/26/1643201103.png" alt="desc"></p><p>从@PropertySource的源码中可以看出，我们可以通过@PropertySource注解指定多个properties文件，使用的形式如下所示。</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">@PropertySource(value=&#123;&quot;classpath:/person.properties&quot;, &quot;classpath:/car.properties&quot;&#125;)</span></span><br></pre></td></tr></table></figure><p>细心的读者可以看到，在@PropertySource注解的上面标注了如下的注解信息。</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">@Repeatable(PropertySources.class)</span></span><br></pre></td></tr></table></figure><h2 id="PropertySources注解概述"><a href="#PropertySources注解概述" class="headerlink" title="@PropertySources注解概述"></a>@PropertySources注解概述</h2><p>首先，我们也来看下@PropertySources注解的源码，如下所示。</p><p><img src="https://cdn.jsdelivr.net/gh/zsxfa/CDN/img/md/2022/01/26/1643201518.png" alt="desc"></p><p>@PropertySources注解的源码比较简单，只有一个PropertySource[]数组类型的value属性，那我们如何使用@PropertySources注解指定配置文件呢？其实也很简单，使用如下所示的方式就可以了。</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">@PropertySources(value=&#123;</span></span><br><span class="line"><span class="meta">    @PropertySource(value=&#123;&quot;classpath:/person.properties&quot;&#125;),</span></span><br><span class="line"><span class="meta">    @PropertySource(value=&#123;&quot;classpath:/car.properties&quot;&#125;),</span></span><br><span class="line"><span class="meta">&#125;)</span></span><br></pre></td></tr></table></figure><h2 id="PropertySource注解案例"><a href="#PropertySource注解案例" class="headerlink" title="@PropertySource注解案例"></a>@PropertySource注解案例</h2><p>首先，我们在工程的src/main/resources目录下创建一个配置文件，例如person.properties，该文件的内容如下所示。</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">person.nickName=zsxfa</span><br></pre></td></tr></table></figure><p>然后，我们在Person类中新增一个nickName字段，如下所示</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">@Data</span></span><br><span class="line"><span class="meta">@NoArgsConstructor</span></span><br><span class="line"><span class="meta">@AllArgsConstructor</span></span><br><span class="line"><span class="meta">@Scope</span></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">Person</span> &#123;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Value(&quot;Jachin&quot;)</span></span><br><span class="line">    <span class="keyword">private</span> String name;</span><br><span class="line">    <span class="meta">@Value(&quot;#&#123;20-2&#125;&quot;)</span></span><br><span class="line">    <span class="keyword">private</span> Integer age;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">private</span> String nickName; <span class="comment">// 昵称</span></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="使用XML配置文件方式获取值"><a href="#使用XML配置文件方式获取值" class="headerlink" title="使用XML配置文件方式获取值"></a>使用XML配置文件方式获取值</h3><p>如果我们需要在XML配置文件中获取person.properties文件中的值，那么我们首先需要在Spring的XML配置文件中引入context名称空间，并且使用context命名空间导入person.properties文件，之后在bean的属性字段中使用如下方式将person.properties文件中的值注入到Person类的nickName字段上。</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line">&lt;context:property-placeholder location=<span class="string">&quot;classpath:person.properties&quot;</span> /&gt;</span><br><span class="line"></span><br><span class="line">&lt;!-- 注册组件 --&gt;</span><br><span class="line">&lt;bean id=<span class="string">&quot;person&quot;</span> class=<span class="string">&quot;com.zsxfa.bean.Person&quot;</span>&gt;</span><br><span class="line">    &lt;property name=<span class="string">&quot;age&quot;</span> value=<span class="string">&quot;18&quot;</span>&gt;&lt;/property&gt;</span><br><span class="line">    &lt;property name=<span class="string">&quot;name&quot;</span> value=<span class="string">&quot;liayun&quot;</span>&gt;&lt;/property&gt;</span><br><span class="line">    &lt;property name=<span class="string">&quot;nickName&quot;</span> value=<span class="string">&quot;$&#123;person.nickName&#125;&quot;</span>&gt;&lt;/property&gt;</span><br><span class="line">&lt;/bean&gt;</span><br><span class="line"></span><br></pre></td></tr></table></figure><p>此时，整个beans.xml文件的内容如下所示。</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br></pre></td><td class="code"><pre><span class="line">&lt;?xml version=<span class="string">&quot;1.0&quot;</span> encoding=<span class="string">&quot;UTF-8&quot;</span>?&gt;</span><br><span class="line">&lt;beans xmlns=<span class="string">&quot;http://www.springframework.org/schema/beans&quot;</span></span><br><span class="line">xmlns:context=<span class="string">&quot;http://www.springframework.org/schema/context&quot;</span> xmlns:p=<span class="string">&quot;http://www.springframework.org/schema/p&quot;</span></span><br><span class="line">xmlns:aop=<span class="string">&quot;http://www.springframework.org/schema/aop&quot;</span> xmlns:tx=<span class="string">&quot;http://www.springframework.org/schema/tx&quot;</span></span><br><span class="line">xmlns:xsi=<span class="string">&quot;http://www.w3.org/2001/XMLSchema-instance&quot;</span></span><br><span class="line">xsi:schemaLocation=<span class="string">&quot;http://www.springframework.org/schema/beans </span></span><br><span class="line"><span class="string">http://www.springframework.org/schema/beans/spring-beans-4.2.xsd</span></span><br><span class="line"><span class="string">http://www.springframework.org/schema/context </span></span><br><span class="line"><span class="string">http://www.springframework.org/schema/context/spring-context-4.2.xsd&quot;</span>&gt;</span><br><span class="line"></span><br><span class="line">&lt;context:property-placeholder location=<span class="string">&quot;classpath:person.properties&quot;</span> /&gt;</span><br><span class="line"></span><br><span class="line">&lt;!-- 注册组件 --&gt;</span><br><span class="line">&lt;bean id=<span class="string">&quot;person&quot;</span> class=<span class="string">&quot;com.zsxfa.bean.Person&quot;</span>&gt;</span><br><span class="line">&lt;property name=<span class="string">&quot;age&quot;</span> value=<span class="string">&quot;18&quot;</span>&gt;&lt;/property&gt;</span><br><span class="line">&lt;property name=<span class="string">&quot;name&quot;</span> value=<span class="string">&quot;liayun&quot;</span>&gt;&lt;/property&gt;</span><br><span class="line">&lt;property name=<span class="string">&quot;nickName&quot;</span> value=<span class="string">&quot;$&#123;person.nickName&#125;&quot;</span>&gt;&lt;/property&gt;</span><br><span class="line">&lt;/bean&gt;</span><br><span class="line"></span><br><span class="line">&lt;/beans&gt;</span><br></pre></td></tr></table></figure><p>这样就可以将person.properties文件中的值注入到Person类的nickName字段上了。</p><p>然后，我们在IOCTest_PropertyValue类中创建一个test02()测试方法，如下所示。</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">@Test</span></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">test02</span><span class="params">()</span> &#123;</span><br><span class="line">    <span class="type">ClassPathXmlApplicationContext</span> <span class="variable">applicationContext</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">ClassPathXmlApplicationContext</span>(<span class="string">&quot;classpath:beans.xml&quot;</span>);</span><br><span class="line">    <span class="type">Person</span> <span class="variable">person</span> <span class="operator">=</span> (Person) applicationContext.getBean(<span class="string">&quot;person&quot;</span>);</span><br><span class="line">    System.out.println(person);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>接着，运行以上test03()方法，输出的结果信息如下所示。</p><p><img src="https://cdn.jsdelivr.net/gh/zsxfa/CDN/img/md/2022/01/26/1643202334.png" alt="desc"></p><h3 id="使用注解方式获取值"><a href="#使用注解方式获取值" class="headerlink" title="使用注解方式获取值"></a>使用注解方式获取值</h3><p>如果我们使用注解的方式，那么该如何做呢？首先，我们需要在MainConfigOfPropertyValues配置类上添加一个@PropertySource注解，如下所示。</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">@PropertySource(value=&#123;&quot;classpath:/person.properties&quot;&#125;)</span></span><br><span class="line"><span class="meta">@Configuration</span></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">MainConfigOfPropertyValues</span> &#123;</span><br><span class="line">    <span class="meta">@Bean</span></span><br><span class="line">    <span class="keyword">public</span> Person <span class="title function_">person</span><span class="params">()</span> &#123;</span><br><span class="line">        <span class="keyword">return</span> <span class="keyword">new</span> <span class="title class_">Person</span>();</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>这里使用的<code>@PropertySource(value=&#123;&quot;classpath:/person.properties&quot;&#125;)</code>注解就相当于XML配置文件中使用的<code>&lt;context:property-placeholder location=&quot;classpath:person.properties&quot; /&gt;</code>。</p><p>然后，我们就可以在Person类的nickName字段上使用@Value注解来获取person.properties文件中的值了，如下所示。</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">@Value(&quot;$&#123;person.nickName&#125;&quot;)</span></span><br><span class="line"><span class="keyword">private</span> String nickName; <span class="comment">// 昵称</span></span><br></pre></td></tr></table></figure><p>配置完成后，我们再次运行IOCTest_PropertyValue类中的test01()方法来看下输出结果，如下所示。</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">IOCTest_PropertyValue</span> &#123;</span><br><span class="line"></span><br><span class="line">    <span class="type">AnnotationConfigApplicationContext</span> <span class="variable">applicationContext</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">AnnotationConfigApplicationContext</span>(MainConfigOfPropertyValues.class);</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Test</span></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">test01</span><span class="params">()</span> &#123;</span><br><span class="line">        printBeans(applicationContext);</span><br><span class="line">        System.out.println(<span class="string">&quot;===================&quot;</span>);</span><br><span class="line">        <span class="type">Person</span> <span class="variable">person</span> <span class="operator">=</span> (Person) applicationContext.getBean(<span class="string">&quot;person&quot;</span>);</span><br><span class="line">        System.out.println(person);</span><br><span class="line">        <span class="comment">// 关闭容器</span></span><br><span class="line">        applicationContext.close();</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">private</span> <span class="keyword">void</span> <span class="title function_">printBeans</span><span class="params">(AnnotationConfigApplicationContext applicationContext)</span> &#123;</span><br><span class="line">        String[] definitionNames = applicationContext.getBeanDefinitionNames();</span><br><span class="line">        <span class="keyword">for</span> (String name : definitionNames) &#123;</span><br><span class="line">            System.out.println(name);</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p><img src="https://cdn.jsdelivr.net/gh/zsxfa/CDN/img/md/2022/01/26/1643203032.png" alt="desc"></p><h3 id="使用Environment获取值"><a href="#使用Environment获取值" class="headerlink" title="使用Environment获取值"></a>使用Environment获取值</h3><p>使用@PropertySource注解读取外部配置文件中的key/value之后，是将其保存到运行的环境变量中了，所以我们也可以通过运行环境来获取外部配置文件中的值。</p><p>这里，我们可以稍微修改一下IOCTest_PropertyValue类中的test01()方法，即在其中添加一段使用Environment获取person.properties文件中的值的代码，如下所示。</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">@Test</span></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">test01</span><span class="params">()</span> &#123;</span><br><span class="line">    printBeans(applicationContext);</span><br><span class="line">    System.out.println(<span class="string">&quot;===================&quot;</span>);</span><br><span class="line">    <span class="type">Person</span> <span class="variable">person</span> <span class="operator">=</span> (Person) applicationContext.getBean(<span class="string">&quot;person&quot;</span>);</span><br><span class="line">    System.out.println(person);</span><br><span class="line">    </span><br><span class="line">    <span class="type">ConfigurableEnvironment</span> <span class="variable">environment</span> <span class="operator">=</span> applicationContext.getEnvironment();</span><br><span class="line">    <span class="type">String</span> <span class="variable">property</span> <span class="operator">=</span> environment.getProperty(<span class="string">&quot;person.nickName&quot;</span>);</span><br><span class="line">    System.out.println(property);</span><br><span class="line">    </span><br><span class="line">    <span class="comment">// 关闭容器</span></span><br><span class="line">    applicationContext.close();</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>运行以上test01()方法，可以看到输出的结果信息如下所示。</p><p><img src="https://cdn.jsdelivr.net/gh/zsxfa/CDN/img/md/2022/01/26/1643203153.png" alt="desc"></p>]]></content>
    
    
    <summary type="html">&lt;p&gt;属性赋值可以用@Value和@PropertySource注解来实现…</summary>
    
    
    
    <category term="Spring原理" scheme="http://zsxfa.cn/categories/Spring%E5%8E%9F%E7%90%86/"/>
    
    
    <category term="IOC" scheme="http://zsxfa.cn/tags/IOC/"/>
    
  </entry>
  
</feed>
